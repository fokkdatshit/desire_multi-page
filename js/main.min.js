/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,(function(t,e){"use strict";var n=[],i=Object.getPrototypeOf,o=n.slice,s=n.flat?function(t){return n.flat.call(t)}:function(t){return n.concat.apply([],t)},r=n.push,a=n.indexOf,l={},c=l.toString,u=l.hasOwnProperty,d=u.toString,p=d.call(Object),f={},h=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType&&"function"!=typeof t.item},g=function(t){return null!=t&&t===t.window},m=t.document,y={type:!0,src:!0,nonce:!0,noModule:!0};function v(t,e,n){var i,o,s=(n=n||m).createElement("script");if(s.text=t,e)for(i in y)(o=e[i]||e.getAttribute&&e.getAttribute(i))&&s.setAttribute(i,o);n.head.appendChild(s).parentNode.removeChild(s)}function b(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?l[c.call(t)]||"object":typeof t}var w=function(t,e){return new w.fn.init(t,e)};function x(t){var e=!!t&&"length"in t&&t.length,n=b(t);return!h(t)&&!g(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}w.fn=w.prototype={jquery:"3.6.0",constructor:w,length:0,toArray:function(){return o.call(this)},get:function(t){return null==t?o.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=w.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return w.each(this,t)},map:function(t){return this.pushStack(w.map(this,(function(e,n){return t.call(e,n,e)})))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(w.grep(this,(function(t,e){return(e+1)%2})))},odd:function(){return this.pushStack(w.grep(this,(function(t,e){return e%2})))},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:r,sort:n.sort,splice:n.splice},w.extend=w.fn.extend=function(){var t,e,n,i,o,s,r=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof r&&(c=r,r=arguments[a]||{},a++),"object"==typeof r||h(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)i=t[e],"__proto__"!==e&&r!==i&&(c&&i&&(w.isPlainObject(i)||(o=Array.isArray(i)))?(n=r[e],s=o&&!Array.isArray(n)?[]:o||w.isPlainObject(n)?n:{},o=!1,r[e]=w.extend(c,s,i)):void 0!==i&&(r[e]=i));return r},w.extend({expando:"jQuery"+("3.6.0"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==c.call(t))&&(!(e=i(t))||"function"==typeof(n=u.call(e,"constructor")&&e.constructor)&&d.call(n)===p)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e,n){v(t,{nonce:e&&e.nonce},n)},each:function(t,e){var n,i=0;if(x(t))for(n=t.length;i<n&&!1!==e.call(t[i],i,t[i]);i++);else for(i in t)if(!1===e.call(t[i],i,t[i]))break;return t},makeArray:function(t,e){var n=e||[];return null!=t&&(x(Object(t))?w.merge(n,"string"==typeof t?[t]:t):r.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:a.call(e,t,n)},merge:function(t,e){for(var n=+e.length,i=0,o=t.length;i<n;i++)t[o++]=e[i];return t.length=o,t},grep:function(t,e,n){for(var i=[],o=0,s=t.length,r=!n;o<s;o++)!e(t[o],o)!==r&&i.push(t[o]);return i},map:function(t,e,n){var i,o,r=0,a=[];if(x(t))for(i=t.length;r<i;r++)null!=(o=e(t[r],r,n))&&a.push(o);else for(r in t)null!=(o=e(t[r],r,n))&&a.push(o);return s(a)},guid:1,support:f}),"function"==typeof Symbol&&(w.fn[Symbol.iterator]=n[Symbol.iterator]),w.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){l["[object "+e+"]"]=e.toLowerCase()}));var C=
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
function(t){var e,n,i,o,s,r,a,l,c,u,d,p,f,h,g,m,y,v,b,w="sizzle"+1*new Date,x=t.document,C=0,S=0,T=lt(),k=lt(),A=lt(),E=lt(),$=function(t,e){return t===e&&(d=!0),0},D={}.hasOwnProperty,P=[],O=P.pop,I=P.push,N=P.push,M=P.slice,R=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",F="[\\x20\\t\\r\\n\\f]",j="(?:\\\\[\\da-fA-F]{1,6}"+F+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",B="\\["+F+"*("+j+")(?:"+F+"*([*^$|!~]?=)"+F+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+j+"))|)"+F+"*\\]",H=":("+j+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+B+")*)|.*)\\)|)",q=new RegExp(F+"+","g"),z=new RegExp("^"+F+"+|((?:^|[^\\\\])(?:\\\\.)*)"+F+"+$","g"),_=new RegExp("^"+F+"*,"+F+"*"),W=new RegExp("^"+F+"*([>+~]|"+F+")"+F+"*"),U=new RegExp(F+"|>"),X=new RegExp(H),Y=new RegExp("^"+j+"$"),G={ID:new RegExp("^#("+j+")"),CLASS:new RegExp("^\\.("+j+")"),TAG:new RegExp("^("+j+"|[*])"),ATTR:new RegExp("^"+B),PSEUDO:new RegExp("^"+H),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+F+"*(even|odd|(([+-]|)(\\d*)n|)"+F+"*(?:([+-]|)"+F+"*(\\d+)|))"+F+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+F+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+F+"*((?:-\\d)?\\d*)"+F+"*\\)|)(?=[^-]|$)","i")},V=/HTML$/i,K=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\[\\da-fA-F]{1,6}"+F+"?|\\\\([^\\r\\n\\f])","g"),nt=function(t,e){var n="0x"+t.slice(1)-65536;return e||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},it=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ot=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},st=function(){p()},rt=wt((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{N.apply(P=M.call(x.childNodes),x.childNodes),P[x.childNodes.length].nodeType}catch(t){N={apply:P.length?function(t,e){I.apply(t,M.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}function at(t,e,i,o){var s,a,c,u,d,h,y,v=e&&e.ownerDocument,x=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==x&&9!==x&&11!==x)return i;if(!o&&(p(e),e=e||f,g)){if(11!==x&&(d=J.exec(t)))if(s=d[1]){if(9===x){if(!(c=e.getElementById(s)))return i;if(c.id===s)return i.push(c),i}else if(v&&(c=v.getElementById(s))&&b(e,c)&&c.id===s)return i.push(c),i}else{if(d[2])return N.apply(i,e.getElementsByTagName(t)),i;if((s=d[3])&&n.getElementsByClassName&&e.getElementsByClassName)return N.apply(i,e.getElementsByClassName(s)),i}if(n.qsa&&!E[t+" "]&&(!m||!m.test(t))&&(1!==x||"object"!==e.nodeName.toLowerCase())){if(y=t,v=e,1===x&&(U.test(t)||W.test(t))){for((v=tt.test(t)&&yt(e.parentNode)||e)===e&&n.scope||((u=e.getAttribute("id"))?u=u.replace(it,ot):e.setAttribute("id",u=w)),a=(h=r(t)).length;a--;)h[a]=(u?"#"+u:":scope")+" "+bt(h[a]);y=h.join(",")}try{return N.apply(i,v.querySelectorAll(y)),i}catch(e){E(t,!0)}finally{u===w&&e.removeAttribute("id")}}}return l(t.replace(z,"$1"),e,i,o)}function lt(){var t=[];return function e(n,o){return t.push(n+" ")>i.cacheLength&&delete e[t.shift()],e[n+" "]=o}}function ct(t){return t[w]=!0,t}function ut(t){var e=f.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function dt(t,e){for(var n=t.split("|"),o=n.length;o--;)i.attrHandle[n[o]]=e}function pt(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function ft(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ht(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&rt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ct((function(e){return e=+e,ct((function(n,i){for(var o,s=t([],n.length,e),r=s.length;r--;)n[o=s[r]]&&(n[o]=!(i[o]=n[o]))}))}))}function yt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in n=at.support={},s=at.isXML=function(t){var e=t&&t.namespaceURI,n=t&&(t.ownerDocument||t).documentElement;return!V.test(e||n&&n.nodeName||"HTML")},p=at.setDocument=function(t){var e,o,r=t?t.ownerDocument||t:x;return r!=f&&9===r.nodeType&&r.documentElement?(h=(f=r).documentElement,g=!s(f),x!=f&&(o=f.defaultView)&&o.top!==o&&(o.addEventListener?o.addEventListener("unload",st,!1):o.attachEvent&&o.attachEvent("onunload",st)),n.scope=ut((function(t){return h.appendChild(t).appendChild(f.createElement("div")),void 0!==t.querySelectorAll&&!t.querySelectorAll(":scope fieldset div").length})),n.attributes=ut((function(t){return t.className="i",!t.getAttribute("className")})),n.getElementsByTagName=ut((function(t){return t.appendChild(f.createComment("")),!t.getElementsByTagName("*").length})),n.getElementsByClassName=Z.test(f.getElementsByClassName),n.getById=ut((function(t){return h.appendChild(t).id=w,!f.getElementsByName||!f.getElementsByName(w).length})),n.getById?(i.filter.ID=function(t){var e=t.replace(et,nt);return function(t){return t.getAttribute("id")===e}},i.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n=e.getElementById(t);return n?[n]:[]}}):(i.filter.ID=function(t){var e=t.replace(et,nt);return function(t){var n=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},i.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n,i,o,s=e.getElementById(t);if(s){if((n=s.getAttributeNode("id"))&&n.value===t)return[s];for(o=e.getElementsByName(t),i=0;s=o[i++];)if((n=s.getAttributeNode("id"))&&n.value===t)return[s]}return[]}}),i.find.TAG=n.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):n.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],o=0,s=e.getElementsByTagName(t);if("*"===t){for(;n=s[o++];)1===n.nodeType&&i.push(n);return i}return s},i.find.CLASS=n.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},y=[],m=[],(n.qsa=Z.test(f.querySelectorAll))&&(ut((function(t){var e;h.appendChild(t).innerHTML="<a id='"+w+"'></a><select id='"+w+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+F+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+F+"*(?:value|"+L+")"),t.querySelectorAll("[id~="+w+"-]").length||m.push("~="),(e=f.createElement("input")).setAttribute("name",""),t.appendChild(e),t.querySelectorAll("[name='']").length||m.push("\\["+F+"*name"+F+"*="+F+"*(?:''|\"\")"),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+w+"+*").length||m.push(".#.+[+~]"),t.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")})),ut((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=f.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+F+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),h.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(n.matchesSelector=Z.test(v=h.matches||h.webkitMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector||h.msMatchesSelector))&&ut((function(t){n.disconnectedMatch=v.call(t,"*"),v.call(t,"[s!='']:x"),y.push("!=",H)})),m=m.length&&new RegExp(m.join("|")),y=y.length&&new RegExp(y.join("|")),e=Z.test(h.compareDocumentPosition),b=e||Z.test(h.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},$=e?function(t,e){if(t===e)return d=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i||(1&(i=(t.ownerDocument||t)==(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!n.sortDetached&&e.compareDocumentPosition(t)===i?t==f||t.ownerDocument==x&&b(x,t)?-1:e==f||e.ownerDocument==x&&b(x,e)?1:u?R(u,t)-R(u,e):0:4&i?-1:1)}:function(t,e){if(t===e)return d=!0,0;var n,i=0,o=t.parentNode,s=e.parentNode,r=[t],a=[e];if(!o||!s)return t==f?-1:e==f?1:o?-1:s?1:u?R(u,t)-R(u,e):0;if(o===s)return pt(t,e);for(n=t;n=n.parentNode;)r.unshift(n);for(n=e;n=n.parentNode;)a.unshift(n);for(;r[i]===a[i];)i++;return i?pt(r[i],a[i]):r[i]==x?-1:a[i]==x?1:0},f):f},at.matches=function(t,e){return at(t,null,null,e)},at.matchesSelector=function(t,e){if(p(t),n.matchesSelector&&g&&!E[e+" "]&&(!y||!y.test(e))&&(!m||!m.test(e)))try{var i=v.call(t,e);if(i||n.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(t){E(e,!0)}return at(e,f,null,[t]).length>0},at.contains=function(t,e){return(t.ownerDocument||t)!=f&&p(t),b(t,e)},at.attr=function(t,e){(t.ownerDocument||t)!=f&&p(t);var o=i.attrHandle[e.toLowerCase()],s=o&&D.call(i.attrHandle,e.toLowerCase())?o(t,e,!g):void 0;return void 0!==s?s:n.attributes||!g?t.getAttribute(e):(s=t.getAttributeNode(e))&&s.specified?s.value:null},at.escape=function(t){return(t+"").replace(it,ot)},at.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},at.uniqueSort=function(t){var e,i=[],o=0,s=0;if(d=!n.detectDuplicates,u=!n.sortStable&&t.slice(0),t.sort($),d){for(;e=t[s++];)e===t[s]&&(o=i.push(s));for(;o--;)t.splice(i[o],1)}return u=null,t},o=at.getText=function(t){var e,n="",i=0,s=t.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=o(t)}else if(3===s||4===s)return t.nodeValue}else for(;e=t[i++];)n+=o(e);return n},(i=at.selectors={cacheLength:50,createPseudo:ct,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,nt),t[3]=(t[3]||t[4]||t[5]||"").replace(et,nt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||at.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&at.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return G.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&X.test(n)&&(e=r(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,nt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=T[t+" "];return e||(e=new RegExp("(^|"+F+")"+t+"("+F+"|$)"))&&T(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,n){return function(i){var o=at.attr(i,t);return null==o?"!="===e:!e||(o+="","="===e?o===n:"!="===e?o!==n:"^="===e?n&&0===o.indexOf(n):"*="===e?n&&o.indexOf(n)>-1:"$="===e?n&&o.slice(-n.length)===n:"~="===e?(" "+o.replace(q," ")+" ").indexOf(n)>-1:"|="===e&&(o===n||o.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,n,i,o){var s="nth"!==t.slice(0,3),r="last"!==t.slice(-4),a="of-type"===e;return 1===i&&0===o?function(t){return!!t.parentNode}:function(e,n,l){var c,u,d,p,f,h,g=s!==r?"nextSibling":"previousSibling",m=e.parentNode,y=a&&e.nodeName.toLowerCase(),v=!l&&!a,b=!1;if(m){if(s){for(;g;){for(p=e;p=p[g];)if(a?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g="only"===t&&!h&&"nextSibling"}return!0}if(h=[r?m.firstChild:m.lastChild],r&&v){for(b=(f=(c=(u=(d=(p=m)[w]||(p[w]={}))[p.uniqueID]||(d[p.uniqueID]={}))[t]||[])[0]===C&&c[1])&&c[2],p=f&&m.childNodes[f];p=++f&&p&&p[g]||(b=f=0)||h.pop();)if(1===p.nodeType&&++b&&p===e){u[t]=[C,f,b];break}}else if(v&&(b=f=(c=(u=(d=(p=e)[w]||(p[w]={}))[p.uniqueID]||(d[p.uniqueID]={}))[t]||[])[0]===C&&c[1]),!1===b)for(;(p=++f&&p&&p[g]||(b=f=0)||h.pop())&&((a?p.nodeName.toLowerCase()!==y:1!==p.nodeType)||!++b||(v&&((u=(d=p[w]||(p[w]={}))[p.uniqueID]||(d[p.uniqueID]={}))[t]=[C,b]),p!==e)););return(b-=o)===i||b%i==0&&b/i>=0}}},PSEUDO:function(t,e){var n,o=i.pseudos[t]||i.setFilters[t.toLowerCase()]||at.error("unsupported pseudo: "+t);return o[w]?o(e):o.length>1?(n=[t,t,"",e],i.setFilters.hasOwnProperty(t.toLowerCase())?ct((function(t,n){for(var i,s=o(t,e),r=s.length;r--;)t[i=R(t,s[r])]=!(n[i]=s[r])})):function(t){return o(t,0,n)}):o}},pseudos:{not:ct((function(t){var e=[],n=[],i=a(t.replace(z,"$1"));return i[w]?ct((function(t,e,n,o){for(var s,r=i(t,null,o,[]),a=t.length;a--;)(s=r[a])&&(t[a]=!(e[a]=s))})):function(t,o,s){return e[0]=t,i(e,null,s,n),e[0]=null,!n.pop()}})),has:ct((function(t){return function(e){return at(t,e).length>0}})),contains:ct((function(t){return t=t.replace(et,nt),function(e){return(e.textContent||o(e)).indexOf(t)>-1}})),lang:ct((function(t){return Y.test(t||"")||at.error("unsupported lang: "+t),t=t.replace(et,nt).toLowerCase(),function(e){var n;do{if(n=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===h},focus:function(t){return t===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!i.pseudos.empty(t)},header:function(t){return Q.test(t.nodeName)},input:function(t){return K.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,n){return[n<0?n+e:n]})),even:mt((function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t})),odd:mt((function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t})),lt:mt((function(t,e,n){for(var i=n<0?n+e:n>e?e:n;--i>=0;)t.push(i);return t})),gt:mt((function(t,e,n){for(var i=n<0?n+e:n;++i<e;)t.push(i);return t}))}}).pseudos.nth=i.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[e]=ft(e);for(e in{submit:!0,reset:!0})i.pseudos[e]=ht(e);function vt(){}function bt(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e].value;return i}function wt(t,e,n){var i=e.dir,o=e.next,s=o||i,r=n&&"parentNode"===s,a=S++;return e.first?function(e,n,o){for(;e=e[i];)if(1===e.nodeType||r)return t(e,n,o);return!1}:function(e,n,l){var c,u,d,p=[C,a];if(l){for(;e=e[i];)if((1===e.nodeType||r)&&t(e,n,l))return!0}else for(;e=e[i];)if(1===e.nodeType||r)if(u=(d=e[w]||(e[w]={}))[e.uniqueID]||(d[e.uniqueID]={}),o&&o===e.nodeName.toLowerCase())e=e[i]||e;else{if((c=u[s])&&c[0]===C&&c[1]===a)return p[2]=c[2];if(u[s]=p,p[2]=t(e,n,l))return!0}return!1}}function xt(t){return t.length>1?function(e,n,i){for(var o=t.length;o--;)if(!t[o](e,n,i))return!1;return!0}:t[0]}function Ct(t,e,n,i,o){for(var s,r=[],a=0,l=t.length,c=null!=e;a<l;a++)(s=t[a])&&(n&&!n(s,i,o)||(r.push(s),c&&e.push(a)));return r}function St(t,e,n,i,o,s){return i&&!i[w]&&(i=St(i)),o&&!o[w]&&(o=St(o,s)),ct((function(s,r,a,l){var c,u,d,p=[],f=[],h=r.length,g=s||function(t,e,n){for(var i=0,o=e.length;i<o;i++)at(t,e[i],n);return n}(e||"*",a.nodeType?[a]:a,[]),m=!t||!s&&e?g:Ct(g,p,t,a,l),y=n?o||(s?t:h||i)?[]:r:m;if(n&&n(m,y,a,l),i)for(c=Ct(y,f),i(c,[],a,l),u=c.length;u--;)(d=c[u])&&(y[f[u]]=!(m[f[u]]=d));if(s){if(o||t){if(o){for(c=[],u=y.length;u--;)(d=y[u])&&c.push(m[u]=d);o(null,y=[],c,l)}for(u=y.length;u--;)(d=y[u])&&(c=o?R(s,d):p[u])>-1&&(s[c]=!(r[c]=d))}}else y=Ct(y===r?y.splice(h,y.length):y),o?o(null,r,y,l):N.apply(r,y)}))}function Tt(t){for(var e,n,o,s=t.length,r=i.relative[t[0].type],a=r||i.relative[" "],l=r?1:0,u=wt((function(t){return t===e}),a,!0),d=wt((function(t){return R(e,t)>-1}),a,!0),p=[function(t,n,i){var o=!r&&(i||n!==c)||((e=n).nodeType?u(t,n,i):d(t,n,i));return e=null,o}];l<s;l++)if(n=i.relative[t[l].type])p=[wt(xt(p),n)];else{if((n=i.filter[t[l].type].apply(null,t[l].matches))[w]){for(o=++l;o<s&&!i.relative[t[o].type];o++);return St(l>1&&xt(p),l>1&&bt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(z,"$1"),n,l<o&&Tt(t.slice(l,o)),o<s&&Tt(t=t.slice(o)),o<s&&bt(t))}p.push(n)}return xt(p)}return vt.prototype=i.filters=i.pseudos,i.setFilters=new vt,r=at.tokenize=function(t,e){var n,o,s,r,a,l,c,u=k[t+" "];if(u)return e?0:u.slice(0);for(a=t,l=[],c=i.preFilter;a;){for(r in n&&!(o=_.exec(a))||(o&&(a=a.slice(o[0].length)||a),l.push(s=[])),n=!1,(o=W.exec(a))&&(n=o.shift(),s.push({value:n,type:o[0].replace(z," ")}),a=a.slice(n.length)),i.filter)!(o=G[r].exec(a))||c[r]&&!(o=c[r](o))||(n=o.shift(),s.push({value:n,type:r,matches:o}),a=a.slice(n.length));if(!n)break}return e?a.length:a?at.error(t):k(t,l).slice(0)},a=at.compile=function(t,e){var n,o=[],s=[],a=A[t+" "];if(!a){for(e||(e=r(t)),n=e.length;n--;)(a=Tt(e[n]))[w]?o.push(a):s.push(a);(a=A(t,function(t,e){var n=e.length>0,o=t.length>0,s=function(s,r,a,l,u){var d,h,m,y=0,v="0",b=s&&[],w=[],x=c,S=s||o&&i.find.TAG("*",u),T=C+=null==x?1:Math.random()||.1,k=S.length;for(u&&(c=r==f||r||u);v!==k&&null!=(d=S[v]);v++){if(o&&d){for(h=0,r||d.ownerDocument==f||(p(d),a=!g);m=t[h++];)if(m(d,r||f,a)){l.push(d);break}u&&(C=T)}n&&((d=!m&&d)&&y--,s&&b.push(d))}if(y+=v,n&&v!==y){for(h=0;m=e[h++];)m(b,w,r,a);if(s){if(y>0)for(;v--;)b[v]||w[v]||(w[v]=O.call(l));w=Ct(w)}N.apply(l,w),u&&!s&&w.length>0&&y+e.length>1&&at.uniqueSort(l)}return u&&(C=T,c=x),b};return n?ct(s):s}(s,o))).selector=t}return a},l=at.select=function(t,e,n,o){var s,l,c,u,d,p="function"==typeof t&&t,f=!o&&r(t=p.selector||t);if(n=n||[],1===f.length){if((l=f[0]=f[0].slice(0)).length>2&&"ID"===(c=l[0]).type&&9===e.nodeType&&g&&i.relative[l[1].type]){if(!(e=(i.find.ID(c.matches[0].replace(et,nt),e)||[])[0]))return n;p&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(s=G.needsContext.test(t)?0:l.length;s--&&(c=l[s],!i.relative[u=c.type]);)if((d=i.find[u])&&(o=d(c.matches[0].replace(et,nt),tt.test(l[0].type)&&yt(e.parentNode)||e))){if(l.splice(s,1),!(t=o.length&&bt(l)))return N.apply(n,o),n;break}}return(p||a(t,f))(o,e,!g,n,!e||tt.test(t)&&yt(e.parentNode)||e),n},n.sortStable=w.split("").sort($).join("")===w,n.detectDuplicates=!!d,p(),n.sortDetached=ut((function(t){return 1&t.compareDocumentPosition(f.createElement("fieldset"))})),ut((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||dt("type|href|height|width",(function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),n.attributes&&ut((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||dt("value",(function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),ut((function(t){return null==t.getAttribute("disabled")}))||dt(L,(function(t,e,n){var i;if(!n)return!0===t[e]?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null})),at}(t);w.find=C,w.expr=C.selectors,w.expr[":"]=w.expr.pseudos,w.uniqueSort=w.unique=C.uniqueSort,w.text=C.getText,w.isXMLDoc=C.isXML,w.contains=C.contains,w.escapeSelector=C.escape;var S=function(t,e,n){for(var i=[],o=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(o&&w(t).is(n))break;i.push(t)}return i},T=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},k=w.expr.match.needsContext;function A(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var E=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function $(t,e,n){return h(e)?w.grep(t,(function(t,i){return!!e.call(t,i,t)!==n})):e.nodeType?w.grep(t,(function(t){return t===e!==n})):"string"!=typeof e?w.grep(t,(function(t){return a.call(e,t)>-1!==n})):w.filter(e,t,n)}w.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?w.find.matchesSelector(i,t)?[i]:[]:w.find.matches(t,w.grep(e,(function(t){return 1===t.nodeType})))},w.fn.extend({find:function(t){var e,n,i=this.length,o=this;if("string"!=typeof t)return this.pushStack(w(t).filter((function(){for(e=0;e<i;e++)if(w.contains(o[e],this))return!0})));for(n=this.pushStack([]),e=0;e<i;e++)w.find(t,o[e],n);return i>1?w.uniqueSort(n):n},filter:function(t){return this.pushStack($(this,t||[],!1))},not:function(t){return this.pushStack($(this,t||[],!0))},is:function(t){return!!$(this,"string"==typeof t&&k.test(t)?w(t):t||[],!1).length}});var D,P=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(w.fn.init=function(t,e,n){var i,o;if(!t)return this;if(n=n||D,"string"==typeof t){if(!(i="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:P.exec(t))||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof w?e[0]:e,w.merge(this,w.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:m,!0)),E.test(i[1])&&w.isPlainObject(e))for(i in e)h(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}return(o=m.getElementById(i[2]))&&(this[0]=o,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):h(t)?void 0!==n.ready?n.ready(t):t(w):w.makeArray(t,this)}).prototype=w.fn,D=w(m);var O=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};function N(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}w.fn.extend({has:function(t){var e=w(t,this),n=e.length;return this.filter((function(){for(var t=0;t<n;t++)if(w.contains(this,e[t]))return!0}))},closest:function(t,e){var n,i=0,o=this.length,s=[],r="string"!=typeof t&&w(t);if(!k.test(t))for(;i<o;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(r?r.index(n)>-1:1===n.nodeType&&w.find.matchesSelector(n,t))){s.push(n);break}return this.pushStack(s.length>1?w.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?a.call(w(t),this[0]):a.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(w.uniqueSort(w.merge(this.get(),w(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),w.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return S(t,"parentNode")},parentsUntil:function(t,e,n){return S(t,"parentNode",n)},next:function(t){return N(t,"nextSibling")},prev:function(t){return N(t,"previousSibling")},nextAll:function(t){return S(t,"nextSibling")},prevAll:function(t){return S(t,"previousSibling")},nextUntil:function(t,e,n){return S(t,"nextSibling",n)},prevUntil:function(t,e,n){return S(t,"previousSibling",n)},siblings:function(t){return T((t.parentNode||{}).firstChild,t)},children:function(t){return T(t.firstChild)},contents:function(t){return null!=t.contentDocument&&i(t.contentDocument)?t.contentDocument:(A(t,"template")&&(t=t.content||t),w.merge([],t.childNodes))}},(function(t,e){w.fn[t]=function(n,i){var o=w.map(this,e,n);return"Until"!==t.slice(-5)&&(i=n),i&&"string"==typeof i&&(o=w.filter(i,o)),this.length>1&&(I[t]||w.uniqueSort(o),O.test(t)&&o.reverse()),this.pushStack(o)}}));var M=/[^\x20\t\r\n\f]+/g;function R(t){return t}function L(t){throw t}function F(t,e,n,i){var o;try{t&&h(o=t.promise)?o.call(t).done(e).fail(n):t&&h(o=t.then)?o.call(t,e,n):e.apply(void 0,[t].slice(i))}catch(t){n.apply(void 0,[t])}}w.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return w.each(t.match(M)||[],(function(t,n){e[n]=!0})),e}(t):w.extend({},t);var e,n,i,o,s=[],r=[],a=-1,l=function(){for(o=o||t.once,i=e=!0;r.length;a=-1)for(n=r.shift();++a<s.length;)!1===s[a].apply(n[0],n[1])&&t.stopOnFalse&&(a=s.length,n=!1);t.memory||(n=!1),e=!1,o&&(s=n?[]:"")},c={add:function(){return s&&(n&&!e&&(a=s.length-1,r.push(n)),function e(n){w.each(n,(function(n,i){h(i)?t.unique&&c.has(i)||s.push(i):i&&i.length&&"string"!==b(i)&&e(i)}))}(arguments),n&&!e&&l()),this},remove:function(){return w.each(arguments,(function(t,e){for(var n;(n=w.inArray(e,s,n))>-1;)s.splice(n,1),n<=a&&a--})),this},has:function(t){return t?w.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return o=r=[],s=n="",this},disabled:function(){return!s},lock:function(){return o=r=[],n||e||(s=n=""),this},locked:function(){return!!o},fireWith:function(t,n){return o||(n=[t,(n=n||[]).slice?n.slice():n],r.push(n),e||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!i}};return c},w.extend({Deferred:function(e){var n=[["notify","progress",w.Callbacks("memory"),w.Callbacks("memory"),2],["resolve","done",w.Callbacks("once memory"),w.Callbacks("once memory"),0,"resolved"],["reject","fail",w.Callbacks("once memory"),w.Callbacks("once memory"),1,"rejected"]],i="pending",o={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},catch:function(t){return o.then(null,t)},pipe:function(){var t=arguments;return w.Deferred((function(e){w.each(n,(function(n,i){var o=h(t[i[4]])&&t[i[4]];s[i[1]]((function(){var t=o&&o.apply(this,arguments);t&&h(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[i[0]+"With"](this,o?[t]:arguments)}))})),t=null})).promise()},then:function(e,i,o){var s=0;function r(e,n,i,o){return function(){var a=this,l=arguments,c=function(){var t,c;if(!(e<s)){if((t=i.apply(a,l))===n.promise())throw new TypeError("Thenable self-resolution");c=t&&("object"==typeof t||"function"==typeof t)&&t.then,h(c)?o?c.call(t,r(s,n,R,o),r(s,n,L,o)):(s++,c.call(t,r(s,n,R,o),r(s,n,L,o),r(s,n,R,n.notifyWith))):(i!==R&&(a=void 0,l=[t]),(o||n.resolveWith)(a,l))}},u=o?c:function(){try{c()}catch(t){w.Deferred.exceptionHook&&w.Deferred.exceptionHook(t,u.stackTrace),e+1>=s&&(i!==L&&(a=void 0,l=[t]),n.rejectWith(a,l))}};e?u():(w.Deferred.getStackHook&&(u.stackTrace=w.Deferred.getStackHook()),t.setTimeout(u))}}return w.Deferred((function(t){n[0][3].add(r(0,t,h(o)?o:R,t.notifyWith)),n[1][3].add(r(0,t,h(e)?e:R)),n[2][3].add(r(0,t,h(i)?i:L))})).promise()},promise:function(t){return null!=t?w.extend(t,o):o}},s={};return w.each(n,(function(t,e){var r=e[2],a=e[5];o[e[1]]=r.add,a&&r.add((function(){i=a}),n[3-t][2].disable,n[3-t][3].disable,n[0][2].lock,n[0][3].lock),r.add(e[3].fire),s[e[0]]=function(){return s[e[0]+"With"](this===s?void 0:this,arguments),this},s[e[0]+"With"]=r.fireWith})),o.promise(s),e&&e.call(s,s),s},when:function(t){var e=arguments.length,n=e,i=Array(n),s=o.call(arguments),r=w.Deferred(),a=function(t){return function(n){i[t]=this,s[t]=arguments.length>1?o.call(arguments):n,--e||r.resolveWith(i,s)}};if(e<=1&&(F(t,r.done(a(n)).resolve,r.reject,!e),"pending"===r.state()||h(s[n]&&s[n].then)))return r.then();for(;n--;)F(s[n],a(n),r.reject);return r.promise()}});var j=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;w.Deferred.exceptionHook=function(e,n){t.console&&t.console.warn&&e&&j.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,n)},w.readyException=function(e){t.setTimeout((function(){throw e}))};var B=w.Deferred();function H(){m.removeEventListener("DOMContentLoaded",H),t.removeEventListener("load",H),w.ready()}w.fn.ready=function(t){return B.then(t).catch((function(t){w.readyException(t)})),this},w.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--w.readyWait:w.isReady)||(w.isReady=!0,!0!==t&&--w.readyWait>0||B.resolveWith(m,[w]))}}),w.ready.then=B.then,"complete"===m.readyState||"loading"!==m.readyState&&!m.documentElement.doScroll?t.setTimeout(w.ready):(m.addEventListener("DOMContentLoaded",H),t.addEventListener("load",H));var q=function(t,e,n,i,o,s,r){var a=0,l=t.length,c=null==n;if("object"===b(n))for(a in o=!0,n)q(t,e,a,n[a],!0,s,r);else if(void 0!==i&&(o=!0,h(i)||(r=!0),c&&(r?(e.call(t,i),e=null):(c=e,e=function(t,e,n){return c.call(w(t),n)})),e))for(;a<l;a++)e(t[a],n,r?i:i.call(t[a],a,e(t[a],n)));return o?t:c?e.call(t):l?e(t[0],n):s},z=/^-ms-/,_=/-([a-z])/g;function W(t,e){return e.toUpperCase()}function U(t){return t.replace(z,"ms-").replace(_,W)}var X=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function Y(){this.expando=w.expando+Y.uid++}Y.uid=1,Y.prototype={cache:function(t){var e=t[this.expando];return e||(e={},X(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var i,o=this.cache(t);if("string"==typeof e)o[U(e)]=n;else for(i in e)o[U(i)]=e[i];return o},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][U(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,i=t[this.expando];if(void 0!==i){if(void 0!==e){n=(e=Array.isArray(e)?e.map(U):(e=U(e))in i?[e]:e.match(M)||[]).length;for(;n--;)delete i[e[n]]}(void 0===e||w.isEmptyObject(i))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!w.isEmptyObject(e)}};var G=new Y,V=new Y,K=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Q=/[A-Z]/g;function Z(t,e,n){var i;if(void 0===n&&1===t.nodeType)if(i="data-"+e.replace(Q,"-$&").toLowerCase(),"string"==typeof(n=t.getAttribute(i))){try{n=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:K.test(t)?JSON.parse(t):t)}(n)}catch(t){}V.set(t,e,n)}else n=void 0;return n}w.extend({hasData:function(t){return V.hasData(t)||G.hasData(t)},data:function(t,e,n){return V.access(t,e,n)},removeData:function(t,e){V.remove(t,e)},_data:function(t,e,n){return G.access(t,e,n)},_removeData:function(t,e){G.remove(t,e)}}),w.fn.extend({data:function(t,e){var n,i,o,s=this[0],r=s&&s.attributes;if(void 0===t){if(this.length&&(o=V.get(s),1===s.nodeType&&!G.get(s,"hasDataAttrs"))){for(n=r.length;n--;)r[n]&&0===(i=r[n].name).indexOf("data-")&&(i=U(i.slice(5)),Z(s,i,o[i]));G.set(s,"hasDataAttrs",!0)}return o}return"object"==typeof t?this.each((function(){V.set(this,t)})):q(this,(function(e){var n;if(s&&void 0===e)return void 0!==(n=V.get(s,t))||void 0!==(n=Z(s,t))?n:void 0;this.each((function(){V.set(this,t,e)}))}),null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each((function(){V.remove(this,t)}))}}),w.extend({queue:function(t,e,n){var i;if(t)return e=(e||"fx")+"queue",i=G.get(t,e),n&&(!i||Array.isArray(n)?i=G.access(t,e,w.makeArray(n)):i.push(n)),i||[]},dequeue:function(t,e){e=e||"fx";var n=w.queue(t,e),i=n.length,o=n.shift(),s=w._queueHooks(t,e);"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===e&&n.unshift("inprogress"),delete s.stop,o.call(t,(function(){w.dequeue(t,e)}),s)),!i&&s&&s.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return G.get(t,n)||G.access(t,n,{empty:w.Callbacks("once memory").add((function(){G.remove(t,[e+"queue",n])}))})}}),w.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?w.queue(this[0],t):void 0===e?this:this.each((function(){var n=w.queue(this,t,e);w._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&w.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){w.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,o=w.Deferred(),s=this,r=this.length,a=function(){--i||o.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";r--;)(n=G.get(s[r],t+"queueHooks"))&&n.empty&&(i++,n.empty.add(a));return a(),o.promise(e)}});var J=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,tt=new RegExp("^(?:([+-])=|)("+J+")([a-z%]*)$","i"),et=["Top","Right","Bottom","Left"],nt=m.documentElement,it=function(t){return w.contains(t.ownerDocument,t)},ot={composed:!0};nt.getRootNode&&(it=function(t){return w.contains(t.ownerDocument,t)||t.getRootNode(ot)===t.ownerDocument});var st=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&it(t)&&"none"===w.css(t,"display")};function rt(t,e,n,i){var o,s,r=20,a=i?function(){return i.cur()}:function(){return w.css(t,e,"")},l=a(),c=n&&n[3]||(w.cssNumber[e]?"":"px"),u=t.nodeType&&(w.cssNumber[e]||"px"!==c&&+l)&&tt.exec(w.css(t,e));if(u&&u[3]!==c){for(l/=2,c=c||u[3],u=+l||1;r--;)w.style(t,e,u+c),(1-s)*(1-(s=a()/l||.5))<=0&&(r=0),u/=s;u*=2,w.style(t,e,u+c),n=n||[]}return n&&(u=+u||+l||0,o=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=u,i.end=o)),o}var at={};function lt(t){var e,n=t.ownerDocument,i=t.nodeName,o=at[i];return o||(e=n.body.appendChild(n.createElement(i)),o=w.css(e,"display"),e.parentNode.removeChild(e),"none"===o&&(o="block"),at[i]=o,o)}function ct(t,e){for(var n,i,o=[],s=0,r=t.length;s<r;s++)(i=t[s]).style&&(n=i.style.display,e?("none"===n&&(o[s]=G.get(i,"display")||null,o[s]||(i.style.display="")),""===i.style.display&&st(i)&&(o[s]=lt(i))):"none"!==n&&(o[s]="none",G.set(i,"display",n)));for(s=0;s<r;s++)null!=o[s]&&(t[s].style.display=o[s]);return t}w.fn.extend({show:function(){return ct(this,!0)},hide:function(){return ct(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){st(this)?w(this).show():w(this).hide()}))}});var ut,dt,pt=/^(?:checkbox|radio)$/i,ft=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,ht=/^$|^module$|\/(?:java|ecma)script/i;ut=m.createDocumentFragment().appendChild(m.createElement("div")),(dt=m.createElement("input")).setAttribute("type","radio"),dt.setAttribute("checked","checked"),dt.setAttribute("name","t"),ut.appendChild(dt),f.checkClone=ut.cloneNode(!0).cloneNode(!0).lastChild.checked,ut.innerHTML="<textarea>x</textarea>",f.noCloneChecked=!!ut.cloneNode(!0).lastChild.defaultValue,ut.innerHTML="<option></option>",f.option=!!ut.lastChild;var gt={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function mt(t,e){var n;return n=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&A(t,e)?w.merge([t],n):n}function yt(t,e){for(var n=0,i=t.length;n<i;n++)G.set(t[n],"globalEval",!e||G.get(e[n],"globalEval"))}gt.tbody=gt.tfoot=gt.colgroup=gt.caption=gt.thead,gt.th=gt.td,f.option||(gt.optgroup=gt.option=[1,"<select multiple='multiple'>","</select>"]);var vt=/<|&#?\w+;/;function bt(t,e,n,i,o){for(var s,r,a,l,c,u,d=e.createDocumentFragment(),p=[],f=0,h=t.length;f<h;f++)if((s=t[f])||0===s)if("object"===b(s))w.merge(p,s.nodeType?[s]:s);else if(vt.test(s)){for(r=r||d.appendChild(e.createElement("div")),a=(ft.exec(s)||["",""])[1].toLowerCase(),l=gt[a]||gt._default,r.innerHTML=l[1]+w.htmlPrefilter(s)+l[2],u=l[0];u--;)r=r.lastChild;w.merge(p,r.childNodes),(r=d.firstChild).textContent=""}else p.push(e.createTextNode(s));for(d.textContent="",f=0;s=p[f++];)if(i&&w.inArray(s,i)>-1)o&&o.push(s);else if(c=it(s),r=mt(d.appendChild(s),"script"),c&&yt(r),n)for(u=0;s=r[u++];)ht.test(s.type||"")&&n.push(s);return d}var wt=/^([^.]*)(?:\.(.+)|)/;function xt(){return!0}function Ct(){return!1}function St(t,e){return t===function(){try{return m.activeElement}catch(t){}}()==("focus"===e)}function Tt(t,e,n,i,o,s){var r,a;if("object"==typeof e){for(a in"string"!=typeof n&&(i=i||n,n=void 0),e)Tt(t,a,n,i,e[a],s);return t}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),!1===o)o=Ct;else if(!o)return t;return 1===s&&(r=o,(o=function(t){return w().off(t),r.apply(this,arguments)}).guid=r.guid||(r.guid=w.guid++)),t.each((function(){w.event.add(this,e,o,i,n)}))}function kt(t,e,n){n?(G.set(t,e,!1),w.event.add(t,e,{namespace:!1,handler:function(t){var i,s,r=G.get(this,e);if(1&t.isTrigger&&this[e]){if(r.length)(w.event.special[e]||{}).delegateType&&t.stopPropagation();else if(r=o.call(arguments),G.set(this,e,r),i=n(this,e),this[e](),r!==(s=G.get(this,e))||i?G.set(this,e,!1):s={},r!==s)return t.stopImmediatePropagation(),t.preventDefault(),s&&s.value}else r.length&&(G.set(this,e,{value:w.event.trigger(w.extend(r[0],w.Event.prototype),r.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===G.get(t,e)&&w.event.add(t,e,xt)}w.event={global:{},add:function(t,e,n,i,o){var s,r,a,l,c,u,d,p,f,h,g,m=G.get(t);if(X(t))for(n.handler&&(n=(s=n).handler,o=s.selector),o&&w.find.matchesSelector(nt,o),n.guid||(n.guid=w.guid++),(l=m.events)||(l=m.events=Object.create(null)),(r=m.handle)||(r=m.handle=function(e){return void 0!==w&&w.event.triggered!==e.type?w.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(M)||[""]).length;c--;)f=g=(a=wt.exec(e[c])||[])[1],h=(a[2]||"").split(".").sort(),f&&(d=w.event.special[f]||{},f=(o?d.delegateType:d.bindType)||f,d=w.event.special[f]||{},u=w.extend({type:f,origType:g,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&w.expr.match.needsContext.test(o),namespace:h.join(".")},s),(p=l[f])||((p=l[f]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(t,i,h,r)||t.addEventListener&&t.addEventListener(f,r)),d.add&&(d.add.call(t,u),u.handler.guid||(u.handler.guid=n.guid)),o?p.splice(p.delegateCount++,0,u):p.push(u),w.event.global[f]=!0)},remove:function(t,e,n,i,o){var s,r,a,l,c,u,d,p,f,h,g,m=G.hasData(t)&&G.get(t);if(m&&(l=m.events)){for(c=(e=(e||"").match(M)||[""]).length;c--;)if(f=g=(a=wt.exec(e[c])||[])[1],h=(a[2]||"").split(".").sort(),f){for(d=w.event.special[f]||{},p=l[f=(i?d.delegateType:d.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=s=p.length;s--;)u=p[s],!o&&g!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(p.splice(s,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(t,u));r&&!p.length&&(d.teardown&&!1!==d.teardown.call(t,h,m.handle)||w.removeEvent(t,f,m.handle),delete l[f])}else for(f in l)w.event.remove(t,f+e[c],n,i,!0);w.isEmptyObject(l)&&G.remove(t,"handle events")}},dispatch:function(t){var e,n,i,o,s,r,a=new Array(arguments.length),l=w.event.fix(t),c=(G.get(this,"events")||Object.create(null))[l.type]||[],u=w.event.special[l.type]||{};for(a[0]=l,e=1;e<arguments.length;e++)a[e]=arguments[e];if(l.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,l)){for(r=w.event.handlers.call(this,l,c),e=0;(o=r[e++])&&!l.isPropagationStopped();)for(l.currentTarget=o.elem,n=0;(s=o.handlers[n++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==s.namespace&&!l.rnamespace.test(s.namespace)||(l.handleObj=s,l.data=s.data,void 0!==(i=((w.event.special[s.origType]||{}).handle||s.handler).apply(o.elem,a))&&!1===(l.result=i)&&(l.preventDefault(),l.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,l),l.result}},handlers:function(t,e){var n,i,o,s,r,a=[],l=e.delegateCount,c=t.target;if(l&&c.nodeType&&!("click"===t.type&&t.button>=1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(s=[],r={},n=0;n<l;n++)void 0===r[o=(i=e[n]).selector+" "]&&(r[o]=i.needsContext?w(o,this).index(c)>-1:w.find(o,this,null,[c]).length),r[o]&&s.push(i);s.length&&a.push({elem:c,handlers:s})}return c=this,l<e.length&&a.push({elem:c,handlers:e.slice(l)}),a},addProp:function(t,e){Object.defineProperty(w.Event.prototype,t,{enumerable:!0,configurable:!0,get:h(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[w.expando]?t:new w.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return pt.test(e.type)&&e.click&&A(e,"input")&&kt(e,"click",xt),!1},trigger:function(t){var e=this||t;return pt.test(e.type)&&e.click&&A(e,"input")&&kt(e,"click"),!0},_default:function(t){var e=t.target;return pt.test(e.type)&&e.click&&A(e,"input")&&G.get(e,"click")||A(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},w.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},w.Event=function(t,e){if(!(this instanceof w.Event))return new w.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?xt:Ct,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&w.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[w.expando]=!0},w.Event.prototype={constructor:w.Event,isDefaultPrevented:Ct,isPropagationStopped:Ct,isImmediatePropagationStopped:Ct,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=xt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=xt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=xt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},w.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},w.event.addProp),w.each({focus:"focusin",blur:"focusout"},(function(t,e){w.event.special[t]={setup:function(){return kt(this,t,St),!1},trigger:function(){return kt(this,t),!0},_default:function(){return!0},delegateType:e}})),w.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){w.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,i=this,o=t.relatedTarget,s=t.handleObj;return o&&(o===i||w.contains(i,o))||(t.type=s.origType,n=s.handler.apply(this,arguments),t.type=e),n}}})),w.fn.extend({on:function(t,e,n,i){return Tt(this,t,e,n,i)},one:function(t,e,n,i){return Tt(this,t,e,n,i,1)},off:function(t,e,n){var i,o;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,w(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof t){for(o in t)this.off(o,e,t[o]);return this}return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=Ct),this.each((function(){w.event.remove(this,t,n,e)}))}});var At=/<script|<style|<link/i,Et=/checked\s*(?:[^=]|=\s*.checked.)/i,$t=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Dt(t,e){return A(t,"table")&&A(11!==e.nodeType?e:e.firstChild,"tr")&&w(t).children("tbody")[0]||t}function Pt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Ot(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function It(t,e){var n,i,o,s,r,a;if(1===e.nodeType){if(G.hasData(t)&&(a=G.get(t).events))for(o in G.remove(e,"handle events"),a)for(n=0,i=a[o].length;n<i;n++)w.event.add(e,o,a[o][n]);V.hasData(t)&&(s=V.access(t),r=w.extend({},s),V.set(e,r))}}function Nt(t,e){var n=e.nodeName.toLowerCase();"input"===n&&pt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function Mt(t,e,n,i){e=s(e);var o,r,a,l,c,u,d=0,p=t.length,g=p-1,m=e[0],y=h(m);if(y||p>1&&"string"==typeof m&&!f.checkClone&&Et.test(m))return t.each((function(o){var s=t.eq(o);y&&(e[0]=m.call(this,o,s.html())),Mt(s,e,n,i)}));if(p&&(r=(o=bt(e,t[0].ownerDocument,!1,t,i)).firstChild,1===o.childNodes.length&&(o=r),r||i)){for(l=(a=w.map(mt(o,"script"),Pt)).length;d<p;d++)c=o,d!==g&&(c=w.clone(c,!0,!0),l&&w.merge(a,mt(c,"script"))),n.call(t[d],c,d);if(l)for(u=a[a.length-1].ownerDocument,w.map(a,Ot),d=0;d<l;d++)c=a[d],ht.test(c.type||"")&&!G.access(c,"globalEval")&&w.contains(u,c)&&(c.src&&"module"!==(c.type||"").toLowerCase()?w._evalUrl&&!c.noModule&&w._evalUrl(c.src,{nonce:c.nonce||c.getAttribute("nonce")},u):v(c.textContent.replace($t,""),c,u))}return t}function Rt(t,e,n){for(var i,o=e?w.filter(e,t):t,s=0;null!=(i=o[s]);s++)n||1!==i.nodeType||w.cleanData(mt(i)),i.parentNode&&(n&&it(i)&&yt(mt(i,"script")),i.parentNode.removeChild(i));return t}w.extend({htmlPrefilter:function(t){return t},clone:function(t,e,n){var i,o,s,r,a=t.cloneNode(!0),l=it(t);if(!(f.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||w.isXMLDoc(t)))for(r=mt(a),i=0,o=(s=mt(t)).length;i<o;i++)Nt(s[i],r[i]);if(e)if(n)for(s=s||mt(t),r=r||mt(a),i=0,o=s.length;i<o;i++)It(s[i],r[i]);else It(t,a);return(r=mt(a,"script")).length>0&&yt(r,!l&&mt(t,"script")),a},cleanData:function(t){for(var e,n,i,o=w.event.special,s=0;void 0!==(n=t[s]);s++)if(X(n)){if(e=n[G.expando]){if(e.events)for(i in e.events)o[i]?w.event.remove(n,i):w.removeEvent(n,i,e.handle);n[G.expando]=void 0}n[V.expando]&&(n[V.expando]=void 0)}}}),w.fn.extend({detach:function(t){return Rt(this,t,!0)},remove:function(t){return Rt(this,t)},text:function(t){return q(this,(function(t){return void 0===t?w.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Mt(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Dt(this,t).appendChild(t)}))},prepend:function(){return Mt(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Dt(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Mt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Mt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(w.cleanData(mt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return w.clone(this,t,e)}))},html:function(t){return q(this,(function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!At.test(t)&&!gt[(ft.exec(t)||["",""])[1].toLowerCase()]){t=w.htmlPrefilter(t);try{for(;n<i;n++)1===(e=this[n]||{}).nodeType&&(w.cleanData(mt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Mt(this,arguments,(function(e){var n=this.parentNode;w.inArray(this,t)<0&&(w.cleanData(mt(this)),n&&n.replaceChild(e,this))}),t)}}),w.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){w.fn[t]=function(t){for(var n,i=[],o=w(t),s=o.length-1,a=0;a<=s;a++)n=a===s?this:this.clone(!0),w(o[a])[e](n),r.apply(i,n.get());return this.pushStack(i)}}));var Lt=new RegExp("^("+J+")(?!px)[a-z%]+$","i"),Ft=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)},jt=function(t,e,n){var i,o,s={};for(o in e)s[o]=t.style[o],t.style[o]=e[o];for(o in i=n.call(t),e)t.style[o]=s[o];return i},Bt=new RegExp(et.join("|"),"i");function Ht(t,e,n){var i,o,s,r,a=t.style;return(n=n||Ft(t))&&(""!==(r=n.getPropertyValue(e)||n[e])||it(t)||(r=w.style(t,e)),!f.pixelBoxStyles()&&Lt.test(r)&&Bt.test(e)&&(i=a.width,o=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=n.width,a.width=i,a.minWidth=o,a.maxWidth=s)),void 0!==r?r+"":r}function qt(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function e(){if(u){c.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",nt.appendChild(c).appendChild(u);var e=t.getComputedStyle(u);i="1%"!==e.top,l=12===n(e.marginLeft),u.style.right="60%",r=36===n(e.right),o=36===n(e.width),u.style.position="absolute",s=12===n(u.offsetWidth/3),nt.removeChild(c),u=null}}function n(t){return Math.round(parseFloat(t))}var i,o,s,r,a,l,c=m.createElement("div"),u=m.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",f.clearCloneStyle="content-box"===u.style.backgroundClip,w.extend(f,{boxSizingReliable:function(){return e(),o},pixelBoxStyles:function(){return e(),r},pixelPosition:function(){return e(),i},reliableMarginLeft:function(){return e(),l},scrollboxSize:function(){return e(),s},reliableTrDimensions:function(){var e,n,i,o;return null==a&&(e=m.createElement("table"),n=m.createElement("tr"),i=m.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",n.style.cssText="border:1px solid",n.style.height="1px",i.style.height="9px",i.style.display="block",nt.appendChild(e).appendChild(n).appendChild(i),o=t.getComputedStyle(n),a=parseInt(o.height,10)+parseInt(o.borderTopWidth,10)+parseInt(o.borderBottomWidth,10)===n.offsetHeight,nt.removeChild(e)),a}}))}();var zt=["Webkit","Moz","ms"],_t=m.createElement("div").style,Wt={};function Ut(t){var e=w.cssProps[t]||Wt[t];return e||(t in _t?t:Wt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),n=zt.length;n--;)if((t=zt[n]+e)in _t)return t}(t)||t)}var Xt=/^(none|table(?!-c[ea]).+)/,Yt=/^--/,Gt={position:"absolute",visibility:"hidden",display:"block"},Vt={letterSpacing:"0",fontWeight:"400"};function Kt(t,e,n){var i=tt.exec(e);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):e}function Qt(t,e,n,i,o,s){var r="width"===e?1:0,a=0,l=0;if(n===(i?"border":"content"))return 0;for(;r<4;r+=2)"margin"===n&&(l+=w.css(t,n+et[r],!0,o)),i?("content"===n&&(l-=w.css(t,"padding"+et[r],!0,o)),"margin"!==n&&(l-=w.css(t,"border"+et[r]+"Width",!0,o))):(l+=w.css(t,"padding"+et[r],!0,o),"padding"!==n?l+=w.css(t,"border"+et[r]+"Width",!0,o):a+=w.css(t,"border"+et[r]+"Width",!0,o));return!i&&s>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-s-l-a-.5))||0),l}function Zt(t,e,n){var i=Ft(t),o=(!f.boxSizingReliable()||n)&&"border-box"===w.css(t,"boxSizing",!1,i),s=o,r=Ht(t,e,i),a="offset"+e[0].toUpperCase()+e.slice(1);if(Lt.test(r)){if(!n)return r;r="auto"}return(!f.boxSizingReliable()&&o||!f.reliableTrDimensions()&&A(t,"tr")||"auto"===r||!parseFloat(r)&&"inline"===w.css(t,"display",!1,i))&&t.getClientRects().length&&(o="border-box"===w.css(t,"boxSizing",!1,i),(s=a in t)&&(r=t[a])),(r=parseFloat(r)||0)+Qt(t,e,n||(o?"border":"content"),s,i,r)+"px"}function Jt(t,e,n,i,o){return new Jt.prototype.init(t,e,n,i,o)}w.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=Ht(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var o,s,r,a=U(e),l=Yt.test(e),c=t.style;if(l||(e=Ut(a)),r=w.cssHooks[e]||w.cssHooks[a],void 0===n)return r&&"get"in r&&void 0!==(o=r.get(t,!1,i))?o:c[e];"string"===(s=typeof n)&&(o=tt.exec(n))&&o[1]&&(n=rt(t,e,o),s="number"),null!=n&&n==n&&("number"!==s||l||(n+=o&&o[3]||(w.cssNumber[a]?"":"px")),f.clearCloneStyle||""!==n||0!==e.indexOf("background")||(c[e]="inherit"),r&&"set"in r&&void 0===(n=r.set(t,n,i))||(l?c.setProperty(e,n):c[e]=n))}},css:function(t,e,n,i){var o,s,r,a=U(e);return Yt.test(e)||(e=Ut(a)),(r=w.cssHooks[e]||w.cssHooks[a])&&"get"in r&&(o=r.get(t,!0,n)),void 0===o&&(o=Ht(t,e,i)),"normal"===o&&e in Vt&&(o=Vt[e]),""===n||n?(s=parseFloat(o),!0===n||isFinite(s)?s||0:o):o}}),w.each(["height","width"],(function(t,e){w.cssHooks[e]={get:function(t,n,i){if(n)return!Xt.test(w.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?Zt(t,e,i):jt(t,Gt,(function(){return Zt(t,e,i)}))},set:function(t,n,i){var o,s=Ft(t),r=!f.scrollboxSize()&&"absolute"===s.position,a=(r||i)&&"border-box"===w.css(t,"boxSizing",!1,s),l=i?Qt(t,e,i,a,s):0;return a&&r&&(l-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(s[e])-Qt(t,e,"border",!1,s)-.5)),l&&(o=tt.exec(n))&&"px"!==(o[3]||"px")&&(t.style[e]=n,n=w.css(t,e)),Kt(0,n,l)}}})),w.cssHooks.marginLeft=qt(f.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Ht(t,"marginLeft"))||t.getBoundingClientRect().left-jt(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),w.each({margin:"",padding:"",border:"Width"},(function(t,e){w.cssHooks[t+e]={expand:function(n){for(var i=0,o={},s="string"==typeof n?n.split(" "):[n];i<4;i++)o[t+et[i]+e]=s[i]||s[i-2]||s[0];return o}},"margin"!==t&&(w.cssHooks[t+e].set=Kt)})),w.fn.extend({css:function(t,e){return q(this,(function(t,e,n){var i,o,s={},r=0;if(Array.isArray(e)){for(i=Ft(t),o=e.length;r<o;r++)s[e[r]]=w.css(t,e[r],!1,i);return s}return void 0!==n?w.style(t,e,n):w.css(t,e)}),t,e,arguments.length>1)}}),w.Tween=Jt,Jt.prototype={constructor:Jt,init:function(t,e,n,i,o,s){this.elem=t,this.prop=n,this.easing=o||w.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=s||(w.cssNumber[n]?"":"px")},cur:function(){var t=Jt.propHooks[this.prop];return t&&t.get?t.get(this):Jt.propHooks._default.get(this)},run:function(t){var e,n=Jt.propHooks[this.prop];return this.options.duration?this.pos=e=w.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Jt.propHooks._default.set(this),this}},Jt.prototype.init.prototype=Jt.prototype,Jt.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=w.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){w.fx.step[t.prop]?w.fx.step[t.prop](t):1!==t.elem.nodeType||!w.cssHooks[t.prop]&&null==t.elem.style[Ut(t.prop)]?t.elem[t.prop]=t.now:w.style(t.elem,t.prop,t.now+t.unit)}}},Jt.propHooks.scrollTop=Jt.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},w.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},w.fx=Jt.prototype.init,w.fx.step={};var te,ee,ne=/^(?:toggle|show|hide)$/,ie=/queueHooks$/;function oe(){ee&&(!1===m.hidden&&t.requestAnimationFrame?t.requestAnimationFrame(oe):t.setTimeout(oe,w.fx.interval),w.fx.tick())}function se(){return t.setTimeout((function(){te=void 0})),te=Date.now()}function re(t,e){var n,i=0,o={height:t};for(e=e?1:0;i<4;i+=2-e)o["margin"+(n=et[i])]=o["padding"+n]=t;return e&&(o.opacity=o.width=t),o}function ae(t,e,n){for(var i,o=(le.tweeners[e]||[]).concat(le.tweeners["*"]),s=0,r=o.length;s<r;s++)if(i=o[s].call(n,e,t))return i}function le(t,e,n){var i,o,s=0,r=le.prefilters.length,a=w.Deferred().always((function(){delete l.elem})),l=function(){if(o)return!1;for(var e=te||se(),n=Math.max(0,c.startTime+c.duration-e),i=1-(n/c.duration||0),s=0,r=c.tweens.length;s<r;s++)c.tweens[s].run(i);return a.notifyWith(t,[c,i,n]),i<1&&r?n:(r||a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c]),!1)},c=a.promise({elem:t,props:w.extend({},e),opts:w.extend(!0,{specialEasing:{},easing:w.easing._default},n),originalProperties:e,originalOptions:n,startTime:te||se(),duration:n.duration,tweens:[],createTween:function(e,n){var i=w.Tween(t,c.opts,e,n,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(i),i},stop:function(e){var n=0,i=e?c.tweens.length:0;if(o)return this;for(o=!0;n<i;n++)c.tweens[n].run(1);return e?(a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c,e])):a.rejectWith(t,[c,e]),this}}),u=c.props;for(!function(t,e){var n,i,o,s,r;for(n in t)if(o=e[i=U(n)],s=t[n],Array.isArray(s)&&(o=s[1],s=t[n]=s[0]),n!==i&&(t[i]=s,delete t[n]),(r=w.cssHooks[i])&&"expand"in r)for(n in s=r.expand(s),delete t[i],s)n in t||(t[n]=s[n],e[n]=o);else e[i]=o}(u,c.opts.specialEasing);s<r;s++)if(i=le.prefilters[s].call(c,t,u,c.opts))return h(i.stop)&&(w._queueHooks(c.elem,c.opts.queue).stop=i.stop.bind(i)),i;return w.map(u,ae,c),h(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),w.fx.timer(w.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c}w.Animation=w.extend(le,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return rt(n.elem,t,tt.exec(e),n),n}]},tweener:function(t,e){h(t)?(e=t,t=["*"]):t=t.match(M);for(var n,i=0,o=t.length;i<o;i++)n=t[i],le.tweeners[n]=le.tweeners[n]||[],le.tweeners[n].unshift(e)},prefilters:[function(t,e,n){var i,o,s,r,a,l,c,u,d="width"in e||"height"in e,p=this,f={},h=t.style,g=t.nodeType&&st(t),m=G.get(t,"fxshow");for(i in n.queue||(null==(r=w._queueHooks(t,"fx")).unqueued&&(r.unqueued=0,a=r.empty.fire,r.empty.fire=function(){r.unqueued||a()}),r.unqueued++,p.always((function(){p.always((function(){r.unqueued--,w.queue(t,"fx").length||r.empty.fire()}))}))),e)if(o=e[i],ne.test(o)){if(delete e[i],s=s||"toggle"===o,o===(g?"hide":"show")){if("show"!==o||!m||void 0===m[i])continue;g=!0}f[i]=m&&m[i]||w.style(t,i)}if((l=!w.isEmptyObject(e))||!w.isEmptyObject(f))for(i in d&&1===t.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(c=m&&m.display)&&(c=G.get(t,"display")),"none"===(u=w.css(t,"display"))&&(c?u=c:(ct([t],!0),c=t.style.display||c,u=w.css(t,"display"),ct([t]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===w.css(t,"float")&&(l||(p.done((function(){h.display=c})),null==c&&(u=h.display,c="none"===u?"":u)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always((function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]}))),l=!1,f)l||(m?"hidden"in m&&(g=m.hidden):m=G.access(t,"fxshow",{display:c}),s&&(m.hidden=!g),g&&ct([t],!0),p.done((function(){for(i in g||ct([t]),G.remove(t,"fxshow"),f)w.style(t,i,f[i])}))),l=ae(g?m[i]:0,i,p),i in m||(m[i]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?le.prefilters.unshift(t):le.prefilters.push(t)}}),w.speed=function(t,e,n){var i=t&&"object"==typeof t?w.extend({},t):{complete:n||!n&&e||h(t)&&t,duration:t,easing:n&&e||e&&!h(e)&&e};return w.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in w.fx.speeds?i.duration=w.fx.speeds[i.duration]:i.duration=w.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){h(i.old)&&i.old.call(this),i.queue&&w.dequeue(this,i.queue)},i},w.fn.extend({fadeTo:function(t,e,n,i){return this.filter(st).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(t,e,n,i){var o=w.isEmptyObject(t),s=w.speed(e,n,i),r=function(){var e=le(this,w.extend({},t),s);(o||G.get(this,"finish"))&&e.stop(!0)};return r.finish=r,o||!1===s.queue?this.each(r):this.queue(s.queue,r)},stop:function(t,e,n){var i=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&this.queue(t||"fx",[]),this.each((function(){var e=!0,o=null!=t&&t+"queueHooks",s=w.timers,r=G.get(this);if(o)r[o]&&r[o].stop&&i(r[o]);else for(o in r)r[o]&&r[o].stop&&ie.test(o)&&i(r[o]);for(o=s.length;o--;)s[o].elem!==this||null!=t&&s[o].queue!==t||(s[o].anim.stop(n),e=!1,s.splice(o,1));!e&&n||w.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,n=G.get(this),i=n[t+"queue"],o=n[t+"queueHooks"],s=w.timers,r=i?i.length:0;for(n.finish=!0,w.queue(this,t,[]),o&&o.stop&&o.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===t&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<r;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete n.finish}))}}),w.each(["toggle","show","hide"],(function(t,e){var n=w.fn[e];w.fn[e]=function(t,i,o){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(re(e,!0),t,i,o)}})),w.each({slideDown:re("show"),slideUp:re("hide"),slideToggle:re("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){w.fn[t]=function(t,n,i){return this.animate(e,t,n,i)}})),w.timers=[],w.fx.tick=function(){var t,e=0,n=w.timers;for(te=Date.now();e<n.length;e++)(t=n[e])()||n[e]!==t||n.splice(e--,1);n.length||w.fx.stop(),te=void 0},w.fx.timer=function(t){w.timers.push(t),w.fx.start()},w.fx.interval=13,w.fx.start=function(){ee||(ee=!0,oe())},w.fx.stop=function(){ee=null},w.fx.speeds={slow:600,fast:200,_default:400},w.fn.delay=function(e,n){return e=w.fx&&w.fx.speeds[e]||e,n=n||"fx",this.queue(n,(function(n,i){var o=t.setTimeout(n,e);i.stop=function(){t.clearTimeout(o)}}))},function(){var t=m.createElement("input"),e=m.createElement("select").appendChild(m.createElement("option"));t.type="checkbox",f.checkOn=""!==t.value,f.optSelected=e.selected,(t=m.createElement("input")).value="t",t.type="radio",f.radioValue="t"===t.value}();var ce,ue=w.expr.attrHandle;w.fn.extend({attr:function(t,e){return q(this,w.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each((function(){w.removeAttr(this,t)}))}}),w.extend({attr:function(t,e,n){var i,o,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===t.getAttribute?w.prop(t,e,n):(1===s&&w.isXMLDoc(t)||(o=w.attrHooks[e.toLowerCase()]||(w.expr.match.bool.test(e)?ce:void 0)),void 0!==n?null===n?void w.removeAttr(t,e):o&&"set"in o&&void 0!==(i=o.set(t,n,e))?i:(t.setAttribute(e,n+""),n):o&&"get"in o&&null!==(i=o.get(t,e))?i:null==(i=w.find.attr(t,e))?void 0:i)},attrHooks:{type:{set:function(t,e){if(!f.radioValue&&"radio"===e&&A(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i=0,o=e&&e.match(M);if(o&&1===t.nodeType)for(;n=o[i++];)t.removeAttribute(n)}}),ce={set:function(t,e,n){return!1===e?w.removeAttr(t,n):t.setAttribute(n,n),n}},w.each(w.expr.match.bool.source.match(/\w+/g),(function(t,e){var n=ue[e]||w.find.attr;ue[e]=function(t,e,i){var o,s,r=e.toLowerCase();return i||(s=ue[r],ue[r]=o,o=null!=n(t,e,i)?r:null,ue[r]=s),o}}));var de=/^(?:input|select|textarea|button)$/i,pe=/^(?:a|area)$/i;function fe(t){return(t.match(M)||[]).join(" ")}function he(t){return t.getAttribute&&t.getAttribute("class")||""}function ge(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(M)||[]}w.fn.extend({prop:function(t,e){return q(this,w.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each((function(){delete this[w.propFix[t]||t]}))}}),w.extend({prop:function(t,e,n){var i,o,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&w.isXMLDoc(t)||(e=w.propFix[e]||e,o=w.propHooks[e]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(t,n,e))?i:t[e]=n:o&&"get"in o&&null!==(i=o.get(t,e))?i:t[e]},propHooks:{tabIndex:{get:function(t){var e=w.find.attr(t,"tabindex");return e?parseInt(e,10):de.test(t.nodeName)||pe.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),f.optSelected||(w.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),w.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){w.propFix[this.toLowerCase()]=this})),w.fn.extend({addClass:function(t){var e,n,i,o,s,r,a,l=0;if(h(t))return this.each((function(e){w(this).addClass(t.call(this,e,he(this)))}));if((e=ge(t)).length)for(;n=this[l++];)if(o=he(n),i=1===n.nodeType&&" "+fe(o)+" "){for(r=0;s=e[r++];)i.indexOf(" "+s+" ")<0&&(i+=s+" ");o!==(a=fe(i))&&n.setAttribute("class",a)}return this},removeClass:function(t){var e,n,i,o,s,r,a,l=0;if(h(t))return this.each((function(e){w(this).removeClass(t.call(this,e,he(this)))}));if(!arguments.length)return this.attr("class","");if((e=ge(t)).length)for(;n=this[l++];)if(o=he(n),i=1===n.nodeType&&" "+fe(o)+" "){for(r=0;s=e[r++];)for(;i.indexOf(" "+s+" ")>-1;)i=i.replace(" "+s+" "," ");o!==(a=fe(i))&&n.setAttribute("class",a)}return this},toggleClass:function(t,e){var n=typeof t,i="string"===n||Array.isArray(t);return"boolean"==typeof e&&i?e?this.addClass(t):this.removeClass(t):h(t)?this.each((function(n){w(this).toggleClass(t.call(this,n,he(this),e),e)})):this.each((function(){var e,o,s,r;if(i)for(o=0,s=w(this),r=ge(t);e=r[o++];)s.hasClass(e)?s.removeClass(e):s.addClass(e);else void 0!==t&&"boolean"!==n||((e=he(this))&&G.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":G.get(this,"__className__")||""))}))},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&(" "+fe(he(n))+" ").indexOf(e)>-1)return!0;return!1}});var me=/\r/g;w.fn.extend({val:function(t){var e,n,i,o=this[0];return arguments.length?(i=h(t),this.each((function(n){var o;1===this.nodeType&&(null==(o=i?t.call(this,n,w(this).val()):t)?o="":"number"==typeof o?o+="":Array.isArray(o)&&(o=w.map(o,(function(t){return null==t?"":t+""}))),(e=w.valHooks[this.type]||w.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,o,"value")||(this.value=o))}))):o?(e=w.valHooks[o.type]||w.valHooks[o.nodeName.toLowerCase()])&&"get"in e&&void 0!==(n=e.get(o,"value"))?n:"string"==typeof(n=o.value)?n.replace(me,""):null==n?"":n:void 0}}),w.extend({valHooks:{option:{get:function(t){var e=w.find.attr(t,"value");return null!=e?e:fe(w.text(t))}},select:{get:function(t){var e,n,i,o=t.options,s=t.selectedIndex,r="select-one"===t.type,a=r?null:[],l=r?s+1:o.length;for(i=s<0?l:r?s:0;i<l;i++)if(((n=o[i]).selected||i===s)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(e=w(n).val(),r)return e;a.push(e)}return a},set:function(t,e){for(var n,i,o=t.options,s=w.makeArray(e),r=o.length;r--;)((i=o[r]).selected=w.inArray(w.valHooks.option.get(i),s)>-1)&&(n=!0);return n||(t.selectedIndex=-1),s}}}}),w.each(["radio","checkbox"],(function(){w.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=w.inArray(w(t).val(),e)>-1}},f.checkOn||(w.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),f.focusin="onfocusin"in t;var ye=/^(?:focusinfocus|focusoutblur)$/,ve=function(t){t.stopPropagation()};w.extend(w.event,{trigger:function(e,n,i,o){var s,r,a,l,c,d,p,f,y=[i||m],v=u.call(e,"type")?e.type:e,b=u.call(e,"namespace")?e.namespace.split("."):[];if(r=f=a=i=i||m,3!==i.nodeType&&8!==i.nodeType&&!ye.test(v+w.event.triggered)&&(v.indexOf(".")>-1&&(b=v.split("."),v=b.shift(),b.sort()),c=v.indexOf(":")<0&&"on"+v,(e=e[w.expando]?e:new w.Event(v,"object"==typeof e&&e)).isTrigger=o?2:3,e.namespace=b.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),n=null==n?[e]:w.makeArray(n,[e]),p=w.event.special[v]||{},o||!p.trigger||!1!==p.trigger.apply(i,n))){if(!o&&!p.noBubble&&!g(i)){for(l=p.delegateType||v,ye.test(l+v)||(r=r.parentNode);r;r=r.parentNode)y.push(r),a=r;a===(i.ownerDocument||m)&&y.push(a.defaultView||a.parentWindow||t)}for(s=0;(r=y[s++])&&!e.isPropagationStopped();)f=r,e.type=s>1?l:p.bindType||v,(d=(G.get(r,"events")||Object.create(null))[e.type]&&G.get(r,"handle"))&&d.apply(r,n),(d=c&&r[c])&&d.apply&&X(r)&&(e.result=d.apply(r,n),!1===e.result&&e.preventDefault());return e.type=v,o||e.isDefaultPrevented()||p._default&&!1!==p._default.apply(y.pop(),n)||!X(i)||c&&h(i[v])&&!g(i)&&((a=i[c])&&(i[c]=null),w.event.triggered=v,e.isPropagationStopped()&&f.addEventListener(v,ve),i[v](),e.isPropagationStopped()&&f.removeEventListener(v,ve),w.event.triggered=void 0,a&&(i[c]=a)),e.result}},simulate:function(t,e,n){var i=w.extend(new w.Event,n,{type:t,isSimulated:!0});w.event.trigger(i,null,e)}}),w.fn.extend({trigger:function(t,e){return this.each((function(){w.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var n=this[0];if(n)return w.event.trigger(t,e,n,!0)}}),f.focusin||w.each({focus:"focusin",blur:"focusout"},(function(t,e){var n=function(t){w.event.simulate(e,t.target,w.event.fix(t))};w.event.special[e]={setup:function(){var i=this.ownerDocument||this.document||this,o=G.access(i,e);o||i.addEventListener(t,n,!0),G.access(i,e,(o||0)+1)},teardown:function(){var i=this.ownerDocument||this.document||this,o=G.access(i,e)-1;o?G.access(i,e,o):(i.removeEventListener(t,n,!0),G.remove(i,e))}}}));var be=t.location,we={guid:Date.now()},xe=/\?/;w.parseXML=function(e){var n,i;if(!e||"string"!=typeof e)return null;try{n=(new t.DOMParser).parseFromString(e,"text/xml")}catch(t){}return i=n&&n.getElementsByTagName("parsererror")[0],n&&!i||w.error("Invalid XML: "+(i?w.map(i.childNodes,(function(t){return t.textContent})).join("\n"):e)),n};var Ce=/\[\]$/,Se=/\r?\n/g,Te=/^(?:submit|button|image|reset|file)$/i,ke=/^(?:input|select|textarea|keygen)/i;function Ae(t,e,n,i){var o;if(Array.isArray(e))w.each(e,(function(e,o){n||Ce.test(t)?i(t,o):Ae(t+"["+("object"==typeof o&&null!=o?e:"")+"]",o,n,i)}));else if(n||"object"!==b(e))i(t,e);else for(o in e)Ae(t+"["+o+"]",e[o],n,i)}w.param=function(t,e){var n,i=[],o=function(t,e){var n=h(e)?e():e;i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!w.isPlainObject(t))w.each(t,(function(){o(this.name,this.value)}));else for(n in t)Ae(n,t[n],e,o);return i.join("&")},w.fn.extend({serialize:function(){return w.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=w.prop(this,"elements");return t?w.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!w(this).is(":disabled")&&ke.test(this.nodeName)&&!Te.test(t)&&(this.checked||!pt.test(t))})).map((function(t,e){var n=w(this).val();return null==n?null:Array.isArray(n)?w.map(n,(function(t){return{name:e.name,value:t.replace(Se,"\r\n")}})):{name:e.name,value:n.replace(Se,"\r\n")}})).get()}});var Ee=/%20/g,$e=/#.*$/,De=/([?&])_=[^&]*/,Pe=/^(.*?):[ \t]*([^\r\n]*)$/gm,Oe=/^(?:GET|HEAD)$/,Ie=/^\/\//,Ne={},Me={},Re="*/".concat("*"),Le=m.createElement("a");function Fe(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var i,o=0,s=e.toLowerCase().match(M)||[];if(h(n))for(;i=s[o++];)"+"===i[0]?(i=i.slice(1)||"*",(t[i]=t[i]||[]).unshift(n)):(t[i]=t[i]||[]).push(n)}}function je(t,e,n,i){var o={},s=t===Me;function r(a){var l;return o[a]=!0,w.each(t[a]||[],(function(t,a){var c=a(e,n,i);return"string"!=typeof c||s||o[c]?s?!(l=c):void 0:(e.dataTypes.unshift(c),r(c),!1)})),l}return r(e.dataTypes[0])||!o["*"]&&r("*")}function Be(t,e){var n,i,o=w.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((o[n]?t:i||(i={}))[n]=e[n]);return i&&w.extend(!0,t,i),t}Le.href=be.href,w.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:be.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(be.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Re,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":w.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?Be(Be(t,w.ajaxSettings),e):Be(w.ajaxSettings,t)},ajaxPrefilter:Fe(Ne),ajaxTransport:Fe(Me),ajax:function(e,n){"object"==typeof e&&(n=e,e=void 0),n=n||{};var i,o,s,r,a,l,c,u,d,p,f=w.ajaxSetup({},n),h=f.context||f,g=f.context&&(h.nodeType||h.jquery)?w(h):w.event,y=w.Deferred(),v=w.Callbacks("once memory"),b=f.statusCode||{},x={},C={},S="canceled",T={readyState:0,getResponseHeader:function(t){var e;if(c){if(!r)for(r={};e=Pe.exec(s);)r[e[1].toLowerCase()+" "]=(r[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=r[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return c?s:null},setRequestHeader:function(t,e){return null==c&&(t=C[t.toLowerCase()]=C[t.toLowerCase()]||t,x[t]=e),this},overrideMimeType:function(t){return null==c&&(f.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)T.always(t[T.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||S;return i&&i.abort(e),k(0,e),this}};if(y.promise(T),f.url=((e||f.url||be.href)+"").replace(Ie,be.protocol+"//"),f.type=n.method||n.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(M)||[""],null==f.crossDomain){l=m.createElement("a");try{l.href=f.url,l.href=l.href,f.crossDomain=Le.protocol+"//"+Le.host!=l.protocol+"//"+l.host}catch(t){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=w.param(f.data,f.traditional)),je(Ne,f,n,T),c)return T;for(d in(u=w.event&&f.global)&&0==w.active++&&w.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Oe.test(f.type),o=f.url.replace($e,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(Ee,"+")):(p=f.url.slice(o.length),f.data&&(f.processData||"string"==typeof f.data)&&(o+=(xe.test(o)?"&":"?")+f.data,delete f.data),!1===f.cache&&(o=o.replace(De,"$1"),p=(xe.test(o)?"&":"?")+"_="+we.guid+++p),f.url=o+p),f.ifModified&&(w.lastModified[o]&&T.setRequestHeader("If-Modified-Since",w.lastModified[o]),w.etag[o]&&T.setRequestHeader("If-None-Match",w.etag[o])),(f.data&&f.hasContent&&!1!==f.contentType||n.contentType)&&T.setRequestHeader("Content-Type",f.contentType),T.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Re+"; q=0.01":""):f.accepts["*"]),f.headers)T.setRequestHeader(d,f.headers[d]);if(f.beforeSend&&(!1===f.beforeSend.call(h,T,f)||c))return T.abort();if(S="abort",v.add(f.complete),T.done(f.success),T.fail(f.error),i=je(Me,f,n,T)){if(T.readyState=1,u&&g.trigger("ajaxSend",[T,f]),c)return T;f.async&&f.timeout>0&&(a=t.setTimeout((function(){T.abort("timeout")}),f.timeout));try{c=!1,i.send(x,k)}catch(t){if(c)throw t;k(-1,t)}}else k(-1,"No Transport");function k(e,n,r,l){var d,p,m,x,C,S=n;c||(c=!0,a&&t.clearTimeout(a),i=void 0,s=l||"",T.readyState=e>0?4:0,d=e>=200&&e<300||304===e,r&&(x=function(t,e,n){for(var i,o,s,r,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=t.mimeType||e.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)s=l[0];else{for(o in n){if(!l[0]||t.converters[o+" "+l[0]]){s=o;break}r||(r=o)}s=s||r}if(s)return s!==l[0]&&l.unshift(s),n[s]}(f,T,r)),!d&&w.inArray("script",f.dataTypes)>-1&&w.inArray("json",f.dataTypes)<0&&(f.converters["text script"]=function(){}),x=function(t,e,n,i){var o,s,r,a,l,c={},u=t.dataTypes.slice();if(u[1])for(r in t.converters)c[r.toLowerCase()]=t.converters[r];for(s=u.shift();s;)if(t.responseFields[s]&&(n[t.responseFields[s]]=e),!l&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=s,s=u.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(r=c[l+" "+s]||c["* "+s]))for(o in c)if((a=o.split(" "))[1]===s&&(r=c[l+" "+a[0]]||c["* "+a[0]])){!0===r?r=c[o]:!0!==c[o]&&(s=a[0],u.unshift(a[1]));break}if(!0!==r)if(r&&t.throws)e=r(e);else try{e=r(e)}catch(t){return{state:"parsererror",error:r?t:"No conversion from "+l+" to "+s}}}return{state:"success",data:e}}(f,x,T,d),d?(f.ifModified&&((C=T.getResponseHeader("Last-Modified"))&&(w.lastModified[o]=C),(C=T.getResponseHeader("etag"))&&(w.etag[o]=C)),204===e||"HEAD"===f.type?S="nocontent":304===e?S="notmodified":(S=x.state,p=x.data,d=!(m=x.error))):(m=S,!e&&S||(S="error",e<0&&(e=0))),T.status=e,T.statusText=(n||S)+"",d?y.resolveWith(h,[p,S,T]):y.rejectWith(h,[T,S,m]),T.statusCode(b),b=void 0,u&&g.trigger(d?"ajaxSuccess":"ajaxError",[T,f,d?p:m]),v.fireWith(h,[T,S]),u&&(g.trigger("ajaxComplete",[T,f]),--w.active||w.event.trigger("ajaxStop")))}return T},getJSON:function(t,e,n){return w.get(t,e,n,"json")},getScript:function(t,e){return w.get(t,void 0,e,"script")}}),w.each(["get","post"],(function(t,e){w[e]=function(t,n,i,o){return h(n)&&(o=o||i,i=n,n=void 0),w.ajax(w.extend({url:t,type:e,dataType:o,data:n,success:i},w.isPlainObject(t)&&t))}})),w.ajaxPrefilter((function(t){var e;for(e in t.headers)"content-type"===e.toLowerCase()&&(t.contentType=t.headers[e]||"")})),w._evalUrl=function(t,e,n){return w.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){w.globalEval(t,e,n)}})},w.fn.extend({wrapAll:function(t){var e;return this[0]&&(h(t)&&(t=t.call(this[0])),e=w(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return h(t)?this.each((function(e){w(this).wrapInner(t.call(this,e))})):this.each((function(){var e=w(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)}))},wrap:function(t){var e=h(t);return this.each((function(n){w(this).wrapAll(e?t.call(this,n):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){w(this).replaceWith(this.childNodes)})),this}}),w.expr.pseudos.hidden=function(t){return!w.expr.pseudos.visible(t)},w.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},w.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(t){}};var He={0:200,1223:204},qe=w.ajaxSettings.xhr();f.cors=!!qe&&"withCredentials"in qe,f.ajax=qe=!!qe,w.ajaxTransport((function(e){var n,i;if(f.cors||qe&&!e.crossDomain)return{send:function(o,s){var r,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)a[r]=e.xhrFields[r];for(r in e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||o["X-Requested-With"]||(o["X-Requested-With"]="XMLHttpRequest"),o)a.setRequestHeader(r,o[r]);n=function(t){return function(){n&&(n=i=a.onload=a.onerror=a.onabort=a.ontimeout=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?s(0,"error"):s(a.status,a.statusText):s(He[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=n(),i=a.onerror=a.ontimeout=n("error"),void 0!==a.onabort?a.onabort=i:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout((function(){n&&i()}))},n=n("abort");try{a.send(e.hasContent&&e.data||null)}catch(t){if(n)throw t}},abort:function(){n&&n()}}})),w.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),w.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return w.globalEval(t),t}}}),w.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),w.ajaxTransport("script",(function(t){var e,n;if(t.crossDomain||t.scriptAttrs)return{send:function(i,o){e=w("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&o("error"===t.type?404:200,t.type)}),m.head.appendChild(e[0])},abort:function(){n&&n()}}}));var ze,_e=[],We=/(=)\?(?=&|$)|\?\?/;w.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=_e.pop()||w.expando+"_"+we.guid++;return this[t]=!0,t}}),w.ajaxPrefilter("json jsonp",(function(e,n,i){var o,s,r,a=!1!==e.jsonp&&(We.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&We.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return o=e.jsonpCallback=h(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(We,"$1"+o):!1!==e.jsonp&&(e.url+=(xe.test(e.url)?"&":"?")+e.jsonp+"="+o),e.converters["script json"]=function(){return r||w.error(o+" was not called"),r[0]},e.dataTypes[0]="json",s=t[o],t[o]=function(){r=arguments},i.always((function(){void 0===s?w(t).removeProp(o):t[o]=s,e[o]&&(e.jsonpCallback=n.jsonpCallback,_e.push(o)),r&&h(s)&&s(r[0]),r=s=void 0})),"script"})),f.createHTMLDocument=((ze=m.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ze.childNodes.length),w.parseHTML=function(t,e,n){return"string"!=typeof t?[]:("boolean"==typeof e&&(n=e,e=!1),e||(f.createHTMLDocument?((i=(e=m.implementation.createHTMLDocument("")).createElement("base")).href=m.location.href,e.head.appendChild(i)):e=m),s=!n&&[],(o=E.exec(t))?[e.createElement(o[1])]:(o=bt([t],e,s),s&&s.length&&w(s).remove(),w.merge([],o.childNodes)));var i,o,s},w.fn.load=function(t,e,n){var i,o,s,r=this,a=t.indexOf(" ");return a>-1&&(i=fe(t.slice(a)),t=t.slice(0,a)),h(e)?(n=e,e=void 0):e&&"object"==typeof e&&(o="POST"),r.length>0&&w.ajax({url:t,type:o||"GET",dataType:"html",data:e}).done((function(t){s=arguments,r.html(i?w("<div>").append(w.parseHTML(t)).find(i):t)})).always(n&&function(t,e){r.each((function(){n.apply(this,s||[t.responseText,e,t])}))}),this},w.expr.pseudos.animated=function(t){return w.grep(w.timers,(function(e){return t===e.elem})).length},w.offset={setOffset:function(t,e,n){var i,o,s,r,a,l,c=w.css(t,"position"),u=w(t),d={};"static"===c&&(t.style.position="relative"),a=u.offset(),s=w.css(t,"top"),l=w.css(t,"left"),("absolute"===c||"fixed"===c)&&(s+l).indexOf("auto")>-1?(r=(i=u.position()).top,o=i.left):(r=parseFloat(s)||0,o=parseFloat(l)||0),h(e)&&(e=e.call(t,n,w.extend({},a))),null!=e.top&&(d.top=e.top-a.top+r),null!=e.left&&(d.left=e.left-a.left+o),"using"in e?e.using.call(t,d):u.css(d)}},w.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){w.offset.setOffset(this,t,e)}));var e,n,i=this[0];return i?i.getClientRects().length?(e=i.getBoundingClientRect(),n=i.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n,i=this[0],o={top:0,left:0};if("fixed"===w.css(i,"position"))e=i.getBoundingClientRect();else{for(e=this.offset(),n=i.ownerDocument,t=i.offsetParent||n.documentElement;t&&(t===n.body||t===n.documentElement)&&"static"===w.css(t,"position");)t=t.parentNode;t&&t!==i&&1===t.nodeType&&((o=w(t).offset()).top+=w.css(t,"borderTopWidth",!0),o.left+=w.css(t,"borderLeftWidth",!0))}return{top:e.top-o.top-w.css(i,"marginTop",!0),left:e.left-o.left-w.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===w.css(t,"position");)t=t.offsetParent;return t||nt}))}}),w.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var n="pageYOffset"===e;w.fn[t]=function(i){return q(this,(function(t,i,o){var s;if(g(t)?s=t:9===t.nodeType&&(s=t.defaultView),void 0===o)return s?s[e]:t[i];s?s.scrollTo(n?s.pageXOffset:o,n?o:s.pageYOffset):t[i]=o}),t,i,arguments.length)}})),w.each(["top","left"],(function(t,e){w.cssHooks[e]=qt(f.pixelPosition,(function(t,n){if(n)return n=Ht(t,e),Lt.test(n)?w(t).position()[e]+"px":n}))})),w.each({Height:"height",Width:"width"},(function(t,e){w.each({padding:"inner"+t,content:e,"":"outer"+t},(function(n,i){w.fn[i]=function(o,s){var r=arguments.length&&(n||"boolean"!=typeof o),a=n||(!0===o||!0===s?"margin":"border");return q(this,(function(e,n,o){var s;return g(e)?0===i.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+t],s["scroll"+t],e.body["offset"+t],s["offset"+t],s["client"+t])):void 0===o?w.css(e,n,a):w.style(e,n,o,a)}),e,r?o:void 0,r)}}))})),w.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){w.fn[e]=function(t){return this.on(e,t)}})),w.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)},hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),w.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){w.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}));var Ue=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;w.proxy=function(t,e){var n,i,s;if("string"==typeof e&&(n=t[e],e=t,t=n),h(t))return i=o.call(arguments,2),(s=function(){return t.apply(e||this,i.concat(o.call(arguments)))}).guid=t.guid=t.guid||w.guid++,s},w.holdReady=function(t){t?w.readyWait++:w.ready(!0)},w.isArray=Array.isArray,w.parseJSON=JSON.parse,w.nodeName=A,w.isFunction=h,w.isWindow=g,w.camelCase=U,w.type=b,w.now=Date.now,w.isNumeric=function(t){var e=w.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},w.trim=function(t){return null==t?"":(t+"").replace(Ue,"")},"function"==typeof define&&define.amd&&define("jquery",[],(function(){return w}));var Xe=t.jQuery,Ye=t.$;return w.noConflict=function(e){return t.$===w&&(t.$=Ye),e&&t.jQuery===w&&(t.jQuery=Xe),w},void 0===e&&(t.jQuery=t.$=w),w})),function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof exports?module.exports=t(require("jquery")):t(jQuery)}((function(t){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(n,i){var o,s=this;s.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:t(n),appendDots:t(n),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,n){return t('<button type="button" />').text(n+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},s.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},t.extend(s,s.initials),s.activeBreakpoint=null,s.animType=null,s.animProp=null,s.breakpoints=[],s.breakpointSettings=[],s.cssTransitions=!1,s.focussed=!1,s.interrupted=!1,s.hidden="hidden",s.paused=!0,s.positionProp=null,s.respondTo=null,s.rowCount=1,s.shouldClick=!0,s.$slider=t(n),s.$slidesCache=null,s.transformType=null,s.transitionType=null,s.visibilityChange="visibilitychange",s.windowWidth=0,s.windowTimer=null,o=t(n).data("slick")||{},s.options=t.extend({},s.defaults,i,o),s.currentSlide=s.options.initialSlide,s.originalSettings=s.options,void 0!==document.mozHidden?(s.hidden="mozHidden",s.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(s.hidden="webkitHidden",s.visibilityChange="webkitvisibilitychange"),s.autoPlay=t.proxy(s.autoPlay,s),s.autoPlayClear=t.proxy(s.autoPlayClear,s),s.autoPlayIterator=t.proxy(s.autoPlayIterator,s),s.changeSlide=t.proxy(s.changeSlide,s),s.clickHandler=t.proxy(s.clickHandler,s),s.selectHandler=t.proxy(s.selectHandler,s),s.setPosition=t.proxy(s.setPosition,s),s.swipeHandler=t.proxy(s.swipeHandler,s),s.dragHandler=t.proxy(s.dragHandler,s),s.keyHandler=t.proxy(s.keyHandler,s),s.instanceUid=e++,s.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,s.registerBreakpoints(),s.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,n,i){var o=this;if("boolean"==typeof n)i=n,n=null;else if(n<0||n>=o.slideCount)return!1;o.unload(),"number"==typeof n?0===n&&0===o.$slides.length?t(e).appendTo(o.$slideTrack):i?t(e).insertBefore(o.$slides.eq(n)):t(e).insertAfter(o.$slides.eq(n)):!0===i?t(e).prependTo(o.$slideTrack):t(e).appendTo(o.$slideTrack),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slides.each((function(e,n){t(n).attr("data-slick-index",e)})),o.$slidesCache=o.$slides,o.reinit()},e.prototype.animateHeight=function(){var t=this;if(1===t.options.slidesToShow&&!0===t.options.adaptiveHeight&&!1===t.options.vertical){var e=t.$slides.eq(t.currentSlide).outerHeight(!0);t.$list.animate({height:e},t.options.speed)}},e.prototype.animateSlide=function(e,n){var i={},o=this;o.animateHeight(),!0===o.options.rtl&&!1===o.options.vertical&&(e=-e),!1===o.transformsEnabled?!1===o.options.vertical?o.$slideTrack.animate({left:e},o.options.speed,o.options.easing,n):o.$slideTrack.animate({top:e},o.options.speed,o.options.easing,n):!1===o.cssTransitions?(!0===o.options.rtl&&(o.currentLeft=-o.currentLeft),t({animStart:o.currentLeft}).animate({animStart:e},{duration:o.options.speed,easing:o.options.easing,step:function(t){t=Math.ceil(t),!1===o.options.vertical?(i[o.animType]="translate("+t+"px, 0px)",o.$slideTrack.css(i)):(i[o.animType]="translate(0px,"+t+"px)",o.$slideTrack.css(i))},complete:function(){n&&n.call()}})):(o.applyTransition(),e=Math.ceil(e),!1===o.options.vertical?i[o.animType]="translate3d("+e+"px, 0px, 0px)":i[o.animType]="translate3d(0px,"+e+"px, 0px)",o.$slideTrack.css(i),n&&setTimeout((function(){o.disableTransition(),n.call()}),o.options.speed))},e.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=t(e).not(this.$slider)),e},e.prototype.asNavFor=function(e){var n=this.getNavTarget();null!==n&&"object"==typeof n&&n.each((function(){var n=t(this).slick("getSlick");n.unslicked||n.slideHandler(e,!0)}))},e.prototype.applyTransition=function(t){var e=this,n={};!1===e.options.fade?n[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:n[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(n):e.$slides.eq(t).css(n)},e.prototype.autoPlay=function(){var t=this;t.autoPlayClear(),t.slideCount>t.options.slidesToShow&&(t.autoPlayTimer=setInterval(t.autoPlayIterator,t.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var t=this,e=t.currentSlide+t.options.slidesToScroll;t.paused||t.interrupted||t.focussed||(!1===t.options.infinite&&(1===t.direction&&t.currentSlide+1===t.slideCount-1?t.direction=0:0===t.direction&&(e=t.currentSlide-t.options.slidesToScroll,t.currentSlide-1==0&&(t.direction=1))),t.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=t(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=t(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,n,i=this;if(!0===i.options.dots){for(i.$slider.addClass("slick-dotted"),n=t("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)n.append(t("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=n.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each((function(e,n){t(n).attr("data-slick-index",e).data("originalStyling",t(n).attr("style")||"")})),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?t('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),t("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var t,e,n,i,o,s,r,a=this;if(i=document.createDocumentFragment(),s=a.$slider.children(),a.options.rows>1){for(r=a.options.slidesPerRow*a.options.rows,o=Math.ceil(s.length/r),t=0;t<o;t++){var l=document.createElement("div");for(e=0;e<a.options.rows;e++){var c=document.createElement("div");for(n=0;n<a.options.slidesPerRow;n++){var u=t*r+(e*a.options.slidesPerRow+n);s.get(u)&&c.appendChild(s.get(u))}l.appendChild(c)}i.appendChild(l)}a.$slider.empty().append(i),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,n){var i,o,s,r=this,a=!1,l=r.$slider.width(),c=window.innerWidth||t(window).width();if("window"===r.respondTo?s=c:"slider"===r.respondTo?s=l:"min"===r.respondTo&&(s=Math.min(c,l)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){for(i in o=null,r.breakpoints)r.breakpoints.hasOwnProperty(i)&&(!1===r.originalSettings.mobileFirst?s<r.breakpoints[i]&&(o=r.breakpoints[i]):s>r.breakpoints[i]&&(o=r.breakpoints[i]));null!==o?null!==r.activeBreakpoint?(o!==r.activeBreakpoint||n)&&(r.activeBreakpoint=o,"unslick"===r.breakpointSettings[o]?r.unslick(o):(r.options=t.extend({},r.originalSettings,r.breakpointSettings[o]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),a=o):(r.activeBreakpoint=o,"unslick"===r.breakpointSettings[o]?r.unslick(o):(r.options=t.extend({},r.originalSettings,r.breakpointSettings[o]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),a=o):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),a=o),e||!1===a||r.$slider.trigger("breakpoint",[r,a])}},e.prototype.changeSlide=function(e,n){var i,o,s=this,r=t(e.currentTarget);switch(r.is("a")&&e.preventDefault(),r.is("li")||(r=r.closest("li")),i=s.slideCount%s.options.slidesToScroll!=0?0:(s.slideCount-s.currentSlide)%s.options.slidesToScroll,e.data.message){case"previous":o=0===i?s.options.slidesToScroll:s.options.slidesToShow-i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide-o,!1,n);break;case"next":o=0===i?s.options.slidesToScroll:i,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide+o,!1,n);break;case"index":var a=0===e.data.index?0:e.data.index||r.index()*s.options.slidesToScroll;s.slideHandler(s.checkNavigable(a),!1,n),r.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(t){var e,n;if(n=0,t>(e=this.getNavigableIndexes())[e.length-1])t=e[e.length-1];else for(var i in e){if(t<e[i]){t=n;break}n=e[i]}return t},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(t("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",t.proxy(e.interrupt,e,!0)).off("mouseleave.slick",t.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),t(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&t(e.$slideTrack).children().off("click.slick",e.selectHandler),t(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),t(window).off("resize.slick.slick-"+e.instanceUid,e.resize),t("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),t(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",t.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",t.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var t,e=this;e.options.rows>1&&((t=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(t))},e.prototype.clickHandler=function(t){!1===this.shouldClick&&(t.stopImmediatePropagation(),t.stopPropagation(),t.preventDefault())},e.prototype.destroy=function(e){var n=this;n.autoPlayClear(),n.touchObject={},n.cleanUpEvents(),t(".slick-cloned",n.$slider).detach(),n.$dots&&n.$dots.remove(),n.$prevArrow&&n.$prevArrow.length&&(n.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),n.htmlExpr.test(n.options.prevArrow)&&n.$prevArrow.remove()),n.$nextArrow&&n.$nextArrow.length&&(n.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),n.htmlExpr.test(n.options.nextArrow)&&n.$nextArrow.remove()),n.$slides&&(n.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each((function(){t(this).attr("style",t(this).data("originalStyling"))})),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.detach(),n.$list.detach(),n.$slider.append(n.$slides)),n.cleanUpRows(),n.$slider.removeClass("slick-slider"),n.$slider.removeClass("slick-initialized"),n.$slider.removeClass("slick-dotted"),n.unslicked=!0,e||n.$slider.trigger("destroy",[n])},e.prototype.disableTransition=function(t){var e=this,n={};n[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(n):e.$slides.eq(t).css(n)},e.prototype.fadeSlide=function(t,e){var n=this;!1===n.cssTransitions?(n.$slides.eq(t).css({zIndex:n.options.zIndex}),n.$slides.eq(t).animate({opacity:1},n.options.speed,n.options.easing,e)):(n.applyTransition(t),n.$slides.eq(t).css({opacity:1,zIndex:n.options.zIndex}),e&&setTimeout((function(){n.disableTransition(t),e.call()}),n.options.speed))},e.prototype.fadeSlideOut=function(t){var e=this;!1===e.cssTransitions?e.$slides.eq(t).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(t),e.$slides.eq(t).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(t){var e=this;null!==t&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(t).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",(function(n){n.stopImmediatePropagation();var i=t(this);setTimeout((function(){e.options.pauseOnFocus&&(e.focussed=i.is(":focus"),e.autoPlay())}),0)}))},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var t=this,e=0,n=0,i=0;if(!0===t.options.infinite)if(t.slideCount<=t.options.slidesToShow)++i;else for(;e<t.slideCount;)++i,e=n+t.options.slidesToScroll,n+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;else if(!0===t.options.centerMode)i=t.slideCount;else if(t.options.asNavFor)for(;e<t.slideCount;)++i,e=n+t.options.slidesToScroll,n+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;else i=1+Math.ceil((t.slideCount-t.options.slidesToShow)/t.options.slidesToScroll);return i-1},e.prototype.getLeft=function(t){var e,n,i,o,s=this,r=0;return s.slideOffset=0,n=s.$slides.first().outerHeight(!0),!0===s.options.infinite?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,o=-1,!0===s.options.vertical&&!0===s.options.centerMode&&(2===s.options.slidesToShow?o=-1.5:1===s.options.slidesToShow&&(o=-2)),r=n*s.options.slidesToShow*o),s.slideCount%s.options.slidesToScroll!=0&&t+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(t>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(t-s.slideCount))*s.slideWidth*-1,r=(s.options.slidesToShow-(t-s.slideCount))*n*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,r=s.slideCount%s.options.slidesToScroll*n*-1))):t+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(t+s.options.slidesToShow-s.slideCount)*s.slideWidth,r=(t+s.options.slidesToShow-s.slideCount)*n),s.slideCount<=s.options.slidesToShow&&(s.slideOffset=0,r=0),!0===s.options.centerMode&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:!0===s.options.centerMode&&!0===s.options.infinite?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:!0===s.options.centerMode&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),e=!1===s.options.vertical?t*s.slideWidth*-1+s.slideOffset:t*n*-1+r,!0===s.options.variableWidth&&(i=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(t):s.$slideTrack.children(".slick-slide").eq(t+s.options.slidesToShow),e=!0===s.options.rtl?i[0]?-1*(s.$slideTrack.width()-i[0].offsetLeft-i.width()):0:i[0]?-1*i[0].offsetLeft:0,!0===s.options.centerMode&&(i=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(t):s.$slideTrack.children(".slick-slide").eq(t+s.options.slidesToShow+1),e=!0===s.options.rtl?i[0]?-1*(s.$slideTrack.width()-i[0].offsetLeft-i.width()):0:i[0]?-1*i[0].offsetLeft:0,e+=(s.$list.width()-i.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(t){return this.options[t]},e.prototype.getNavigableIndexes=function(){var t,e=this,n=0,i=0,o=[];for(!1===e.options.infinite?t=e.slideCount:(n=-1*e.options.slidesToScroll,i=-1*e.options.slidesToScroll,t=2*e.slideCount);n<t;)o.push(n),n=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return o},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,n,i=this;return n=!0===i.options.centerMode?i.slideWidth*Math.floor(i.options.slidesToShow/2):0,!0===i.options.swipeToSlide?(i.$slideTrack.find(".slick-slide").each((function(o,s){if(s.offsetLeft-n+t(s).outerWidth()/2>-1*i.swipeLeft)return e=s,!1})),Math.abs(t(e).attr("data-slick-index")-i.currentSlide)||1):i.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(t,e){this.changeSlide({data:{message:"index",index:parseInt(t)}},e)},e.prototype.init=function(e){var n=this;t(n.$slider).hasClass("slick-initialized")||(t(n.$slider).addClass("slick-initialized"),n.buildRows(),n.buildOut(),n.setProps(),n.startLoad(),n.loadSlider(),n.initializeEvents(),n.updateArrows(),n.updateDots(),n.checkResponsive(!0),n.focusHandler()),e&&n.$slider.trigger("init",[n]),!0===n.options.accessibility&&n.initADA(),n.options.autoplay&&(n.paused=!1,n.autoPlay())},e.prototype.initADA=function(){var e=this,n=Math.ceil(e.slideCount/e.options.slidesToShow),i=e.getNavigableIndexes().filter((function(t){return t>=0&&t<e.slideCount}));e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each((function(n){var o=i.indexOf(n);t(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+n,tabindex:-1}),-1!==o&&t(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+o})})),e.$dots.attr("role","tablist").find("li").each((function(o){var s=i[o];t(this).attr({role:"presentation"}),t(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+o,"aria-controls":"slick-slide"+e.instanceUid+s,"aria-label":o+1+" of "+n,"aria-selected":null,tabindex:"-1"})})).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var o=e.currentSlide,s=o+e.options.slidesToShow;o<s;o++)e.$slides.eq(o).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},t.changeSlide),t.$nextArrow.off("click.slick").on("click.slick",{message:"next"},t.changeSlide),!0===t.options.accessibility&&(t.$prevArrow.on("keydown.slick",t.keyHandler),t.$nextArrow.on("keydown.slick",t.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(t("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&t("li",e.$dots).on("mouseenter.slick",t.proxy(e.interrupt,e,!0)).on("mouseleave.slick",t.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",t.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",t.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),t(document).on(e.visibilityChange,t.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&t(e.$slideTrack).children().on("click.slick",e.selectHandler),t(window).on("orientationchange.slick.slick-"+e.instanceUid,t.proxy(e.orientationChange,e)),t(window).on("resize.slick.slick-"+e.instanceUid,t.proxy(e.resize,e)),t("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),t(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),t(e.setPosition)},e.prototype.initUI=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.show(),t.$nextArrow.show()),!0===t.options.dots&&t.slideCount>t.options.slidesToShow&&t.$dots.show()},e.prototype.keyHandler=function(t){var e=this;t.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===t.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===t.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){t("img[data-lazy]",e).each((function(){var e=t(this),n=t(this).attr("data-lazy"),i=t(this).attr("data-srcset"),o=t(this).attr("data-sizes")||s.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,(function(){i&&(e.attr("srcset",i),o&&e.attr("sizes",o)),e.attr("src",n).animate({opacity:1},200,(function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")})),s.$slider.trigger("lazyLoaded",[s,e,n])}))},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),s.$slider.trigger("lazyLoadError",[s,e,n])},r.src=n}))}var n,i,o,s=this;if(!0===s.options.centerMode?!0===s.options.infinite?o=(i=s.currentSlide+(s.options.slidesToShow/2+1))+s.options.slidesToShow+2:(i=Math.max(0,s.currentSlide-(s.options.slidesToShow/2+1)),o=s.options.slidesToShow/2+1+2+s.currentSlide):(i=s.options.infinite?s.options.slidesToShow+s.currentSlide:s.currentSlide,o=Math.ceil(i+s.options.slidesToShow),!0===s.options.fade&&(i>0&&i--,o<=s.slideCount&&o++)),n=s.$slider.find(".slick-slide").slice(i,o),"anticipated"===s.options.lazyLoad)for(var r=i-1,a=o,l=s.$slider.find(".slick-slide"),c=0;c<s.options.slidesToScroll;c++)r<0&&(r=s.slideCount-1),n=(n=n.add(l.eq(r))).add(l.eq(a)),r--,a++;e(n),s.slideCount<=s.options.slidesToShow?e(s.$slider.find(".slick-slide")):s.currentSlide>=s.slideCount-s.options.slidesToShow?e(s.$slider.find(".slick-cloned").slice(0,s.options.slidesToShow)):0===s.currentSlide&&e(s.$slider.find(".slick-cloned").slice(-1*s.options.slidesToShow))},e.prototype.loadSlider=function(){var t=this;t.setPosition(),t.$slideTrack.css({opacity:1}),t.$slider.removeClass("slick-loading"),t.initUI(),"progressive"===t.options.lazyLoad&&t.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var t=this;t.autoPlay(),t.options.autoplay=!0,t.paused=!1,t.focussed=!1,t.interrupted=!1},e.prototype.postSlide=function(e){var n=this;n.unslicked||(n.$slider.trigger("afterChange",[n,e]),n.animating=!1,n.slideCount>n.options.slidesToShow&&n.setPosition(),n.swipeLeft=null,n.options.autoplay&&n.autoPlay(),!0===n.options.accessibility&&(n.initADA(),n.options.focusOnChange&&t(n.$slides.get(n.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(t){t.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var n,i,o,s,r,a=this,l=t("img[data-lazy]",a.$slider);l.length?(n=l.first(),i=n.attr("data-lazy"),o=n.attr("data-srcset"),s=n.attr("data-sizes")||a.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){o&&(n.attr("srcset",o),s&&n.attr("sizes",s)),n.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===a.options.adaptiveHeight&&a.setPosition(),a.$slider.trigger("lazyLoaded",[a,n,i]),a.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout((function(){a.progressiveLazyLoad(e+1)}),500):(n.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),a.$slider.trigger("lazyLoadError",[a,n,i]),a.progressiveLazyLoad())},r.src=i):a.$slider.trigger("allImagesLoaded",[a])},e.prototype.refresh=function(e){var n,i,o=this;i=o.slideCount-o.options.slidesToShow,!o.options.infinite&&o.currentSlide>i&&(o.currentSlide=i),o.slideCount<=o.options.slidesToShow&&(o.currentSlide=0),n=o.currentSlide,o.destroy(!0),t.extend(o,o.initials,{currentSlide:n}),o.init(),e||o.changeSlide({data:{message:"index",index:n}},!1)},e.prototype.registerBreakpoints=function(){var e,n,i,o=this,s=o.options.responsive||null;if("array"===t.type(s)&&s.length){for(e in o.respondTo=o.options.respondTo||"window",s)if(i=o.breakpoints.length-1,s.hasOwnProperty(e)){for(n=s[e].breakpoint;i>=0;)o.breakpoints[i]&&o.breakpoints[i]===n&&o.breakpoints.splice(i,1),i--;o.breakpoints.push(n),o.breakpointSettings[n]=s[e].settings}o.breakpoints.sort((function(t,e){return o.options.mobileFirst?t-e:e-t}))}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&t(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;t(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout((function(){e.windowWidth=t(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()}),50))},e.prototype.removeSlide=e.prototype.slickRemove=function(t,e,n){var i=this;if(t="boolean"==typeof t?!0===(e=t)?0:i.slideCount-1:!0===e?--t:t,i.slideCount<1||t<0||t>i.slideCount-1)return!1;i.unload(),!0===n?i.$slideTrack.children().remove():i.$slideTrack.children(this.options.slide).eq(t).remove(),i.$slides=i.$slideTrack.children(this.options.slide),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.append(i.$slides),i.$slidesCache=i.$slides,i.reinit()},e.prototype.setCSS=function(t){var e,n,i=this,o={};!0===i.options.rtl&&(t=-t),e="left"==i.positionProp?Math.ceil(t)+"px":"0px",n="top"==i.positionProp?Math.ceil(t)+"px":"0px",o[i.positionProp]=t,!1===i.transformsEnabled?i.$slideTrack.css(o):(o={},!1===i.cssTransitions?(o[i.animType]="translate("+e+", "+n+")",i.$slideTrack.css(o)):(o[i.animType]="translate3d("+e+", "+n+", 0px)",i.$slideTrack.css(o)))},e.prototype.setDimensions=function(){var t=this;!1===t.options.vertical?!0===t.options.centerMode&&t.$list.css({padding:"0px "+t.options.centerPadding}):(t.$list.height(t.$slides.first().outerHeight(!0)*t.options.slidesToShow),!0===t.options.centerMode&&t.$list.css({padding:t.options.centerPadding+" 0px"})),t.listWidth=t.$list.width(),t.listHeight=t.$list.height(),!1===t.options.vertical&&!1===t.options.variableWidth?(t.slideWidth=Math.ceil(t.listWidth/t.options.slidesToShow),t.$slideTrack.width(Math.ceil(t.slideWidth*t.$slideTrack.children(".slick-slide").length))):!0===t.options.variableWidth?t.$slideTrack.width(5e3*t.slideCount):(t.slideWidth=Math.ceil(t.listWidth),t.$slideTrack.height(Math.ceil(t.$slides.first().outerHeight(!0)*t.$slideTrack.children(".slick-slide").length)));var e=t.$slides.first().outerWidth(!0)-t.$slides.first().width();!1===t.options.variableWidth&&t.$slideTrack.children(".slick-slide").width(t.slideWidth-e)},e.prototype.setFade=function(){var e,n=this;n.$slides.each((function(i,o){e=n.slideWidth*i*-1,!0===n.options.rtl?t(o).css({position:"relative",right:e,top:0,zIndex:n.options.zIndex-2,opacity:0}):t(o).css({position:"relative",left:e,top:0,zIndex:n.options.zIndex-2,opacity:0})})),n.$slides.eq(n.currentSlide).css({zIndex:n.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var t=this;if(1===t.options.slidesToShow&&!0===t.options.adaptiveHeight&&!1===t.options.vertical){var e=t.$slides.eq(t.currentSlide).outerHeight(!0);t.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,n,i,o,s,r=this,a=!1;if("object"===t.type(arguments[0])?(i=arguments[0],a=arguments[1],s="multiple"):"string"===t.type(arguments[0])&&(i=arguments[0],o=arguments[1],a=arguments[2],"responsive"===arguments[0]&&"array"===t.type(arguments[1])?s="responsive":void 0!==arguments[1]&&(s="single")),"single"===s)r.options[i]=o;else if("multiple"===s)t.each(i,(function(t,e){r.options[t]=e}));else if("responsive"===s)for(n in o)if("array"!==t.type(r.options.responsive))r.options.responsive=[o[n]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===o[n].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(o[n])}a&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var t=this;t.setDimensions(),t.setHeight(),!1===t.options.fade?t.setCSS(t.getLeft(t.currentSlide)):t.setFade(),t.$slider.trigger("setPosition",[t])},e.prototype.setProps=function(){var t=this,e=document.body.style;t.positionProp=!0===t.options.vertical?"top":"left","top"===t.positionProp?t.$slider.addClass("slick-vertical"):t.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===t.options.useCSS&&(t.cssTransitions=!0),t.options.fade&&("number"==typeof t.options.zIndex?t.options.zIndex<3&&(t.options.zIndex=3):t.options.zIndex=t.defaults.zIndex),void 0!==e.OTransform&&(t.animType="OTransform",t.transformType="-o-transform",t.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(t.animType=!1)),void 0!==e.MozTransform&&(t.animType="MozTransform",t.transformType="-moz-transform",t.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(t.animType=!1)),void 0!==e.webkitTransform&&(t.animType="webkitTransform",t.transformType="-webkit-transform",t.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(t.animType=!1)),void 0!==e.msTransform&&(t.animType="msTransform",t.transformType="-ms-transform",t.transitionType="msTransition",void 0===e.msTransform&&(t.animType=!1)),void 0!==e.transform&&!1!==t.animType&&(t.animType="transform",t.transformType="transform",t.transitionType="transition"),t.transformsEnabled=t.options.useTransform&&null!==t.animType&&!1!==t.animType},e.prototype.setSlideClasses=function(t){var e,n,i,o,s=this;if(n=s.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),s.$slides.eq(t).addClass("slick-current"),!0===s.options.centerMode){var r=s.options.slidesToShow%2==0?1:0;e=Math.floor(s.options.slidesToShow/2),!0===s.options.infinite&&(t>=e&&t<=s.slideCount-1-e?s.$slides.slice(t-e+r,t+e+1).addClass("slick-active").attr("aria-hidden","false"):(i=s.options.slidesToShow+t,n.slice(i-e+1+r,i+e+2).addClass("slick-active").attr("aria-hidden","false")),0===t?n.eq(n.length-1-s.options.slidesToShow).addClass("slick-center"):t===s.slideCount-1&&n.eq(s.options.slidesToShow).addClass("slick-center")),s.$slides.eq(t).addClass("slick-center")}else t>=0&&t<=s.slideCount-s.options.slidesToShow?s.$slides.slice(t,t+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):n.length<=s.options.slidesToShow?n.addClass("slick-active").attr("aria-hidden","false"):(o=s.slideCount%s.options.slidesToShow,i=!0===s.options.infinite?s.options.slidesToShow+t:t,s.options.slidesToShow==s.options.slidesToScroll&&s.slideCount-t<s.options.slidesToShow?n.slice(i-(s.options.slidesToShow-o),i+o).addClass("slick-active").attr("aria-hidden","false"):n.slice(i,i+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==s.options.lazyLoad&&"anticipated"!==s.options.lazyLoad||s.lazyLoad()},e.prototype.setupInfinite=function(){var e,n,i,o=this;if(!0===o.options.fade&&(o.options.centerMode=!1),!0===o.options.infinite&&!1===o.options.fade&&(n=null,o.slideCount>o.options.slidesToShow)){for(i=!0===o.options.centerMode?o.options.slidesToShow+1:o.options.slidesToShow,e=o.slideCount;e>o.slideCount-i;e-=1)n=e-1,t(o.$slides[n]).clone(!0).attr("id","").attr("data-slick-index",n-o.slideCount).prependTo(o.$slideTrack).addClass("slick-cloned");for(e=0;e<i+o.slideCount;e+=1)n=e,t(o.$slides[n]).clone(!0).attr("id","").attr("data-slick-index",n+o.slideCount).appendTo(o.$slideTrack).addClass("slick-cloned");o.$slideTrack.find(".slick-cloned").find("[id]").each((function(){t(this).attr("id","")}))}},e.prototype.interrupt=function(t){t||this.autoPlay(),this.interrupted=t},e.prototype.selectHandler=function(e){var n=this,i=t(e.target).is(".slick-slide")?t(e.target):t(e.target).parents(".slick-slide"),o=parseInt(i.attr("data-slick-index"));o||(o=0),n.slideCount<=n.options.slidesToShow?n.slideHandler(o,!1,!0):n.slideHandler(o)},e.prototype.slideHandler=function(t,e,n){var i,o,s,r,a,l=null,c=this;if(e=e||!1,!(!0===c.animating&&!0===c.options.waitForAnimate||!0===c.options.fade&&c.currentSlide===t))if(!1===e&&c.asNavFor(t),i=t,l=c.getLeft(i),r=c.getLeft(c.currentSlide),c.currentLeft=null===c.swipeLeft?r:c.swipeLeft,!1===c.options.infinite&&!1===c.options.centerMode&&(t<0||t>c.getDotCount()*c.options.slidesToScroll))!1===c.options.fade&&(i=c.currentSlide,!0!==n?c.animateSlide(r,(function(){c.postSlide(i)})):c.postSlide(i));else if(!1===c.options.infinite&&!0===c.options.centerMode&&(t<0||t>c.slideCount-c.options.slidesToScroll))!1===c.options.fade&&(i=c.currentSlide,!0!==n?c.animateSlide(r,(function(){c.postSlide(i)})):c.postSlide(i));else{if(c.options.autoplay&&clearInterval(c.autoPlayTimer),o=i<0?c.slideCount%c.options.slidesToScroll!=0?c.slideCount-c.slideCount%c.options.slidesToScroll:c.slideCount+i:i>=c.slideCount?c.slideCount%c.options.slidesToScroll!=0?0:i-c.slideCount:i,c.animating=!0,c.$slider.trigger("beforeChange",[c,c.currentSlide,o]),s=c.currentSlide,c.currentSlide=o,c.setSlideClasses(c.currentSlide),c.options.asNavFor&&(a=(a=c.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(c.currentSlide),c.updateDots(),c.updateArrows(),!0===c.options.fade)return!0!==n?(c.fadeSlideOut(s),c.fadeSlide(o,(function(){c.postSlide(o)}))):c.postSlide(o),void c.animateHeight();!0!==n?c.animateSlide(l,(function(){c.postSlide(o)})):c.postSlide(o)}},e.prototype.startLoad=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.hide(),t.$nextArrow.hide()),!0===t.options.dots&&t.slideCount>t.options.slidesToShow&&t.$dots.hide(),t.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var t,e,n,i,o=this;return t=o.touchObject.startX-o.touchObject.curX,e=o.touchObject.startY-o.touchObject.curY,n=Math.atan2(e,t),(i=Math.round(180*n/Math.PI))<0&&(i=360-Math.abs(i)),i<=45&&i>=0||i<=360&&i>=315?!1===o.options.rtl?"left":"right":i>=135&&i<=225?!1===o.options.rtl?"right":"left":!0===o.options.verticalSwiping?i>=35&&i<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(t){var e,n,i=this;if(i.dragging=!1,i.swiping=!1,i.scrolling)return i.scrolling=!1,!1;if(i.interrupted=!1,i.shouldClick=!(i.touchObject.swipeLength>10),void 0===i.touchObject.curX)return!1;if(!0===i.touchObject.edgeHit&&i.$slider.trigger("edge",[i,i.swipeDirection()]),i.touchObject.swipeLength>=i.touchObject.minSwipe){switch(n=i.swipeDirection()){case"left":case"down":e=i.options.swipeToSlide?i.checkNavigable(i.currentSlide+i.getSlideCount()):i.currentSlide+i.getSlideCount(),i.currentDirection=0;break;case"right":case"up":e=i.options.swipeToSlide?i.checkNavigable(i.currentSlide-i.getSlideCount()):i.currentSlide-i.getSlideCount(),i.currentDirection=1}"vertical"!=n&&(i.slideHandler(e),i.touchObject={},i.$slider.trigger("swipe",[i,n]))}else i.touchObject.startX!==i.touchObject.curX&&(i.slideHandler(i.currentSlide),i.touchObject={})},e.prototype.swipeHandler=function(t){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==t.type.indexOf("mouse")))switch(e.touchObject.fingerCount=t.originalEvent&&void 0!==t.originalEvent.touches?t.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),t.data.action){case"start":e.swipeStart(t);break;case"move":e.swipeMove(t);break;case"end":e.swipeEnd(t)}},e.prototype.swipeMove=function(t){var e,n,i,o,s,r,a=this;return s=void 0!==t.originalEvent?t.originalEvent.touches:null,!(!a.dragging||a.scrolling||s&&1!==s.length)&&(e=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==s?s[0].pageX:t.clientX,a.touchObject.curY=void 0!==s?s[0].pageY:t.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&r>4?(a.scrolling=!0,!1):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),n=a.swipeDirection(),void 0!==t.originalEvent&&a.touchObject.swipeLength>4&&(a.swiping=!0,t.preventDefault()),o=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(o=a.touchObject.curY>a.touchObject.startY?1:-1),i=a.touchObject.swipeLength,a.touchObject.edgeHit=!1,!1===a.options.infinite&&(0===a.currentSlide&&"right"===n||a.currentSlide>=a.getDotCount()&&"left"===n)&&(i=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=e+i*o:a.swipeLeft=e+i*(a.$list.height()/a.listWidth)*o,!0===a.options.verticalSwiping&&(a.swipeLeft=e+i*o),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},e.prototype.swipeStart=function(t){var e,n=this;if(n.interrupted=!0,1!==n.touchObject.fingerCount||n.slideCount<=n.options.slidesToShow)return n.touchObject={},!1;void 0!==t.originalEvent&&void 0!==t.originalEvent.touches&&(e=t.originalEvent.touches[0]),n.touchObject.startX=n.touchObject.curX=void 0!==e?e.pageX:t.clientX,n.touchObject.startY=n.touchObject.curY=void 0!==e?e.pageY:t.clientY,n.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var t=this;null!==t.$slidesCache&&(t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.appendTo(t.$slideTrack),t.reinit())},e.prototype.unload=function(){var e=this;t(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(t){var e=this;e.$slider.trigger("unslick",[e,t]),e.destroy()},e.prototype.updateArrows=function(){var t=this;Math.floor(t.options.slidesToShow/2),!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&!t.options.infinite&&(t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===t.currentSlide?(t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):(t.currentSlide>=t.slideCount-t.options.slidesToShow&&!1===t.options.centerMode||t.currentSlide>=t.slideCount-1&&!0===t.options.centerMode)&&(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var t=this;null!==t.$dots&&(t.$dots.find("li").removeClass("slick-active").end(),t.$dots.find("li").eq(Math.floor(t.currentSlide/t.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var t=this;t.options.autoplay&&(document[t.hidden]?t.interrupted=!0:t.interrupted=!1)},t.fn.slick=function(){var t,n,i=this,o=arguments[0],s=Array.prototype.slice.call(arguments,1),r=i.length;for(t=0;t<r;t++)if("object"==typeof o||void 0===o?i[t].slick=new e(i[t],o):n=i[t].slick[o].apply(i[t].slick,s),void 0!==n)return n;return i}})),function(t){"use strict";var e=null,n=null;!function(){var e=["webkit","moz","o","ms"],n=t.document.createElement("div"),i=-1;for(i=0;i<e.length&&!t.requestAnimationFrame;i++)t.requestAnimationFrame=t[e[i]+"RequestAnimationFrame"];void 0===n.nextElementSibling&&Object.defineProperty(t.Element.prototype,"nextElementSibling",{get:function(){for(var t=this.nextSibling;t;){if(1===t.nodeType)return t;t=t.nextSibling}return null}}),function(t){t.matches=t.matches||t.machesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector||function(t){return Array.prototype.indexOf.call(this.parentElement.querySelectorAll(t),this)>-1}}(t.Element.prototype),Object.keys||(Object.keys=function(){var t,e,n,i=Object.prototype.hasOwnProperty;return t=!{toString:null}.propertyIsEnumerable("toString"),n=(e=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(o){var s=[],r="",a=-1;if("object"!=typeof o&&("function"!=typeof o||null===o))throw new TypeError("Object.keys called on non-object");for(r in o)i.call(o,r)&&s.push(r);if(t)for(a=0;a<n;a++)i.call(o,e[a])&&s.push(e[a]);return s}}()),Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),"function"!=typeof Object.create&&(Object.create=function(t){var e=function(){};return function(t,n){if(t!==Object(t)&&null!==t)throw TypeError("Argument must be an object, or null");e.prototype=t||{};var i=new e;return e.prototype=null,void 0!==n&&Object.defineProperties(i,n),null===t&&(i.__proto__=null),i}}()),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),Array.prototype.indexOf||(Array.prototype.indexOf=function(t){var e,n,i,o;if(null===this)throw new TypeError;if(0===(o=(i=Object(this)).length>>>0))return-1;if(e=0,arguments.length>1&&((e=Number(arguments[1]))!=e?e=0:0!==e&&e!==1/0&&e!==-1/0&&(e=(e>0||-1)*Math.floor(Math.abs(e)))),e>=o)return-1;for(n=e>=0?e:Math.max(o-Math.abs(e),0);n<o;n++)if(n in i&&i[n]===t)return n;return-1}),Function.prototype.bind||(Function.prototype.bind=function(t){var e,n,i,o;if("function"!=typeof this)throw new TypeError;return e=Array.prototype.slice.call(arguments,1),n=this,i=function(){},o=function(){return n.apply(this instanceof i?this:t,e.concat(Array.prototype.slice.call(arguments)))},this.prototype&&(i.prototype=this.prototype),o.prototype=new i,o}),t.Element.prototype.dispatchEvent||(t.Element.prototype.dispatchEvent=function(t){try{return this.fireEvent("on"+t.type,t)}catch(t){}})}(),(e=function(i,o,s){var r=null,a=!1,l=null,c=null,u=null,d=[],p="",f=[],h=-1;if(u=s||t.document,(a=arguments[3])&&(a="boolean"==typeof a),"string"==typeof i)f=u.querySelectorAll(i);else if(i&&"object"==typeof i&&n.isElement(i,u))f=[i];else{if(!i||"object"!=typeof i||!i.length)throw new Error(e.messages.errorFactoryInvalidContainer());f=i}if(f.length<1)throw new Error(e.messages.errorFactoryContainerNotFound());for(h=0;(r=f[h])&&(!(h>0)||a);h++)r.id?p=r.id:(p="MixItUp"+n.randomHex(),r.id=p),e.instances[p]instanceof e.Mixer?(l=e.instances[p],(!o||o&&o.debug&&!1!==o.debug.showWarnings)&&console.warn(e.messages.warningFactoryPreexistingInstance())):((l=new e.Mixer).attach(r,u,p,o),e.instances[p]=l),c=new e.Facade(l),o&&o.debug&&o.debug.enable?d.push(l):d.push(c);return a?new e.Collection(d):d[0]}).use=function(t){e.Base.prototype.callActions.call(e,"beforeUse",arguments),"function"==typeof t&&"mixitup-extension"===t.TYPE?void 0===e.extensions[t.NAME]&&(t(e),e.extensions[t.NAME]=t):t.fn&&t.fn.jquery&&(e.libraries.$=t),e.Base.prototype.callActions.call(e,"afterUse",arguments)},e.instances={},e.extensions={},e.libraries={},n={hasClass:function(t,e){return!!t.className.match(new RegExp("(\\s|^)"+e+"(\\s|$)"))},addClass:function(t,e){this.hasClass(t,e)||(t.className+=t.className?" "+e:e)},removeClass:function(t,e){if(this.hasClass(t,e)){var n=new RegExp("(\\s|^)"+e+"(\\s|$)");t.className=t.className.replace(n," ").trim()}},extend:function(t,e,n,i){var o=[],s="",r=-1;n=n||!1,i=i||!1;try{if(Array.isArray(e))for(r=0;r<e.length;r++)o.push(r);else e&&(o=Object.keys(e));for(r=0;r<o.length;r++)s=o[r],!n||"object"!=typeof e[s]||this.isElement(e[s])?t[s]=e[s]:Array.isArray(e[s])?(t[s]||(t[s]=[]),this.extend(t[s],e[s],n,i)):(t[s]||(t[s]={}),this.extend(t[s],e[s],n,i))}catch(e){if(!i)throw e;this.handleExtendError(e,t)}return t},handleExtendError:function(t,n){var i=null,o="",s="",r="",a="",l="",c=-1,u=-1;if(t instanceof TypeError&&(i=/property "?(\w*)"?[,:] object/i.exec(t.message))){for(l in o=i[1],n){for(u=0;u<o.length&&o.charAt(u)===l.charAt(u);)u++;u>c&&(c=u,a=l)}throw c>1&&(r=e.messages.errorConfigInvalidPropertySuggestion({probableMatch:a})),s=e.messages.errorConfigInvalidProperty({erroneous:o,suggestion:r}),new TypeError(s)}throw t},template:function(t){for(var e=/\${([\w]*)}/g,n={},i=null;i=e.exec(t);)n[i[1]]=new RegExp("\\${"+i[1]+"}","g");return function(e){var i="",o=t;for(i in e=e||{},n)o=o.replace(n[i],void 0!==e[i]?e[i]:"");return o}},on:function(e,n,i,o){e&&(e.addEventListener?e.addEventListener(n,i,o):e.attachEvent&&(e["e"+n+i]=i,e[n+i]=function(){e["e"+n+i](t.event)},e.attachEvent("on"+n,e[n+i])))},off:function(t,e,n){t&&(t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent&&(t.detachEvent("on"+e,t[e+n]),t[e+n]=null))},getCustomEvent:function(e,n,i){var o=null;return i=i||t.document,"function"==typeof t.CustomEvent?o=new t.CustomEvent(e,{detail:n,bubbles:!0,cancelable:!0}):"function"==typeof i.createEvent?(o=i.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,n):((o=i.createEventObject()).type=e,o.returnValue=!1,o.cancelBubble=!1,o.detail=n),o},getOriginalEvent:function(t){return t.touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t},index:function(t,e){for(var n=0;null!==(t=t.previousElementSibling);)e&&!t.matches(e)||++n;return n},camelCase:function(t){return t.toLowerCase().replace(/([_-][a-z])/g,(function(t){return t.toUpperCase().replace(/[_-]/,"")}))},pascalCase:function(t){return(t=this.camelCase(t)).charAt(0).toUpperCase()+t.slice(1)},dashCase:function(t){return t.replace(/([A-Z])/g,"-$1").replace(/^-/,"").toLowerCase()},isElement:function(e,n){return n=n||t.document,!!(t.HTMLElement&&e instanceof t.HTMLElement)||!!(n.defaultView&&n.defaultView.HTMLElement&&e instanceof n.defaultView.HTMLElement)||null!==e&&1===e.nodeType&&"string"==typeof e.nodeName},createElement:function(e,n){var i=null,o=null;for(i=(n=n||t.document).createDocumentFragment(),(o=n.createElement("div")).innerHTML=e.trim();o.firstChild;)i.appendChild(o.firstChild);return i},removeWhitespace:function(t){for(var e;t&&"#text"===t.nodeName;)e=t,t=t.previousSibling,e.parentElement&&e.parentElement.removeChild(e)},isEqualArray:function(t,e){var n=t.length;if(n!==e.length)return!1;for(;n--;)if(t[n]!==e[n])return!1;return!0},deepEquals:function(t,e){var n;if("object"==typeof t&&t&&"object"==typeof e&&e){if(Object.keys(t).length!==Object.keys(e).length)return!1;for(n in t)if(!e.hasOwnProperty(n)||!this.deepEquals(t[n],e[n]))return!1}else if(t!==e)return!1;return!0},arrayShuffle:function(t){for(var e=t.slice(),n=e.length,i=n,o=-1,s=[];i--;)o=~~(Math.random()*n),s=e[i],e[i]=e[o],e[o]=s;return e},arrayFromList:function(t){var e,n;try{return Array.prototype.slice.call(t)}catch(i){for(e=[],n=0;n<t.length;n++)e.push(t[n]);return e}},debounce:function(t,e,n){var i;return function(){var o=this,s=arguments,r=n&&!i,a=null;a=function(){i=null,n||t.apply(o,s)},clearTimeout(i),i=setTimeout(a,e),r&&t.apply(o,s)}},position:function(t){for(var e=0,n=0,i=t;t;)e-=t.scrollLeft,n-=t.scrollTop,t===i&&(e+=t.offsetLeft,n+=t.offsetTop,i=t.offsetParent),t=t.parentElement;return{x:e,y:n}},getHypotenuse:function(t,e){var n=t.x-e.x,i=t.y-e.y;return n=n<0?-1*n:n,i=i<0?-1*i:i,Math.sqrt(Math.pow(n,2)+Math.pow(i,2))},getIntersectionRatio:function(t,e){var n,i=t.width*t.height;return n=Math.max(0,Math.min(t.left+t.width,e.left+e.width)-Math.max(t.left,e.left)),Math.max(0,Math.min(t.top+t.height,e.top+e.height)-Math.max(t.top,e.top))*n/i},closestParent:function(e,n,i,o){var s=e.parentNode;if(o=o||t.document,i&&e.matches(n))return e;for(;s&&s!=o.body;){if(s.matches&&s.matches(n))return s;if(!s.parentNode)return null;s=s.parentNode}return null},children:function(e,n,i){var o=[],s="";return i=i||t.doc,e&&(e.id||(s="Temp"+this.randomHexKey(),e.id=s),o=i.querySelectorAll("#"+e.id+" > "+n),s&&e.removeAttribute("id")),o},clean:function(t){var e=[],n=-1;for(n=0;n<t.length;n++)""!==t[n]&&e.push(t[n]);return e},defer:function(n){var i=null,o=null,s=null;return o=new this.Deferred,e.features.has.promises?o.promise=new Promise((function(t,e){o.resolve=t,o.reject=e})):(s=t.jQuery||n.$)&&"function"==typeof s.Deferred?(i=s.Deferred(),o.promise=i.promise(),o.resolve=i.resolve,o.reject=i.reject):t.console&&console.warn(e.messages.warningNoPromiseImplementation()),o},all:function(n,i){var o=null;return e.features.has.promises?Promise.all(n):(o=t.jQuery||i.$)&&"function"==typeof o.when?o.when.apply(o,n).done((function(){return arguments})):(t.console&&console.warn(e.messages.warningNoPromiseImplementation()),[])},getPrefix:function(t,e,i){var o=-1,s="";if(n.dashCase(e)in t.style)return"";for(o=0;s=i[o];o++)if(s+e in t.style)return s.toLowerCase();return"unsupported"},randomHex:function(){return("00000"+(16777216*Math.random()<<0).toString(16)).substr(-6).toUpperCase()},getDocumentState:function(e){return e="object"==typeof e.body?e:t.document,{scrollTop:t.pageYOffset,scrollLeft:t.pageXOffset,docHeight:e.documentElement.scrollHeight,docWidth:e.documentElement.scrollWidth,viewportHeight:e.documentElement.clientHeight,viewportWidth:e.documentElement.clientWidth}},bind:function(t,e){return function(){return e.apply(t,arguments)}},isVisible:function(e){var n=null;return!!e.offsetParent||"fixed"===(n=t.getComputedStyle(e)).position&&"hidden"!==n.visibility&&"0"!==n.opacity},seal:function(t){"function"==typeof Object.seal&&Object.seal(t)},freeze:function(t){"function"==typeof Object.freeze&&Object.freeze(t)},compareVersions:function(t,e){var n=t.split("."),i=e.split("."),o=-1,s=-1,r=-1;for(r=0;r<n.length;r++){if(o=parseInt(n[r].replace(/[^\d.]/g,"")),(s=parseInt(i[r].replace(/[^\d.]/g,"")||0))<o)return!1;if(s>o)return!0}return!0},Deferred:function(){this.promise=null,this.resolve=null,this.reject=null,this.id=n.randomHex()},isEmptyObject:function(t){var e="";if("function"==typeof Object.keys)return 0===Object.keys(t).length;for(e in t)if(t.hasOwnProperty(e))return!1;return!0},getClassname:function(t,e,n){var i="";return(i+=t.block).length&&(i+=t.delineatorElement),i+=t["element"+this.pascalCase(e)],n?(i.length&&(i+=t.delineatorModifier),i+=n):i},getProperty:function(t,e){var n,i=e.split("."),o="",s=0;if(!e)return t;for(n=function(t){return t?t[o]:null};s<i.length;)o=i[s],t=n(t),s++;return void 0!==t?t:null}},e.h=n,e.Base=function(){},e.Base.prototype={constructor:e.Base,callActions:function(t,e){var i=this.constructor.actions[t],o="";if(i&&!n.isEmptyObject(i))for(o in i)i[o].apply(this,e)},callFilters:function(t,e,i){var o=this.constructor.filters[t],s=e,r="";if(!o||n.isEmptyObject(o))return s;for(r in i=i||[],o)(i=n.arrayFromList(i)).unshift(s),s=o[r].apply(this,i);return s}},e.BaseStatic=function(){this.actions={},this.filters={},this.extend=function(t){n.extend(this.prototype,t)},this.registerAction=function(t,e,n){(this.actions[t]=this.actions[t]||{})[e]=n},this.registerFilter=function(t,e,n){(this.filters[t]=this.filters[t]||{})[e]=n}},e.Features=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.boxSizingPrefix="",this.transformPrefix="",this.transitionPrefix="",this.boxSizingPrefix="",this.transformProp="",this.transformRule="",this.transitionProp="",this.perspectiveProp="",this.perspectiveOriginProp="",this.has=new e.Has,this.canary=null,this.BOX_SIZING_PROP="boxSizing",this.TRANSITION_PROP="transition",this.TRANSFORM_PROP="transform",this.PERSPECTIVE_PROP="perspective",this.PERSPECTIVE_ORIGIN_PROP="perspectiveOrigin",this.VENDORS=["Webkit","moz","O","ms"],this.TWEENABLE=["opacity","width","height","marginRight","marginBottom","x","y","scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],this.callActions("afterConstruct")},e.BaseStatic.call(e.Features),e.Features.prototype=Object.create(e.Base.prototype),n.extend(e.Features.prototype,{constructor:e.Features,init:function(){var t=this;t.callActions("beforeInit",arguments),t.canary=document.createElement("div"),t.setPrefixes(),t.runTests(),t.callActions("beforeInit",arguments)},runTests:function(){var e=this;e.callActions("beforeRunTests",arguments),e.has.promises="function"==typeof t.Promise,e.has.transitions="unsupported"!==e.transitionPrefix,e.callActions("afterRunTests",arguments),n.freeze(e.has)},setPrefixes:function(){var t=this;t.callActions("beforeSetPrefixes",arguments),t.transitionPrefix=n.getPrefix(t.canary,"Transition",t.VENDORS),t.transformPrefix=n.getPrefix(t.canary,"Transform",t.VENDORS),t.boxSizingPrefix=n.getPrefix(t.canary,"BoxSizing",t.VENDORS),t.boxSizingProp=t.boxSizingPrefix?t.boxSizingPrefix+n.pascalCase(t.BOX_SIZING_PROP):t.BOX_SIZING_PROP,t.transitionProp=t.transitionPrefix?t.transitionPrefix+n.pascalCase(t.TRANSITION_PROP):t.TRANSITION_PROP,t.transformProp=t.transformPrefix?t.transformPrefix+n.pascalCase(t.TRANSFORM_PROP):t.TRANSFORM_PROP,t.transformRule=t.transformPrefix?"-"+t.transformPrefix+"-"+t.TRANSFORM_PROP:t.TRANSFORM_PROP,t.perspectiveProp=t.transformPrefix?t.transformPrefix+n.pascalCase(t.PERSPECTIVE_PROP):t.PERSPECTIVE_PROP,t.perspectiveOriginProp=t.transformPrefix?t.transformPrefix+n.pascalCase(t.PERSPECTIVE_ORIGIN_PROP):t.PERSPECTIVE_ORIGIN_PROP,t.callActions("afterSetPrefixes",arguments)}}),e.Has=function(){this.transitions=!1,this.promises=!1,n.seal(this)},e.features=new e.Features,e.features.init(),e.ConfigAnimation=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.effects="fade scale",this.effectsIn="",this.effectsOut="",this.duration=600,this.easing="ease",this.applyPerspective=!0,this.perspectiveDistance="3000px",this.perspectiveOrigin="50% 50%",this.queue=!0,this.queueLimit=3,this.animateResizeContainer=!0,this.animateResizeTargets=!1,this.staggerSequence=null,this.reverseOut=!1,this.nudge=!0,this.clampHeight=!0,this.clampWidth=!0,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigAnimation),e.ConfigAnimation.prototype=Object.create(e.Base.prototype),e.ConfigAnimation.prototype.constructor=e.ConfigAnimation,e.ConfigBehavior=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.liveSort=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigBehavior),e.ConfigBehavior.prototype=Object.create(e.Base.prototype),e.ConfigBehavior.prototype.constructor=e.ConfigBehavior,e.ConfigCallbacks=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.onMixStart=null,this.onMixBusy=null,this.onMixEnd=null,this.onMixFail=null,this.onMixClick=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigCallbacks),e.ConfigCallbacks.prototype=Object.create(e.Base.prototype),e.ConfigCallbacks.prototype.constructor=e.ConfigCallbacks,e.ConfigControls=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.live=!1,this.scope="global",this.toggleLogic="or",this.toggleDefault="all",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigControls),e.ConfigControls.prototype=Object.create(e.Base.prototype),e.ConfigControls.prototype.constructor=e.ConfigControls,e.ConfigClassNames=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.block="mixitup",this.elementContainer="container",this.elementFilter="control",this.elementSort="control",this.elementMultimix="control",this.elementToggle="control",this.modifierActive="active",this.modifierDisabled="disabled",this.modifierFailed="failed",this.delineatorElement="-",this.delineatorModifier="-",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigClassNames),e.ConfigClassNames.prototype=Object.create(e.Base.prototype),e.ConfigClassNames.prototype.constructor=e.ConfigClassNames,e.ConfigData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.uidKey="",this.dirtyCheck=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigData),e.ConfigData.prototype=Object.create(e.Base.prototype),e.ConfigData.prototype.constructor=e.ConfigData,e.ConfigDebug=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.enable=!1,this.showWarnings=!0,this.fauxAsync=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigDebug),e.ConfigDebug.prototype=Object.create(e.Base.prototype),e.ConfigDebug.prototype.constructor=e.ConfigDebug,e.ConfigLayout=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.allowNestedTargets=!0,this.containerClassName="",this.siblingBefore=null,this.siblingAfter=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigLayout),e.ConfigLayout.prototype=Object.create(e.Base.prototype),e.ConfigLayout.prototype.constructor=e.ConfigLayout,e.ConfigLoad=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.filter="all",this.sort="default:asc",this.dataset=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigLoad),e.ConfigLoad.prototype=Object.create(e.Base.prototype),e.ConfigLoad.prototype.constructor=e.ConfigLoad,e.ConfigSelectors=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.target=".mix",this.control="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigSelectors),e.ConfigSelectors.prototype=Object.create(e.Base.prototype),e.ConfigSelectors.prototype.constructor=e.ConfigSelectors,e.ConfigRender=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.target=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigRender),e.ConfigRender.prototype=Object.create(e.Base.prototype),e.ConfigRender.prototype.constructor=e.ConfigRender,e.ConfigTemplates=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigTemplates),e.ConfigTemplates.prototype=Object.create(e.Base.prototype),e.ConfigTemplates.prototype.constructor=e.ConfigTemplates,e.Config=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.animation=new e.ConfigAnimation,this.behavior=new e.ConfigBehavior,this.callbacks=new e.ConfigCallbacks,this.controls=new e.ConfigControls,this.classNames=new e.ConfigClassNames,this.data=new e.ConfigData,this.debug=new e.ConfigDebug,this.layout=new e.ConfigLayout,this.load=new e.ConfigLoad,this.selectors=new e.ConfigSelectors,this.render=new e.ConfigRender,this.templates=new e.ConfigTemplates,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Config),e.Config.prototype=Object.create(e.Base.prototype),e.Config.prototype.constructor=e.Config,e.MixerDom=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.document=null,this.body=null,this.container=null,this.parent=null,this.targets=[],this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.MixerDom),e.MixerDom.prototype=Object.create(e.Base.prototype),e.MixerDom.prototype.constructor=e.MixerDom,e.UiClassNames=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.base="",this.active="",this.disabled="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.UiClassNames),e.UiClassNames.prototype=Object.create(e.Base.prototype),e.UiClassNames.prototype.constructor=e.UiClassNames,e.CommandDataset=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.dataset=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandDataset),e.CommandDataset.prototype=Object.create(e.Base.prototype),e.CommandDataset.prototype.constructor=e.CommandDataset,e.CommandMultimix=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.filter=null,this.sort=null,this.insert=null,this.remove=null,this.changeLayout=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandMultimix),e.CommandMultimix.prototype=Object.create(e.Base.prototype),e.CommandMultimix.prototype.constructor=e.CommandMultimix,e.CommandFilter=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.selector="",this.collection=null,this.action="show",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandFilter),e.CommandFilter.prototype=Object.create(e.Base.prototype),e.CommandFilter.prototype.constructor=e.CommandFilter,e.CommandSort=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.sortString="",this.attribute="",this.order="asc",this.collection=null,this.next=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandSort),e.CommandSort.prototype=Object.create(e.Base.prototype),e.CommandSort.prototype.constructor=e.CommandSort,e.CommandInsert=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.index=0,this.collection=[],this.position="before",this.sibling=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandInsert),e.CommandInsert.prototype=Object.create(e.Base.prototype),e.CommandInsert.prototype.constructor=e.CommandInsert,e.CommandRemove=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.targets=[],this.collection=[],this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandRemove),e.CommandRemove.prototype=Object.create(e.Base.prototype),e.CommandRemove.prototype.constructor=e.CommandRemove,e.CommandChangeLayout=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.containerClassName="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandChangeLayout),e.CommandChangeLayout.prototype=Object.create(e.Base.prototype),e.CommandChangeLayout.prototype.constructor=e.CommandChangeLayout,e.ControlDefinition=function(t,i,o,s){e.Base.call(this),this.callActions("beforeConstruct"),this.type=t,this.selector=i,this.live=o||!1,this.parent=s||"",this.callActions("afterConstruct"),n.freeze(this),n.seal(this)},e.BaseStatic.call(e.ControlDefinition),e.ControlDefinition.prototype=Object.create(e.Base.prototype),e.ControlDefinition.prototype.constructor=e.ControlDefinition,e.controlDefinitions=[],e.controlDefinitions.push(new e.ControlDefinition("multimix","[data-filter][data-sort]")),e.controlDefinitions.push(new e.ControlDefinition("filter","[data-filter]")),e.controlDefinitions.push(new e.ControlDefinition("sort","[data-sort]")),e.controlDefinitions.push(new e.ControlDefinition("toggle","[data-toggle]")),e.Control=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.selector="",this.bound=[],this.pending=-1,this.type="",this.status="inactive",this.filter="",this.sort="",this.canDisable=!1,this.handler=null,this.classNames=new e.UiClassNames,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Control),e.Control.prototype=Object.create(e.Base.prototype),n.extend(e.Control.prototype,{constructor:e.Control,init:function(t,n,i){var o=this;if(this.callActions("beforeInit",arguments),o.el=t,o.type=n,o.selector=i,o.selector)o.status="live";else switch(o.canDisable="boolean"==typeof o.el.disable,o.type){case"filter":o.filter=o.el.getAttribute("data-filter");break;case"toggle":o.filter=o.el.getAttribute("data-toggle");break;case"sort":o.sort=o.el.getAttribute("data-sort");break;case"multimix":o.filter=o.el.getAttribute("data-filter"),o.sort=o.el.getAttribute("data-sort")}o.bindClick(),e.controls.push(o),this.callActions("afterInit",arguments)},isBound:function(t){var e=this,n=!1;return this.callActions("beforeIsBound",arguments),n=e.bound.indexOf(t)>-1,e.callFilters("afterIsBound",n,arguments)},addBinding:function(t){var e=this;this.callActions("beforeAddBinding",arguments),e.isBound()||e.bound.push(t),this.callActions("afterAddBinding",arguments)},removeBinding:function(t){var n=this,i=-1;this.callActions("beforeRemoveBinding",arguments),(i=n.bound.indexOf(t))>-1&&n.bound.splice(i,1),n.bound.length<1&&(n.unbindClick(),i=e.controls.indexOf(n),e.controls.splice(i,1),"active"===n.status&&n.renderStatus(n.el,"inactive")),this.callActions("afterRemoveBinding",arguments)},bindClick:function(){var t=this;this.callActions("beforeBindClick",arguments),t.handler=function(e){t.handleClick(e)},n.on(t.el,"click",t.handler),this.callActions("afterBindClick",arguments)},unbindClick:function(){var t=this;this.callActions("beforeUnbindClick",arguments),n.off(t.el,"click",t.handler),t.handler=null,this.callActions("afterUnbindClick",arguments)},handleClick:function(t){var i=this,o=null,s=null,r=!1,a={},l=null,c=[],u=-1;if(this.callActions("beforeHandleClick",arguments),this.pending=0,s=i.bound[0],o=i.selector?n.closestParent(t.target,s.config.selectors.control+i.selector,!0,s.dom.document):i.el){switch(i.type){case"filter":a.filter=i.filter||o.getAttribute("data-filter");break;case"sort":a.sort=i.sort||o.getAttribute("data-sort");break;case"multimix":a.filter=i.filter||o.getAttribute("data-filter"),a.sort=i.sort||o.getAttribute("data-sort");break;case"toggle":a.filter=i.filter||o.getAttribute("data-toggle"),r="live"===i.status?n.hasClass(o,i.classNames.active):"active"===i.status}for(u=0;u<i.bound.length;u++)l=new e.CommandMultimix,n.extend(l,a),c.push(l);for(c=i.callFilters("commandsHandleClick",c,arguments),i.pending=i.bound.length,u=0;s=i.bound[u];u++)(a=c[u])&&(s.lastClicked||(s.lastClicked=o),e.events.fire("mixClick",s.dom.container,{state:s.state,instance:s,originalEvent:t,control:s.lastClicked},s.dom.document),"function"==typeof s.config.callbacks.onMixClick&&!1===s.config.callbacks.onMixClick.call(s.lastClicked,s.state,t,s)||("toggle"===i.type?r?s.toggleOff(a.filter):s.toggleOn(a.filter):s.multimix(a)));this.callActions("afterHandleClick",arguments)}else i.callActions("afterHandleClick",arguments)},update:function(t,n){var i=this,o=new e.CommandMultimix;i.callActions("beforeUpdate",arguments),i.pending--,i.pending=Math.max(0,i.pending),i.pending>0||("live"===i.status?i.updateLive(t,n):(o.sort=i.sort,o.filter=i.filter,i.callFilters("actionsUpdate",o,arguments),i.parseStatusChange(i.el,t,o,n)),i.callActions("afterUpdate",arguments))},updateLive:function(t,n){var i=this,o=null,s=null,r=null,a=-1;if(i.callActions("beforeUpdateLive",arguments),i.el){for(o=i.el.querySelectorAll(i.selector),a=0;r=o[a];a++){switch(s=new e.CommandMultimix,i.type){case"filter":s.filter=r.getAttribute("data-filter");break;case"sort":s.sort=r.getAttribute("data-sort");break;case"multimix":s.filter=r.getAttribute("data-filter"),s.sort=r.getAttribute("data-sort");break;case"toggle":s.filter=r.getAttribute("data-toggle")}s=i.callFilters("actionsUpdateLive",s,arguments),i.parseStatusChange(r,t,s,n)}i.callActions("afterUpdateLive",arguments)}},parseStatusChange:function(t,e,n,i){var o=this,s="",r=-1;switch(o.callActions("beforeParseStatusChange",arguments),o.type){case"filter":e.filter===n.filter?o.renderStatus(t,"active"):o.renderStatus(t,"inactive");break;case"multimix":e.sort===n.sort&&e.filter===n.filter?o.renderStatus(t,"active"):o.renderStatus(t,"inactive");break;case"sort":e.sort.match(/:asc/g)&&(s=e.sort.replace(/:asc/g,"")),e.sort===n.sort||s===n.sort?o.renderStatus(t,"active"):o.renderStatus(t,"inactive");break;case"toggle":for(i.length<1&&o.renderStatus(t,"inactive"),e.filter===n.filter&&o.renderStatus(t,"active"),r=0;r<i.length;r++){if(i[r]===n.filter){o.renderStatus(t,"active");break}o.renderStatus(t,"inactive")}}o.callActions("afterParseStatusChange",arguments)},renderStatus:function(t,e){var i=this;switch(i.callActions("beforeRenderStatus",arguments),e){case"active":n.addClass(t,i.classNames.active),n.removeClass(t,i.classNames.disabled),i.canDisable&&(i.el.disabled=!1);break;case"inactive":n.removeClass(t,i.classNames.active),n.removeClass(t,i.classNames.disabled),i.canDisable&&(i.el.disabled=!1);break;case"disabled":i.canDisable&&(i.el.disabled=!0),n.addClass(t,i.classNames.disabled),n.removeClass(t,i.classNames.active)}"live"!==i.status&&(i.status=e),i.callActions("afterRenderStatus",arguments)}}),e.controls=[],e.StyleData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.x=0,this.y=0,this.top=0,this.right=0,this.bottom=0,this.left=0,this.width=0,this.height=0,this.marginRight=0,this.marginBottom=0,this.opacity=0,this.scale=new e.TransformData,this.translateX=new e.TransformData,this.translateY=new e.TransformData,this.translateZ=new e.TransformData,this.rotateX=new e.TransformData,this.rotateY=new e.TransformData,this.rotateZ=new e.TransformData,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.StyleData),e.StyleData.prototype=Object.create(e.Base.prototype),e.StyleData.prototype.constructor=e.StyleData,e.TransformData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.value=0,this.unit="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.TransformData),e.TransformData.prototype=Object.create(e.Base.prototype),e.TransformData.prototype.constructor=e.TransformData,e.TransformDefaults=function(){e.StyleData.apply(this),this.callActions("beforeConstruct"),this.scale.value=.01,this.scale.unit="",this.translateX.value=20,this.translateX.unit="px",this.translateY.value=20,this.translateY.unit="px",this.translateZ.value=20,this.translateZ.unit="px",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateY.value=90,this.rotateY.unit="deg",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateZ.value=180,this.rotateZ.unit="deg",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.TransformDefaults),e.TransformDefaults.prototype=Object.create(e.StyleData.prototype),e.TransformDefaults.prototype.constructor=e.TransformDefaults,e.transformDefaults=new e.TransformDefaults,e.EventDetail=function(){this.state=null,this.futureState=null,this.instance=null,this.originalEvent=null},e.Events=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.mixStart=null,this.mixBusy=null,this.mixEnd=null,this.mixFail=null,this.mixClick=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Events),e.Events.prototype=Object.create(e.Base.prototype),e.Events.prototype.constructor=e.Events,e.Events.prototype.fire=function(t,i,o,s){var r=this,a=null,l=new e.EventDetail;if(r.callActions("beforeFire",arguments),void 0===r[t])throw new Error('Event type "'+t+'" not found.');l.state=new e.State,n.extend(l.state,o.state),o.futureState&&(l.futureState=new e.State,n.extend(l.futureState,o.futureState)),l.instance=o.instance,o.originalEvent&&(l.originalEvent=o.originalEvent),a=n.getCustomEvent(t,l,s),r.callFilters("eventFire",a,arguments),i.dispatchEvent(a)},e.events=new e.Events,e.QueueItem=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.args=[],this.instruction=null,this.triggerElement=null,this.deferred=null,this.isToggling=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.QueueItem),e.QueueItem.prototype=Object.create(e.Base.prototype),e.QueueItem.prototype.constructor=e.QueueItem,e.Mixer=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.config=new e.Config,this.id="",this.isBusy=!1,this.isToggling=!1,this.incPadding=!0,this.controls=[],this.targets=[],this.origOrder=[],this.cache={},this.toggleArray=[],this.targetsMoved=0,this.targetsImmovable=0,this.targetsBound=0,this.targetsDone=0,this.staggerDuration=0,this.effectsIn=null,this.effectsOut=null,this.transformIn=[],this.transformOut=[],this.queue=[],this.state=null,this.lastOperation=null,this.lastClicked=null,this.userCallback=null,this.userDeferred=null,this.dom=new e.MixerDom,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Mixer),e.Mixer.prototype=Object.create(e.Base.prototype),n.extend(e.Mixer.prototype,{constructor:e.Mixer,attach:function(i,o,s,r){var a=this,l=null,c=-1;for(a.callActions("beforeAttach",arguments),a.id=s,r&&n.extend(a.config,r,!0,!0),a.sanitizeConfig(),a.cacheDom(i,o),a.config.layout.containerClassName&&n.addClass(a.dom.container,a.config.layout.containerClassName),e.features.has.transitions||(a.config.animation.enable=!1),void 0===t.console&&(a.config.debug.showWarnings=!1),a.config.data.uidKey&&(a.config.controls.enable=!1),a.indexTargets(),a.state=a.getInitialState(),c=0;l=a.lastOperation.toHide[c];c++)l.hide();a.config.controls.enable&&(a.initControls(),a.buildToggleArray(null,a.state),a.updateControls({filter:a.state.activeFilter,sort:a.state.activeSort})),a.parseEffects(),a.callActions("afterAttach",arguments)},sanitizeConfig:function(){var t=this;t.callActions("beforeSanitizeConfig",arguments),t.config.controls.scope=t.config.controls.scope.toLowerCase().trim(),t.config.controls.toggleLogic=t.config.controls.toggleLogic.toLowerCase().trim(),t.config.controls.toggleDefault=t.config.controls.toggleDefault.toLowerCase().trim(),t.config.animation.effects=t.config.animation.effects.trim(),t.callActions("afterSanitizeConfig",arguments)},getInitialState:function(){var t=this,n=new e.State,i=new e.Operation;if(t.callActions("beforeGetInitialState",arguments),n.activeContainerClassName=t.config.layout.containerClassName,t.config.load.dataset){if(!t.config.data.uidKey||"string"!=typeof t.config.data.uidKey)throw new TypeError(e.messages.errorConfigDataUidKeyNotSet());i.startDataset=i.newDataset=n.activeDataset=t.config.load.dataset.slice(),i.startContainerClassName=i.newContainerClassName=n.activeContainerClassName,i.show=t.targets.slice(),n=t.callFilters("stateGetInitialState",n,arguments)}else n.activeFilter=t.parseFilterArgs([t.config.load.filter]).command,n.activeSort=t.parseSortArgs([t.config.load.sort]).command,n.totalTargets=t.targets.length,(n=t.callFilters("stateGetInitialState",n,arguments)).activeSort.collection||n.activeSort.attribute||"random"===n.activeSort.order||"desc"===n.activeSort.order?(i.newSort=n.activeSort,t.sortOperation(i),t.printSort(!1,i),t.targets=i.newOrder):i.startOrder=i.newOrder=t.targets,i.startFilter=i.newFilter=n.activeFilter,i.startSort=i.newSort=n.activeSort,i.startContainerClassName=i.newContainerClassName=n.activeContainerClassName,"all"===i.newFilter.selector?i.newFilter.selector=t.config.selectors.target:"none"===i.newFilter.selector&&(i.newFilter.selector="");return i=t.callFilters("operationGetInitialState",i,[n]),t.lastOperation=i,i.newFilter&&t.filterOperation(i),t.buildState(i)},cacheDom:function(t,e){var n=this;n.callActions("beforeCacheDom",arguments),n.dom.document=e,n.dom.body=n.dom.document.querySelector("body"),n.dom.container=t,n.dom.parent=t,n.callActions("afterCacheDom",arguments)},indexTargets:function(){var t=this,i=null,o=null,s=null,r=-1;if(t.callActions("beforeIndexTargets",arguments),t.dom.targets=t.config.layout.allowNestedTargets?t.dom.container.querySelectorAll(t.config.selectors.target):n.children(t.dom.container,t.config.selectors.target,t.dom.document),t.dom.targets=n.arrayFromList(t.dom.targets),t.targets=[],(s=t.config.load.dataset)&&s.length!==t.dom.targets.length)throw new Error(e.messages.errorDatasetPrerenderedMismatch());if(t.dom.targets.length){for(r=0;o=t.dom.targets[r];r++)(i=new e.Target).init(o,t,s?s[r]:void 0),i.isInDom=!0,t.targets.push(i);t.dom.parent=t.dom.targets[0].parentElement===t.dom.container?t.dom.container:t.dom.targets[0].parentElement}t.origOrder=t.targets,t.callActions("afterIndexTargets",arguments)},initControls:function(){var t=this,n="",i=null,o=null,s=null,r=null,a=null,l=-1,c=-1;switch(t.callActions("beforeInitControls",arguments),t.config.controls.scope){case"local":s=t.dom.container;break;case"global":s=t.dom.document;break;default:throw new Error(e.messages.errorConfigInvalidControlsScope())}for(l=0;n=e.controlDefinitions[l];l++)if(t.config.controls.live||n.live){if(n.parent){if(!(r=t.dom[n.parent])||r.length<0)continue;"number"!=typeof r.length&&(r=[r])}else r=[s];for(c=0;o=r[c];c++)a=t.getControl(o,n.type,n.selector),t.controls.push(a)}else for(i=s.querySelectorAll(t.config.selectors.control+n.selector),c=0;o=i[c];c++)(a=t.getControl(o,n.type,""))&&t.controls.push(a);t.callActions("afterInitControls",arguments)},getControl:function(t,i,o){var s=this,r=null,a=-1;if(s.callActions("beforeGetControl",arguments),!o)for(a=0;r=e.controls[a];a++){if(r.el===t&&r.isBound(s))return s.callFilters("controlGetControl",null,arguments);if(r.el===t&&r.type===i&&r.selector===o)return r.addBinding(s),s.callFilters("controlGetControl",r,arguments)}return(r=new e.Control).init(t,i,o),r.classNames.base=n.getClassname(s.config.classNames,i),r.classNames.active=n.getClassname(s.config.classNames,i,s.config.classNames.modifierActive),r.classNames.disabled=n.getClassname(s.config.classNames,i,s.config.classNames.modifierDisabled),r.addBinding(s),s.callFilters("controlGetControl",r,arguments)},getToggleSelector:function(){var t=this,e="or"===t.config.controls.toggleLogic?", ":"",i="";return t.callActions("beforeGetToggleSelector",arguments),t.toggleArray=n.clean(t.toggleArray),""===(i=t.toggleArray.join(e))&&(i=t.config.controls.toggleDefault),t.callFilters("selectorGetToggleSelector",i,arguments)},buildToggleArray:function(t,e){var i=this,o="";if(i.callActions("beforeBuildToggleArray",arguments),t&&t.filter)o=t.filter.selector.replace(/\s/g,"");else{if(!e)return;o=e.activeFilter.selector.replace(/\s/g,"")}o!==i.config.selectors.target&&"all"!==o||(o=""),"or"===i.config.controls.toggleLogic?i.toggleArray=o.split(","):i.toggleArray=i.splitCompoundSelector(o),i.toggleArray=n.clean(i.toggleArray),i.callActions("afterBuildToggleArray",arguments)},splitCompoundSelector:function(t){var e=t.split(/([\.\[])/g),n=[],i="",o=-1;for(""===e[0]&&e.shift(),o=0;o<e.length;o++)o%2==0&&(i=""),i+=e[o],o%2!=0&&n.push(i);return n},updateControls:function(t){var i=this,o=null,s=new e.CommandMultimix,r=-1;for(i.callActions("beforeUpdateControls",arguments),t.filter?s.filter=t.filter.selector:s.filter=i.state.activeFilter.selector,t.sort?s.sort=i.buildSortString(t.sort):s.sort=i.buildSortString(i.state.activeSort),s.filter===i.config.selectors.target&&(s.filter="all"),""===s.filter&&(s.filter="none"),n.freeze(s),r=0;o=i.controls[r];r++)o.update(s,i.toggleArray);i.callActions("afterUpdateControls",arguments)},buildSortString:function(t){var e="";return e+=t.sortString,t.next&&(e+=" "+this.buildSortString(t.next)),e},insertTargets:function(t,i){var o=this,s=null,r=-1,a=null,l=null,c=null,u=-1;if(o.callActions("beforeInsertTargets",arguments),void 0===t.index&&(t.index=0),s=o.getNextSibling(t.index,t.sibling,t.position),a=o.dom.document.createDocumentFragment(),r=s?n.index(s,o.config.selectors.target):o.targets.length,t.collection){for(u=0;c=t.collection[u];u++){if(o.dom.targets.indexOf(c)>-1)throw new Error(e.messages.errorInsertPreexistingElement());c.style.display="none",a.appendChild(c),a.appendChild(o.dom.document.createTextNode(" ")),n.isElement(c,o.dom.document)&&c.matches(o.config.selectors.target)&&((l=new e.Target).init(c,o),l.isInDom=!0,o.targets.splice(r,0,l),r++)}o.dom.parent.insertBefore(a,s)}i.startOrder=o.origOrder=o.targets,o.callActions("afterInsertTargets",arguments)},getNextSibling:function(t,e,n){var i=this,o=null;return t=Math.max(t,0),e&&"before"===n?o=e:e&&"after"===n?o=e.nextElementSibling||null:i.targets.length>0&&void 0!==t?o=t<i.targets.length||!i.targets.length?i.targets[t].dom.el:i.targets[i.targets.length-1].dom.el.nextElementSibling:0===i.targets.length&&i.dom.parent.children.length>0&&(i.config.layout.siblingAfter?o=i.config.layout.siblingAfter:i.config.layout.siblingBefore?o=i.config.layout.siblingBefore.nextElementSibling:i.dom.parent.children[0]),i.callFilters("elementGetNextSibling",o,arguments)},filterOperation:function(t){var e=this,n=!1,i=-1,o="",s=null,r=-1;for(e.callActions("beforeFilterOperation",arguments),o=t.newFilter.action,r=0;s=t.newOrder[r];r++)n=t.newFilter.collection?t.newFilter.collection.indexOf(s.dom.el)>-1:""!==t.newFilter.selector&&s.dom.el.matches(t.newFilter.selector),e.evaluateHideShow(n,s,o,t);if(t.toRemove.length)for(r=0;s=t.show[r];r++)t.toRemove.indexOf(s)>-1&&(t.show.splice(r,1),(i=t.toShow.indexOf(s))>-1&&t.toShow.splice(i,1),t.toHide.push(s),t.hide.push(s),r--);t.matching=t.show.slice(),0===t.show.length&&""!==t.newFilter.selector&&0!==e.targets.length&&(t.hasFailed=!0),e.callActions("afterFilterOperation",arguments)},evaluateHideShow:function(t,e,n,i){var o=this,s=!1,r=Array.prototype.slice.call(arguments,1);s=o.callFilters("testResultEvaluateHideShow",t,r),o.callActions("beforeEvaluateHideShow",arguments),!0===s&&"show"===n||!1===s&&"hide"===n?(i.show.push(e),!e.isShown&&i.toShow.push(e)):(i.hide.push(e),e.isShown&&i.toHide.push(e)),o.callActions("afterEvaluateHideShow",arguments)},sortOperation:function(t){var i=this,o=[],s=null,r=null,a=-1;if(i.callActions("beforeSortOperation",arguments),t.startOrder=i.targets,t.newSort.collection){for(o=[],a=0;r=t.newSort.collection[a];a++){if(i.dom.targets.indexOf(r)<0)throw new Error(e.messages.errorSortNonExistentElement());(s=new e.Target).init(r,i),s.isInDom=!0,o.push(s)}t.newOrder=o}else"random"===t.newSort.order?t.newOrder=n.arrayShuffle(t.startOrder):""===t.newSort.attribute?(t.newOrder=i.origOrder.slice(),"desc"===t.newSort.order&&t.newOrder.reverse()):(t.newOrder=t.startOrder.slice(),t.newOrder.sort((function(e,n){return i.compare(e,n,t.newSort)})));n.isEqualArray(t.newOrder,t.startOrder)&&(t.willSort=!1),i.callActions("afterSortOperation",arguments)},compare:function(t,e,n){var i=this,o=n.order,s=i.getAttributeValue(t,n.attribute),r=i.getAttributeValue(e,n.attribute);return isNaN(1*s)||isNaN(1*r)?(s=s.toLowerCase(),r=r.toLowerCase()):(s*=1,r*=1),s<r?"asc"===o?-1:1:s>r?"asc"===o?1:-1:s===r&&n.next?i.compare(t,e,n.next):0},getAttributeValue:function(t,n){var i=this,o="";return null===(o=t.dom.el.getAttribute("data-"+n))&&i.config.debug.showWarnings&&console.warn(e.messages.warningInconsistentSortingAttributes({attribute:"data-"+n})),i.callFilters("valueGetAttributeValue",o||0,arguments)},printSort:function(e,i){var o=this,s=e?i.newOrder:i.startOrder,r=e?i.startOrder:i.newOrder,a=s.length?s[s.length-1].dom.el.nextElementSibling:null,l=t.document.createDocumentFragment(),c=null,u=null,d=null,p=-1;for(o.callActions("beforePrintSort",arguments),p=0;u=s[p];p++)"absolute"!==(d=u.dom.el).style.position&&(n.removeWhitespace(d.previousSibling),d.parentElement.removeChild(d));for((c=a?a.previousSibling:o.dom.parent.lastChild)&&"#text"===c.nodeName&&n.removeWhitespace(c),p=0;u=r[p];p++)d=u.dom.el,n.isElement(l.lastChild)&&l.appendChild(t.document.createTextNode(" ")),l.appendChild(d);o.dom.parent.firstChild&&o.dom.parent.firstChild!==a&&l.insertBefore(t.document.createTextNode(" "),l.childNodes[0]),a?(l.appendChild(t.document.createTextNode(" ")),o.dom.parent.insertBefore(l,a)):o.dom.parent.appendChild(l),o.callActions("afterPrintSort",arguments)},parseSortString:function(t,i){var o=this,s=t.split(" "),r=i,a=[],l=-1;for(l=0;l<s.length;l++){switch(a=s[l].split(":"),r.sortString=s[l],r.attribute=n.dashCase(a[0]),r.order=a[1]||"asc",r.attribute){case"default":r.attribute="";break;case"random":r.attribute="",r.order="random"}if(!r.attribute||"random"===r.order)break;l<s.length-1&&(r.next=new e.CommandSort,n.freeze(r),r=r.next)}return o.callFilters("commandsParseSort",i,arguments)},parseEffects:function(){var t=this,n="",i=t.config.animation.effectsIn||t.config.animation.effects,o=t.config.animation.effectsOut||t.config.animation.effects;for(n in t.callActions("beforeParseEffects",arguments),t.effectsIn=new e.StyleData,t.effectsOut=new e.StyleData,t.transformIn=[],t.transformOut=[],t.effectsIn.opacity=t.effectsOut.opacity=1,t.parseEffect("fade",i,t.effectsIn,t.transformIn),t.parseEffect("fade",o,t.effectsOut,t.transformOut,!0),e.transformDefaults)e.transformDefaults[n]instanceof e.TransformData&&(t.parseEffect(n,i,t.effectsIn,t.transformIn),t.parseEffect(n,o,t.effectsOut,t.transformOut,!0));t.parseEffect("stagger",i,t.effectsIn,t.transformIn),t.parseEffect("stagger",o,t.effectsOut,t.transformOut,!0),t.callActions("afterParseEffects",arguments)},parseEffect:function(t,n,i,o,s){var r=this,a=/\(([^)]+)\)/,l=-1,c="",u="",d=["%","px","em","rem","vh","vw","deg"],p="",f=-1;if(r.callActions("beforeParseEffect",arguments),"string"!=typeof n)throw new TypeError(e.messages.errorConfigInvalidAnimationEffects());if(n.indexOf(t)<0)"stagger"===t&&(r.staggerDuration=0);else{switch((l=n.indexOf(t+"("))>-1&&(c=n.substring(l),u=a.exec(c)[1]),t){case"fade":i.opacity=u?parseFloat(u):0;break;case"stagger":r.staggerDuration=u?parseFloat(u):100;break;default:if(s&&r.config.animation.reverseOut&&"scale"!==t?i[t].value=-1*(u?parseFloat(u):e.transformDefaults[t].value):i[t].value=u?parseFloat(u):e.transformDefaults[t].value,u){for(f=0;p=d[f];f++)if(u.indexOf(p)>-1){i[t].unit=p;break}}else i[t].unit=e.transformDefaults[t].unit;o.push(t+"("+i[t].value+i[t].unit+")")}r.callActions("afterParseEffect",arguments)}},buildState:function(t){var n=this,i=new e.State,o=null,s=-1;for(n.callActions("beforeBuildState",arguments),s=0;o=n.targets[s];s++)(!t.toRemove.length||t.toRemove.indexOf(o)<0)&&i.targets.push(o.dom.el);for(s=0;o=t.matching[s];s++)i.matching.push(o.dom.el);for(s=0;o=t.show[s];s++)i.show.push(o.dom.el);for(s=0;o=t.hide[s];s++)(!t.toRemove.length||t.toRemove.indexOf(o)<0)&&i.hide.push(o.dom.el);return i.id=n.id,i.container=n.dom.container,i.activeFilter=t.newFilter,i.activeSort=t.newSort,i.activeDataset=t.newDataset,i.activeContainerClassName=t.newContainerClassName,i.hasFailed=t.hasFailed,i.totalTargets=n.targets.length,i.totalShow=t.show.length,i.totalHide=t.hide.length,i.totalMatching=t.matching.length,i.triggerElement=t.triggerElement,n.callFilters("stateBuildState",i,arguments)},goMix:function(i,o){var s=this,r=null;return s.callActions("beforeGoMix",arguments),s.config.animation.duration&&s.config.animation.effects&&n.isVisible(s.dom.container)||(i=!1),o.toShow.length||o.toHide.length||o.willSort||o.willChangeLayout||(i=!1),o.startState.show.length||o.show.length||(i=!1),e.events.fire("mixStart",s.dom.container,{state:o.startState,futureState:o.newState,instance:s},s.dom.document),"function"==typeof s.config.callbacks.onMixStart&&s.config.callbacks.onMixStart.call(s.dom.container,o.startState,o.newState,s),n.removeClass(s.dom.container,n.getClassname(s.config.classNames,"container",s.config.classNames.modifierFailed)),r=s.userDeferred?s.userDeferred:s.userDeferred=n.defer(e.libraries),s.isBusy=!0,i&&e.features.has.transitions?(t.pageYOffset!==o.docState.scrollTop&&t.scrollTo(o.docState.scrollLeft,o.docState.scrollTop),s.config.animation.applyPerspective&&(s.dom.parent.style[e.features.perspectiveProp]=s.config.animation.perspectiveDistance,s.dom.parent.style[e.features.perspectiveOriginProp]=s.config.animation.perspectiveOrigin),s.config.animation.animateResizeContainer&&o.startHeight!==o.newHeight&&o.viewportDeltaY!==o.startHeight-o.newHeight&&(s.dom.parent.style.height=o.startHeight+"px"),s.config.animation.animateResizeContainer&&o.startWidth!==o.newWidth&&o.viewportDeltaX!==o.startWidth-o.newWidth&&(s.dom.parent.style.width=o.startWidth+"px"),o.startHeight===o.newHeight&&(s.dom.parent.style.height=o.startHeight+"px"),o.startWidth===o.newWidth&&(s.dom.parent.style.width=o.startWidth+"px"),o.startHeight===o.newHeight&&o.startWidth===o.newWidth&&(s.dom.parent.style.overflow="hidden"),requestAnimationFrame((function(){s.moveTargets(o)})),s.callFilters("promiseGoMix",r.promise,arguments)):(s.config.debug.fauxAsync?setTimeout((function(){s.cleanUp(o)}),s.config.animation.duration):s.cleanUp(o),s.callFilters("promiseGoMix",r.promise,arguments))},getStartMixData:function(n){var i=this,o=t.getComputedStyle(i.dom.parent),s=i.dom.parent.getBoundingClientRect(),r=null,a={},l=-1,c=o[e.features.boxSizingProp];for(i.incPadding="border-box"===c,i.callActions("beforeGetStartMixData",arguments),l=0;r=n.show[l];l++)a=r.getPosData(),n.showPosData[l]={startPosData:a};for(l=0;r=n.toHide[l];l++)a=r.getPosData(),n.toHidePosData[l]={startPosData:a};n.startX=s.left,n.startY=s.top,n.startHeight=i.incPadding?s.height:s.height-parseFloat(o.paddingTop)-parseFloat(o.paddingBottom)-parseFloat(o.borderTop)-parseFloat(o.borderBottom),n.startWidth=i.incPadding?s.width:s.width-parseFloat(o.paddingLeft)-parseFloat(o.paddingRight)-parseFloat(o.borderLeft)-parseFloat(o.borderRight),i.callActions("afterGetStartMixData",arguments)},setInter:function(t){var e=this,i=null,o=-1;for(e.callActions("beforeSetInter",arguments),e.config.animation.clampHeight&&(e.dom.parent.style.height=t.startHeight+"px",e.dom.parent.style.overflow="hidden"),e.config.animation.clampWidth&&(e.dom.parent.style.width=t.startWidth+"px",e.dom.parent.style.overflow="hidden"),o=0;i=t.toShow[o];o++)i.show();t.willChangeLayout&&(n.removeClass(e.dom.container,t.startContainerClassName),n.addClass(e.dom.container,t.newContainerClassName)),e.callActions("afterSetInter",arguments)},getInterMixData:function(t){var e=this,n=null,i=-1;for(e.callActions("beforeGetInterMixData",arguments),i=0;n=t.show[i];i++)t.showPosData[i].interPosData=n.getPosData();for(i=0;n=t.toHide[i];i++)t.toHidePosData[i].interPosData=n.getPosData();e.callActions("afterGetInterMixData",arguments)},setFinal:function(t){var e=this,n=null,i=-1;for(e.callActions("beforeSetFinal",arguments),t.willSort&&e.printSort(!1,t),i=0;n=t.toHide[i];i++)n.hide();e.callActions("afterSetFinal",arguments)},getFinalMixData:function(e){var i=this,o=null,s=null,r=null,a=-1;for(i.callActions("beforeGetFinalMixData",arguments),a=0;r=e.show[a];a++)e.showPosData[a].finalPosData=r.getPosData();for(a=0;r=e.toHide[a];a++)e.toHidePosData[a].finalPosData=r.getPosData();for((i.config.animation.clampHeight||i.config.animation.clampWidth)&&(i.dom.parent.style.height=i.dom.parent.style.width=i.dom.parent.style.overflow=""),i.incPadding||(o=t.getComputedStyle(i.dom.parent)),s=i.dom.parent.getBoundingClientRect(),e.newX=s.left,e.newY=s.top,e.newHeight=i.incPadding?s.height:s.height-parseFloat(o.paddingTop)-parseFloat(o.paddingBottom)-parseFloat(o.borderTop)-parseFloat(o.borderBottom),e.newWidth=i.incPadding?s.width:s.width-parseFloat(o.paddingLeft)-parseFloat(o.paddingRight)-parseFloat(o.borderLeft)-parseFloat(o.borderRight),e.viewportDeltaX=e.docState.viewportWidth-this.dom.document.documentElement.clientWidth,e.viewportDeltaY=e.docState.viewportHeight-this.dom.document.documentElement.clientHeight,e.willSort&&i.printSort(!0,e),a=0;r=e.toShow[a];a++)r.hide();for(a=0;r=e.toHide[a];a++)r.show();e.willChangeLayout&&(n.removeClass(i.dom.container,e.newContainerClassName),n.addClass(i.dom.container,i.config.layout.containerClassName)),i.callActions("afterGetFinalMixData",arguments)},getTweenData:function(t){var n=this,i=null,o=null,s=Object.getOwnPropertyNames(n.effectsIn),r="",a=null,l=-1,c=-1,u=-1,d=-1;for(n.callActions("beforeGetTweenData",arguments),u=0;i=t.show[u];u++)for((o=t.showPosData[u]).posIn=new e.StyleData,o.posOut=new e.StyleData,o.tweenData=new e.StyleData,i.isShown?(o.posIn.x=o.startPosData.x-o.interPosData.x,o.posIn.y=o.startPosData.y-o.interPosData.y):o.posIn.x=o.posIn.y=0,o.posOut.x=o.finalPosData.x-o.interPosData.x,o.posOut.y=o.finalPosData.y-o.interPosData.y,o.posIn.opacity=i.isShown?1:n.effectsIn.opacity,o.posOut.opacity=1,o.tweenData.opacity=o.posOut.opacity-o.posIn.opacity,i.isShown||n.config.animation.nudge||(o.posIn.x=o.posOut.x,o.posIn.y=o.posOut.y),o.tweenData.x=o.posOut.x-o.posIn.x,o.tweenData.y=o.posOut.y-o.posIn.y,n.config.animation.animateResizeTargets&&(o.posIn.width=o.startPosData.width,o.posIn.height=o.startPosData.height,l=(o.startPosData.width||o.finalPosData.width)-o.interPosData.width,o.posIn.marginRight=o.startPosData.marginRight-l,c=(o.startPosData.height||o.finalPosData.height)-o.interPosData.height,o.posIn.marginBottom=o.startPosData.marginBottom-c,o.posOut.width=o.finalPosData.width,o.posOut.height=o.finalPosData.height,l=(o.finalPosData.width||o.startPosData.width)-o.interPosData.width,o.posOut.marginRight=o.finalPosData.marginRight-l,c=(o.finalPosData.height||o.startPosData.height)-o.interPosData.height,o.posOut.marginBottom=o.finalPosData.marginBottom-c,o.tweenData.width=o.posOut.width-o.posIn.width,o.tweenData.height=o.posOut.height-o.posIn.height,o.tweenData.marginRight=o.posOut.marginRight-o.posIn.marginRight,o.tweenData.marginBottom=o.posOut.marginBottom-o.posIn.marginBottom),d=0;r=s[d];d++)(a=n.effectsIn[r])instanceof e.TransformData&&a.value&&(o.posIn[r].value=a.value,o.posOut[r].value=0,o.tweenData[r].value=o.posOut[r].value-o.posIn[r].value,o.posIn[r].unit=o.posOut[r].unit=o.tweenData[r].unit=a.unit);for(u=0;i=t.toHide[u];u++)for((o=t.toHidePosData[u]).posIn=new e.StyleData,o.posOut=new e.StyleData,o.tweenData=new e.StyleData,o.posIn.x=i.isShown?o.startPosData.x-o.interPosData.x:0,o.posIn.y=i.isShown?o.startPosData.y-o.interPosData.y:0,o.posOut.x=n.config.animation.nudge?0:o.posIn.x,o.posOut.y=n.config.animation.nudge?0:o.posIn.y,o.tweenData.x=o.posOut.x-o.posIn.x,o.tweenData.y=o.posOut.y-o.posIn.y,n.config.animation.animateResizeTargets&&(o.posIn.width=o.startPosData.width,o.posIn.height=o.startPosData.height,l=o.startPosData.width-o.interPosData.width,o.posIn.marginRight=o.startPosData.marginRight-l,c=o.startPosData.height-o.interPosData.height,o.posIn.marginBottom=o.startPosData.marginBottom-c),o.posIn.opacity=1,o.posOut.opacity=n.effectsOut.opacity,o.tweenData.opacity=o.posOut.opacity-o.posIn.opacity,d=0;r=s[d];d++)(a=n.effectsOut[r])instanceof e.TransformData&&a.value&&(o.posIn[r].value=0,o.posOut[r].value=a.value,o.tweenData[r].value=o.posOut[r].value-o.posIn[r].value,o.posIn[r].unit=o.posOut[r].unit=o.tweenData[r].unit=a.unit);n.callActions("afterGetTweenData",arguments)},moveTargets:function(t){var i=this,o=null,s=null,r=null,a="",l=!1,c=-1,u=-1,d=i.checkProgress.bind(i);for(i.callActions("beforeMoveTargets",arguments),u=0;o=t.show[u];u++)s=new e.IMoveData,r=t.showPosData[u],a=o.isShown?"none":"show",(l=i.willTransition(a,t.hasEffect,r.posIn,r.posOut))&&c++,o.show(),s.posIn=r.posIn,s.posOut=r.posOut,s.statusChange=a,s.staggerIndex=c,s.operation=t,s.callback=l?d:null,o.move(s);for(u=0;o=t.toHide[u];u++)r=t.toHidePosData[u],s=new e.IMoveData,a="hide",l=i.willTransition(a,r.posIn,r.posOut),s.posIn=r.posIn,s.posOut=r.posOut,s.statusChange=a,s.staggerIndex=u,s.operation=t,s.callback=l?d:null,o.move(s);i.config.animation.animateResizeContainer&&(i.dom.parent.style[e.features.transitionProp]="height "+i.config.animation.duration+"ms ease, width "+i.config.animation.duration+"ms ease ",requestAnimationFrame((function(){t.startHeight!==t.newHeight&&t.viewportDeltaY!==t.startHeight-t.newHeight&&(i.dom.parent.style.height=t.newHeight+"px"),t.startWidth!==t.newWidth&&t.viewportDeltaX!==t.startWidth-t.newWidth&&(i.dom.parent.style.width=t.newWidth+"px")}))),t.willChangeLayout&&(n.removeClass(i.dom.container,i.config.layout.ContainerClassName),n.addClass(i.dom.container,t.newContainerClassName)),i.callActions("afterMoveTargets",arguments)},hasEffect:function(){var t=this,e=["scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],n="",i=null,o=!1,s=-1;if(1!==t.effectsIn.opacity)return t.callFilters("resultHasEffect",!0,arguments);for(s=0;n=e[s];s++)if(0!==("undefined"!==(i=t.effectsIn[n]).value?i.value:i)){o=!0;break}return t.callFilters("resultHasEffect",o,arguments)},willTransition:function(t,e,i,o){var s=this,r=!1;return r=!(!n.isVisible(s.dom.container)||!("none"!==t&&e||i.x!==o.x||i.y!==o.y)&&(!s.config.animation.animateResizeTargets||i.width===o.width&&i.height===o.height&&i.marginRight===o.marginRight&&i.marginTop===o.marginTop)),s.callFilters("resultWillTransition",r,arguments)},checkProgress:function(t){var e=this;e.targetsDone++,e.targetsBound===e.targetsDone&&e.cleanUp(t)},cleanUp:function(t){var i=this,o=null,s=null,r=null,a=null,l=-1;for(i.callActions("beforeCleanUp",arguments),i.targetsMoved=i.targetsImmovable=i.targetsBound=i.targetsDone=0,l=0;o=t.show[l];l++)o.cleanUp(),o.show();for(l=0;o=t.toHide[l];l++)o.cleanUp(),o.hide();if(t.willSort&&i.printSort(!1,t),i.dom.parent.style[e.features.transitionProp]=i.dom.parent.style.height=i.dom.parent.style.width=i.dom.parent.style.overflow=i.dom.parent.style[e.features.perspectiveProp]=i.dom.parent.style[e.features.perspectiveOriginProp]="",t.willChangeLayout&&(n.removeClass(i.dom.container,t.startContainerClassName),n.addClass(i.dom.container,t.newContainerClassName)),t.toRemove.length){for(l=0;o=i.targets[l];l++)t.toRemove.indexOf(o)>-1&&((s=o.dom.el.previousSibling)&&"#text"===s.nodeName&&(r=o.dom.el.nextSibling)&&"#text"===r.nodeName&&n.removeWhitespace(s),t.willSort||i.dom.parent.removeChild(o.dom.el),i.targets.splice(l,1),o.isInDom=!1,l--);i.origOrder=i.targets}t.willSort&&(i.targets=t.newOrder),i.state=t.newState,i.lastOperation=t,i.dom.targets=i.state.targets,e.events.fire("mixEnd",i.dom.container,{state:i.state,instance:i},i.dom.document),"function"==typeof i.config.callbacks.onMixEnd&&i.config.callbacks.onMixEnd.call(i.dom.container,i.state,i),t.hasFailed&&(e.events.fire("mixFail",i.dom.container,{state:i.state,instance:i},i.dom.document),"function"==typeof i.config.callbacks.onMixFail&&i.config.callbacks.onMixFail.call(i.dom.container,i.state,i),n.addClass(i.dom.container,n.getClassname(i.config.classNames,"container",i.config.classNames.modifierFailed))),"function"==typeof i.userCallback&&i.userCallback.call(i.dom.container,i.state,i),"function"==typeof i.userDeferred.resolve&&i.userDeferred.resolve(i.state),i.userCallback=null,i.userDeferred=null,i.lastClicked=null,i.isToggling=!1,i.isBusy=!1,i.queue.length&&(i.callActions("beforeReadQueueCleanUp",arguments),a=i.queue.shift(),i.userDeferred=a.deferred,i.isToggling=a.isToggling,i.lastClicked=a.triggerElement,a.instruction.command instanceof e.CommandMultimix?i.multimix.apply(i,a.args):i.dataset.apply(i,a.args)),i.callActions("afterCleanUp",arguments)},parseMultimixArgs:function(t){var i=this,o=new e.UserInstruction,s=null,r=-1;for(o.animate=i.config.animation.enable,o.command=new e.CommandMultimix,r=0;r<t.length;r++)null!==(s=t[r])&&("object"==typeof s?n.extend(o.command,s):"boolean"==typeof s?o.animate=s:"function"==typeof s&&(o.callback=s));return!o.command.insert||o.command.insert instanceof e.CommandInsert||(o.command.insert=i.parseInsertArgs([o.command.insert]).command),!o.command.remove||o.command.remove instanceof e.CommandRemove||(o.command.remove=i.parseRemoveArgs([o.command.remove]).command),!o.command.filter||o.command.filter instanceof e.CommandFilter||(o.command.filter=i.parseFilterArgs([o.command.filter]).command),!o.command.sort||o.command.sort instanceof e.CommandSort||(o.command.sort=i.parseSortArgs([o.command.sort]).command),!o.command.changeLayout||o.command.changeLayout instanceof e.CommandChangeLayout||(o.command.changeLayout=i.parseChangeLayoutArgs([o.command.changeLayout]).command),o=i.callFilters("instructionParseMultimixArgs",o,arguments),n.freeze(o),o},parseFilterArgs:function(t){var i=this,o=new e.UserInstruction,s=null,r=-1;for(o.animate=i.config.animation.enable,o.command=new e.CommandFilter,r=0;r<t.length;r++)"string"==typeof(s=t[r])?o.command.selector=s:null===s?o.command.collection=[]:"object"==typeof s&&n.isElement(s,i.dom.document)?o.command.collection=[s]:"object"==typeof s&&void 0!==s.length?o.command.collection=n.arrayFromList(s):"object"==typeof s?n.extend(o.command,s):"boolean"==typeof s?o.animate=s:"function"==typeof s&&(o.callback=s);if(o.command.selector&&o.command.collection)throw new Error(e.messages.errorFilterInvalidArguments());return o=i.callFilters("instructionParseFilterArgs",o,arguments),n.freeze(o),o},parseSortArgs:function(t){var i=this,o=new e.UserInstruction,s=null,r="",a=-1;for(o.animate=i.config.animation.enable,o.command=new e.CommandSort,a=0;a<t.length;a++)if(null!==(s=t[a]))switch(typeof s){case"string":r=s;break;case"object":s.length&&(o.command.collection=n.arrayFromList(s));break;case"boolean":o.animate=s;break;case"function":o.callback=s}return r&&(o.command=i.parseSortString(r,o.command)),o=i.callFilters("instructionParseSortArgs",o,arguments),n.freeze(o),o},parseInsertArgs:function(t){var i=this,o=new e.UserInstruction,s=null,r=-1;for(o.animate=i.config.animation.enable,o.command=new e.CommandInsert,r=0;r<t.length;r++)null!==(s=t[r])&&("number"==typeof s?o.command.index=s:"string"==typeof s&&["before","after"].indexOf(s)>-1?o.command.position=s:"string"==typeof s?o.command.collection=n.arrayFromList(n.createElement(s).childNodes):"object"==typeof s&&n.isElement(s,i.dom.document)?o.command.collection.length?o.command.sibling=s:o.command.collection=[s]:"object"==typeof s&&s.length?o.command.collection.length?o.command.sibling=s[0]:o.command.collection=s:"object"==typeof s&&s.childNodes&&s.childNodes.length?o.command.collection.length?o.command.sibling=s.childNodes[0]:o.command.collection=n.arrayFromList(s.childNodes):"object"==typeof s?n.extend(o.command,s):"boolean"==typeof s?o.animate=s:"function"==typeof s&&(o.callback=s));if(o.command.index&&o.command.sibling)throw new Error(e.messages.errorInsertInvalidArguments());return!o.command.collection.length&&i.config.debug.showWarnings&&console.warn(e.messages.warningInsertNoElements()),o=i.callFilters("instructionParseInsertArgs",o,arguments),n.freeze(o),o},parseRemoveArgs:function(t){var i=this,o=new e.UserInstruction,s=null,r=null,a=-1;for(o.animate=i.config.animation.enable,o.command=new e.CommandRemove,a=0;a<t.length;a++)if(null!==(r=t[a]))switch(typeof r){case"number":i.targets[r]&&(o.command.targets[0]=i.targets[r]);break;case"string":o.command.collection=n.arrayFromList(i.dom.parent.querySelectorAll(r));break;case"object":r&&r.length?o.command.collection=r:n.isElement(r,i.dom.document)?o.command.collection=[r]:n.extend(o.command,r);break;case"boolean":o.animate=r;break;case"function":o.callback=r}if(o.command.collection.length)for(a=0;s=i.targets[a];a++)o.command.collection.indexOf(s.dom.el)>-1&&o.command.targets.push(s);return!o.command.targets.length&&i.config.debug.showWarnings&&console.warn(e.messages.warningRemoveNoElements()),n.freeze(o),o},parseDatasetArgs:function(t){var i=new e.UserInstruction,o=null,s=-1;for(i.animate=this.config.animation.enable,i.command=new e.CommandDataset,s=0;s<t.length;s++)if(null!==(o=t[s]))switch(typeof o){case"object":Array.isArray(o)||"number"==typeof o.length?i.command.dataset=o:n.extend(i.command,o);break;case"boolean":i.animate=o;break;case"function":i.callback=o}return n.freeze(i),i},parseChangeLayoutArgs:function(t){var i=new e.UserInstruction,o=null,s=-1;for(i.animate=this.config.animation.enable,i.command=new e.CommandChangeLayout,s=0;s<t.length;s++)if(null!==(o=t[s]))switch(typeof o){case"string":i.command.containerClassName=o;break;case"object":n.extend(i.command,o);break;case"boolean":i.animate=o;break;case"function":i.callback=o}return n.freeze(i),i},queueMix:function(t){var i=this,o=null,s="";return i.callActions("beforeQueueMix",arguments),o=n.defer(e.libraries),i.config.animation.queue&&i.queue.length<i.config.animation.queueLimit?(t.deferred=o,i.queue.push(t),i.config.controls.enable&&(i.isToggling?(i.buildToggleArray(t.instruction.command),s=i.getToggleSelector(),i.updateControls({filter:{selector:s}})):i.updateControls(t.instruction.command))):(i.config.debug.showWarnings&&console.warn(e.messages.warningMultimixInstanceQueueFull()),o.resolve(i.state),e.events.fire("mixBusy",i.dom.container,{state:i.state,instance:i},i.dom.document),"function"==typeof i.config.callbacks.onMixBusy&&i.config.callbacks.onMixBusy.call(i.dom.container,i.state,i)),i.callFilters("promiseQueueMix",o.promise,arguments)},getDataOperation:function(t){var i=this,o=new e.Operation,s=[];if(o=i.callFilters("operationUnmappedGetDataOperation",o,arguments),i.dom.targets.length&&!(s=i.state.activeDataset||[]).length)throw new Error(e.messages.errorDatasetNotSet());return o.id=n.randomHex(),o.startState=i.state,o.startDataset=s,o.newDataset=t.slice(),i.diffDatasets(o),o.startOrder=i.targets,o.newOrder=o.show,i.config.animation.enable&&(i.getStartMixData(o),i.setInter(o),o.docState=n.getDocumentState(i.dom.document),i.getInterMixData(o),i.setFinal(o),i.getFinalMixData(o),i.parseEffects(),o.hasEffect=i.hasEffect(),i.getTweenData(o)),i.targets=o.show.slice(),o.newState=i.buildState(o),Array.prototype.push.apply(i.targets,o.toRemove),i.callFilters("operationMappedGetDataOperation",o,arguments)},diffDatasets:function(t){var i=this,o=[],s=[],r=[],a=null,l=null,c=null,u=null,d=null,p={},f="",h=-1;for(i.callActions("beforeDiffDatasets",arguments),h=0;a=t.newDataset[h];h++){if(void 0===(f=a[i.config.data.uidKey])||f.toString().length<1)throw new TypeError(e.messages.errorDatasetInvalidUidKey({uidKey:i.config.data.uidKey}));if(p[f])throw new Error(e.messages.errorDatasetDuplicateUid({uid:f}));p[f]=!0,(l=i.cache[f])instanceof e.Target?(i.config.data.dirtyCheck&&!n.deepEquals(a,l.data)&&(c=l.render(a),l.data=a,c!==l.dom.el&&(l.isInDom&&(l.unbindEvents(),i.dom.parent.replaceChild(c,l.dom.el)),l.isShown||(c.style.display="none"),l.dom.el=c,l.isInDom&&l.bindEvents())),c=l.dom.el):((l=new e.Target).init(null,i,a),l.hide()),l.isInDom?(d=l.dom.el.nextElementSibling,s.push(f),u&&(u.lastElementChild&&u.appendChild(i.dom.document.createTextNode(" ")),i.insertDatasetFrag(u,l.dom.el,r),u=null)):(u||(u=i.dom.document.createDocumentFragment()),u.lastElementChild&&u.appendChild(i.dom.document.createTextNode(" ")),u.appendChild(l.dom.el),l.isInDom=!0,l.unbindEvents(),l.bindEvents(),l.hide(),t.toShow.push(l),r.push(l)),t.show.push(l)}for(u&&((d=d||i.config.layout.siblingAfter)&&u.appendChild(i.dom.document.createTextNode(" ")),i.insertDatasetFrag(u,d,r)),h=0;a=t.startDataset[h];h++)f=a[i.config.data.uidKey],l=i.cache[f],t.show.indexOf(l)<0?(t.hide.push(l),t.toHide.push(l),t.toRemove.push(l)):o.push(f);n.isEqualArray(o,s)||(t.willSort=!0),i.callActions("afterDiffDatasets",arguments)},insertDatasetFrag:function(t,e,i){var o=this,s=e?n.arrayFromList(o.dom.parent.children).indexOf(e):o.targets.length;for(o.dom.parent.insertBefore(t,e);i.length;)o.targets.splice(s,0,i.shift()),s++},willSort:function(t,e){var n=this,i=!1;return i=!!(n.config.behavior.liveSort||"random"===t.order||t.attribute!==e.attribute||t.order!==e.order||t.collection!==e.collection||null===t.next&&e.next||t.next&&null===e.next)||!(!t.next||!e.next)&&n.willSort(t.next,e.next),n.callFilters("resultWillSort",i,arguments)},show:function(){return this.filter("all")},hide:function(){return this.filter("none")},isMixing:function(){return this.isBusy},filter:function(){var t=this,e=t.parseFilterArgs(arguments);return t.multimix({filter:e.command},e.animate,e.callback)},toggleOn:function(){var t=this,e=t.parseFilterArgs(arguments),n=e.command.selector,i="";return t.isToggling=!0,t.toggleArray.indexOf(n)<0&&t.toggleArray.push(n),i=t.getToggleSelector(),t.multimix({filter:i},e.animate,e.callback)},toggleOff:function(){var t=this,e=t.parseFilterArgs(arguments),n=e.command.selector,i=t.toggleArray.indexOf(n),o="";return t.isToggling=!0,i>-1&&t.toggleArray.splice(i,1),o=t.getToggleSelector(),t.multimix({filter:o},e.animate,e.callback)},sort:function(){var t=this,e=t.parseSortArgs(arguments);return t.multimix({sort:e.command},e.animate,e.callback)},changeLayout:function(){var t=this,e=t.parseChangeLayoutArgs(arguments);return t.multimix({changeLayout:e.command},e.animate,e.callback)},dataset:function(){var t=this,n=t.parseDatasetArgs(arguments),i=null,o=null,s=!1;return t.callActions("beforeDataset",arguments),t.isBusy?((o=new e.QueueItem).args=arguments,o.instruction=n,t.queueMix(o)):(n.callback&&(t.userCallback=n.callback),s=n.animate^t.config.animation.enable?n.animate:t.config.animation.enable,i=t.getDataOperation(n.command.dataset),t.goMix(s,i))},multimix:function(){var t=this,n=null,i=!1,o=null,s=t.parseMultimixArgs(arguments);return t.callActions("beforeMultimix",arguments),t.isBusy?((o=new e.QueueItem).args=arguments,o.instruction=s,o.triggerElement=t.lastClicked,o.isToggling=t.isToggling,t.queueMix(o)):(n=t.getOperation(s.command),t.config.controls.enable&&(s.command.filter&&!t.isToggling&&(t.toggleArray.length=0,t.buildToggleArray(n.command)),t.queue.length<1&&t.updateControls(n.command)),s.callback&&(t.userCallback=s.callback),i=s.animate^t.config.animation.enable?s.animate:t.config.animation.enable,t.callFilters("operationMultimix",n,arguments),t.goMix(i,n))},getOperation:function(t){var i=this,o=t.sort,s=t.filter,r=t.changeLayout,a=t.remove,l=t.insert,c=new e.Operation;return(c=i.callFilters("operationUnmappedGetOperation",c,arguments)).id=n.randomHex(),c.command=t,c.startState=i.state,c.triggerElement=i.lastClicked,i.isBusy?(i.config.debug.showWarnings&&console.warn(e.messages.warningGetOperationInstanceBusy()),null):(l&&i.insertTargets(l,c),a&&(c.toRemove=a.targets),c.startSort=c.newSort=c.startState.activeSort,c.startOrder=c.newOrder=i.targets,o&&(c.startSort=c.startState.activeSort,c.newSort=o,c.willSort=i.willSort(o,c.startState.activeSort),c.willSort&&i.sortOperation(c)),c.startFilter=c.startState.activeFilter,c.newFilter=s||n.extend(new e.CommandFilter,c.startFilter),"all"===c.newFilter.selector?c.newFilter.selector=i.config.selectors.target:"none"===c.newFilter.selector&&(c.newFilter.selector=""),i.filterOperation(c),c.startContainerClassName=c.startState.activeContainerClassName,r?(c.newContainerClassName=r.containerClassName,c.newContainerClassName!==c.startContainerClassName&&(c.willChangeLayout=!0)):c.newContainerClassName=c.startContainerClassName,i.config.animation.enable&&(i.getStartMixData(c),i.setInter(c),c.docState=n.getDocumentState(i.dom.document),i.getInterMixData(c),i.setFinal(c),i.getFinalMixData(c),i.parseEffects(),c.hasEffect=i.hasEffect(),i.getTweenData(c)),c.willSort&&(i.targets=c.newOrder),c.newState=i.buildState(c),i.callFilters("operationMappedGetOperation",c,arguments))},tween:function(t,e){var n=null,i=null,o=-1,s=-1;for(e=Math.min(e,1),e=Math.max(e,0),s=0;n=t.show[s];s++)i=t.showPosData[s],n.applyTween(i,e);for(s=0;n=t.hide[s];s++)n.isShown&&n.hide(),(o=t.toHide.indexOf(n))>-1&&(i=t.toHidePosData[o],n.isShown||n.show(),n.applyTween(i,e))},insert:function(){var t=this,e=t.parseInsertArgs(arguments);return t.multimix({insert:e.command},e.animate,e.callback)},insertBefore:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(e.command.collection,"before",e.command.sibling,e.animate,e.callback)},insertAfter:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(e.command.collection,"after",e.command.sibling,e.animate,e.callback)},prepend:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(0,e.command.collection,e.animate,e.callback)},append:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(t.state.totalTargets,e.command.collection,e.animate,e.callback)},remove:function(){var t=this,e=t.parseRemoveArgs(arguments);return t.multimix({remove:e.command},e.animate,e.callback)},getConfig:function(t){var e=this,i=null;return i=t?n.getProperty(e.config,t):e.config,e.callFilters("valueGetConfig",i,arguments)},configure:function(t){var e=this;e.callActions("beforeConfigure",arguments),n.extend(e.config,t,!0,!0),e.callActions("afterConfigure",arguments)},getState:function(){var t=this,i=null;return i=new e.State,n.extend(i,t.state),n.freeze(i),t.callFilters("stateGetState",i,arguments)},forceRefresh:function(){this.indexTargets()},forceRender:function(){var t=this,e=null,n=null,i="";for(i in t.cache)(n=(e=t.cache[i]).render(e.data))!==e.dom.el&&(e.isInDom&&(e.unbindEvents(),t.dom.parent.replaceChild(n,e.dom.el)),e.isShown||(n.style.display="none"),e.dom.el=n,e.isInDom&&e.bindEvents());t.state=t.buildState(t.lastOperation)},destroy:function(t){var n=this,i=null,o=null,s=0;for(n.callActions("beforeDestroy",arguments),s=0;i=n.controls[s];s++)i.removeBinding(n);for(s=0;o=n.targets[s];s++)t&&o.show(),o.unbindEvents();n.dom.container.id.match(/^MixItUp/)&&n.dom.container.removeAttribute("id"),delete e.instances[n.id],n.callActions("afterDestroy",arguments)}}),e.IMoveData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.posIn=null,this.posOut=null,this.operation=null,this.callback=null,this.statusChange="",this.duration=-1,this.staggerIndex=-1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.IMoveData),e.IMoveData.prototype=Object.create(e.Base.prototype),e.IMoveData.prototype.constructor=e.IMoveData,e.TargetDom=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.TargetDom),e.TargetDom.prototype=Object.create(e.Base.prototype),e.TargetDom.prototype.constructor=e.TargetDom,e.Target=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.sortString="",this.mixer=null,this.callback=null,this.isShown=!1,this.isBound=!1,this.isExcluded=!1,this.isInDom=!1,this.handler=null,this.operation=null,this.data=null,this.dom=new e.TargetDom,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Target),e.Target.prototype=Object.create(e.Base.prototype),n.extend(e.Target.prototype,{constructor:e.Target,init:function(t,n,i){var o=this,s="";if(o.callActions("beforeInit",arguments),o.mixer=n,t||(t=o.render(i)),o.cacheDom(t),o.bindEvents(),"none"!==o.dom.el.style.display&&(o.isShown=!0),i&&n.config.data.uidKey){if(void 0===(s=i[n.config.data.uidKey])||s.toString().length<1)throw new TypeError(e.messages.errorDatasetInvalidUidKey({uidKey:n.config.data.uidKey}));o.id=s,o.data=i,n.cache[s]=o}o.callActions("afterInit",arguments)},render:function(t){var i=this,o=null,s=null,r=null,a="";if(i.callActions("beforeRender",arguments),"function"!=typeof(o=i.callFilters("renderRender",i.mixer.config.render.target,arguments)))throw new TypeError(e.messages.errorDatasetRendererNotSet());return(a=o(t))&&"object"==typeof a&&n.isElement(a)?s=a:"string"==typeof a&&((r=document.createElement("div")).innerHTML=a,s=r.firstElementChild),i.callFilters("elRender",s,arguments)},cacheDom:function(t){var e=this;e.callActions("beforeCacheDom",arguments),e.dom.el=t,e.callActions("afterCacheDom",arguments)},getSortString:function(t){var e=this,n=e.dom.el.getAttribute("data-"+t)||"";e.callActions("beforeGetSortString",arguments),n=isNaN(1*n)?n.toLowerCase():1*n,e.sortString=n,e.callActions("afterGetSortString",arguments)},show:function(){var t=this;t.callActions("beforeShow",arguments),t.isShown||(t.dom.el.style.display="",t.isShown=!0),t.callActions("afterShow",arguments)},hide:function(){var t=this;t.callActions("beforeHide",arguments),t.isShown&&(t.dom.el.style.display="none",t.isShown=!1),t.callActions("afterHide",arguments)},move:function(t){var e=this;e.callActions("beforeMove",arguments),e.isExcluded||e.mixer.targetsMoved++,e.applyStylesIn(t),requestAnimationFrame((function(){e.applyStylesOut(t)})),e.callActions("afterMove",arguments)},applyTween:function(t,n){var i=this,o="",s=null,r=t.posIn,a=[],l=new e.StyleData,c=-1;for(i.callActions("beforeApplyTween",arguments),l.x=r.x,l.y=r.y,0===n?i.hide():i.isShown||i.show(),c=0;o=e.features.TWEENABLE[c];c++)if(s=t.tweenData[o],"x"===o){if(!s)continue;l.x=r.x+s*n}else if("y"===o){if(!s)continue;l.y=r.y+s*n}else if(s instanceof e.TransformData){if(!s.value)continue;l[o].value=r[o].value+s.value*n,l[o].unit=s.unit,a.push(o+"("+l[o].value+s.unit+")")}else{if(!s)continue;l[o]=r[o]+s*n,i.dom.el.style[o]=l[o]}(l.x||l.y)&&a.unshift("translate("+l.x+"px, "+l.y+"px)"),a.length&&(i.dom.el.style[e.features.transformProp]=a.join(" ")),i.callActions("afterApplyTween",arguments)},applyStylesIn:function(t){var n=this,i=t.posIn,o=1!==n.mixer.effectsIn.opacity,s=[];n.callActions("beforeApplyStylesIn",arguments),s.push("translate("+i.x+"px, "+i.y+"px)"),n.mixer.config.animation.animateResizeTargets&&("show"!==t.statusChange&&(n.dom.el.style.width=i.width+"px",n.dom.el.style.height=i.height+"px"),n.dom.el.style.marginRight=i.marginRight+"px",n.dom.el.style.marginBottom=i.marginBottom+"px"),o&&(n.dom.el.style.opacity=i.opacity),"show"===t.statusChange&&(s=s.concat(n.mixer.transformIn)),n.dom.el.style[e.features.transformProp]=s.join(" "),n.callActions("afterApplyStylesIn",arguments)},applyStylesOut:function(t){var n=this,i=[],o=[],s=n.mixer.config.animation.animateResizeTargets,r=void 0!==n.mixer.effectsIn.opacity;if(n.callActions("beforeApplyStylesOut",arguments),i.push(n.writeTransitionRule(e.features.transformRule,t.staggerIndex)),"none"!==t.statusChange&&i.push(n.writeTransitionRule("opacity",t.staggerIndex,t.duration)),s&&(i.push(n.writeTransitionRule("width",t.staggerIndex,t.duration)),i.push(n.writeTransitionRule("height",t.staggerIndex,t.duration)),i.push(n.writeTransitionRule("margin",t.staggerIndex,t.duration))),!t.callback)return n.mixer.targetsImmovable++,void(n.mixer.targetsMoved===n.mixer.targetsImmovable&&n.mixer.cleanUp(t.operation));switch(n.operation=t.operation,n.callback=t.callback,!n.isExcluded&&n.mixer.targetsBound++,n.isBound=!0,n.applyTransition(i),s&&t.posOut.width>0&&t.posOut.height>0&&(n.dom.el.style.width=t.posOut.width+"px",n.dom.el.style.height=t.posOut.height+"px",n.dom.el.style.marginRight=t.posOut.marginRight+"px",n.dom.el.style.marginBottom=t.posOut.marginBottom+"px"),n.mixer.config.animation.nudge||"hide"!==t.statusChange||o.push("translate("+t.posOut.x+"px, "+t.posOut.y+"px)"),t.statusChange){case"hide":r&&(n.dom.el.style.opacity=n.mixer.effectsOut.opacity),o=o.concat(n.mixer.transformOut);break;case"show":r&&(n.dom.el.style.opacity=1)}(n.mixer.config.animation.nudge||!n.mixer.config.animation.nudge&&"hide"!==t.statusChange)&&o.push("translate("+t.posOut.x+"px, "+t.posOut.y+"px)"),n.dom.el.style[e.features.transformProp]=o.join(" "),n.callActions("afterApplyStylesOut",arguments)},writeTransitionRule:function(t,e,n){var i=this,o=i.getDelay(e),s="";return s=t+" "+(n>0?n:i.mixer.config.animation.duration)+"ms "+o+"ms "+("opacity"===t?"linear":i.mixer.config.animation.easing),i.callFilters("ruleWriteTransitionRule",s,arguments)},getDelay:function(t){var e=this,n=-1;return"function"==typeof e.mixer.config.animation.staggerSequence&&(t=e.mixer.config.animation.staggerSequence.call(e,t,e.state)),n=e.mixer.staggerDuration?t*e.mixer.staggerDuration:0,e.callFilters("delayGetDelay",n,arguments)},applyTransition:function(t){var n=this,i=t.join(", ");n.callActions("beforeApplyTransition",arguments),n.dom.el.style[e.features.transitionProp]=i,n.callActions("afterApplyTransition",arguments)},handleTransitionEnd:function(t){var e=this,n=t.propertyName,i=e.mixer.config.animation.animateResizeTargets;e.callActions("beforeHandleTransitionEnd",arguments),e.isBound&&t.target.matches(e.mixer.config.selectors.target)&&(n.indexOf("transform")>-1||n.indexOf("opacity")>-1||i&&n.indexOf("height")>-1||i&&n.indexOf("width")>-1||i&&n.indexOf("margin")>-1)&&(e.callback.call(e,e.operation),e.isBound=!1,e.callback=null,e.operation=null),e.callActions("afterHandleTransitionEnd",arguments)},eventBus:function(t){var e=this;switch(e.callActions("beforeEventBus",arguments),t.type){case"webkitTransitionEnd":case"transitionend":e.handleTransitionEnd(t)}e.callActions("afterEventBus",arguments)},unbindEvents:function(){var t=this;t.callActions("beforeUnbindEvents",arguments),n.off(t.dom.el,"webkitTransitionEnd",t.handler),n.off(t.dom.el,"transitionend",t.handler),t.callActions("afterUnbindEvents",arguments)},bindEvents:function(){var t=this,i="";t.callActions("beforeBindEvents",arguments),i="webkit"===e.features.transitionPrefix?"webkitTransitionEnd":"transitionend",t.handler=function(e){return t.eventBus(e)},n.on(t.dom.el,i,t.handler),t.callActions("afterBindEvents",arguments)},getPosData:function(n){var i=this,o={},s=null,r=new e.StyleData;return i.callActions("beforeGetPosData",arguments),r.x=i.dom.el.offsetLeft,r.y=i.dom.el.offsetTop,(i.mixer.config.animation.animateResizeTargets||n)&&(s=i.dom.el.getBoundingClientRect(),r.top=s.top,r.right=s.right,r.bottom=s.bottom,r.left=s.left,r.width=s.width,r.height=s.height),i.mixer.config.animation.animateResizeTargets&&(o=t.getComputedStyle(i.dom.el),r.marginBottom=parseFloat(o.marginBottom),r.marginRight=parseFloat(o.marginRight)),i.callFilters("posDataGetPosData",r,arguments)},cleanUp:function(){var t=this;t.callActions("beforeCleanUp",arguments),t.dom.el.style[e.features.transformProp]="",t.dom.el.style[e.features.transitionProp]="",t.dom.el.style.opacity="",t.mixer.config.animation.animateResizeTargets&&(t.dom.el.style.width="",t.dom.el.style.height="",t.dom.el.style.marginRight="",t.dom.el.style.marginBottom=""),t.callActions("afterCleanUp",arguments)}}),e.Collection=function(t){var e=null,i=-1;for(this.callActions("beforeConstruct"),i=0;e=t[i];i++)this[i]=e;this.length=t.length,this.callActions("afterConstruct"),n.freeze(this)},e.BaseStatic.call(e.Collection),e.Collection.prototype=Object.create(e.Base.prototype),n.extend(e.Collection.prototype,{constructor:e.Collection,mixitup:function(t){var i=this,o=null,s=Array.prototype.slice.call(arguments),r=[],a=-1;for(this.callActions("beforeMixitup"),s.shift(),a=0;o=i[a];a++)r.push(o[t].apply(o,s));return i.callFilters("promiseMixitup",n.all(r,e.libraries),arguments)}}),e.Operation=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.args=[],this.command=null,this.showPosData=[],this.toHidePosData=[],this.startState=null,this.newState=null,this.docState=null,this.willSort=!1,this.willChangeLayout=!1,this.hasEffect=!1,this.hasFailed=!1,this.triggerElement=null,this.show=[],this.hide=[],this.matching=[],this.toShow=[],this.toHide=[],this.toMove=[],this.toRemove=[],this.startOrder=[],this.newOrder=[],this.startSort=null,this.newSort=null,this.startFilter=null,this.newFilter=null,this.startDataset=null,this.newDataset=null,this.viewportDeltaX=0,this.viewportDeltaY=0,this.startX=0,this.startY=0,this.startHeight=0,this.startWidth=0,this.newX=0,this.newY=0,this.newHeight=0,this.newWidth=0,this.startContainerClassName="",this.startDisplay="",this.newContainerClassName="",this.newDisplay="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Operation),e.Operation.prototype=Object.create(e.Base.prototype),e.Operation.prototype.constructor=e.Operation,e.State=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.activeFilter=null,this.activeSort=null,this.activeContainerClassName="",this.container=null,this.targets=[],this.hide=[],this.show=[],this.matching=[],this.totalTargets=-1,this.totalShow=-1,this.totalHide=-1,this.totalMatching=-1,this.hasFailed=!1,this.triggerElement=null,this.activeDataset=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.State),e.State.prototype=Object.create(e.Base.prototype),e.State.prototype.constructor=e.State,e.UserInstruction=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.command={},this.animate=!1,this.callback=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.UserInstruction),e.UserInstruction.prototype=Object.create(e.Base.prototype),e.UserInstruction.prototype.constructor=e.UserInstruction,e.Messages=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.ERROR_FACTORY_INVALID_CONTAINER="[MixItUp] An invalid selector or element reference was passed to the mixitup factory function",this.ERROR_FACTORY_CONTAINER_NOT_FOUND="[MixItUp] The provided selector yielded no container element",this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS="[MixItUp] Invalid value for `animation.effects`",this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE="[MixItUp] Invalid value for `controls.scope`",this.ERROR_CONFIG_INVALID_PROPERTY='[MixitUp] Invalid configuration object property "${erroneous}"${suggestion}',this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION='. Did you mean "${probableMatch}"?',this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET="[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`",this.ERROR_DATASET_INVALID_UID_KEY='[MixItUp] The specified UID key "${uidKey}" is not present on one or more dataset items',this.ERROR_DATASET_DUPLICATE_UID='[MixItUp] The UID "${uid}" was found on two or more dataset items. UIDs must be unique.',this.ERROR_INSERT_INVALID_ARGUMENTS="[MixItUp] Please provider either an index or a sibling and position to insert, not both",this.ERROR_INSERT_PREEXISTING_ELEMENT="[MixItUp] An element to be inserted already exists in the container",this.ERROR_FILTER_INVALID_ARGUMENTS="[MixItUp] Please provide either a selector or collection `.filter()`, not both",this.ERROR_DATASET_NOT_SET="[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`",this.ERROR_DATASET_PRERENDERED_MISMATCH="[MixItUp] `load.dataset` does not match pre-rendered targets",this.ERROR_DATASET_RENDERER_NOT_SET="[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`",this.ERROR_SORT_NON_EXISTENT_ELEMENT="[MixItUp] An element to be sorted does not already exist in the container",this.WARNING_FACTORY_PREEXISTING_INSTANCE="[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored. If you wish to perform additional methods on this instance, please create a reference.",this.WARNING_INSERT_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.insert()`",this.WARNING_REMOVE_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.remove()`",this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL="[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the queue is full or queuing is disabled.",this.WARNING_GET_OPERATION_INSTANCE_BUSY="[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.",this.WARNING_NO_PROMISE_IMPLEMENTATION="[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install an ES6 Promise polyfill.",this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES='[MixItUp] WARNING: The requested sorting data attribute "${attribute}" was not present on one or more target elements which may product unexpected sort output',this.callActions("afterConstruct"),this.compileTemplates(),n.seal(this)},e.BaseStatic.call(e.Messages),e.Messages.prototype=Object.create(e.Base.prototype),e.Messages.prototype.constructor=e.Messages,e.Messages.prototype.compileTemplates=function(){var t="",e="";for(t in this)"string"==typeof(e=this[t])&&(this[n.camelCase(t)]=n.template(e))},e.messages=new e.Messages,e.Facade=function(t){e.Base.call(this),this.callActions("beforeConstruct",arguments),this.configure=t.configure.bind(t),this.show=t.show.bind(t),this.hide=t.hide.bind(t),this.filter=t.filter.bind(t),this.toggleOn=t.toggleOn.bind(t),this.toggleOff=t.toggleOff.bind(t),this.sort=t.sort.bind(t),this.changeLayout=t.changeLayout.bind(t),this.multimix=t.multimix.bind(t),this.dataset=t.dataset.bind(t),this.tween=t.tween.bind(t),this.insert=t.insert.bind(t),this.insertBefore=t.insertBefore.bind(t),this.insertAfter=t.insertAfter.bind(t),this.prepend=t.prepend.bind(t),this.append=t.append.bind(t),this.remove=t.remove.bind(t),this.destroy=t.destroy.bind(t),this.forceRefresh=t.forceRefresh.bind(t),this.forceRender=t.forceRender.bind(t),this.isMixing=t.isMixing.bind(t),this.getOperation=t.getOperation.bind(t),this.getConfig=t.getConfig.bind(t),this.getState=t.getState.bind(t),this.callActions("afterConstruct",arguments),n.freeze(this),n.seal(this)},e.BaseStatic.call(e.Facade),e.Facade.prototype=Object.create(e.Base.prototype),e.Facade.prototype.constructor=e.Facade,"object"==typeof exports&&"object"==typeof module?module.exports=e:"function"==typeof define&&define.amd?define((function(){return e})):void 0!==t.mixitup&&"function"==typeof t.mixitup||(t.mixitup=e),e.BaseStatic.call(e.constructor),e.NAME="mixitup",e.CORE_VERSION="3.3.1"}(window),function(t,e,n,i){"use strict";function o(t,e){var i,o,s,r=[],a=0;t&&t.isDefaultPrevented()||(t.preventDefault(),e=e||{},t&&t.data&&(e=f(t.data.options,e)),i=e.$target||n(t.currentTarget).trigger("blur"),(s=n.fancybox.getInstance())&&s.$trigger&&s.$trigger.is(i)||(e.selector?r=n(e.selector):(o=i.attr("data-fancybox")||"")?r=(r=t.data?t.data.items:[]).length?r.filter('[data-fancybox="'+o+'"]'):n('[data-fancybox="'+o+'"]'):r=[i],(a=n(r).index(i))<0&&(a=0),(s=n.fancybox.open(r,e,a)).$trigger=i))}if(t.console=t.console||{info:function(t){}},n){if(n.fn.fancybox)return void console.info("fancyBox already initialized");var s={closeExisting:!1,loop:!1,gutter:50,keyboard:!0,preventCaptionOverlap:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","slideShow","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},video:{tpl:'<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',format:"",autoStart:!0},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',smallBtn:'<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'},parentEl:"body",hideScrollbar:!0,autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:3e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:n.noop,beforeLoad:n.noop,afterLoad:n.noop,beforeShow:n.noop,afterShow:n.noop,beforeClose:n.noop,afterClose:n.noop,onActivate:n.noop,onDeactivate:n.noop,clickContent:function(t,e){return"image"===t.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{preventCaptionOverlap:!1,idleTime:!1,clickContent:function(t,e){return"image"===t.type&&"toggleControls"},clickSlide:function(t,e){return"image"===t.type?"toggleControls":"close"},dblclickContent:function(t,e){return"image"===t.type&&"zoom"},dblclickSlide:function(t,e){return"image"===t.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schlie&szlig;en",NEXT:"Weiter",PREV:"Zur&uuml;ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"Vergr&ouml;&szlig;ern"}}},r=n(t),a=n(e),l=0,c=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)},u=t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.mozCancelAnimationFrame||t.oCancelAnimationFrame||function(e){t.clearTimeout(e)},d=function(){var t,n=e.createElement("fakeelement"),i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in i)if(void 0!==n.style[t])return i[t];return"transitionend"}(),p=function(t){return t&&t.length&&t[0].offsetHeight},f=function(t,e){var i=n.extend(!0,{},t,e);return n.each(e,(function(t,e){n.isArray(e)&&(i[t]=e)})),i},h=function(t){var i,o;return!(!t||t.ownerDocument!==e)&&(n(".fancybox-container").css("pointer-events","none"),i={x:t.getBoundingClientRect().left+t.offsetWidth/2,y:t.getBoundingClientRect().top+t.offsetHeight/2},o=e.elementFromPoint(i.x,i.y)===t,n(".fancybox-container").css("pointer-events",""),o)},g=function(t,e,i){var o=this;o.opts=f({index:i},n.fancybox.defaults),n.isPlainObject(e)&&(o.opts=f(o.opts,e)),n.fancybox.isMobile&&(o.opts=f(o.opts,o.opts.mobile)),o.id=o.opts.id||++l,o.currIndex=parseInt(o.opts.index,10)||0,o.prevIndex=null,o.prevPos=null,o.currPos=0,o.firstRun=!0,o.group=[],o.slides={},o.addContent(t),o.group.length&&o.init()};n.extend(g.prototype,{init:function(){var i,o,s=this,r=s.group[s.currIndex].opts;r.closeExisting&&n.fancybox.close(!0),n("body").addClass("fancybox-active"),!n.fancybox.getInstance()&&!1!==r.hideScrollbar&&!n.fancybox.isMobile&&e.body.scrollHeight>t.innerHeight&&(n("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:'+(t.innerWidth-e.documentElement.clientWidth)+"px;}</style>"),n("body").addClass("compensate-for-scrollbar")),o="",n.each(r.buttons,(function(t,e){o+=r.btnTpl[e]||""})),i=n(s.translate(s,r.baseTpl.replace("{{buttons}}",o).replace("{{arrows}}",r.btnTpl.arrowLeft+r.btnTpl.arrowRight))).attr("id","fancybox-container-"+s.id).addClass(r.baseClass).data("FancyBox",s).appendTo(r.parentEl),s.$refs={container:i},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach((function(t){s.$refs[t]=i.find(".fancybox-"+t)})),s.trigger("onInit"),s.activate(),s.jumpTo(s.currIndex)},translate:function(t,e){var n=t.opts.i18n[t.opts.lang]||t.opts.i18n.en;return e.replace(/\{\{(\w+)\}\}/g,(function(t,e){return void 0===n[e]?t:n[e]}))},addContent:function(t){var e,i=this,o=n.makeArray(t);n.each(o,(function(t,e){var o,s,r,a,l,c={},u={};n.isPlainObject(e)?(c=e,u=e.opts||e):"object"===n.type(e)&&n(e).length?(u=(o=n(e)).data()||{},(u=n.extend(!0,{},u,u.options)).$orig=o,c.src=i.opts.src||u.src||o.attr("href"),c.type||c.src||(c.type="inline",c.src=e)):c={type:"html",src:e+""},c.opts=n.extend(!0,{},i.opts,u),n.isArray(u.buttons)&&(c.opts.buttons=u.buttons),n.fancybox.isMobile&&c.opts.mobile&&(c.opts=f(c.opts,c.opts.mobile)),s=c.type||c.opts.type,a=c.src||"",!s&&a&&((r=a.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(s="video",c.opts.video.format||(c.opts.video.format="video/"+("ogv"===r[1]?"ogg":r[1]))):a.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?s="image":a.match(/\.(pdf)((\?|#).*)?$/i)?(s="iframe",c=n.extend(!0,c,{contentType:"pdf",opts:{iframe:{preload:!1}}})):"#"===a.charAt(0)&&(s="inline")),s?c.type=s:i.trigger("objectNeedsType",c),c.contentType||(c.contentType=n.inArray(c.type,["html","inline","ajax"])>-1?"html":c.type),c.index=i.group.length,"auto"==c.opts.smallBtn&&(c.opts.smallBtn=n.inArray(c.type,["html","inline","ajax"])>-1),"auto"===c.opts.toolbar&&(c.opts.toolbar=!c.opts.smallBtn),c.$thumb=c.opts.$thumb||null,c.opts.$trigger&&c.index===i.opts.index&&(c.$thumb=c.opts.$trigger.find("img:first"),c.$thumb.length&&(c.opts.$orig=c.opts.$trigger)),c.$thumb&&c.$thumb.length||!c.opts.$orig||(c.$thumb=c.opts.$orig.find("img:first")),c.$thumb&&!c.$thumb.length&&(c.$thumb=null),c.thumb=c.opts.thumb||(c.$thumb?c.$thumb[0].src:null),"function"===n.type(c.opts.caption)&&(c.opts.caption=c.opts.caption.apply(e,[i,c])),"function"===n.type(i.opts.caption)&&(c.opts.caption=i.opts.caption.apply(e,[i,c])),c.opts.caption instanceof n||(c.opts.caption=void 0===c.opts.caption?"":c.opts.caption+""),"ajax"===c.type&&((l=a.split(/\s+/,2)).length>1&&(c.src=l.shift(),c.opts.filter=l.shift())),c.opts.modal&&(c.opts=n.extend(!0,c.opts,{trapFocus:!0,infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),i.group.push(c)})),Object.keys(i.slides).length&&(i.updateControls(),(e=i.Thumbs)&&e.isActive&&(e.create(),e.focus()))},addEvents:function(){var e=this;e.removeEvents(),e.$refs.container.on("click.fb-close","[data-fancybox-close]",(function(t){t.stopPropagation(),t.preventDefault(),e.close(t)})).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",(function(t){t.stopPropagation(),t.preventDefault(),e.previous()})).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",(function(t){t.stopPropagation(),t.preventDefault(),e.next()})).on("click.fb","[data-fancybox-zoom]",(function(t){e[e.isScaledDown()?"scaleToActual":"scaleToFit"]()})),r.on("orientationchange.fb resize.fb",(function(t){t&&t.originalEvent&&"resize"===t.originalEvent.type?(e.requestId&&u(e.requestId),e.requestId=c((function(){e.update(t)}))):(e.current&&"iframe"===e.current.type&&e.$refs.stage.hide(),setTimeout((function(){e.$refs.stage.show(),e.update(t)}),n.fancybox.isMobile?600:250))})),a.on("keydown.fb",(function(t){var i=(n.fancybox?n.fancybox.getInstance():null).current,o=t.keyCode||t.which;if(9!=o)return!i.opts.keyboard||t.ctrlKey||t.altKey||t.shiftKey||n(t.target).is("input,textarea,video,audio,select")?void 0:8===o||27===o?(t.preventDefault(),void e.close(t)):37===o||38===o?(t.preventDefault(),void e.previous()):39===o||40===o?(t.preventDefault(),void e.next()):void e.trigger("afterKeydown",t,o);i.opts.trapFocus&&e.focus(t)})),e.group[e.currIndex].opts.idleTime&&(e.idleSecondsCounter=0,a.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",(function(t){e.idleSecondsCounter=0,e.isIdle&&e.showControls(),e.isIdle=!1})),e.idleInterval=t.setInterval((function(){++e.idleSecondsCounter>=e.group[e.currIndex].opts.idleTime&&!e.isDragging&&(e.isIdle=!0,e.idleSecondsCounter=0,e.hideControls())}),1e3))},removeEvents:function(){var e=this;r.off("orientationchange.fb resize.fb"),a.off("keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),e.idleInterval&&(t.clearInterval(e.idleInterval),e.idleInterval=null)},previous:function(t){return this.jumpTo(this.currPos-1,t)},next:function(t){return this.jumpTo(this.currPos+1,t)},jumpTo:function(t,e){var i,o,s,r,a,l,c,u,d,f=this,h=f.group.length;if(!(f.isDragging||f.isClosing||f.isAnimating&&f.firstRun)){if(t=parseInt(t,10),!(s=f.current?f.current.opts.loop:f.opts.loop)&&(t<0||t>=h))return!1;if(i=f.firstRun=!Object.keys(f.slides).length,a=f.current,f.prevIndex=f.currIndex,f.prevPos=f.currPos,r=f.createSlide(t),h>1&&((s||r.index<h-1)&&f.createSlide(t+1),(s||r.index>0)&&f.createSlide(t-1)),f.current=r,f.currIndex=r.index,f.currPos=r.pos,f.trigger("beforeShow",i),f.updateControls(),r.forcedDuration=void 0,n.isNumeric(e)?r.forcedDuration=e:e=r.opts[i?"animationDuration":"transitionDuration"],e=parseInt(e,10),o=f.isMoved(r),r.$slide.addClass("fancybox-slide--current"),i)return r.opts.animationEffect&&e&&f.$refs.container.css("transition-duration",e+"ms"),f.$refs.container.addClass("fancybox-is-open").trigger("focus"),f.loadSlide(r),void f.preload("image");l=n.fancybox.getTranslate(a.$slide),c=n.fancybox.getTranslate(f.$refs.stage),n.each(f.slides,(function(t,e){n.fancybox.stop(e.$slide,!0)})),a.pos!==r.pos&&(a.isComplete=!1),a.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"),o?(d=l.left-(a.pos*l.width+a.pos*a.opts.gutter),n.each(f.slides,(function(t,i){i.$slide.removeClass("fancybox-animated").removeClass((function(t,e){return(e.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")}));var o=i.pos*l.width+i.pos*i.opts.gutter;n.fancybox.setTranslate(i.$slide,{top:0,left:o-c.left+d}),i.pos!==r.pos&&i.$slide.addClass("fancybox-slide--"+(i.pos>r.pos?"next":"previous")),p(i.$slide),n.fancybox.animate(i.$slide,{top:0,left:(i.pos-r.pos)*l.width+(i.pos-r.pos)*i.opts.gutter},e,(function(){i.$slide.css({transform:"",opacity:""}).removeClass("fancybox-slide--next fancybox-slide--previous"),i.pos===f.currPos&&f.complete()}))}))):e&&r.opts.transitionEffect&&(u="fancybox-animated fancybox-fx-"+r.opts.transitionEffect,a.$slide.addClass("fancybox-slide--"+(a.pos>r.pos?"next":"previous")),n.fancybox.animate(a.$slide,u,e,(function(){a.$slide.removeClass(u).removeClass("fancybox-slide--next fancybox-slide--previous")}),!1)),r.isLoaded?f.revealContent(r):f.loadSlide(r),f.preload("image")}},createSlide:function(t){var e,i,o=this;return i=(i=t%o.group.length)<0?o.group.length+i:i,!o.slides[t]&&o.group[i]&&(e=n('<div class="fancybox-slide"></div>').appendTo(o.$refs.stage),o.slides[t]=n.extend(!0,{},o.group[i],{pos:t,$slide:e,isLoaded:!1}),o.updateSlide(o.slides[t])),o.slides[t]},scaleToActual:function(t,e,i){var o,s,r,a,l,c=this,u=c.current,d=u.$content,p=n.fancybox.getTranslate(u.$slide).width,f=n.fancybox.getTranslate(u.$slide).height,h=u.width,g=u.height;c.isAnimating||c.isMoved()||!d||"image"!=u.type||!u.isLoaded||u.hasError||(c.isAnimating=!0,n.fancybox.stop(d),t=void 0===t?.5*p:t,e=void 0===e?.5*f:e,(o=n.fancybox.getTranslate(d)).top-=n.fancybox.getTranslate(u.$slide).top,o.left-=n.fancybox.getTranslate(u.$slide).left,a=h/o.width,l=g/o.height,s=.5*p-.5*h,r=.5*f-.5*g,h>p&&((s=o.left*a-(t*a-t))>0&&(s=0),s<p-h&&(s=p-h)),g>f&&((r=o.top*l-(e*l-e))>0&&(r=0),r<f-g&&(r=f-g)),c.updateCursor(h,g),n.fancybox.animate(d,{top:r,left:s,scaleX:a,scaleY:l},i||366,(function(){c.isAnimating=!1})),c.SlideShow&&c.SlideShow.isActive&&c.SlideShow.stop())},scaleToFit:function(t){var e,i=this,o=i.current,s=o.$content;i.isAnimating||i.isMoved()||!s||"image"!=o.type||!o.isLoaded||o.hasError||(i.isAnimating=!0,n.fancybox.stop(s),e=i.getFitPos(o),i.updateCursor(e.width,e.height),n.fancybox.animate(s,{top:e.top,left:e.left,scaleX:e.width/s.width(),scaleY:e.height/s.height()},t||366,(function(){i.isAnimating=!1})))},getFitPos:function(t){var e,i,o,s,r=t.$content,a=t.$slide,l=t.width||t.opts.width,c=t.height||t.opts.height,u={};return!!(t.isLoaded&&r&&r.length)&&(e=n.fancybox.getTranslate(this.$refs.stage).width,i=n.fancybox.getTranslate(this.$refs.stage).height,e-=parseFloat(a.css("paddingLeft"))+parseFloat(a.css("paddingRight"))+parseFloat(r.css("marginLeft"))+parseFloat(r.css("marginRight")),i-=parseFloat(a.css("paddingTop"))+parseFloat(a.css("paddingBottom"))+parseFloat(r.css("marginTop"))+parseFloat(r.css("marginBottom")),l&&c||(l=e,c=i),(l*=o=Math.min(1,e/l,i/c))>e-.5&&(l=e),(c*=o)>i-.5&&(c=i),"image"===t.type?(u.top=Math.floor(.5*(i-c))+parseFloat(a.css("paddingTop")),u.left=Math.floor(.5*(e-l))+parseFloat(a.css("paddingLeft"))):"video"===t.contentType&&(c>l/(s=t.opts.width&&t.opts.height?l/c:t.opts.ratio||16/9)?c=l/s:l>c*s&&(l=c*s)),u.width=l,u.height=c,u)},update:function(t){var e=this;n.each(e.slides,(function(n,i){e.updateSlide(i,t)}))},updateSlide:function(t,e){var i=this,o=t&&t.$content,s=t.width||t.opts.width,r=t.height||t.opts.height,a=t.$slide;i.adjustCaption(t),o&&(s||r||"video"===t.contentType)&&!t.hasError&&(n.fancybox.stop(o),n.fancybox.setTranslate(o,i.getFitPos(t)),t.pos===i.currPos&&(i.isAnimating=!1,i.updateCursor())),i.adjustLayout(t),a.length&&(a.trigger("refresh"),t.pos===i.currPos&&i.$refs.toolbar.add(i.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar",a.get(0).scrollHeight>a.get(0).clientHeight)),i.trigger("onUpdate",t,e)},centerSlide:function(t){var e=this,i=e.current,o=i.$slide;!e.isClosing&&i&&(o.siblings().css({transform:"",opacity:""}),o.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"),n.fancybox.animate(o,{top:0,left:0,opacity:1},void 0===t?0:t,(function(){o.css({transform:"",opacity:""}),i.isComplete||e.complete()}),!1))},isMoved:function(t){var e,i,o=t||this.current;return!!o&&(i=n.fancybox.getTranslate(this.$refs.stage),e=n.fancybox.getTranslate(o.$slide),!o.$slide.hasClass("fancybox-animated")&&(Math.abs(e.top-i.top)>.5||Math.abs(e.left-i.left)>.5))},updateCursor:function(t,e){var i,o,s=this,r=s.current,a=s.$refs.container;r&&!s.isClosing&&s.Guestures&&(a.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"),o=!!(i=s.canPan(t,e))||s.isZoomable(),a.toggleClass("fancybox-is-zoomable",o),n("[data-fancybox-zoom]").prop("disabled",!o),i?a.addClass("fancybox-can-pan"):o&&("zoom"===r.opts.clickContent||n.isFunction(r.opts.clickContent)&&"zoom"==r.opts.clickContent(r))?a.addClass("fancybox-can-zoomIn"):r.opts.touch&&(r.opts.touch.vertical||s.group.length>1)&&"video"!==r.contentType&&a.addClass("fancybox-can-swipe"))},isZoomable:function(){var t,e=this,n=e.current;if(n&&!e.isClosing&&"image"===n.type&&!n.hasError){if(!n.isLoaded)return!0;if((t=e.getFitPos(n))&&(n.width>t.width||n.height>t.height))return!0}return!1},isScaledDown:function(t,e){var i=!1,o=this.current,s=o.$content;return void 0!==t&&void 0!==e?i=t<o.width&&e<o.height:s&&(i=(i=n.fancybox.getTranslate(s)).width<o.width&&i.height<o.height),i},canPan:function(t,e){var i=this.current,o=null,s=!1;return"image"===i.type&&(i.isComplete||t&&e)&&!i.hasError&&(s=this.getFitPos(i),void 0!==t&&void 0!==e?o={width:t,height:e}:i.isComplete&&(o=n.fancybox.getTranslate(i.$content)),o&&s&&(s=Math.abs(o.width-s.width)>1.5||Math.abs(o.height-s.height)>1.5)),s},loadSlide:function(t){var e,i,o,s=this;if(!t.isLoading&&!t.isLoaded){if(t.isLoading=!0,!1===s.trigger("beforeLoad",t))return t.isLoading=!1,!1;switch(e=t.type,(i=t.$slide).off("refresh").trigger("onReset").addClass(t.opts.slideClass),e){case"image":s.setImage(t);break;case"iframe":s.setIframe(t);break;case"html":s.setContent(t,t.src||t.content);break;case"video":s.setContent(t,t.opts.video.tpl.replace(/\{\{src\}\}/gi,t.src).replace("{{format}}",t.opts.videoFormat||t.opts.video.format||"").replace("{{poster}}",t.thumb||""));break;case"inline":n(t.src).length?s.setContent(t,n(t.src)):s.setError(t);break;case"ajax":s.showLoading(t),o=n.ajax(n.extend({},t.opts.ajax.settings,{url:t.src,success:function(e,n){"success"===n&&s.setContent(t,e)},error:function(e,n){e&&"abort"!==n&&s.setError(t)}})),i.one("onReset",(function(){o.abort()}));break;default:s.setError(t)}return!0}},setImage:function(t){var i,o=this;setTimeout((function(){var e=t.$image;o.isClosing||!t.isLoading||e&&e.length&&e[0].complete||t.hasError||o.showLoading(t)}),50),o.checkSrcset(t),t.$content=n('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(t.$slide.addClass("fancybox-slide--image")),!1!==t.opts.preload&&t.opts.width&&t.opts.height&&t.thumb&&(t.width=t.opts.width,t.height=t.opts.height,(i=e.createElement("img")).onerror=function(){n(this).remove(),t.$ghost=null},i.onload=function(){o.afterLoad(t)},t.$ghost=n(i).addClass("fancybox-image").appendTo(t.$content).attr("src",t.thumb)),o.setBigImage(t)},checkSrcset:function(e){var n,i,o,s,r=e.opts.srcset||e.opts.image.srcset;if(r){o=t.devicePixelRatio||1,s=t.innerWidth*o,(i=r.split(",").map((function(t){var e={};return t.trim().split(/\s+/).forEach((function(t,n){var i=parseInt(t.substring(0,t.length-1),10);if(0===n)return e.url=t;i&&(e.value=i,e.postfix=t[t.length-1])})),e}))).sort((function(t,e){return t.value-e.value}));for(var a=0;a<i.length;a++){var l=i[a];if("w"===l.postfix&&l.value>=s||"x"===l.postfix&&l.value>=o){n=l;break}}!n&&i.length&&(n=i[i.length-1]),n&&(e.src=n.url,e.width&&e.height&&"w"==n.postfix&&(e.height=e.width/e.height*n.value,e.width=n.value),e.opts.srcset=r)}},setBigImage:function(t){var i=this,o=e.createElement("img"),s=n(o);t.$image=s.one("error",(function(){i.setError(t)})).one("load",(function(){var e;t.$ghost||(i.resolveImageSlideSize(t,this.naturalWidth,this.naturalHeight),i.afterLoad(t)),i.isClosing||(t.opts.srcset&&((e=t.opts.sizes)&&"auto"!==e||(e=(t.width/t.height>1&&r.width()/r.height()>1?"100":Math.round(t.width/t.height*100))+"vw"),s.attr("sizes",e).attr("srcset",t.opts.srcset)),t.$ghost&&setTimeout((function(){t.$ghost&&!i.isClosing&&t.$ghost.hide()}),Math.min(300,Math.max(1e3,t.height/1600))),i.hideLoading(t))})).addClass("fancybox-image").attr("src",t.src).appendTo(t.$content),(o.complete||"complete"==o.readyState)&&s.naturalWidth&&s.naturalHeight?s.trigger("load"):o.error&&s.trigger("error")},resolveImageSlideSize:function(t,e,n){var i=parseInt(t.opts.width,10),o=parseInt(t.opts.height,10);t.width=e,t.height=n,i>0&&(t.width=i,t.height=Math.floor(i*n/e)),o>0&&(t.width=Math.floor(o*e/n),t.height=o)},setIframe:function(t){var e,i=this,o=t.opts.iframe,s=t.$slide;t.$content=n('<div class="fancybox-content'+(o.preload?" fancybox-is-hidden":"")+'"></div>').css(o.css).appendTo(s),s.addClass("fancybox-slide--"+t.contentType),t.$iframe=e=n(o.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(o.attr).appendTo(t.$content),o.preload?(i.showLoading(t),e.on("load.fb error.fb",(function(e){this.isReady=1,t.$slide.trigger("refresh"),i.afterLoad(t)})),s.on("refresh.fb",(function(){var n,i=t.$content,r=o.css.width,a=o.css.height;if(1===e[0].isReady){try{n=e.contents().find("body")}catch(t){}n&&n.length&&n.children().length&&(s.css("overflow","visible"),i.css({width:"100%","max-width":"100%",height:"9999px"}),void 0===r&&(r=Math.ceil(Math.max(n[0].clientWidth,n.outerWidth(!0)))),i.css("width",r||"").css("max-width",""),void 0===a&&(a=Math.ceil(Math.max(n[0].clientHeight,n.outerHeight(!0)))),i.css("height",a||""),s.css("overflow","auto")),i.removeClass("fancybox-is-hidden")}}))):i.afterLoad(t),e.attr("src",t.src),s.one("onReset",(function(){try{n(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(t){}n(this).off("refresh.fb").empty(),t.isLoaded=!1,t.isRevealed=!1}))},setContent:function(t,e){var i=this;i.isClosing||(i.hideLoading(t),t.$content&&n.fancybox.stop(t.$content),t.$slide.empty(),function(t){return t&&t.hasOwnProperty&&t instanceof n}(e)&&e.parent().length?((e.hasClass("fancybox-content")||e.parent().hasClass("fancybox-content"))&&e.parents(".fancybox-slide").trigger("onReset"),t.$placeholder=n("<div>").hide().insertAfter(e),e.css("display","inline-block")):t.hasError||("string"===n.type(e)&&(e=n("<div>").append(n.trim(e)).contents()),t.opts.filter&&(e=n("<div>").html(e).find(t.opts.filter))),t.$slide.one("onReset",(function(){n(this).find("video,audio").trigger("pause"),t.$placeholder&&(t.$placeholder.after(e.removeClass("fancybox-content").hide()).remove(),t.$placeholder=null),t.$smallBtn&&(t.$smallBtn.remove(),t.$smallBtn=null),t.hasError||(n(this).empty(),t.isLoaded=!1,t.isRevealed=!1)})),n(e).appendTo(t.$slide),n(e).is("video,audio")&&(n(e).addClass("fancybox-video"),n(e).wrap("<div></div>"),t.contentType="video",t.opts.width=t.opts.width||n(e).attr("width"),t.opts.height=t.opts.height||n(e).attr("height")),t.$content=t.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(),t.$content.siblings().hide(),t.$content.length||(t.$content=t.$slide.wrapInner("<div></div>").children().first()),t.$content.addClass("fancybox-content"),t.$slide.addClass("fancybox-slide--"+t.contentType),i.afterLoad(t))},setError:function(t){t.hasError=!0,t.$slide.trigger("onReset").removeClass("fancybox-slide--"+t.contentType).addClass("fancybox-slide--error"),t.contentType="html",this.setContent(t,this.translate(t,t.opts.errorTpl)),t.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(t){var e=this;(t=t||e.current)&&!t.$spinner&&(t.$spinner=n(e.translate(e,e.opts.spinnerTpl)).appendTo(t.$slide).hide().fadeIn("fast"))},hideLoading:function(t){(t=t||this.current)&&t.$spinner&&(t.$spinner.stop().remove(),delete t.$spinner)},afterLoad:function(t){var e=this;e.isClosing||(t.isLoading=!1,t.isLoaded=!0,e.trigger("afterLoad",t),e.hideLoading(t),!t.opts.smallBtn||t.$smallBtn&&t.$smallBtn.length||(t.$smallBtn=n(e.translate(t,t.opts.btnTpl.smallBtn)).appendTo(t.$content)),t.opts.protect&&t.$content&&!t.hasError&&(t.$content.on("contextmenu.fb",(function(t){return 2==t.button&&t.preventDefault(),!0})),"image"===t.type&&n('<div class="fancybox-spaceball"></div>').appendTo(t.$content)),e.adjustCaption(t),e.adjustLayout(t),t.pos===e.currPos&&e.updateCursor(),e.revealContent(t))},adjustCaption:function(t){var e,n=this,i=t||n.current,o=i.opts.caption,s=i.opts.preventCaptionOverlap,r=n.$refs.caption,a=!1;r.toggleClass("fancybox-caption--separate",s),s&&o&&o.length&&(i.pos!==n.currPos?((e=r.clone().appendTo(r.parent())).children().eq(0).empty().html(o),a=e.outerHeight(!0),e.empty().remove()):n.$caption&&(a=n.$caption.outerHeight(!0)),i.$slide.css("padding-bottom",a||""))},adjustLayout:function(t){var e,n,i,o,s=t||this.current;s.isLoaded&&!0!==s.opts.disableLayoutFix&&(s.$content.css("margin-bottom",""),s.$content.outerHeight()>s.$slide.height()+.5&&(i=s.$slide[0].style["padding-bottom"],o=s.$slide.css("padding-bottom"),parseFloat(o)>0&&(e=s.$slide[0].scrollHeight,s.$slide.css("padding-bottom",0),Math.abs(e-s.$slide[0].scrollHeight)<1&&(n=o),s.$slide.css("padding-bottom",i))),s.$content.css("margin-bottom",n))},revealContent:function(t){var e,i,o,s,r=this,a=t.$slide,l=!1,c=!1,u=r.isMoved(t),d=t.isRevealed;return t.isRevealed=!0,e=t.opts[r.firstRun?"animationEffect":"transitionEffect"],o=t.opts[r.firstRun?"animationDuration":"transitionDuration"],o=parseInt(void 0===t.forcedDuration?o:t.forcedDuration,10),!u&&t.pos===r.currPos&&o||(e=!1),"zoom"===e&&(t.pos===r.currPos&&o&&"image"===t.type&&!t.hasError&&(c=r.getThumbPos(t))?l=r.getFitPos(t):e="fade"),"zoom"===e?(r.isAnimating=!0,l.scaleX=l.width/c.width,l.scaleY=l.height/c.height,"auto"==(s=t.opts.zoomOpacity)&&(s=Math.abs(t.width/t.height-c.width/c.height)>.1),s&&(c.opacity=.1,l.opacity=1),n.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),c),p(t.$content),void n.fancybox.animate(t.$content,l,o,(function(){r.isAnimating=!1,r.complete()}))):(r.updateSlide(t),e?(n.fancybox.stop(a),i="fancybox-slide--"+(t.pos>=r.prevPos?"next":"previous")+" fancybox-animated fancybox-fx-"+e,a.addClass(i).removeClass("fancybox-slide--current"),t.$content.removeClass("fancybox-is-hidden"),p(a),"image"!==t.type&&t.$content.hide().show(0),void n.fancybox.animate(a,"fancybox-slide--current",o,(function(){a.removeClass(i).css({transform:"",opacity:""}),t.pos===r.currPos&&r.complete()}),!0)):(t.$content.removeClass("fancybox-is-hidden"),d||!u||"image"!==t.type||t.hasError||t.$content.hide().fadeIn("fast"),void(t.pos===r.currPos&&r.complete())))},getThumbPos:function(t){var e,i,o,s,r,a=!1,l=t.$thumb;return!(!l||!h(l[0]))&&(e=n.fancybox.getTranslate(l),i=parseFloat(l.css("border-top-width")||0),o=parseFloat(l.css("border-right-width")||0),s=parseFloat(l.css("border-bottom-width")||0),r=parseFloat(l.css("border-left-width")||0),a={top:e.top+i,left:e.left+r,width:e.width-o-r,height:e.height-i-s,scaleX:1,scaleY:1},e.width>0&&e.height>0&&a)},complete:function(){var t,e=this,i=e.current,o={};!e.isMoved()&&i.isLoaded&&(i.isComplete||(i.isComplete=!0,i.$slide.siblings().trigger("onReset"),e.preload("inline"),p(i.$slide),i.$slide.addClass("fancybox-slide--complete"),n.each(e.slides,(function(t,i){i.pos>=e.currPos-1&&i.pos<=e.currPos+1?o[i.pos]=i:i&&(n.fancybox.stop(i.$slide),i.$slide.off().remove())})),e.slides=o),e.isAnimating=!1,e.updateCursor(),e.trigger("afterShow"),i.opts.video.autoStart&&i.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended",(function(){Document.exitFullscreen?Document.exitFullscreen():this.webkitExitFullscreen&&this.webkitExitFullscreen(),e.next()})),i.opts.autoFocus&&"html"===i.contentType&&((t=i.$content.find("input[autofocus]:enabled:visible:first")).length?t.trigger("focus"):e.focus(null,!0)),i.$slide.scrollTop(0).scrollLeft(0))},preload:function(t){var e,n,i=this;i.group.length<2||(n=i.slides[i.currPos+1],(e=i.slides[i.currPos-1])&&e.type===t&&i.loadSlide(e),n&&n.type===t&&i.loadSlide(n))},focus:function(t,i){var o,s,r=this,a=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","video","audio","[contenteditable]",'[tabindex]:not([tabindex^="-"])'].join(",");r.isClosing||((o=(o=!t&&r.current&&r.current.isComplete?r.current.$slide.find("*:visible"+(i?":not(.fancybox-close-small)":"")):r.$refs.container.find("*:visible")).filter(a).filter((function(){return"hidden"!==n(this).css("visibility")&&!n(this).hasClass("disabled")}))).length?(s=o.index(e.activeElement),t&&t.shiftKey?(s<0||0==s)&&(t.preventDefault(),o.eq(o.length-1).trigger("focus")):(s<0||s==o.length-1)&&(t&&t.preventDefault(),o.eq(0).trigger("focus"))):r.$refs.container.trigger("focus"))},activate:function(){var t=this;n(".fancybox-container").each((function(){var e=n(this).data("FancyBox");e&&e.id!==t.id&&!e.isClosing&&(e.trigger("onDeactivate"),e.removeEvents(),e.isVisible=!1)})),t.isVisible=!0,(t.current||t.isIdle)&&(t.update(),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(t,e){var i,o,s,r,a,l,u,d=this,f=d.current,h=function(){d.cleanUp(t)};return!(d.isClosing||(d.isClosing=!0,!1===d.trigger("beforeClose",t)?(d.isClosing=!1,c((function(){d.update()})),1):(d.removeEvents(),s=f.$content,i=f.opts.animationEffect,o=n.isNumeric(e)?e:i?f.opts.animationDuration:0,f.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),!0!==t?n.fancybox.stop(f.$slide):i=!1,f.$slide.siblings().trigger("onReset").remove(),o&&d.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration",o+"ms"),d.hideLoading(f),d.hideControls(!0),d.updateCursor(),"zoom"!==i||s&&o&&"image"===f.type&&!d.isMoved()&&!f.hasError&&(u=d.getThumbPos(f))||(i="fade"),"zoom"===i?(n.fancybox.stop(s),r=n.fancybox.getTranslate(s),l={top:r.top,left:r.left,scaleX:r.width/u.width,scaleY:r.height/u.height,width:u.width,height:u.height},a=f.opts.zoomOpacity,"auto"==a&&(a=Math.abs(f.width/f.height-u.width/u.height)>.1),a&&(u.opacity=0),n.fancybox.setTranslate(s,l),p(s),n.fancybox.animate(s,u,o,h),0):(i&&o?n.fancybox.animate(f.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"),"fancybox-animated fancybox-fx-"+i,o,h):!0===t?setTimeout(h,o):h(),0))))},cleanUp:function(e){var i,o,s,r=this,a=r.current.opts.$orig;r.current.$slide.trigger("onReset"),r.$refs.container.empty().remove(),r.trigger("afterClose",e),r.current.opts.backFocus&&(a&&a.length&&a.is(":visible")||(a=r.$trigger),a&&a.length&&(o=t.scrollX,s=t.scrollY,a.trigger("focus"),n("html, body").scrollTop(s).scrollLeft(o))),r.current=null,(i=n.fancybox.getInstance())?i.activate():(n("body").removeClass("fancybox-active compensate-for-scrollbar"),n("#fancybox-style-noscroll").remove())},trigger:function(t,e){var i,o=Array.prototype.slice.call(arguments,1),s=this,r=e&&e.opts?e:s.current;if(r?o.unshift(r):r=s,o.unshift(s),n.isFunction(r.opts[t])&&(i=r.opts[t].apply(r,o)),!1===i)return i;"afterClose"!==t&&s.$refs?s.$refs.container.trigger(t+".fb",o):a.trigger(t+".fb",o)},updateControls:function(){var t=this,i=t.current,o=i.index,s=t.$refs.container,r=t.$refs.caption,a=i.opts.caption;i.$slide.trigger("refresh"),a&&a.length?(t.$caption=r,r.children().eq(0).html(a)):t.$caption=null,t.hasHiddenControls||t.isIdle||t.showControls(),s.find("[data-fancybox-count]").html(t.group.length),s.find("[data-fancybox-index]").html(o+1),s.find("[data-fancybox-prev]").prop("disabled",!i.opts.loop&&o<=0),s.find("[data-fancybox-next]").prop("disabled",!i.opts.loop&&o>=t.group.length-1),"image"===i.type?s.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",i.opts.image.src||i.src).show():i.opts.toolbar&&s.find("[data-fancybox-download],[data-fancybox-zoom]").hide(),n(e.activeElement).is(":hidden,[disabled]")&&t.$refs.container.trigger("focus")},hideControls:function(t){var e=["infobar","toolbar","nav"];!t&&this.current.opts.preventCaptionOverlap||e.push("caption"),this.$refs.container.removeClass(e.map((function(t){return"fancybox-show-"+t})).join(" ")),this.hasHiddenControls=!0},showControls:function(){var t=this,e=t.current?t.current.opts:t.opts,n=t.$refs.container;t.hasHiddenControls=!1,t.idleSecondsCounter=0,n.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&t.group.length>1)).toggleClass("fancybox-show-caption",!!t.$caption).toggleClass("fancybox-show-nav",!!(e.arrows&&t.group.length>1)).toggleClass("fancybox-is-modal",!!e.modal)},toggleControls:function(){this.hasHiddenControls?this.showControls():this.hideControls()}}),n.fancybox={version:"3.5.7",defaults:s,getInstance:function(t){var e=n('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),i=Array.prototype.slice.call(arguments,1);return e instanceof g&&("string"===n.type(t)?e[t].apply(e,i):"function"===n.type(t)&&t.apply(e,i),e)},open:function(t,e,n){return new g(t,e,n)},close:function(t){var e=this.getInstance();e&&(e.close(),!0===t&&this.close(t))},destroy:function(){this.close(!0),a.add("body").off("click.fb-start","**")},isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:function(){var n=e.createElement("div");return t.getComputedStyle&&t.getComputedStyle(n)&&t.getComputedStyle(n).getPropertyValue("transform")&&!(e.documentMode&&e.documentMode<11)}(),getTranslate:function(t){var e;return!(!t||!t.length)&&{top:(e=t[0].getBoundingClientRect()).top||0,left:e.left||0,width:e.width,height:e.height,opacity:parseFloat(t.css("opacity"))}},setTranslate:function(t,e){var n="",i={};if(t&&e)return void 0===e.left&&void 0===e.top||(n=(void 0===e.left?t.position().left:e.left)+"px, "+(void 0===e.top?t.position().top:e.top)+"px",n=this.use3d?"translate3d("+n+", 0px)":"translate("+n+")"),void 0!==e.scaleX&&void 0!==e.scaleY?n+=" scale("+e.scaleX+", "+e.scaleY+")":void 0!==e.scaleX&&(n+=" scaleX("+e.scaleX+")"),n.length&&(i.transform=n),void 0!==e.opacity&&(i.opacity=e.opacity),void 0!==e.width&&(i.width=e.width),void 0!==e.height&&(i.height=e.height),t.css(i)},animate:function(t,e,i,o,s){var r,a=this;n.isFunction(i)&&(o=i,i=null),a.stop(t),r=a.getTranslate(t),t.on(d,(function(l){(!l||!l.originalEvent||t.is(l.originalEvent.target)&&"z-index"!=l.originalEvent.propertyName)&&(a.stop(t),n.isNumeric(i)&&t.css("transition-duration",""),n.isPlainObject(e)?void 0!==e.scaleX&&void 0!==e.scaleY&&a.setTranslate(t,{top:e.top,left:e.left,width:r.width*e.scaleX,height:r.height*e.scaleY,scaleX:1,scaleY:1}):!0!==s&&t.removeClass(e),n.isFunction(o)&&o(l))})),n.isNumeric(i)&&t.css("transition-duration",i+"ms"),n.isPlainObject(e)?(void 0!==e.scaleX&&void 0!==e.scaleY&&(delete e.width,delete e.height,t.parent().hasClass("fancybox-slide--image")&&t.parent().addClass("fancybox-is-scaling")),n.fancybox.setTranslate(t,e)):t.addClass(e),t.data("timer",setTimeout((function(){t.trigger(d)}),i+33))},stop:function(t,e){t&&t.length&&(clearTimeout(t.data("timer")),e&&t.trigger(d),t.off(d).css("transition-duration",""),t.parent().removeClass("fancybox-is-scaling"))}},n.fn.fancybox=function(t){var e;return(e=(t=t||{}).selector||!1)?n("body").off("click.fb-start",e).on("click.fb-start",e,{options:t},o):this.off("click.fb-start").on("click.fb-start",{items:this,options:t},o),this},a.on("click.fb-start","[data-fancybox]",o),a.on("click.fb-start","[data-fancybox-trigger]",(function(t){n('[data-fancybox="'+n(this).attr("data-fancybox-trigger")+'"]').eq(n(this).attr("data-fancybox-index")||0).trigger("click.fb-start",{$trigger:n(this)})})),function(){var t=null;a.on("mousedown mouseup focus blur",".fancybox-button",(function(e){switch(e.type){case"mousedown":t=n(this);break;case"mouseup":t=null;break;case"focusin":n(".fancybox-button").removeClass("fancybox-focus"),n(this).is(t)||n(this).is("[disabled]")||n(this).addClass("fancybox-focus");break;case"focusout":n(".fancybox-button").removeClass("fancybox-focus")}}))}()}}(window,document,jQuery),function(t){"use strict";var e={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"https://www.youtube-nocookie.com/embed/$4",thumb:"https://img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/?ll="+(t[9]?t[9]+"&z="+Math.floor(t[10])+(t[12]?t[12].replace(/^\//,"&"):""):t[12]+"").replace(/\?/,"&")+"&output="+(t[12]&&t[12].indexOf("layer=c")>0?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/maps?q="+t[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}},n=function(e,n,i){if(e)return i=i||"","object"===t.type(i)&&(i=t.param(i,!0)),t.each(n,(function(t,n){e=e.replace("$"+t,n||"")})),i.length&&(e+=(e.indexOf("?")>0?"&":"?")+i),e};t(document).on("objectNeedsType.fb",(function(i,o,s){var r,a,l,c,u,d,p,f=s.src||"",h=!1;r=t.extend(!0,{},e,s.opts.media),t.each(r,(function(e,i){if(l=f.match(i.matcher)){if(h=i.type,p=e,d={},i.paramPlace&&l[i.paramPlace]){"?"==(u=l[i.paramPlace])[0]&&(u=u.substring(1)),u=u.split("&");for(var o=0;o<u.length;++o){var r=u[o].split("=",2);2==r.length&&(d[r[0]]=decodeURIComponent(r[1].replace(/\+/g," ")))}}return c=t.extend(!0,{},i.params,s.opts[e],d),f="function"===t.type(i.url)?i.url.call(this,l,c,s):n(i.url,l,c),a="function"===t.type(i.thumb)?i.thumb.call(this,l,c,s):n(i.thumb,l),"youtube"===e?f=f.replace(/&t=((\d+)m)?(\d+)s/,(function(t,e,n,i){return"&start="+((n?60*parseInt(n,10):0)+parseInt(i,10))})):"vimeo"===e&&(f=f.replace("&%23","#")),!1}})),h?(s.opts.thumb||s.opts.$thumb&&s.opts.$thumb.length||(s.opts.thumb=a),"iframe"===h&&(s.opts=t.extend(!0,s.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),t.extend(s,{type:h,src:f,origSrc:s.src,contentSource:p,contentType:"image"===h?"image":"gmap_place"==p||"gmap_search"==p?"map":"video"})):f&&(s.type=s.opts.defaultType)}));var i={youtube:{src:"https://www.youtube.com/iframe_api",class:"YT",loading:!1,loaded:!1},vimeo:{src:"https://player.vimeo.com/api/player.js",class:"Vimeo",loading:!1,loaded:!1},load:function(t){var e,n=this;this[t].loaded?setTimeout((function(){n.done(t)})):this[t].loading||(this[t].loading=!0,(e=document.createElement("script")).type="text/javascript",e.src=this[t].src,"youtube"===t?window.onYouTubeIframeAPIReady=function(){n[t].loaded=!0,n.done(t)}:e.onload=function(){n[t].loaded=!0,n.done(t)},document.body.appendChild(e))},done:function(e){var n,i;"youtube"===e&&delete window.onYouTubeIframeAPIReady,(n=t.fancybox.getInstance())&&(i=n.current.$content.find("iframe"),"youtube"===e&&void 0!==YT&&YT?new YT.Player(i.attr("id"),{events:{onStateChange:function(t){0==t.data&&n.next()}}}):"vimeo"===e&&void 0!==Vimeo&&Vimeo&&new Vimeo.Player(i).on("ended",(function(){n.next()})))}};t(document).on({"afterShow.fb":function(t,e,n){e.group.length>1&&("youtube"===n.contentSource||"vimeo"===n.contentSource)&&i.load(n.contentSource)}})}(jQuery),function(t,e,n){"use strict";var i=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)},o=t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.mozCancelAnimationFrame||t.oCancelAnimationFrame||function(e){t.clearTimeout(e)},s=function(e){var n=[];for(var i in e=(e=e.originalEvent||e||t.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[i].pageX?n.push({x:e[i].pageX,y:e[i].pageY}):e[i].clientX&&n.push({x:e[i].clientX,y:e[i].clientY});return n},r=function(t,e,n){return e&&t?"x"===n?t.x-e.x:"y"===n?t.y-e.y:Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)):0},a=function(t){if(t.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe')||n.isFunction(t.get(0).onclick)||t.data("selectable"))return!0;for(var e=0,i=t[0].attributes,o=i.length;e<o;e++)if("data-fancybox-"===i[e].nodeName.substr(0,14))return!0;return!1},l=function(e){var n=t.getComputedStyle(e)["overflow-y"],i=t.getComputedStyle(e)["overflow-x"],o=("scroll"===n||"auto"===n)&&e.scrollHeight>e.clientHeight,s=("scroll"===i||"auto"===i)&&e.scrollWidth>e.clientWidth;return o||s},c=function(t){for(var e=!1;!(e=l(t.get(0)))&&((t=t.parent()).length&&!t.hasClass("fancybox-stage")&&!t.is("body")););return e},u=function(t){var e=this;e.instance=t,e.$bg=t.$refs.bg,e.$stage=t.$refs.stage,e.$container=t.$refs.container,e.destroy(),e.$container.on("touchstart.fb.touch mousedown.fb.touch",n.proxy(e,"ontouchstart"))};u.prototype.destroy=function(){var t=this;t.$container.off(".fb.touch"),n(e).off(".fb.touch"),t.requestId&&(o(t.requestId),t.requestId=null),t.tapped&&(clearTimeout(t.tapped),t.tapped=null)},u.prototype.ontouchstart=function(i){var o=this,l=n(i.target),u=o.instance,d=u.current,p=d.$slide,f=d.$content,h="touchstart"==i.type;if(h&&o.$container.off("mousedown.fb.touch"),(!i.originalEvent||2!=i.originalEvent.button)&&p.length&&l.length&&!a(l)&&!a(l.parent())&&(l.is("img")||!(i.originalEvent.clientX>l[0].clientWidth+l.offset().left))){if(!d||u.isAnimating||d.$slide.hasClass("fancybox-animated"))return i.stopPropagation(),void i.preventDefault();o.realPoints=o.startPoints=s(i),o.startPoints.length&&(d.touch&&i.stopPropagation(),o.startEvent=i,o.canTap=!0,o.$target=l,o.$content=f,o.opts=d.opts.touch,o.isPanning=!1,o.isSwiping=!1,o.isZooming=!1,o.isScrolling=!1,o.canPan=u.canPan(),o.startTime=(new Date).getTime(),o.distanceX=o.distanceY=o.distance=0,o.canvasWidth=Math.round(p[0].clientWidth),o.canvasHeight=Math.round(p[0].clientHeight),o.contentLastPos=null,o.contentStartPos=n.fancybox.getTranslate(o.$content)||{top:0,left:0},o.sliderStartPos=n.fancybox.getTranslate(p),o.stagePos=n.fancybox.getTranslate(u.$refs.stage),o.sliderStartPos.top-=o.stagePos.top,o.sliderStartPos.left-=o.stagePos.left,o.contentStartPos.top-=o.stagePos.top,o.contentStartPos.left-=o.stagePos.left,n(e).off(".fb.touch").on(h?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",n.proxy(o,"ontouchend")).on(h?"touchmove.fb.touch":"mousemove.fb.touch",n.proxy(o,"ontouchmove")),n.fancybox.isMobile&&e.addEventListener("scroll",o.onscroll,!0),((o.opts||o.canPan)&&(l.is(o.$stage)||o.$stage.find(l).length)||(l.is(".fancybox-image")&&i.preventDefault(),n.fancybox.isMobile&&l.parents(".fancybox-caption").length))&&(o.isScrollable=c(l)||c(l.parent()),n.fancybox.isMobile&&o.isScrollable||i.preventDefault(),(1===o.startPoints.length||d.hasError)&&(o.canPan?(n.fancybox.stop(o.$content),o.isPanning=!0):o.isSwiping=!0,o.$container.addClass("fancybox-is-grabbing")),2===o.startPoints.length&&"image"===d.type&&(d.isLoaded||d.$ghost)&&(o.canTap=!1,o.isSwiping=!1,o.isPanning=!1,o.isZooming=!0,n.fancybox.stop(o.$content),o.centerPointStartX=.5*(o.startPoints[0].x+o.startPoints[1].x)-n(t).scrollLeft(),o.centerPointStartY=.5*(o.startPoints[0].y+o.startPoints[1].y)-n(t).scrollTop(),o.percentageOfImageAtPinchPointX=(o.centerPointStartX-o.contentStartPos.left)/o.contentStartPos.width,o.percentageOfImageAtPinchPointY=(o.centerPointStartY-o.contentStartPos.top)/o.contentStartPos.height,o.startDistanceBetweenFingers=r(o.startPoints[0],o.startPoints[1]))))}},u.prototype.onscroll=function(t){this.isScrolling=!0,e.removeEventListener("scroll",this.onscroll,!0)},u.prototype.ontouchmove=function(t){var e=this;return void 0!==t.originalEvent.buttons&&0===t.originalEvent.buttons?void e.ontouchend(t):e.isScrolling?void(e.canTap=!1):(e.newPoints=s(t),void((e.opts||e.canPan)&&e.newPoints.length&&e.newPoints.length&&(e.isSwiping&&!0===e.isSwiping||t.preventDefault(),e.distanceX=r(e.newPoints[0],e.startPoints[0],"x"),e.distanceY=r(e.newPoints[0],e.startPoints[0],"y"),e.distance=r(e.newPoints[0],e.startPoints[0]),e.distance>0&&(e.isSwiping?e.onSwipe(t):e.isPanning?e.onPan():e.isZooming&&e.onZoom()))))},u.prototype.onSwipe=function(e){var s,r=this,a=r.instance,l=r.isSwiping,c=r.sliderStartPos.left||0;if(!0!==l)"x"==l&&(r.distanceX>0&&(r.instance.group.length<2||0===r.instance.current.index&&!r.instance.current.opts.loop)?c+=Math.pow(r.distanceX,.8):r.distanceX<0&&(r.instance.group.length<2||r.instance.current.index===r.instance.group.length-1&&!r.instance.current.opts.loop)?c-=Math.pow(-r.distanceX,.8):c+=r.distanceX),r.sliderLastPos={top:"x"==l?0:r.sliderStartPos.top+r.distanceY,left:c},r.requestId&&(o(r.requestId),r.requestId=null),r.requestId=i((function(){r.sliderLastPos&&(n.each(r.instance.slides,(function(t,e){var i=e.pos-r.instance.currPos;n.fancybox.setTranslate(e.$slide,{top:r.sliderLastPos.top,left:r.sliderLastPos.left+i*r.canvasWidth+i*e.opts.gutter})})),r.$container.addClass("fancybox-is-sliding"))}));else if(Math.abs(r.distance)>10){if(r.canTap=!1,a.group.length<2&&r.opts.vertical?r.isSwiping="y":a.isDragging||!1===r.opts.vertical||"auto"===r.opts.vertical&&n(t).width()>800?r.isSwiping="x":(s=Math.abs(180*Math.atan2(r.distanceY,r.distanceX)/Math.PI),r.isSwiping=s>45&&s<135?"y":"x"),"y"===r.isSwiping&&n.fancybox.isMobile&&r.isScrollable)return void(r.isScrolling=!0);a.isDragging=r.isSwiping,r.startPoints=r.newPoints,n.each(a.slides,(function(t,e){var i,o;n.fancybox.stop(e.$slide),i=n.fancybox.getTranslate(e.$slide),o=n.fancybox.getTranslate(a.$refs.stage),e.$slide.css({transform:"",opacity:"","transition-duration":""}).removeClass("fancybox-animated").removeClass((function(t,e){return(e.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")})),e.pos===a.current.pos&&(r.sliderStartPos.top=i.top-o.top,r.sliderStartPos.left=i.left-o.left),n.fancybox.setTranslate(e.$slide,{top:i.top-o.top,left:i.left-o.left})})),a.SlideShow&&a.SlideShow.isActive&&a.SlideShow.stop()}},u.prototype.onPan=function(){var t=this;r(t.newPoints[0],t.realPoints[0])<(n.fancybox.isMobile?10:5)?t.startPoints=t.newPoints:(t.canTap=!1,t.contentLastPos=t.limitMovement(),t.requestId&&o(t.requestId),t.requestId=i((function(){n.fancybox.setTranslate(t.$content,t.contentLastPos)})))},u.prototype.limitMovement=function(){var t,e,n,i,o,s,r=this,a=r.canvasWidth,l=r.canvasHeight,c=r.distanceX,u=r.distanceY,d=r.contentStartPos,p=d.left,f=d.top,h=d.width,g=d.height;return o=h>a?p+c:p,s=f+u,t=Math.max(0,.5*a-.5*h),e=Math.max(0,.5*l-.5*g),n=Math.min(a-h,.5*a-.5*h),i=Math.min(l-g,.5*l-.5*g),c>0&&o>t&&(o=t-1+Math.pow(-t+p+c,.8)||0),c<0&&o<n&&(o=n+1-Math.pow(n-p-c,.8)||0),u>0&&s>e&&(s=e-1+Math.pow(-e+f+u,.8)||0),u<0&&s<i&&(s=i+1-Math.pow(i-f-u,.8)||0),{top:s,left:o}},u.prototype.limitPosition=function(t,e,n,i){var o=this.canvasWidth,s=this.canvasHeight;return n>o?t=(t=t>0?0:t)<o-n?o-n:t:t=Math.max(0,o/2-n/2),i>s?e=(e=e>0?0:e)<s-i?s-i:e:e=Math.max(0,s/2-i/2),{top:e,left:t}},u.prototype.onZoom=function(){var e=this,s=e.contentStartPos,a=s.width,l=s.height,c=s.left,u=s.top,d=r(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,p=Math.floor(a*d),f=Math.floor(l*d),h=(a-p)*e.percentageOfImageAtPinchPointX,g=(l-f)*e.percentageOfImageAtPinchPointY,m=(e.newPoints[0].x+e.newPoints[1].x)/2-n(t).scrollLeft(),y=(e.newPoints[0].y+e.newPoints[1].y)/2-n(t).scrollTop(),v=m-e.centerPointStartX,b={top:u+(g+(y-e.centerPointStartY)),left:c+(h+v),scaleX:d,scaleY:d};e.canTap=!1,e.newWidth=p,e.newHeight=f,e.contentLastPos=b,e.requestId&&o(e.requestId),e.requestId=i((function(){n.fancybox.setTranslate(e.$content,e.contentLastPos)}))},u.prototype.ontouchend=function(t){var i=this,r=i.isSwiping,a=i.isPanning,l=i.isZooming,c=i.isScrolling;if(i.endPoints=s(t),i.dMs=Math.max((new Date).getTime()-i.startTime,1),i.$container.removeClass("fancybox-is-grabbing"),n(e).off(".fb.touch"),e.removeEventListener("scroll",i.onscroll,!0),i.requestId&&(o(i.requestId),i.requestId=null),i.isSwiping=!1,i.isPanning=!1,i.isZooming=!1,i.isScrolling=!1,i.instance.isDragging=!1,i.canTap)return i.onTap(t);i.speed=100,i.velocityX=i.distanceX/i.dMs*.5,i.velocityY=i.distanceY/i.dMs*.5,a?i.endPanning():l?i.endZooming():i.endSwiping(r,c)},u.prototype.endSwiping=function(t,e){var i=this,o=!1,s=i.instance.group.length,r=Math.abs(i.distanceX),a="x"==t&&s>1&&(i.dMs>130&&r>10||r>50);i.sliderLastPos=null,"y"==t&&!e&&Math.abs(i.distanceY)>50?(n.fancybox.animate(i.instance.current.$slide,{top:i.sliderStartPos.top+i.distanceY+150*i.velocityY,opacity:0},200),o=i.instance.close(!0,250)):a&&i.distanceX>0?o=i.instance.previous(300):a&&i.distanceX<0&&(o=i.instance.next(300)),!1!==o||"x"!=t&&"y"!=t||i.instance.centerSlide(200),i.$container.removeClass("fancybox-is-sliding")},u.prototype.endPanning=function(){var t,e,i,o=this;o.contentLastPos&&(!1===o.opts.momentum||o.dMs>350?(t=o.contentLastPos.left,e=o.contentLastPos.top):(t=o.contentLastPos.left+500*o.velocityX,e=o.contentLastPos.top+500*o.velocityY),(i=o.limitPosition(t,e,o.contentStartPos.width,o.contentStartPos.height)).width=o.contentStartPos.width,i.height=o.contentStartPos.height,n.fancybox.animate(o.$content,i,366))},u.prototype.endZooming=function(){var t,e,i,o,s=this,r=s.instance.current,a=s.newWidth,l=s.newHeight;s.contentLastPos&&(t=s.contentLastPos.left,o={top:e=s.contentLastPos.top,left:t,width:a,height:l,scaleX:1,scaleY:1},n.fancybox.setTranslate(s.$content,o),a<s.canvasWidth&&l<s.canvasHeight?s.instance.scaleToFit(150):a>r.width||l>r.height?s.instance.scaleToActual(s.centerPointStartX,s.centerPointStartY,150):(i=s.limitPosition(t,e,a,l),n.fancybox.animate(s.$content,i,150)))},u.prototype.onTap=function(e){var i,o=this,r=n(e.target),a=o.instance,l=a.current,c=e&&s(e)||o.startPoints,u=c[0]?c[0].x-n(t).scrollLeft()-o.stagePos.left:0,d=c[0]?c[0].y-n(t).scrollTop()-o.stagePos.top:0,p=function(t){var i=l.opts[t];if(n.isFunction(i)&&(i=i.apply(a,[l,e])),i)switch(i){case"close":a.close(o.startEvent);break;case"toggleControls":a.toggleControls();break;case"next":a.next();break;case"nextOrClose":a.group.length>1?a.next():a.close(o.startEvent);break;case"zoom":"image"==l.type&&(l.isLoaded||l.$ghost)&&(a.canPan()?a.scaleToFit():a.isScaledDown()?a.scaleToActual(u,d):a.group.length<2&&a.close(o.startEvent))}};if((!e.originalEvent||2!=e.originalEvent.button)&&(r.is("img")||!(u>r[0].clientWidth+r.offset().left))){if(r.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))i="Outside";else if(r.is(".fancybox-slide"))i="Slide";else{if(!a.current.$content||!a.current.$content.find(r).addBack().filter(r).length)return;i="Content"}if(o.tapped){if(clearTimeout(o.tapped),o.tapped=null,Math.abs(u-o.tapX)>50||Math.abs(d-o.tapY)>50)return this;p("dblclick"+i)}else o.tapX=u,o.tapY=d,l.opts["dblclick"+i]&&l.opts["dblclick"+i]!==l.opts["click"+i]?o.tapped=setTimeout((function(){o.tapped=null,a.isAnimating||p("click"+i)}),500):p("click"+i);return this}},n(e).on("onActivate.fb",(function(t,e){e&&!e.Guestures&&(e.Guestures=new u(e))})).on("beforeClose.fb",(function(t,e){e&&e.Guestures&&e.Guestures.destroy()}))}(window,document,jQuery),function(t,e){"use strict";e.extend(!0,e.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},slideShow:{autoStart:!1,speed:3e3,progress:!0}});var n=function(t){this.instance=t,this.init()};e.extend(n.prototype,{timer:null,isActive:!1,$button:null,init:function(){var t=this,n=t.instance,i=n.group[n.currIndex].opts.slideShow;t.$button=n.$refs.toolbar.find("[data-fancybox-play]").on("click",(function(){t.toggle()})),n.group.length<2||!i?t.$button.hide():i.progress&&(t.$progress=e('<div class="fancybox-progress"></div>').appendTo(n.$refs.inner))},set:function(t){var n=this,i=n.instance,o=i.current;o&&(!0===t||o.opts.loop||i.currIndex<i.group.length-1)?n.isActive&&"video"!==o.contentType&&(n.$progress&&e.fancybox.animate(n.$progress.show(),{scaleX:1},o.opts.slideShow.speed),n.timer=setTimeout((function(){i.current.opts.loop||i.current.index!=i.group.length-1?i.next():i.jumpTo(0)}),o.opts.slideShow.speed)):(n.stop(),i.idleSecondsCounter=0,i.showControls())},clear:function(){var t=this;clearTimeout(t.timer),t.timer=null,t.$progress&&t.$progress.removeAttr("style").hide()},start:function(){var t=this,e=t.instance.current;e&&(t.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),t.isActive=!0,e.isComplete&&t.set(!0),t.instance.trigger("onSlideShowChange",!0))},stop:function(){var t=this,e=t.instance.current;t.clear(),t.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),t.isActive=!1,t.instance.trigger("onSlideShowChange",!1),t.$progress&&t.$progress.removeAttr("style").hide()},toggle:function(){var t=this;t.isActive?t.stop():t.start()}}),e(t).on({"onInit.fb":function(t,e){e&&!e.SlideShow&&(e.SlideShow=new n(e))},"beforeShow.fb":function(t,e,n,i){var o=e&&e.SlideShow;i?o&&n.opts.slideShow.autoStart&&o.start():o&&o.isActive&&o.clear()},"afterShow.fb":function(t,e,n){var i=e&&e.SlideShow;i&&i.isActive&&i.set()},"afterKeydown.fb":function(n,i,o,s,r){var a=i&&i.SlideShow;!a||!o.opts.slideShow||80!==r&&32!==r||e(t.activeElement).is("button,a,input")||(s.preventDefault(),a.toggle())},"beforeClose.fb onDeactivate.fb":function(t,e){var n=e&&e.SlideShow;n&&n.stop()}}),e(t).on("visibilitychange",(function(){var n=e.fancybox.getInstance(),i=n&&n.SlideShow;i&&i.isActive&&(t.hidden?i.clear():i.set())}))}(document,jQuery),function(t,e){"use strict";var n=function(){for(var e=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],n={},i=0;i<e.length;i++){var o=e[i];if(o&&o[1]in t){for(var s=0;s<o.length;s++)n[e[0][s]]=o[s];return n}}return!1}();if(n){var i={request:function(e){(e=e||t.documentElement)[n.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){t[n.exitFullscreen]()},toggle:function(e){e=e||t.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(t[n.fullscreenElement])},enabled:function(){return Boolean(t[n.fullscreenEnabled])}};e.extend(!0,e.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},fullScreen:{autoStart:!1}}),e(t).on(n.fullscreenchange,(function(){var t=i.isFullscreen(),n=e.fancybox.getInstance();n&&(n.current&&"image"===n.current.type&&n.isAnimating&&(n.isAnimating=!1,n.update(!0,!0,0),n.isComplete||n.complete()),n.trigger("onFullscreenChange",t),n.$refs.container.toggleClass("fancybox-is-fullscreen",t),n.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter",!t).toggleClass("fancybox-button--fsexit",t))}))}e(t).on({"onInit.fb":function(t,e){n?e&&e.group[e.currIndex].opts.fullScreen?(e.$refs.container.on("click.fb-fullscreen","[data-fancybox-fullscreen]",(function(t){t.stopPropagation(),t.preventDefault(),i.toggle()})),e.opts.fullScreen&&!0===e.opts.fullScreen.autoStart&&i.request(),e.FullScreen=i):e&&e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide():e.$refs.toolbar.find("[data-fancybox-fullscreen]").remove()},"afterKeydown.fb":function(t,e,n,i,o){e&&e.FullScreen&&70===o&&(i.preventDefault(),e.FullScreen.toggle())},"beforeClose.fb":function(t,e){e&&e.FullScreen&&e.$refs.container.hasClass("fancybox-is-fullscreen")&&i.exit()}})}(document,jQuery),function(t,e){"use strict";var n="fancybox-thumbs";e.fancybox.defaults=e.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},e.fancybox.defaults);var i=function(t){this.init(t)};e.extend(i.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(t){var e=this,n=t.group,i=0;e.instance=t,e.opts=n[t.currIndex].opts.thumbs,t.Thumbs=e,e.$button=t.$refs.toolbar.find("[data-fancybox-thumbs]");for(var o=0,s=n.length;o<s&&(n[o].thumb&&i++,!(i>1));o++);i>1&&e.opts?(e.$button.removeAttr("style").on("click",(function(){e.toggle()})),e.isActive=!0):e.$button.hide()},create:function(){var t,i=this,o=i.instance,s=i.opts.parentEl,r=[];i.$grid||(i.$grid=e('<div class="'+n+" "+n+"-"+i.opts.axis+'"></div>').appendTo(o.$refs.container.find(s).addBack().filter(s)),i.$grid.on("click","a",(function(){o.jumpTo(e(this).attr("data-index"))}))),i.$list||(i.$list=e('<div class="'+n+'__list">').appendTo(i.$grid)),e.each(o.group,(function(e,n){(t=n.thumb)||"image"!==n.type||(t=n.src),r.push('<a href="javascript:;" tabindex="0" data-index="'+e+'"'+(t&&t.length?' style="background-image:url('+t+')"':'class="fancybox-thumbs-missing"')+"></a>")})),i.$list[0].innerHTML=r.join(""),"x"===i.opts.axis&&i.$list.width(parseInt(i.$grid.css("padding-right"),10)+o.group.length*i.$list.children().eq(0).outerWidth(!0))},focus:function(t){var e,n,i=this,o=i.$list,s=i.$grid;i.instance.current&&(n=(e=o.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+i.instance.current.index+'"]').addClass("fancybox-thumbs-active")).position(),"y"===i.opts.axis&&(n.top<0||n.top>o.height()-e.outerHeight())?o.stop().animate({scrollTop:o.scrollTop()+n.top},t):"x"===i.opts.axis&&(n.left<s.scrollLeft()||n.left>s.scrollLeft()+(s.width()-e.outerWidth()))&&o.parent().stop().animate({scrollLeft:n.left},t))},update:function(){var t=this;t.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),t.isVisible?(t.$grid||t.create(),t.instance.trigger("onThumbsShow"),t.focus(0)):t.$grid&&t.instance.trigger("onThumbsHide"),t.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),e(t).on({"onInit.fb":function(t,e){var n;e&&!e.Thumbs&&((n=new i(e)).isActive&&!0===n.opts.autoStart&&n.show())},"beforeShow.fb":function(t,e,n,i){var o=e&&e.Thumbs;o&&o.isVisible&&o.focus(i?0:250)},"afterKeydown.fb":function(t,e,n,i,o){var s=e&&e.Thumbs;s&&s.isActive&&71===o&&(i.preventDefault(),s.toggle())},"beforeClose.fb":function(t,e){var n=e&&e.Thumbs;n&&n.isVisible&&!1!==n.opts.hideOnClose&&n.$grid.hide()}})}(document,jQuery),function(t,e){"use strict";e.extend(!0,e.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},share:{url:function(t,e){return!t.currentHash&&"inline"!==e.type&&"html"!==e.type&&(e.origSrc||e.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'}}),e(t).on("click","[data-fancybox-share]",(function(){var t,n,i=e.fancybox.getInstance(),o=i.current||null;o&&("function"===e.type(o.opts.share.url)&&(t=o.opts.share.url.apply(o,[i,o])),n=o.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===o.type?encodeURIComponent(o.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(t)).replace(/\{\{url_raw\}\}/g,function(t){var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};return String(t).replace(/[&<>"'`=\/]/g,(function(t){return e[t]}))}(t)).replace(/\{\{descr\}\}/g,i.$caption?encodeURIComponent(i.$caption.text()):""),e.fancybox.open({src:i.translate(i,n),type:"html",opts:{touch:!1,animationEffect:!1,afterLoad:function(t,e){i.$refs.container.one("beforeClose.fb",(function(){t.close(null,0)})),e.$content.find(".fancybox-share__button").click((function(){return window.open(this.href,"Share","width=550, height=450"),!1}))},mobile:{autoFocus:!1}}}))}))}(document,jQuery),function(t,e,n){"use strict";function i(){var e=t.location.hash.substr(1),n=e.split("-"),i=n.length>1&&/^\+?\d+$/.test(n[n.length-1])&&parseInt(n.pop(-1),10)||1;return{hash:e,index:i<1?1:i,gallery:n.join("-")}}function o(t){""!==t.gallery&&n("[data-fancybox='"+n.escapeSelector(t.gallery)+"']").eq(t.index-1).focus().trigger("click.fb-start")}function s(t){var e,n;return!!t&&(""!==(n=(e=t.current?t.current.opts:t.opts).hash||(e.$orig?e.$orig.data("fancybox")||e.$orig.data("fancybox-trigger"):""))&&n)}n.escapeSelector||(n.escapeSelector=function(t){return(t+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,(function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t}))}),n((function(){!1!==n.fancybox.defaults.hash&&(n(e).on({"onInit.fb":function(t,e){var n,o;!1!==e.group[e.currIndex].opts.hash&&(n=i(),(o=s(e))&&n.gallery&&o==n.gallery&&(e.currIndex=n.index-1))},"beforeShow.fb":function(n,i,o,r){var a;o&&!1!==o.opts.hash&&(a=s(i))&&(i.currentHash=a+(i.group.length>1?"-"+(o.index+1):""),t.location.hash!=="#"+i.currentHash&&(r&&!i.origHash&&(i.origHash=t.location.hash),i.hashTimer&&clearTimeout(i.hashTimer),i.hashTimer=setTimeout((function(){"replaceState"in t.history?(t.history[r?"pushState":"replaceState"]({},e.title,t.location.pathname+t.location.search+"#"+i.currentHash),r&&(i.hasCreatedHistory=!0)):t.location.hash=i.currentHash,i.hashTimer=null}),300)))},"beforeClose.fb":function(n,i,o){o&&!1!==o.opts.hash&&(clearTimeout(i.hashTimer),i.currentHash&&i.hasCreatedHistory?t.history.back():i.currentHash&&("replaceState"in t.history?t.history.replaceState({},e.title,t.location.pathname+t.location.search+(i.origHash||"")):t.location.hash=i.origHash),i.currentHash=null)}}),n(t).on("hashchange.fb",(function(){var t=i(),e=null;n.each(n(".fancybox-container").get().reverse(),(function(t,i){var o=n(i).data("FancyBox");if(o&&o.currentHash)return e=o,!1})),e?e.currentHash===t.gallery+"-"+t.index||1===t.index&&e.currentHash==t.gallery||(e.currentHash=null,e.close()):""!==t.gallery&&o(t)})),setTimeout((function(){n.fancybox.getInstance()||o(i())}),50))}))}(window,document,jQuery),function(t,e){"use strict";var n=(new Date).getTime();e(t).on({"onInit.fb":function(t,e,i){e.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",(function(t){var i=e.current,o=(new Date).getTime();e.group.length<2||!1===i.opts.wheel||"auto"===i.opts.wheel&&"image"!==i.type||(t.preventDefault(),t.stopPropagation(),i.$slide.hasClass("fancybox-animated")||(t=t.originalEvent||t,o-n<250||(n=o,e[(-t.deltaY||-t.deltaX||t.wheelDelta||-t.detail)<0?"next":"previous"]())))}))}})}(document,jQuery),$((function(){$(".header__btn").on("click",(function(){$(".rightside-menu").removeClass("rightside-menu--close")})),$(".rightside-menu__close").on("click",(function(){$(".rightside-menu").addClass("rightside-menu--close")})),$(".header__btn-menu").on("click",(function(){$(".menu").toggleClass("menu--open")})),$(".top__slider").slick({dots:!0,arrows:!1,fade:!0,autoplay:!0}),$(".contact-slider").slick({slidesToShow:10,slidesToScroll:10,dots:!0,arrows:!1,autoplay:!0}),$(".article-slider__box").slick({prevArrow:'<button type="button" class="article-slider__arrow article-slider__arrowleft"><img src="images/blog-box/arrow-slider-left.svg" alt="arrow left"></button>',nextArrow:'<button type="button" class="article-slider__arrow article-slider__arrowright"><img src="images/blog-box/arrow-slider-right.svg" alt="arrow right"></button>'});mixitup(".gallery__inner",{load:{filter:".living"}})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5qcyIsInNsaWNrLm1pbi5qcyIsIm1peGl0dXAubWluLmpzIiwianF1ZXJ5LmZhbmN5Ym94Lm1pbi5qcyIsIm1haW4uanMiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkb2N1bWVudCIsInciLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJub0dsb2JhbCIsImFyciIsImdldFByb3RvIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJzbGljZSIsImZsYXQiLCJhcnJheSIsImNhbGwiLCJjb25jYXQiLCJhcHBseSIsInB1c2giLCJpbmRleE9mIiwiY2xhc3MydHlwZSIsInRvU3RyaW5nIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCJmblRvU3RyaW5nIiwiT2JqZWN0RnVuY3Rpb25TdHJpbmciLCJzdXBwb3J0IiwiaXNGdW5jdGlvbiIsIm9iaiIsIm5vZGVUeXBlIiwiaXRlbSIsImlzV2luZG93IiwicHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyIsInR5cGUiLCJzcmMiLCJub25jZSIsIm5vTW9kdWxlIiwiRE9NRXZhbCIsImNvZGUiLCJub2RlIiwiZG9jIiwiaSIsInZhbCIsInNjcmlwdCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0IiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwiaGVhZCIsImFwcGVuZENoaWxkIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwidG9UeXBlIiwialF1ZXJ5Iiwic2VsZWN0b3IiLCJjb250ZXh0IiwiZm4iLCJpbml0IiwiaXNBcnJheUxpa2UiLCJsZW5ndGgiLCJwcm90b3R5cGUiLCJqcXVlcnkiLCJjb25zdHJ1Y3RvciIsInRvQXJyYXkiLCJnZXQiLCJudW0iLCJwdXNoU3RhY2siLCJlbGVtcyIsInJldCIsIm1lcmdlIiwicHJldk9iamVjdCIsImVhY2giLCJjYWxsYmFjayIsIm1hcCIsImVsZW0iLCJhcmd1bWVudHMiLCJmaXJzdCIsImVxIiwibGFzdCIsImV2ZW4iLCJncmVwIiwiX2VsZW0iLCJvZGQiLCJsZW4iLCJqIiwiZW5kIiwic29ydCIsInNwbGljZSIsImV4dGVuZCIsIm9wdGlvbnMiLCJuYW1lIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJ0YXJnZXQiLCJkZWVwIiwiaXNQbGFpbk9iamVjdCIsIkFycmF5IiwiaXNBcnJheSIsInVuZGVmaW5lZCIsImV4cGFuZG8iLCJNYXRoIiwicmFuZG9tIiwicmVwbGFjZSIsImlzUmVhZHkiLCJlcnJvciIsIm1zZyIsIm5vb3AiLCJwcm90byIsIkN0b3IiLCJpc0VtcHR5T2JqZWN0IiwiZ2xvYmFsRXZhbCIsIm1ha2VBcnJheSIsInJlc3VsdHMiLCJpbkFycmF5Iiwic2Vjb25kIiwiaW52ZXJ0IiwibWF0Y2hlcyIsImNhbGxiYWNrRXhwZWN0IiwiYXJnIiwidmFsdWUiLCJndWlkIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJzcGxpdCIsIl9pIiwidG9Mb3dlckNhc2UiLCJTaXp6bGUiLCJFeHByIiwiZ2V0VGV4dCIsImlzWE1MIiwidG9rZW5pemUiLCJjb21waWxlIiwic2VsZWN0Iiwib3V0ZXJtb3N0Q29udGV4dCIsInNvcnRJbnB1dCIsImhhc0R1cGxpY2F0ZSIsInNldERvY3VtZW50IiwiZG9jRWxlbSIsImRvY3VtZW50SXNIVE1MIiwicmJ1Z2d5UVNBIiwicmJ1Z2d5TWF0Y2hlcyIsImNvbnRhaW5zIiwiRGF0ZSIsInByZWZlcnJlZERvYyIsImRpcnJ1bnMiLCJkb25lIiwiY2xhc3NDYWNoZSIsImNyZWF0ZUNhY2hlIiwidG9rZW5DYWNoZSIsImNvbXBpbGVyQ2FjaGUiLCJub25uYXRpdmVTZWxlY3RvckNhY2hlIiwic29ydE9yZGVyIiwiYSIsImIiLCJwb3AiLCJwdXNoTmF0aXZlIiwibGlzdCIsImJvb2xlYW5zIiwid2hpdGVzcGFjZSIsImlkZW50aWZpZXIiLCJhdHRyaWJ1dGVzIiwicHNldWRvcyIsInJ3aGl0ZXNwYWNlIiwiUmVnRXhwIiwicnRyaW0iLCJyY29tbWEiLCJyY29tYmluYXRvcnMiLCJyZGVzY2VuZCIsInJwc2V1ZG8iLCJyaWRlbnRpZmllciIsIm1hdGNoRXhwciIsIklEIiwiQ0xBU1MiLCJUQUciLCJBVFRSIiwiUFNFVURPIiwiQ0hJTEQiLCJib29sIiwibmVlZHNDb250ZXh0Iiwicmh0bWwiLCJyaW5wdXRzIiwicmhlYWRlciIsInJuYXRpdmUiLCJycXVpY2tFeHByIiwicnNpYmxpbmciLCJydW5lc2NhcGUiLCJmdW5lc2NhcGUiLCJlc2NhcGUiLCJub25IZXgiLCJoaWdoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwicmNzc2VzY2FwZSIsImZjc3Nlc2NhcGUiLCJjaCIsImFzQ29kZVBvaW50IiwiY2hhckNvZGVBdCIsInVubG9hZEhhbmRsZXIiLCJpbkRpc2FibGVkRmllbGRzZXQiLCJhZGRDb21iaW5hdG9yIiwiZGlzYWJsZWQiLCJub2RlTmFtZSIsImRpciIsIm5leHQiLCJjaGlsZE5vZGVzIiwiZSIsImVscyIsInNlZWQiLCJtIiwibmlkIiwibWF0Y2giLCJncm91cHMiLCJuZXdTZWxlY3RvciIsIm5ld0NvbnRleHQiLCJvd25lckRvY3VtZW50IiwiZXhlYyIsImdldEVsZW1lbnRCeUlkIiwiaWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJ0ZXN0IiwidGVzdENvbnRleHQiLCJzY29wZSIsInRvU2VsZWN0b3IiLCJqb2luIiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsImNhY2hlIiwia2V5IiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiYXR0cnMiLCJoYW5kbGVyIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsImN1ciIsImRpZmYiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiY3JlYXRlSW5wdXRQc2V1ZG8iLCJjcmVhdGVCdXR0b25Qc2V1ZG8iLCJjcmVhdGVEaXNhYmxlZFBzZXVkbyIsImlzRGlzYWJsZWQiLCJjcmVhdGVQb3NpdGlvbmFsUHNldWRvIiwiYXJndW1lbnQiLCJtYXRjaEluZGV4ZXMiLCJuYW1lc3BhY2UiLCJuYW1lc3BhY2VVUkkiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNDb21wYXJlIiwic3ViV2luZG93IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmlsdGVyIiwiYXR0cklkIiwiZmluZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJ0bXAiLCJpbnB1dCIsImlubmVySFRNTCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsImF0dHIiLCJzcGVjaWZpZWQiLCJzZWwiLCJ1bmlxdWVTb3J0IiwiZHVwbGljYXRlcyIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwidGV4dENvbnRlbnQiLCJmaXJzdENoaWxkIiwibm9kZVZhbHVlIiwic2VsZWN0b3JzIiwiY3JlYXRlUHNldWRvIiwicmVsYXRpdmUiLCI+IiwiICIsIisiLCJ+IiwicHJlRmlsdGVyIiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwiY2hlY2siLCJyZXN1bHQiLCJ3aGF0IiwiX2FyZ3VtZW50Iiwic2ltcGxlIiwiZm9yd2FyZCIsIm9mVHlwZSIsIl9jb250ZXh0IiwieG1sIiwidW5pcXVlQ2FjaGUiLCJvdXRlckNhY2hlIiwibm9kZUluZGV4Iiwic3RhcnQiLCJwYXJlbnQiLCJ1c2VDYWNoZSIsImxhc3RDaGlsZCIsInVuaXF1ZUlEIiwicHNldWRvIiwiYXJncyIsInNldEZpbHRlcnMiLCJpZHgiLCJtYXRjaGVkIiwibm90IiwibWF0Y2hlciIsInVubWF0Y2hlZCIsImhhcyIsImxhbmciLCJlbGVtTGFuZyIsImhhc2giLCJsb2NhdGlvbiIsInJvb3QiLCJmb2N1cyIsImFjdGl2ZUVsZW1lbnQiLCJoYXNGb2N1cyIsImhyZWYiLCJ0YWJJbmRleCIsImVuYWJsZWQiLCJjaGVja2VkIiwic2VsZWN0ZWQiLCJzZWxlY3RlZEluZGV4IiwiZW1wdHkiLCJoZWFkZXIiLCJidXR0b24iLCJfbWF0Y2hJbmRleGVzIiwibHQiLCJndCIsInJhZGlvIiwiY2hlY2tib3giLCJmaWxlIiwicGFzc3dvcmQiLCJpbWFnZSIsInN1Ym1pdCIsInJlc2V0IiwidG9rZW5zIiwiY29tYmluYXRvciIsImJhc2UiLCJza2lwIiwiY2hlY2tOb25FbGVtZW50cyIsImRvbmVOYW1lIiwib2xkQ2FjaGUiLCJuZXdDYWNoZSIsImVsZW1lbnRNYXRjaGVyIiwibWF0Y2hlcnMiLCJjb25kZW5zZSIsIm5ld1VubWF0Y2hlZCIsIm1hcHBlZCIsInNldE1hdGNoZXIiLCJwb3N0RmlsdGVyIiwicG9zdEZpbmRlciIsInBvc3RTZWxlY3RvciIsInRlbXAiLCJwcmVNYXAiLCJwb3N0TWFwIiwicHJlZXhpc3RpbmciLCJjb250ZXh0cyIsIm11bHRpcGxlQ29udGV4dHMiLCJtYXRjaGVySW4iLCJtYXRjaGVyT3V0IiwibWF0Y2hlckZyb21Ub2tlbnMiLCJjaGVja0NvbnRleHQiLCJsZWFkaW5nUmVsYXRpdmUiLCJpbXBsaWNpdFJlbGF0aXZlIiwibWF0Y2hDb250ZXh0IiwibWF0Y2hBbnlDb250ZXh0IiwiZmlsdGVycyIsInBhcnNlT25seSIsInNvRmFyIiwicHJlRmlsdGVycyIsImNhY2hlZCIsInNldE1hdGNoZXJzIiwiZWxlbWVudE1hdGNoZXJzIiwiYnlTZXQiLCJieUVsZW1lbnQiLCJzdXBlck1hdGNoZXIiLCJvdXRlcm1vc3QiLCJtYXRjaGVkQ291bnQiLCJzZXRNYXRjaGVkIiwiY29udGV4dEJhY2t1cCIsImRpcnJ1bnNVbmlxdWUiLCJtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMiLCJ0b2tlbiIsImNvbXBpbGVkIiwiX25hbWUiLCJkZWZhdWx0VmFsdWUiLCJ1bmlxdWUiLCJpc1hNTERvYyIsImVzY2FwZVNlbGVjdG9yIiwidW50aWwiLCJ0cnVuY2F0ZSIsImlzIiwic2libGluZ3MiLCJuIiwicm5lZWRzQ29udGV4dCIsInJzaW5nbGVUYWciLCJ3aW5ub3ciLCJxdWFsaWZpZXIiLCJzZWxmIiwicm9vdGpRdWVyeSIsInBhcnNlSFRNTCIsInJlYWR5IiwicnBhcmVudHNwcmV2IiwiZ3VhcmFudGVlZFVuaXF1ZSIsImNoaWxkcmVuIiwiY29udGVudHMiLCJwcmV2Iiwic2libGluZyIsInRhcmdldHMiLCJsIiwiY2xvc2VzdCIsImluZGV4IiwicHJldkFsbCIsImFkZCIsImFkZEJhY2siLCJwYXJlbnRzIiwicGFyZW50c1VudGlsIiwibmV4dEFsbCIsIm5leHRVbnRpbCIsInByZXZVbnRpbCIsImNvbnRlbnREb2N1bWVudCIsImNvbnRlbnQiLCJyZXZlcnNlIiwicm5vdGh0bWx3aGl0ZSIsIklkZW50aXR5IiwidiIsIlRocm93ZXIiLCJleCIsImFkb3B0VmFsdWUiLCJyZXNvbHZlIiwicmVqZWN0Iiwibm9WYWx1ZSIsIm1ldGhvZCIsInByb21pc2UiLCJmYWlsIiwidGhlbiIsIkNhbGxiYWNrcyIsIm9iamVjdCIsIl8iLCJmbGFnIiwiY3JlYXRlT3B0aW9ucyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJkaXNhYmxlIiwibG9jayIsImZpcmVXaXRoIiwiRGVmZXJyZWQiLCJmdW5jIiwidHVwbGVzIiwic3RhdGUiLCJhbHdheXMiLCJkZWZlcnJlZCIsImNhdGNoIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwidGhhdCIsIm1pZ2h0VGhyb3ciLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwicmVtYWluaW5nIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsInByaW1hcnkiLCJ1cGRhdGVGdW5jIiwicmVycm9yTmFtZXMiLCJzdGFjayIsImNvbnNvbGUiLCJ3YXJuIiwibWVzc2FnZSIsInJlYWR5RXhjZXB0aW9uIiwicmVhZHlMaXN0IiwiY29tcGxldGVkIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlYWR5V2FpdCIsIndhaXQiLCJyZWFkeVN0YXRlIiwiZG9TY3JvbGwiLCJhY2Nlc3MiLCJjaGFpbmFibGUiLCJlbXB0eUdldCIsInJhdyIsImJ1bGsiLCJfa2V5Iiwicm1zUHJlZml4IiwicmRhc2hBbHBoYSIsImZjYW1lbENhc2UiLCJfYWxsIiwibGV0dGVyIiwidG9VcHBlckNhc2UiLCJjYW1lbENhc2UiLCJzdHJpbmciLCJhY2NlcHREYXRhIiwib3duZXIiLCJEYXRhIiwidWlkIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJzZXQiLCJkYXRhIiwicHJvcCIsImhhc0RhdGEiLCJkYXRhUHJpdiIsImRhdGFVc2VyIiwicmJyYWNlIiwicm11bHRpRGFzaCIsImRhdGFBdHRyIiwiSlNPTiIsInBhcnNlIiwiZ2V0RGF0YSIsInJlbW92ZURhdGEiLCJfZGF0YSIsIl9yZW1vdmVEYXRhIiwiZGVxdWV1ZSIsInN0YXJ0TGVuZ3RoIiwiaG9va3MiLCJfcXVldWVIb29rcyIsInN0b3AiLCJzZXR0ZXIiLCJjbGVhclF1ZXVlIiwiY291bnQiLCJkZWZlciIsInBudW0iLCJzb3VyY2UiLCJyY3NzTnVtIiwiY3NzRXhwYW5kIiwiaXNBdHRhY2hlZCIsImNvbXBvc2VkIiwiZ2V0Um9vdE5vZGUiLCJpc0hpZGRlbldpdGhpblRyZWUiLCJzdHlsZSIsImRpc3BsYXkiLCJjc3MiLCJhZGp1c3RDU1MiLCJ2YWx1ZVBhcnRzIiwidHdlZW4iLCJhZGp1c3RlZCIsInNjYWxlIiwibWF4SXRlcmF0aW9ucyIsImN1cnJlbnRWYWx1ZSIsImluaXRpYWwiLCJ1bml0IiwiY3NzTnVtYmVyIiwiaW5pdGlhbEluVW5pdCIsImRlZmF1bHREaXNwbGF5TWFwIiwiZ2V0RGVmYXVsdERpc3BsYXkiLCJib2R5Iiwic2hvd0hpZGUiLCJzaG93IiwidmFsdWVzIiwiaGlkZSIsInRvZ2dsZSIsImRpdiIsInJjaGVja2FibGVUeXBlIiwicnRhZ05hbWUiLCJyc2NyaXB0VHlwZSIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJjaGVja0Nsb25lIiwiY2xvbmVOb2RlIiwibm9DbG9uZUNoZWNrZWQiLCJvcHRpb24iLCJ3cmFwTWFwIiwidGhlYWQiLCJjb2wiLCJ0ciIsInRkIiwiX2RlZmF1bHQiLCJnZXRBbGwiLCJzZXRHbG9iYWxFdmFsIiwicmVmRWxlbWVudHMiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJvcHRncm91cCIsImJ1aWxkRnJhZ21lbnQiLCJzY3JpcHRzIiwic2VsZWN0aW9uIiwiaWdub3JlZCIsIndyYXAiLCJhdHRhY2hlZCIsImZyYWdtZW50Iiwibm9kZXMiLCJodG1sUHJlZmlsdGVyIiwiY3JlYXRlVGV4dE5vZGUiLCJydHlwZW5hbWVzcGFjZSIsInJldHVyblRydWUiLCJyZXR1cm5GYWxzZSIsImV4cGVjdFN5bmMiLCJlcnIiLCJzYWZlQWN0aXZlRWxlbWVudCIsIm9uIiwidHlwZXMiLCJvbmUiLCJvcmlnRm4iLCJldmVudCIsIm9mZiIsImxldmVyYWdlTmF0aXZlIiwibm90QXN5bmMiLCJzYXZlZCIsImlzVHJpZ2dlciIsImRlbGVnYXRlVHlwZSIsInN0b3BQcm9wYWdhdGlvbiIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwidHJpZ2dlciIsIkV2ZW50IiwiaGFuZGxlT2JqSW4iLCJldmVudEhhbmRsZSIsImV2ZW50cyIsInQiLCJoYW5kbGVPYmoiLCJoYW5kbGVycyIsIm5hbWVzcGFjZXMiLCJvcmlnVHlwZSIsImVsZW1EYXRhIiwiY3JlYXRlIiwiaGFuZGxlIiwidHJpZ2dlcmVkIiwiZGlzcGF0Y2giLCJiaW5kVHlwZSIsImRlbGVnYXRlQ291bnQiLCJzZXR1cCIsIm1hcHBlZFR5cGVzIiwib3JpZ0NvdW50IiwidGVhcmRvd24iLCJyZW1vdmVFdmVudCIsIm5hdGl2ZUV2ZW50IiwiaGFuZGxlclF1ZXVlIiwiZml4IiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY3VycmVudFRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicm5hbWVzcGFjZSIsInBvc3REaXNwYXRjaCIsIm1hdGNoZWRIYW5kbGVycyIsIm1hdGNoZWRTZWxlY3RvcnMiLCJhZGRQcm9wIiwiaG9vayIsImVudW1lcmFibGUiLCJvcmlnaW5hbEV2ZW50Iiwid3JpdGFibGUiLCJsb2FkIiwibm9CdWJibGUiLCJjbGljayIsImJlZm9yZXVubG9hZCIsInJldHVyblZhbHVlIiwicHJvcHMiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmVsYXRlZFRhcmdldCIsInRpbWVTdGFtcCIsIm5vdyIsImlzU2ltdWxhdGVkIiwiYWx0S2V5IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjaGFuZ2VkVG91Y2hlcyIsImN0cmxLZXkiLCJkZXRhaWwiLCJldmVudFBoYXNlIiwibWV0YUtleSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsInZpZXciLCJjaGFyIiwiY2hhckNvZGUiLCJrZXlDb2RlIiwiYnV0dG9ucyIsImNsaWVudFgiLCJjbGllbnRZIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJwb2ludGVySWQiLCJwb2ludGVyVHlwZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwidGFyZ2V0VG91Y2hlcyIsInRvRWxlbWVudCIsInRvdWNoZXMiLCJ3aGljaCIsImJsdXIiLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsIm9yaWciLCJyZWxhdGVkIiwicm5vSW5uZXJodG1sIiwicmNoZWNrZWQiLCJyY2xlYW5TY3JpcHQiLCJtYW5pcHVsYXRpb25UYXJnZXQiLCJkaXNhYmxlU2NyaXB0IiwicmVzdG9yZVNjcmlwdCIsImNsb25lQ29weUV2ZW50IiwiZGVzdCIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJmaXhJbnB1dCIsImRvbU1hbmlwIiwiY29sbGVjdGlvbiIsImhhc1NjcmlwdHMiLCJpTm9DbG9uZSIsInZhbHVlSXNGdW5jdGlvbiIsImh0bWwiLCJfZXZhbFVybCIsImtlZXBEYXRhIiwiY2xlYW5EYXRhIiwiZGF0YUFuZEV2ZW50cyIsImRlZXBEYXRhQW5kRXZlbnRzIiwic3JjRWxlbWVudHMiLCJkZXN0RWxlbWVudHMiLCJpblBhZ2UiLCJkZXRhY2giLCJhcHBlbmQiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsImFwcGVuZFRvIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwib3JpZ2luYWwiLCJpbnNlcnQiLCJybnVtbm9ucHgiLCJnZXRTdHlsZXMiLCJvcGVuZXIiLCJnZXRDb21wdXRlZFN0eWxlIiwic3dhcCIsIm9sZCIsInJib3hTdHlsZSIsImN1ckNTUyIsImNvbXB1dGVkIiwid2lkdGgiLCJtaW5XaWR0aCIsIm1heFdpZHRoIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInBpeGVsQm94U3R5bGVzIiwiYWRkR2V0SG9va0lmIiwiY29uZGl0aW9uRm4iLCJob29rRm4iLCJjb21wdXRlU3R5bGVUZXN0cyIsImNvbnRhaW5lciIsImNzc1RleHQiLCJkaXZTdHlsZSIsInBpeGVsUG9zaXRpb25WYWwiLCJyZWxpYWJsZU1hcmdpbkxlZnRWYWwiLCJyb3VuZFBpeGVsTWVhc3VyZXMiLCJtYXJnaW5MZWZ0IiwicmlnaHQiLCJwaXhlbEJveFN0eWxlc1ZhbCIsImJveFNpemluZ1JlbGlhYmxlVmFsIiwicG9zaXRpb24iLCJzY3JvbGxib3hTaXplVmFsIiwib2Zmc2V0V2lkdGgiLCJtZWFzdXJlIiwicm91bmQiLCJwYXJzZUZsb2F0IiwicmVsaWFibGVUckRpbWVuc2lvbnNWYWwiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsImJveFNpemluZ1JlbGlhYmxlIiwicGl4ZWxQb3NpdGlvbiIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInNjcm9sbGJveFNpemUiLCJyZWxpYWJsZVRyRGltZW5zaW9ucyIsInRhYmxlIiwidHJDaGlsZCIsInRyU3R5bGUiLCJoZWlnaHQiLCJwYXJzZUludCIsImJvcmRlclRvcFdpZHRoIiwiYm9yZGVyQm90dG9tV2lkdGgiLCJvZmZzZXRIZWlnaHQiLCJjc3NQcmVmaXhlcyIsImVtcHR5U3R5bGUiLCJ2ZW5kb3JQcm9wcyIsImZpbmFsUHJvcE5hbWUiLCJmaW5hbCIsImNzc1Byb3BzIiwiY2FwTmFtZSIsInZlbmRvclByb3BOYW1lIiwicmRpc3BsYXlzd2FwIiwicmN1c3RvbVByb3AiLCJjc3NTaG93IiwidmlzaWJpbGl0eSIsImNzc05vcm1hbFRyYW5zZm9ybSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0Iiwic2V0UG9zaXRpdmVOdW1iZXIiLCJzdWJ0cmFjdCIsIm1heCIsImJveE1vZGVsQWRqdXN0bWVudCIsImRpbWVuc2lvbiIsImJveCIsImlzQm9yZGVyQm94Iiwic3R5bGVzIiwiY29tcHV0ZWRWYWwiLCJleHRyYSIsImRlbHRhIiwiY2VpbCIsImdldFdpZHRoT3JIZWlnaHQiLCJ2YWx1ZUlzQm9yZGVyQm94Iiwib2Zmc2V0UHJvcCIsImdldENsaWVudFJlY3RzIiwiVHdlZW4iLCJlYXNpbmciLCJjc3NIb29rcyIsIm9wYWNpdHkiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImNvbHVtbkNvdW50IiwiZmlsbE9wYWNpdHkiLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJncmlkQXJlYSIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblN0YXJ0IiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3RhcnQiLCJsaW5lSGVpZ2h0Iiwib3JkZXIiLCJvcnBoYW5zIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsIm9yaWdOYW1lIiwiaXNDdXN0b21Qcm9wIiwic2V0UHJvcGVydHkiLCJpc0Zpbml0ZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNjcm9sbGJveFNpemVCdWdneSIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwiYm9yZGVyIiwicHJlZml4Iiwic3VmZml4IiwiZXhwYW5kIiwiZXhwYW5kZWQiLCJwYXJ0cyIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInAiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsInByb3BlcnRpZXMiLCJzdG9wcGVkIiwicHJlZmlsdGVycyIsImN1cnJlbnRUaW1lIiwic3RhcnRUaW1lIiwidHdlZW5zIiwib3B0cyIsInNwZWNpYWxFYXNpbmciLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJnb3RvRW5kIiwicHJvcEZpbHRlciIsImJpbmQiLCJjb21wbGV0ZSIsInRpbWVyIiwiYW5pbSIsIioiLCJ0d2VlbmVyIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJkYXRhU2hvdyIsInVucXVldWVkIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsIm9wdCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImF0dHJOYW1lcyIsImdldHRlciIsImxvd2VyY2FzZU5hbWUiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInN0cmlwQW5kQ29sbGFwc2UiLCJnZXRDbGFzcyIsImNsYXNzZXNUb0FycmF5IiwicmVtb3ZlUHJvcCIsInByb3BGaXgiLCJ0YWJpbmRleCIsImZvciIsImNsYXNzIiwiYWRkQ2xhc3MiLCJjbGFzc2VzIiwiY3VyVmFsdWUiLCJjbGF6eiIsImZpbmFsVmFsdWUiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZUNsYXNzIiwic3RhdGVWYWwiLCJpc1ZhbGlkVmFsdWUiLCJjbGFzc05hbWVzIiwiaGFzQ2xhc3MiLCJycmV0dXJuIiwidmFsSG9va3MiLCJvcHRpb25TZXQiLCJmb2N1c2luIiwicmZvY3VzTW9ycGgiLCJzdG9wUHJvcGFnYXRpb25DYWxsYmFjayIsIm9ubHlIYW5kbGVycyIsImJ1YmJsZVR5cGUiLCJvbnR5cGUiLCJsYXN0RWxlbWVudCIsImV2ZW50UGF0aCIsInBhcmVudFdpbmRvdyIsInNpbXVsYXRlIiwidHJpZ2dlckhhbmRsZXIiLCJhdHRhY2hlcyIsInJxdWVyeSIsInBhcnNlWE1MIiwicGFyc2VyRXJyb3JFbGVtIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwicmJyYWNrZXQiLCJyQ1JMRiIsInJzdWJtaXR0ZXJUeXBlcyIsInJzdWJtaXR0YWJsZSIsImJ1aWxkUGFyYW1zIiwidHJhZGl0aW9uYWwiLCJwYXJhbSIsInMiLCJ2YWx1ZU9yRnVuY3Rpb24iLCJlbmNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsInIyMCIsInJoYXNoIiwicmFudGlDYWNoZSIsInJoZWFkZXJzIiwicm5vQ29udGVudCIsInJwcm90b2NvbCIsInRyYW5zcG9ydHMiLCJhbGxUeXBlcyIsIm9yaWdpbkFuY2hvciIsImFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyIsInN0cnVjdHVyZSIsImRhdGFUeXBlRXhwcmVzc2lvbiIsImRhdGFUeXBlIiwiZGF0YVR5cGVzIiwiaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJqcVhIUiIsImluc3BlY3RlZCIsInNlZWtpbmdUcmFuc3BvcnQiLCJpbnNwZWN0IiwicHJlZmlsdGVyT3JGYWN0b3J5IiwiZGF0YVR5cGVPclRyYW5zcG9ydCIsImFqYXhFeHRlbmQiLCJmbGF0T3B0aW9ucyIsImFqYXhTZXR0aW5ncyIsImFjdGl2ZSIsImxhc3RNb2RpZmllZCIsImV0YWciLCJ1cmwiLCJpc0xvY2FsIiwicHJvdG9jb2wiLCJwcm9jZXNzRGF0YSIsImFzeW5jIiwiY29udGVudFR5cGUiLCJhY2NlcHRzIiwianNvbiIsInJlc3BvbnNlRmllbGRzIiwiY29udmVydGVycyIsIiogdGV4dCIsInRleHQgaHRtbCIsInRleHQganNvbiIsInRleHQgeG1sIiwiYWpheFNldHVwIiwic2V0dGluZ3MiLCJhamF4UHJlZmlsdGVyIiwiYWpheFRyYW5zcG9ydCIsImFqYXgiLCJ0cmFuc3BvcnQiLCJjYWNoZVVSTCIsInJlc3BvbnNlSGVhZGVyc1N0cmluZyIsInJlc3BvbnNlSGVhZGVycyIsInRpbWVvdXRUaW1lciIsInVybEFuY2hvciIsImZpcmVHbG9iYWxzIiwidW5jYWNoZWQiLCJjYWxsYmFja0NvbnRleHQiLCJnbG9iYWxFdmVudENvbnRleHQiLCJjb21wbGV0ZURlZmVycmVkIiwic3RhdHVzQ29kZSIsInJlcXVlc3RIZWFkZXJzIiwicmVxdWVzdEhlYWRlcnNOYW1lcyIsInN0ckFib3J0IiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib3ZlcnJpZGVNaW1lVHlwZSIsIm1pbWVUeXBlIiwic3RhdHVzIiwiYWJvcnQiLCJzdGF0dXNUZXh0IiwiZmluYWxUZXh0IiwiY3Jvc3NEb21haW4iLCJob3N0IiwiaGFzQ29udGVudCIsImlmTW9kaWZpZWQiLCJoZWFkZXJzIiwiYmVmb3JlU2VuZCIsInN1Y2Nlc3MiLCJzZW5kIiwibmF0aXZlU3RhdHVzVGV4dCIsInJlc3BvbnNlcyIsImlzU3VjY2VzcyIsInJlc3BvbnNlIiwibW9kaWZpZWQiLCJjdCIsImZpbmFsRGF0YVR5cGUiLCJmaXJzdERhdGFUeXBlIiwiYWpheEhhbmRsZVJlc3BvbnNlcyIsImNvbnYyIiwiY3VycmVudCIsImNvbnYiLCJkYXRhRmlsdGVyIiwidGhyb3dzIiwiYWpheENvbnZlcnQiLCJnZXRKU09OIiwiZ2V0U2NyaXB0IiwidGV4dCBzY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCIwIiwiMTIyMyIsInhoclN1cHBvcnRlZCIsImNvcnMiLCJlcnJvckNhbGxiYWNrIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJzY3JpcHRBdHRycyIsImNoYXJzZXQiLCJzY3JpcHRDaGFyc2V0IiwiZXZ0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJwYXJhbXMiLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsImN1clBvc2l0aW9uIiwiY3VyTGVmdCIsImN1ckNTU1RvcCIsImN1clRvcCIsImN1ck9mZnNldCIsImN1ckNTU0xlZnQiLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCIiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsInRyaW0iLCJkZWZpbmUiLCJhbWQiLCJfalF1ZXJ5IiwiXyQiLCIkIiwibm9Db25mbGljdCIsInJlcXVpcmUiLCJTbGljayIsIm8iLCJkZWZhdWx0cyIsImFjY2Vzc2liaWxpdHkiLCJhZGFwdGl2ZUhlaWdodCIsImFwcGVuZEFycm93cyIsImFwcGVuZERvdHMiLCJhcnJvd3MiLCJhc05hdkZvciIsInByZXZBcnJvdyIsIm5leHRBcnJvdyIsImF1dG9wbGF5IiwiYXV0b3BsYXlTcGVlZCIsImNlbnRlck1vZGUiLCJjZW50ZXJQYWRkaW5nIiwiY3NzRWFzZSIsImN1c3RvbVBhZ2luZyIsImRvdHMiLCJkb3RzQ2xhc3MiLCJkcmFnZ2FibGUiLCJlZGdlRnJpY3Rpb24iLCJmYWRlIiwiZm9jdXNPblNlbGVjdCIsImZvY3VzT25DaGFuZ2UiLCJpbmZpbml0ZSIsImluaXRpYWxTbGlkZSIsImxhenlMb2FkIiwibW9iaWxlRmlyc3QiLCJwYXVzZU9uSG92ZXIiLCJwYXVzZU9uRm9jdXMiLCJwYXVzZU9uRG90c0hvdmVyIiwicmVzcG9uZFRvIiwicmVzcG9uc2l2ZSIsInJvd3MiLCJydGwiLCJzbGlkZSIsInNsaWRlc1BlclJvdyIsInNsaWRlc1RvU2hvdyIsInNsaWRlc1RvU2Nyb2xsIiwic3dpcGUiLCJzd2lwZVRvU2xpZGUiLCJ0b3VjaE1vdmUiLCJ0b3VjaFRocmVzaG9sZCIsInVzZUNTUyIsInVzZVRyYW5zZm9ybSIsInZhcmlhYmxlV2lkdGgiLCJ2ZXJ0aWNhbCIsInZlcnRpY2FsU3dpcGluZyIsIndhaXRGb3JBbmltYXRlIiwiaW5pdGlhbHMiLCJhbmltYXRpbmciLCJkcmFnZ2luZyIsImF1dG9QbGF5VGltZXIiLCJjdXJyZW50RGlyZWN0aW9uIiwiY3VycmVudExlZnQiLCJjdXJyZW50U2xpZGUiLCJkaXJlY3Rpb24iLCIkZG90cyIsImxpc3RXaWR0aCIsImxpc3RIZWlnaHQiLCJsb2FkSW5kZXgiLCIkbmV4dEFycm93IiwiJHByZXZBcnJvdyIsInNjcm9sbGluZyIsInNsaWRlQ291bnQiLCJzbGlkZVdpZHRoIiwiJHNsaWRlVHJhY2siLCIkc2xpZGVzIiwic2xpZGluZyIsInNsaWRlT2Zmc2V0Iiwic3dpcGVMZWZ0Iiwic3dpcGluZyIsIiRsaXN0IiwidG91Y2hPYmplY3QiLCJ0cmFuc2Zvcm1zRW5hYmxlZCIsInVuc2xpY2tlZCIsImFjdGl2ZUJyZWFrcG9pbnQiLCJhbmltVHlwZSIsImFuaW1Qcm9wIiwiYnJlYWtwb2ludHMiLCJicmVha3BvaW50U2V0dGluZ3MiLCJjc3NUcmFuc2l0aW9ucyIsImZvY3Vzc2VkIiwiaW50ZXJydXB0ZWQiLCJwYXVzZWQiLCJwb3NpdGlvblByb3AiLCJyb3dDb3VudCIsInNob3VsZENsaWNrIiwiJHNsaWRlciIsIiRzbGlkZXNDYWNoZSIsInRyYW5zZm9ybVR5cGUiLCJ0cmFuc2l0aW9uVHlwZSIsInZpc2liaWxpdHlDaGFuZ2UiLCJ3aW5kb3dXaWR0aCIsIndpbmRvd1RpbWVyIiwibW96SGlkZGVuIiwid2Via2l0SGlkZGVuIiwiYXV0b1BsYXkiLCJhdXRvUGxheUNsZWFyIiwiYXV0b1BsYXlJdGVyYXRvciIsImNoYW5nZVNsaWRlIiwiY2xpY2tIYW5kbGVyIiwic2VsZWN0SGFuZGxlciIsInNldFBvc2l0aW9uIiwic3dpcGVIYW5kbGVyIiwiZHJhZ0hhbmRsZXIiLCJrZXlIYW5kbGVyIiwiaW5zdGFuY2VVaWQiLCJodG1sRXhwciIsInJlZ2lzdGVyQnJlYWtwb2ludHMiLCJhY3RpdmF0ZUFEQSIsImFyaWEtaGlkZGVuIiwiYWRkU2xpZGUiLCJzbGlja0FkZCIsInVubG9hZCIsInJlaW5pdCIsImFuaW1hdGVIZWlnaHQiLCJvdXRlckhlaWdodCIsImFuaW1hdGVTbGlkZSIsImFuaW1TdGFydCIsImFwcGx5VHJhbnNpdGlvbiIsImRpc2FibGVUcmFuc2l0aW9uIiwiZ2V0TmF2VGFyZ2V0Iiwic2xpY2siLCJzbGlkZUhhbmRsZXIiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJidWlsZEFycm93cyIsImFyaWEtZGlzYWJsZWQiLCJidWlsZERvdHMiLCJnZXREb3RDb3VudCIsImJ1aWxkT3V0Iiwic2V0dXBJbmZpbml0ZSIsInVwZGF0ZURvdHMiLCJzZXRTbGlkZUNsYXNzZXMiLCJidWlsZFJvd3MiLCJyIiwiZCIsImMiLCJjaGVja1Jlc3BvbnNpdmUiLCJpbm5lcldpZHRoIiwibWluIiwidW5zbGljayIsInJlZnJlc2giLCJjaGVja05hdmlnYWJsZSIsImdldE5hdmlnYWJsZUluZGV4ZXMiLCJjbGVhblVwRXZlbnRzIiwiaW50ZXJydXB0IiwiY2xlYW5VcFNsaWRlRXZlbnRzIiwib3JpZW50YXRpb25DaGFuZ2UiLCJyZXNpemUiLCJjbGVhblVwUm93cyIsImRlc3Ryb3kiLCJmYWRlU2xpZGUiLCJmYWRlU2xpZGVPdXQiLCJmaWx0ZXJTbGlkZXMiLCJzbGlja0ZpbHRlciIsImZvY3VzSGFuZGxlciIsImdldEN1cnJlbnQiLCJzbGlja0N1cnJlbnRTbGlkZSIsImdldExlZnQiLCJmbG9vciIsIm9mZnNldExlZnQiLCJvdXRlcldpZHRoIiwiZ2V0T3B0aW9uIiwic2xpY2tHZXRPcHRpb24iLCJnZXRTbGljayIsImdldFNsaWRlQ291bnQiLCJhYnMiLCJnb1RvIiwic2xpY2tHb1RvIiwic2V0UHJvcHMiLCJzdGFydExvYWQiLCJsb2FkU2xpZGVyIiwiaW5pdGlhbGl6ZUV2ZW50cyIsInVwZGF0ZUFycm93cyIsImluaXRBREEiLCJyb2xlIiwiYXJpYS1kZXNjcmliZWRieSIsImFyaWEtY29udHJvbHMiLCJhcmlhLWxhYmVsIiwiYXJpYS1zZWxlY3RlZCIsImluaXRBcnJvd0V2ZW50cyIsImluaXREb3RFdmVudHMiLCJpbml0U2xpZGVFdmVudHMiLCJhY3Rpb24iLCJpbml0VUkiLCJ0YWdOYW1lIiwicHJvZ3Jlc3NpdmVMYXp5TG9hZCIsInNsaWNrTmV4dCIsInBhdXNlIiwic2xpY2tQYXVzZSIsInBsYXkiLCJzbGlja1BsYXkiLCJwb3N0U2xpZGUiLCJzbGlja1ByZXYiLCJicmVha3BvaW50Iiwid2luZG93RGVsYXkiLCJyZW1vdmVTbGlkZSIsInNsaWNrUmVtb3ZlIiwic2V0Q1NTIiwic2V0RGltZW5zaW9ucyIsInNldEZhZGUiLCJzZXRIZWlnaHQiLCJzZXRPcHRpb24iLCJzbGlja1NldE9wdGlvbiIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwibXNUcmFuc2l0aW9uIiwiT1RyYW5zZm9ybSIsInBlcnNwZWN0aXZlUHJvcGVydHkiLCJ3ZWJraXRQZXJzcGVjdGl2ZSIsIk1velRyYW5zZm9ybSIsIk1velBlcnNwZWN0aXZlIiwid2Via2l0VHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJ0cmFuc2Zvcm0iLCJzd2lwZURpcmVjdGlvbiIsInN0YXJ0WCIsImN1clgiLCJzdGFydFkiLCJjdXJZIiwiYXRhbjIiLCJzd2lwZUVuZCIsInN3aXBlTGVuZ3RoIiwiZWRnZUhpdCIsIm1pblN3aXBlIiwiZmluZ2VyQ291bnQiLCJzd2lwZVN0YXJ0Iiwic3dpcGVNb3ZlIiwic3FydCIsInBvdyIsInVuZmlsdGVyU2xpZGVzIiwic2xpY2tVbmZpbHRlciIsIm5leHRFbGVtZW50U2libGluZyIsIkVsZW1lbnQiLCJtYWNoZXNTZWxlY3RvciIsInBhcmVudEVsZW1lbnQiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImRlZmluZVByb3BlcnRpZXMiLCJfX3Byb3RvX18iLCJOdW1iZXIiLCJGdW5jdGlvbiIsImRpc3BhdGNoRXZlbnQiLCJmaXJlRXZlbnQiLCJ1IiwiaCIsImciLCJpc0VsZW1lbnQiLCJtZXNzYWdlcyIsImVycm9yRmFjdG9yeUludmFsaWRDb250YWluZXIiLCJlcnJvckZhY3RvcnlDb250YWluZXJOb3RGb3VuZCIsInJhbmRvbUhleCIsImluc3RhbmNlcyIsIk1peGVyIiwiZGVidWciLCJzaG93V2FybmluZ3MiLCJ3YXJuaW5nRmFjdG9yeVByZWV4aXN0aW5nSW5zdGFuY2UiLCJhdHRhY2giLCJGYWNhZGUiLCJlbmFibGUiLCJDb2xsZWN0aW9uIiwidXNlIiwiQmFzZSIsImNhbGxBY3Rpb25zIiwiVFlQRSIsImV4dGVuc2lvbnMiLCJOQU1FIiwibGlicmFyaWVzIiwiaGFuZGxlRXh0ZW5kRXJyb3IiLCJmIiwiY2hhckF0IiwiZXJyb3JDb25maWdJbnZhbGlkUHJvcGVydHlTdWdnZXN0aW9uIiwicHJvYmFibGVNYXRjaCIsImVycm9yQ29uZmlnSW52YWxpZFByb3BlcnR5IiwiZXJyb25lb3VzIiwic3VnZ2VzdGlvbiIsInRlbXBsYXRlIiwiZGV0YWNoRXZlbnQiLCJnZXRDdXN0b21FdmVudCIsIkN1c3RvbUV2ZW50IiwiY3JlYXRlRXZlbnQiLCJpbml0Q3VzdG9tRXZlbnQiLCJjcmVhdGVFdmVudE9iamVjdCIsImNhbmNlbEJ1YmJsZSIsImdldE9yaWdpbmFsRXZlbnQiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwicGFzY2FsQ2FzZSIsImRhc2hDYXNlIiwiSFRNTEVsZW1lbnQiLCJyZW1vdmVXaGl0ZXNwYWNlIiwicHJldmlvdXNTaWJsaW5nIiwiaXNFcXVhbEFycmF5IiwiZGVlcEVxdWFscyIsImFycmF5U2h1ZmZsZSIsImFycmF5RnJvbUxpc3QiLCJkZWJvdW5jZSIsIm9mZnNldFRvcCIsIngiLCJ5IiwiZ2V0SHlwb3RlbnVzZSIsImdldEludGVyc2VjdGlvblJhdGlvIiwiY2xvc2VzdFBhcmVudCIsInJhbmRvbUhleEtleSIsImNsZWFuIiwiZmVhdHVyZXMiLCJwcm9taXNlcyIsIlByb21pc2UiLCJ3YXJuaW5nTm9Qcm9taXNlSW1wbGVtZW50YXRpb24iLCJhbGwiLCJnZXRQcmVmaXgiLCJzdWJzdHIiLCJnZXREb2N1bWVudFN0YXRlIiwiZG9jSGVpZ2h0Iiwic2Nyb2xsSGVpZ2h0IiwiZG9jV2lkdGgiLCJzY3JvbGxXaWR0aCIsInZpZXdwb3J0SGVpZ2h0IiwiY2xpZW50SGVpZ2h0Iiwidmlld3BvcnRXaWR0aCIsImNsaWVudFdpZHRoIiwiaXNWaXNpYmxlIiwic2VhbCIsImZyZWV6ZSIsImNvbXBhcmVWZXJzaW9ucyIsImdldENsYXNzbmFtZSIsImJsb2NrIiwiZGVsaW5lYXRvckVsZW1lbnQiLCJkZWxpbmVhdG9yTW9kaWZpZXIiLCJnZXRQcm9wZXJ0eSIsImFjdGlvbnMiLCJjYWxsRmlsdGVycyIsIkJhc2VTdGF0aWMiLCJyZWdpc3RlckFjdGlvbiIsInJlZ2lzdGVyRmlsdGVyIiwiRmVhdHVyZXMiLCJib3hTaXppbmdQcmVmaXgiLCJ0cmFuc2Zvcm1QcmVmaXgiLCJ0cmFuc2l0aW9uUHJlZml4IiwidHJhbnNmb3JtUHJvcCIsInRyYW5zZm9ybVJ1bGUiLCJ0cmFuc2l0aW9uUHJvcCIsInBlcnNwZWN0aXZlUHJvcCIsInBlcnNwZWN0aXZlT3JpZ2luUHJvcCIsIkhhcyIsImNhbmFyeSIsIkJPWF9TSVpJTkdfUFJPUCIsIlRSQU5TSVRJT05fUFJPUCIsIlRSQU5TRk9STV9QUk9QIiwiUEVSU1BFQ1RJVkVfUFJPUCIsIlBFUlNQRUNUSVZFX09SSUdJTl9QUk9QIiwiVkVORE9SUyIsIlRXRUVOQUJMRSIsInNldFByZWZpeGVzIiwicnVuVGVzdHMiLCJ0cmFuc2l0aW9ucyIsImJveFNpemluZ1Byb3AiLCJDb25maWdBbmltYXRpb24iLCJlZmZlY3RzIiwiZWZmZWN0c0luIiwiZWZmZWN0c091dCIsImFwcGx5UGVyc3BlY3RpdmUiLCJwZXJzcGVjdGl2ZURpc3RhbmNlIiwicGVyc3BlY3RpdmVPcmlnaW4iLCJxdWV1ZUxpbWl0IiwiYW5pbWF0ZVJlc2l6ZUNvbnRhaW5lciIsImFuaW1hdGVSZXNpemVUYXJnZXRzIiwic3RhZ2dlclNlcXVlbmNlIiwicmV2ZXJzZU91dCIsIm51ZGdlIiwiY2xhbXBIZWlnaHQiLCJjbGFtcFdpZHRoIiwiQ29uZmlnQmVoYXZpb3IiLCJsaXZlU29ydCIsIkNvbmZpZ0NhbGxiYWNrcyIsIm9uTWl4U3RhcnQiLCJvbk1peEJ1c3kiLCJvbk1peEVuZCIsIm9uTWl4RmFpbCIsIm9uTWl4Q2xpY2siLCJDb25maWdDb250cm9scyIsImxpdmUiLCJ0b2dnbGVMb2dpYyIsInRvZ2dsZURlZmF1bHQiLCJDb25maWdDbGFzc05hbWVzIiwiZWxlbWVudENvbnRhaW5lciIsImVsZW1lbnRGaWx0ZXIiLCJlbGVtZW50U29ydCIsImVsZW1lbnRNdWx0aW1peCIsImVsZW1lbnRUb2dnbGUiLCJtb2RpZmllckFjdGl2ZSIsIm1vZGlmaWVyRGlzYWJsZWQiLCJtb2RpZmllckZhaWxlZCIsIkNvbmZpZ0RhdGEiLCJ1aWRLZXkiLCJkaXJ0eUNoZWNrIiwiQ29uZmlnRGVidWciLCJmYXV4QXN5bmMiLCJDb25maWdMYXlvdXQiLCJhbGxvd05lc3RlZFRhcmdldHMiLCJjb250YWluZXJDbGFzc05hbWUiLCJzaWJsaW5nQmVmb3JlIiwic2libGluZ0FmdGVyIiwiQ29uZmlnTG9hZCIsImRhdGFzZXQiLCJDb25maWdTZWxlY3RvcnMiLCJjb250cm9sIiwiQ29uZmlnUmVuZGVyIiwiQ29uZmlnVGVtcGxhdGVzIiwiQ29uZmlnIiwiYmVoYXZpb3IiLCJjYWxsYmFja3MiLCJjb250cm9scyIsImxheW91dCIsInJlbmRlciIsInRlbXBsYXRlcyIsIk1peGVyRG9tIiwiVWlDbGFzc05hbWVzIiwiQ29tbWFuZERhdGFzZXQiLCJDb21tYW5kTXVsdGltaXgiLCJjaGFuZ2VMYXlvdXQiLCJDb21tYW5kRmlsdGVyIiwiQ29tbWFuZFNvcnQiLCJzb3J0U3RyaW5nIiwiYXR0cmlidXRlIiwiQ29tbWFuZEluc2VydCIsIkNvbW1hbmRSZW1vdmUiLCJDb21tYW5kQ2hhbmdlTGF5b3V0IiwiQ29udHJvbERlZmluaXRpb24iLCJjb250cm9sRGVmaW5pdGlvbnMiLCJDb250cm9sIiwiYm91bmQiLCJwZW5kaW5nIiwiY2FuRGlzYWJsZSIsImJpbmRDbGljayIsImlzQm91bmQiLCJhZGRCaW5kaW5nIiwicmVtb3ZlQmluZGluZyIsInVuYmluZENsaWNrIiwicmVuZGVyU3RhdHVzIiwiaGFuZGxlQ2xpY2siLCJjb25maWciLCJkb20iLCJsYXN0Q2xpY2tlZCIsImluc3RhbmNlIiwidG9nZ2xlT2ZmIiwidG9nZ2xlT24iLCJtdWx0aW1peCIsInVwZGF0ZSIsInVwZGF0ZUxpdmUiLCJwYXJzZVN0YXR1c0NoYW5nZSIsIlN0eWxlRGF0YSIsImJvdHRvbSIsIm1hcmdpblJpZ2h0IiwibWFyZ2luQm90dG9tIiwiVHJhbnNmb3JtRGF0YSIsInRyYW5zbGF0ZVgiLCJ0cmFuc2xhdGVZIiwidHJhbnNsYXRlWiIsInJvdGF0ZVgiLCJyb3RhdGVZIiwicm90YXRlWiIsIlRyYW5zZm9ybURlZmF1bHRzIiwidHJhbnNmb3JtRGVmYXVsdHMiLCJFdmVudERldGFpbCIsImZ1dHVyZVN0YXRlIiwiRXZlbnRzIiwibWl4U3RhcnQiLCJtaXhCdXN5IiwibWl4RW5kIiwibWl4RmFpbCIsIm1peENsaWNrIiwiU3RhdGUiLCJRdWV1ZUl0ZW0iLCJpbnN0cnVjdGlvbiIsInRyaWdnZXJFbGVtZW50IiwiaXNUb2dnbGluZyIsImlzQnVzeSIsImluY1BhZGRpbmciLCJvcmlnT3JkZXIiLCJ0b2dnbGVBcnJheSIsInRhcmdldHNNb3ZlZCIsInRhcmdldHNJbW1vdmFibGUiLCJ0YXJnZXRzQm91bmQiLCJ0YXJnZXRzRG9uZSIsInN0YWdnZXJEdXJhdGlvbiIsInRyYW5zZm9ybUluIiwidHJhbnNmb3JtT3V0IiwibGFzdE9wZXJhdGlvbiIsInVzZXJDYWxsYmFjayIsInVzZXJEZWZlcnJlZCIsInNhbml0aXplQ29uZmlnIiwiY2FjaGVEb20iLCJpbmRleFRhcmdldHMiLCJnZXRJbml0aWFsU3RhdGUiLCJ0b0hpZGUiLCJpbml0Q29udHJvbHMiLCJidWlsZFRvZ2dsZUFycmF5IiwidXBkYXRlQ29udHJvbHMiLCJhY3RpdmVGaWx0ZXIiLCJhY3RpdmVTb3J0IiwicGFyc2VFZmZlY3RzIiwiT3BlcmF0aW9uIiwiYWN0aXZlQ29udGFpbmVyQ2xhc3NOYW1lIiwiZXJyb3JDb25maWdEYXRhVWlkS2V5Tm90U2V0Iiwic3RhcnREYXRhc2V0IiwibmV3RGF0YXNldCIsImFjdGl2ZURhdGFzZXQiLCJzdGFydENvbnRhaW5lckNsYXNzTmFtZSIsIm5ld0NvbnRhaW5lckNsYXNzTmFtZSIsInBhcnNlRmlsdGVyQXJncyIsImNvbW1hbmQiLCJwYXJzZVNvcnRBcmdzIiwidG90YWxUYXJnZXRzIiwibmV3U29ydCIsInNvcnRPcGVyYXRpb24iLCJwcmludFNvcnQiLCJuZXdPcmRlciIsInN0YXJ0T3JkZXIiLCJzdGFydEZpbHRlciIsIm5ld0ZpbHRlciIsInN0YXJ0U29ydCIsImZpbHRlck9wZXJhdGlvbiIsImJ1aWxkU3RhdGUiLCJxdWVyeVNlbGVjdG9yIiwiZXJyb3JEYXRhc2V0UHJlcmVuZGVyZWRNaXNtYXRjaCIsIlRhcmdldCIsImlzSW5Eb20iLCJlcnJvckNvbmZpZ0ludmFsaWRDb250cm9sc1Njb3BlIiwiZ2V0Q29udHJvbCIsImdldFRvZ2dsZVNlbGVjdG9yIiwic3BsaXRDb21wb3VuZFNlbGVjdG9yIiwiYnVpbGRTb3J0U3RyaW5nIiwiaW5zZXJ0VGFyZ2V0cyIsImdldE5leHRTaWJsaW5nIiwiZXJyb3JJbnNlcnRQcmVleGlzdGluZ0VsZW1lbnQiLCJldmFsdWF0ZUhpZGVTaG93IiwidG9SZW1vdmUiLCJ0b1Nob3ciLCJtYXRjaGluZyIsImhhc0ZhaWxlZCIsImlzU2hvd24iLCJlcnJvclNvcnROb25FeGlzdGVudEVsZW1lbnQiLCJ3aWxsU29ydCIsImdldEF0dHJpYnV0ZVZhbHVlIiwid2FybmluZ0luY29uc2lzdGVudFNvcnRpbmdBdHRyaWJ1dGVzIiwicGFyc2VTb3J0U3RyaW5nIiwicGFyc2VFZmZlY3QiLCJlcnJvckNvbmZpZ0ludmFsaWRBbmltYXRpb25FZmZlY3RzIiwic3Vic3RyaW5nIiwidG90YWxTaG93IiwidG90YWxIaWRlIiwidG90YWxNYXRjaGluZyIsImdvTWl4Iiwid2lsbENoYW5nZUxheW91dCIsInN0YXJ0U3RhdGUiLCJuZXdTdGF0ZSIsImRvY1N0YXRlIiwic3RhcnRIZWlnaHQiLCJuZXdIZWlnaHQiLCJ2aWV3cG9ydERlbHRhWSIsInN0YXJ0V2lkdGgiLCJuZXdXaWR0aCIsInZpZXdwb3J0RGVsdGFYIiwibW92ZVRhcmdldHMiLCJjbGVhblVwIiwiZ2V0U3RhcnRNaXhEYXRhIiwiZ2V0UG9zRGF0YSIsInNob3dQb3NEYXRhIiwic3RhcnRQb3NEYXRhIiwidG9IaWRlUG9zRGF0YSIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIiwiYm9yZGVyVG9wIiwiYm9yZGVyQm90dG9tIiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQiLCJib3JkZXJMZWZ0IiwiYm9yZGVyUmlnaHQiLCJzZXRJbnRlciIsImdldEludGVyTWl4RGF0YSIsImludGVyUG9zRGF0YSIsInNldEZpbmFsIiwiZ2V0RmluYWxNaXhEYXRhIiwiZmluYWxQb3NEYXRhIiwibmV3WCIsIm5ld1kiLCJnZXRUd2VlbkRhdGEiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwicG9zSW4iLCJwb3NPdXQiLCJ0d2VlbkRhdGEiLCJjaGVja1Byb2dyZXNzIiwiSU1vdmVEYXRhIiwid2lsbFRyYW5zaXRpb24iLCJoYXNFZmZlY3QiLCJzdGF0dXNDaGFuZ2UiLCJzdGFnZ2VySW5kZXgiLCJvcGVyYXRpb24iLCJtb3ZlIiwiQ29udGFpbmVyQ2xhc3NOYW1lIiwibWFyZ2luVG9wIiwicGFyc2VNdWx0aW1peEFyZ3MiLCJVc2VySW5zdHJ1Y3Rpb24iLCJwYXJzZUluc2VydEFyZ3MiLCJwYXJzZVJlbW92ZUFyZ3MiLCJwYXJzZUNoYW5nZUxheW91dEFyZ3MiLCJlcnJvckZpbHRlckludmFsaWRBcmd1bWVudHMiLCJlcnJvckluc2VydEludmFsaWRBcmd1bWVudHMiLCJ3YXJuaW5nSW5zZXJ0Tm9FbGVtZW50cyIsIndhcm5pbmdSZW1vdmVOb0VsZW1lbnRzIiwicGFyc2VEYXRhc2V0QXJncyIsInF1ZXVlTWl4Iiwid2FybmluZ011bHRpbWl4SW5zdGFuY2VRdWV1ZUZ1bGwiLCJnZXREYXRhT3BlcmF0aW9uIiwiZXJyb3JEYXRhc2V0Tm90U2V0IiwiZGlmZkRhdGFzZXRzIiwiZXJyb3JEYXRhc2V0SW52YWxpZFVpZEtleSIsImVycm9yRGF0YXNldER1cGxpY2F0ZVVpZCIsInVuYmluZEV2ZW50cyIsImJpbmRFdmVudHMiLCJsYXN0RWxlbWVudENoaWxkIiwiaW5zZXJ0RGF0YXNldEZyYWciLCJpc01peGluZyIsImdldE9wZXJhdGlvbiIsIndhcm5pbmdHZXRPcGVyYXRpb25JbnN0YW5jZUJ1c3kiLCJhcHBseVR3ZWVuIiwiZ2V0Q29uZmlnIiwiY29uZmlndXJlIiwiZ2V0U3RhdGUiLCJmb3JjZVJlZnJlc2giLCJmb3JjZVJlbmRlciIsIlRhcmdldERvbSIsIm1peGVyIiwiaXNFeGNsdWRlZCIsImVycm9yRGF0YXNldFJlbmRlcmVyTm90U2V0IiwiZ2V0U29ydFN0cmluZyIsImFwcGx5U3R5bGVzSW4iLCJhcHBseVN0eWxlc091dCIsIndyaXRlVHJhbnNpdGlvblJ1bGUiLCJnZXREZWxheSIsImhhbmRsZVRyYW5zaXRpb25FbmQiLCJwcm9wZXJ0eU5hbWUiLCJldmVudEJ1cyIsIm1peGl0dXAiLCJ0b01vdmUiLCJzdGFydERpc3BsYXkiLCJuZXdEaXNwbGF5IiwiTWVzc2FnZXMiLCJFUlJPUl9GQUNUT1JZX0lOVkFMSURfQ09OVEFJTkVSIiwiRVJST1JfRkFDVE9SWV9DT05UQUlORVJfTk9UX0ZPVU5EIiwiRVJST1JfQ09ORklHX0lOVkFMSURfQU5JTUFUSU9OX0VGRkVDVFMiLCJFUlJPUl9DT05GSUdfSU5WQUxJRF9DT05UUk9MU19TQ09QRSIsIkVSUk9SX0NPTkZJR19JTlZBTElEX1BST1BFUlRZIiwiRVJST1JfQ09ORklHX0lOVkFMSURfUFJPUEVSVFlfU1VHR0VTVElPTiIsIkVSUk9SX0NPTkZJR19EQVRBX1VJRF9LRVlfTk9UX1NFVCIsIkVSUk9SX0RBVEFTRVRfSU5WQUxJRF9VSURfS0VZIiwiRVJST1JfREFUQVNFVF9EVVBMSUNBVEVfVUlEIiwiRVJST1JfSU5TRVJUX0lOVkFMSURfQVJHVU1FTlRTIiwiRVJST1JfSU5TRVJUX1BSRUVYSVNUSU5HX0VMRU1FTlQiLCJFUlJPUl9GSUxURVJfSU5WQUxJRF9BUkdVTUVOVFMiLCJFUlJPUl9EQVRBU0VUX05PVF9TRVQiLCJFUlJPUl9EQVRBU0VUX1BSRVJFTkRFUkVEX01JU01BVENIIiwiRVJST1JfREFUQVNFVF9SRU5ERVJFUl9OT1RfU0VUIiwiRVJST1JfU09SVF9OT05fRVhJU1RFTlRfRUxFTUVOVCIsIldBUk5JTkdfRkFDVE9SWV9QUkVFWElTVElOR19JTlNUQU5DRSIsIldBUk5JTkdfSU5TRVJUX05PX0VMRU1FTlRTIiwiV0FSTklOR19SRU1PVkVfTk9fRUxFTUVOVFMiLCJXQVJOSU5HX01VTFRJTUlYX0lOU1RBTkNFX1FVRVVFX0ZVTEwiLCJXQVJOSU5HX0dFVF9PUEVSQVRJT05fSU5TVEFOQ0VfQlVTWSIsIldBUk5JTkdfTk9fUFJPTUlTRV9JTVBMRU1FTlRBVElPTiIsIldBUk5JTkdfSU5DT05TSVNURU5UX1NPUlRJTkdfQVRUUklCVVRFUyIsImNvbXBpbGVUZW1wbGF0ZXMiLCJDT1JFX1ZFUlNJT04iLCIkdGFyZ2V0IiwiZmFuY3lib3giLCJnZXRJbnN0YW5jZSIsIiR0cmlnZ2VyIiwiaXRlbXMiLCJpbmZvIiwiY2xvc2VFeGlzdGluZyIsImxvb3AiLCJndXR0ZXIiLCJrZXlib2FyZCIsInByZXZlbnRDYXB0aW9uT3ZlcmxhcCIsImluZm9iYXIiLCJzbWFsbEJ0biIsInRvb2xiYXIiLCJpZGxlVGltZSIsInByb3RlY3QiLCJtb2RhbCIsInByZWxvYWQiLCJpZnJhbWUiLCJ0cGwiLCJ2aWRlbyIsImZvcm1hdCIsImF1dG9TdGFydCIsImRlZmF1bHRUeXBlIiwiYW5pbWF0aW9uRWZmZWN0IiwiYW5pbWF0aW9uRHVyYXRpb24iLCJ6b29tT3BhY2l0eSIsInRyYW5zaXRpb25FZmZlY3QiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJzbGlkZUNsYXNzIiwiYmFzZUNsYXNzIiwiYmFzZVRwbCIsInNwaW5uZXJUcGwiLCJlcnJvclRwbCIsImJ0blRwbCIsImRvd25sb2FkIiwiY2xvc2UiLCJhcnJvd0xlZnQiLCJhcnJvd1JpZ2h0IiwicGFyZW50RWwiLCJoaWRlU2Nyb2xsYmFyIiwiYXV0b0ZvY3VzIiwiYmFja0ZvY3VzIiwidHJhcEZvY3VzIiwiZnVsbFNjcmVlbiIsInRvdWNoIiwibW9tZW50dW0iLCJtZWRpYSIsInNsaWRlU2hvdyIsInRodW1icyIsImhpZGVPbkNsb3NlIiwiYXhpcyIsIndoZWVsIiwib25Jbml0IiwiYmVmb3JlTG9hZCIsImFmdGVyTG9hZCIsImJlZm9yZVNob3ciLCJhZnRlclNob3ciLCJiZWZvcmVDbG9zZSIsImFmdGVyQ2xvc2UiLCJvbkFjdGl2YXRlIiwib25EZWFjdGl2YXRlIiwiY2xpY2tDb250ZW50IiwiY2xpY2tTbGlkZSIsImNsaWNrT3V0c2lkZSIsImRibGNsaWNrQ29udGVudCIsImRibGNsaWNrU2xpZGUiLCJkYmxjbGlja091dHNpZGUiLCJtb2JpbGUiLCJpMThuIiwiZW4iLCJDTE9TRSIsIk5FWFQiLCJQUkVWIiwiRVJST1IiLCJQTEFZX1NUQVJUIiwiUExBWV9TVE9QIiwiRlVMTF9TQ1JFRU4iLCJUSFVNQlMiLCJET1dOTE9BRCIsIlNIQVJFIiwiWk9PTSIsImRlIiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwib1JlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwid2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb3pDYW5jZWxBbmltYXRpb25GcmFtZSIsIm9DYW5jZWxBbmltYXRpb25GcmFtZSIsInRyYW5zaXRpb24iLCJPVHJhbnNpdGlvbiIsImVsZW1lbnRGcm9tUG9pbnQiLCJpc01vYmlsZSIsImN1cnJJbmRleCIsInByZXZJbmRleCIsInByZXZQb3MiLCJjdXJyUG9zIiwiZmlyc3RSdW4iLCJncm91cCIsInNsaWRlcyIsImFkZENvbnRlbnQiLCJpbm5lckhlaWdodCIsInRyYW5zbGF0ZSIsIiRyZWZzIiwiZm9yRWFjaCIsImFjdGl2YXRlIiwianVtcFRvIiwiJG9yaWciLCIkdGh1bWIiLCJ0aHVtYiIsIlRodW1icyIsImlzQWN0aXZlIiwiYWRkRXZlbnRzIiwicmVtb3ZlRXZlbnRzIiwicHJldmlvdXMiLCJpc1NjYWxlZERvd24iLCJyZXF1ZXN0SWQiLCJzdGFnZSIsImlkbGVTZWNvbmRzQ291bnRlciIsImlzSWRsZSIsInNob3dDb250cm9scyIsImlkbGVJbnRlcnZhbCIsImlzRHJhZ2dpbmciLCJoaWRlQ29udHJvbHMiLCJpc0Nsb3NpbmciLCJpc0FuaW1hdGluZyIsImNyZWF0ZVNsaWRlIiwiZm9yY2VkRHVyYXRpb24iLCJpc01vdmVkIiwiJHNsaWRlIiwibG9hZFNsaWRlIiwiZ2V0VHJhbnNsYXRlIiwiaXNDb21wbGV0ZSIsInNldFRyYW5zbGF0ZSIsImlzTG9hZGVkIiwicmV2ZWFsQ29udGVudCIsInVwZGF0ZVNsaWRlIiwic2NhbGVUb0FjdHVhbCIsIiRjb250ZW50IiwiaGFzRXJyb3IiLCJ1cGRhdGVDdXJzb3IiLCJzY2FsZVgiLCJzY2FsZVkiLCJTbGlkZVNob3ciLCJzY2FsZVRvRml0IiwiZ2V0Rml0UG9zIiwicmF0aW8iLCJhZGp1c3RDYXB0aW9uIiwiYWRqdXN0TGF5b3V0IiwibmF2aWdhdGlvbiIsImNlbnRlclNsaWRlIiwiR3Vlc3R1cmVzIiwiY2FuUGFuIiwiaXNab29tYWJsZSIsImlzTG9hZGluZyIsInNldEltYWdlIiwic2V0SWZyYW1lIiwic2V0Q29udGVudCIsInZpZGVvRm9ybWF0Iiwic2V0RXJyb3IiLCJzaG93TG9hZGluZyIsIiRpbWFnZSIsImNoZWNrU3Jjc2V0IiwiJGdob3N0Iiwic2V0QmlnSW1hZ2UiLCJzcmNzZXQiLCJkZXZpY2VQaXhlbFJhdGlvIiwicG9zdGZpeCIsInJlc29sdmVJbWFnZVNsaWRlU2l6ZSIsIm5hdHVyYWxXaWR0aCIsIm5hdHVyYWxIZWlnaHQiLCJzaXplcyIsImhpZGVMb2FkaW5nIiwiJGlmcmFtZSIsImdldFRpbWUiLCJtYXgtd2lkdGgiLCJpc1JldmVhbGVkIiwiJHBsYWNlaG9sZGVyIiwiJHNtYWxsQnRuIiwiJHNwaW5uZXIiLCIkY2FwdGlvbiIsImRpc2FibGVMYXlvdXRGaXgiLCJnZXRUaHVtYlBvcyIsIkRvY3VtZW50IiwiZXhpdEZ1bGxzY3JlZW4iLCJ3ZWJraXRFeGl0RnVsbHNjcmVlbiIsInNjcm9sbFgiLCJzY3JvbGxZIiwiaGFzSGlkZGVuQ29udHJvbHMiLCJ0b2dnbGVDb250cm9scyIsInZlcnNpb24iLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ1c2UzZCIsImRvY3VtZW50TW9kZSIsInlvdXR1YmUiLCJhdXRvaGlkZSIsImZzIiwicmVsIiwiaGQiLCJ3bW9kZSIsImVuYWJsZWpzYXBpIiwiaHRtbDUiLCJwYXJhbVBsYWNlIiwidmltZW8iLCJzaG93X3RpdGxlIiwic2hvd19ieWxpbmUiLCJzaG93X3BvcnRyYWl0IiwiZnVsbHNjcmVlbiIsImluc3RhZ3JhbSIsImdtYXBfcGxhY2UiLCJnbWFwX3NlYXJjaCIsImRlY29kZVVSSUNvbXBvbmVudCIsIm9yaWdTcmMiLCJjb250ZW50U291cmNlIiwibG9hZGluZyIsImxvYWRlZCIsIm9uWW91VHViZUlmcmFtZUFQSVJlYWR5IiwiWVQiLCJQbGF5ZXIiLCJvblN0YXRlQ2hhbmdlIiwiVmltZW8iLCJhZnRlclNob3cuZmIiLCJvbmNsaWNrIiwiJGJnIiwiYmciLCIkc3RhZ2UiLCIkY29udGFpbmVyIiwidGFwcGVkIiwib250b3VjaHN0YXJ0IiwicmVhbFBvaW50cyIsInN0YXJ0UG9pbnRzIiwic3RhcnRFdmVudCIsImNhblRhcCIsImlzUGFubmluZyIsImlzU3dpcGluZyIsImlzWm9vbWluZyIsImlzU2Nyb2xsaW5nIiwiZGlzdGFuY2VYIiwiZGlzdGFuY2VZIiwiZGlzdGFuY2UiLCJjYW52YXNXaWR0aCIsImNhbnZhc0hlaWdodCIsImNvbnRlbnRMYXN0UG9zIiwiY29udGVudFN0YXJ0UG9zIiwic2xpZGVyU3RhcnRQb3MiLCJzdGFnZVBvcyIsIm9uc2Nyb2xsIiwiaXNTY3JvbGxhYmxlIiwiY2VudGVyUG9pbnRTdGFydFgiLCJjZW50ZXJQb2ludFN0YXJ0WSIsInBlcmNlbnRhZ2VPZkltYWdlQXRQaW5jaFBvaW50WCIsInBlcmNlbnRhZ2VPZkltYWdlQXRQaW5jaFBvaW50WSIsInN0YXJ0RGlzdGFuY2VCZXR3ZWVuRmluZ2VycyIsIm9udG91Y2htb3ZlIiwib250b3VjaGVuZCIsIm5ld1BvaW50cyIsIm9uU3dpcGUiLCJvblBhbiIsIm9uWm9vbSIsInNsaWRlckxhc3RQb3MiLCJ0cmFuc2l0aW9uLWR1cmF0aW9uIiwibGltaXRNb3ZlbWVudCIsImxpbWl0UG9zaXRpb24iLCJTIiwiZW5kUG9pbnRzIiwiZE1zIiwib25UYXAiLCJ2ZWxvY2l0eVgiLCJ2ZWxvY2l0eVkiLCJlbmRQYW5uaW5nIiwiZW5kWm9vbWluZyIsImVuZFN3aXBpbmciLCJ0YXBYIiwidGFwWSIsIiRidXR0b24iLCIkcHJvZ3Jlc3MiLCJpbm5lciIsImNsZWFyIiwib25Jbml0LmZiIiwiYmVmb3JlU2hvdy5mYiIsImFmdGVyS2V5ZG93bi5mYiIsImJlZm9yZUNsb3NlLmZiIG9uRGVhY3RpdmF0ZS5mYiIsInJlcXVlc3QiLCJyZXF1ZXN0RnVsbHNjcmVlbiIsIkFMTE9XX0tFWUJPQVJEX0lOUFVUIiwiZXhpdCIsImlzRnVsbHNjcmVlbiIsIkJvb2xlYW4iLCJmdWxsc2NyZWVuRWxlbWVudCIsImZ1bGxzY3JlZW5FbmFibGVkIiwiZnVsbHNjcmVlbmNoYW5nZSIsIkZ1bGxTY3JlZW4iLCJiZWZvcmVDbG9zZS5mYiIsIiRncmlkIiwic2hhcmUiLCJjdXJyZW50SGFzaCIsIiYiLCI8IiwiXCIiLCInIiwiLyIsImAiLCI9IiwiZ2FsbGVyeSIsIm9yaWdIYXNoIiwiaGFzaFRpbWVyIiwiaGlzdG9yeSIsInRpdGxlIiwicGF0aG5hbWUiLCJzZWFyY2giLCJoYXNDcmVhdGVkSGlzdG9yeSIsImJhY2siLCJyZXBsYWNlU3RhdGUiLCJkZWx0YVkiLCJkZWx0YVgiLCJ3aGVlbERlbHRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0NBYUEsU0FBQUEsRUFBQUMsR0FFQSxhQUVBLGlCQUFBQyxRQUFBLGlCQUFBQSxPQUFBQyxRQVNBRCxPQUFBQyxRQUFBSCxFQUFBSSxTQUNBSCxFQUFBRCxHQUFBLEdBQ0EsU0FBQUssR0FDQSxJQUFBQSxFQUFBRCxTQUNBLE1BQUEsSUFBQUUsTUFBQSw0Q0FFQSxPQUFBTCxFQUFBSSxJQUdBSixFQUFBRCxHQXRCQSxDQTBCQSxvQkFBQU8sT0FBQUEsT0FBQUMsTUFBQSxTQUFBRCxFQUFBRSxHQU1BLGFBRUEsSUFBQUMsRUFBQSxHQUVBQyxFQUFBQyxPQUFBQyxlQUVBQyxFQUFBSixFQUFBSSxNQUVB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S0FBQXkvQixPQUFBLFVBQUFydEIsRUFBQXRyQyxPQUFBK25CLEVBQUFOLGlCQUFBTSxFQUFBUixrQkFBQStqQixFQUFBbXlCLE9BQUEzL0IsU0FBQSx1QkFBQS9WLEVBQUFBLEVBQUFnQyxlQUFBaEMsRUFBQXZuQixFQUFBaVksRUFBQSxNQUFBQSxFQUFBalksRUFBQXFLLElBQUFrZCxFQUFBbWhELFNBQUFuaEQsRUFBQW9oRCxRQUFBcGhELEVBQUFxaEQsYUFBQXJoRCxFQUFBbUQsUUFBQSxFQUFBLE9BQUEsdUJBQUEsQ0FBQWp0QixTQUFBbUQsUUNaQThwQyxHQUFBLFdBRUFBLEVBQUEsZ0JBQUF0a0IsR0FBQSxTQUFBLFdBQ0Fza0IsRUFBQSxtQkFBQXpOLFlBQUEsNEJBRUF5TixFQUFBLDBCQUFBdGtCLEdBQUEsU0FBQSxXQUNBc2tCLEVBQUEsbUJBQUE5TixTQUFBLDRCQUlBOE4sRUFBQSxxQkFBQXRrQixHQUFBLFNBQUEsV0FDQXNrQixFQUFBLFNBQUF4TixZQUFBLGlCQUlBd04sRUFBQSxnQkFBQThILE1BQUEsQ0FDQTFHLE1BQUEsRUFDQVYsUUFBQSxFQUNBYyxNQUFBLEVBQ0FWLFVBQUEsSUFHQWQsRUFBQSxtQkFBQThILE1BQUEsQ0FDQXRGLGFBQUEsR0FDQUMsZUFBQSxHQUNBckIsTUFBQSxFQUNBVixRQUFBLEVBQ0FJLFVBQUEsSUFHQWQsRUFBQSx3QkFBQThILE1BQUEsQ0FDQWxILFVBQUEsNEpBQ0FDLFVBQUEsaUtBR0EwbkIsUUFBQSxrQkFBQSxDQUNBeHBDLEtBQUEsQ0FDQXZiLE9BQUEiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjMuNi4wXG4gKiBodHRwczovL2pxdWVyeS5jb20vXG4gKlxuICogSW5jbHVkZXMgU2l6emxlLmpzXG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgT3BlbkpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMjEtMDMtMDJUMTc6MDhaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cbnZhciBzbGljZSA9IGFyci5zbGljZTtcblxudmFyIGZsYXQgPSBhcnIuZmxhdCA/IGZ1bmN0aW9uKCBhcnJheSApIHtcblx0cmV0dXJuIGFyci5mbGF0LmNhbGwoIGFycmF5ICk7XG59IDogZnVuY3Rpb24oIGFycmF5ICkge1xuXHRyZXR1cm4gYXJyLmNvbmNhdC5hcHBseSggW10sIGFycmF5ICk7XG59O1xuXG5cbnZhciBwdXNoID0gYXJyLnB1c2g7XG5cbnZhciBpbmRleE9mID0gYXJyLmluZGV4T2Y7XG5cbnZhciBjbGFzczJ0eXBlID0ge307XG5cbnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7XG5cbnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgZm5Ub1N0cmluZyA9IGhhc093bi50b1N0cmluZztcblxudmFyIE9iamVjdEZ1bmN0aW9uU3RyaW5nID0gZm5Ub1N0cmluZy5jYWxsKCBPYmplY3QgKTtcblxudmFyIHN1cHBvcnQgPSB7fTtcblxudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiBpc0Z1bmN0aW9uKCBvYmogKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD01NywgRmlyZWZveCA8PTUyXG5cdFx0Ly8gSW4gc29tZSBicm93c2VycywgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIDxvYmplY3Q+IGVsZW1lbnRzXG5cdFx0Ly8gKGkuZS4sIGB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvYmplY3RcIiApID09PSBcImZ1bmN0aW9uXCJgKS5cblx0XHQvLyBXZSBkb24ndCB3YW50IHRvIGNsYXNzaWZ5ICphbnkqIERPTSBub2RlIGFzIGEgZnVuY3Rpb24uXG5cdFx0Ly8gU3VwcG9ydDogUXRXZWIgPD0zLjguNSwgV2ViS2l0IDw9NTM0LjM0LCB3a2h0bWx0b3BkZiB0b29sIDw9MC4xMi41XG5cdFx0Ly8gUGx1cyBmb3Igb2xkIFdlYktpdCwgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIGNvbGxlY3Rpb25zXG5cdFx0Ly8gKGUuZy4sIGB0eXBlb2YgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIikgPT09IFwiZnVuY3Rpb25cImApLiAoZ2gtNDc1Nilcblx0XHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBvYmoubm9kZVR5cGUgIT09IFwibnVtYmVyXCIgJiZcblx0XHRcdHR5cGVvZiBvYmouaXRlbSAhPT0gXCJmdW5jdGlvblwiO1xuXHR9O1xuXG5cbnZhciBpc1dpbmRvdyA9IGZ1bmN0aW9uIGlzV2luZG93KCBvYmogKSB7XG5cdFx0cmV0dXJuIG9iaiAhPSBudWxsICYmIG9iaiA9PT0gb2JqLndpbmRvdztcblx0fTtcblxuXG52YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7XG5cblxuXG5cdHZhciBwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzID0ge1xuXHRcdHR5cGU6IHRydWUsXG5cdFx0c3JjOiB0cnVlLFxuXHRcdG5vbmNlOiB0cnVlLFxuXHRcdG5vTW9kdWxlOiB0cnVlXG5cdH07XG5cblx0ZnVuY3Rpb24gRE9NRXZhbCggY29kZSwgbm9kZSwgZG9jICkge1xuXHRcdGRvYyA9IGRvYyB8fCBkb2N1bWVudDtcblxuXHRcdHZhciBpLCB2YWwsXG5cdFx0XHRzY3JpcHQgPSBkb2MuY3JlYXRlRWxlbWVudCggXCJzY3JpcHRcIiApO1xuXG5cdFx0c2NyaXB0LnRleHQgPSBjb2RlO1xuXHRcdGlmICggbm9kZSApIHtcblx0XHRcdGZvciAoIGkgaW4gcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDY0KywgRWRnZSAxOCtcblx0XHRcdFx0Ly8gU29tZSBicm93c2VycyBkb24ndCBzdXBwb3J0IHRoZSBcIm5vbmNlXCIgcHJvcGVydHkgb24gc2NyaXB0cy5cblx0XHRcdFx0Ly8gT24gdGhlIG90aGVyIGhhbmQsIGp1c3QgdXNpbmcgYGdldEF0dHJpYnV0ZWAgaXMgbm90IGVub3VnaCBhc1xuXHRcdFx0XHQvLyB0aGUgYG5vbmNlYCBhdHRyaWJ1dGUgaXMgcmVzZXQgdG8gYW4gZW1wdHkgc3RyaW5nIHdoZW5ldmVyIGl0XG5cdFx0XHRcdC8vIGJlY29tZXMgYnJvd3NpbmctY29udGV4dCBjb25uZWN0ZWQuXG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vd2hhdHdnL2h0bWwvaXNzdWVzLzIzNjlcblx0XHRcdFx0Ly8gU2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI25vbmNlLWF0dHJpYnV0ZXNcblx0XHRcdFx0Ly8gVGhlIGBub2RlLmdldEF0dHJpYnV0ZWAgY2hlY2sgd2FzIGFkZGVkIGZvciB0aGUgc2FrZSBvZlxuXHRcdFx0XHQvLyBgalF1ZXJ5Lmdsb2JhbEV2YWxgIHNvIHRoYXQgaXQgY2FuIGZha2UgYSBub25jZS1jb250YWluaW5nIG5vZGVcblx0XHRcdFx0Ly8gdmlhIGFuIG9iamVjdC5cblx0XHRcdFx0dmFsID0gbm9kZVsgaSBdIHx8IG5vZGUuZ2V0QXR0cmlidXRlICYmIG5vZGUuZ2V0QXR0cmlidXRlKCBpICk7XG5cdFx0XHRcdGlmICggdmFsICkge1xuXHRcdFx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoIGksIHZhbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGRvYy5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHQgKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBzY3JpcHQgKTtcblx0fVxuXG5cbmZ1bmN0aW9uIHRvVHlwZSggb2JqICkge1xuXHRpZiAoIG9iaiA9PSBudWxsICkge1xuXHRcdHJldHVybiBvYmogKyBcIlwiO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5IChmdW5jdGlvbmlzaCBSZWdFeHApXG5cdHJldHVybiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiA/XG5cdFx0Y2xhc3MydHlwZVsgdG9TdHJpbmcuY2FsbCggb2JqICkgXSB8fCBcIm9iamVjdFwiIDpcblx0XHR0eXBlb2Ygb2JqO1xufVxuLyogZ2xvYmFsIFN5bWJvbCAqL1xuLy8gRGVmaW5pbmcgdGhpcyBnbG9iYWwgaW4gLmVzbGludHJjLmpzb24gd291bGQgY3JlYXRlIGEgZGFuZ2VyIG9mIHVzaW5nIHRoZSBnbG9iYWxcbi8vIHVuZ3VhcmRlZCBpbiBhbm90aGVyIHBsYWNlLCBpdCBzZWVtcyBzYWZlciB0byBkZWZpbmUgZ2xvYmFsIG9ubHkgZm9yIHRoaXMgbW9kdWxlXG5cblxuXG52YXJcblx0dmVyc2lvbiA9IFwiMy42LjBcIixcblxuXHQvLyBEZWZpbmUgYSBsb2NhbCBjb3B5IG9mIGpRdWVyeVxuXHRqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XG5cblx0XHQvLyBUaGUgalF1ZXJ5IG9iamVjdCBpcyBhY3R1YWxseSBqdXN0IHRoZSBpbml0IGNvbnN0cnVjdG9yICdlbmhhbmNlZCdcblx0XHQvLyBOZWVkIGluaXQgaWYgalF1ZXJ5IGlzIGNhbGxlZCAoanVzdCBhbGxvdyBlcnJvciB0byBiZSB0aHJvd24gaWYgbm90IGluY2x1ZGVkKVxuXHRcdHJldHVybiBuZXcgalF1ZXJ5LmZuLmluaXQoIHNlbGVjdG9yLCBjb250ZXh0ICk7XG5cdH07XG5cbmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7XG5cblx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBqUXVlcnkgYmVpbmcgdXNlZFxuXHRqcXVlcnk6IHZlcnNpb24sXG5cblx0Y29uc3RydWN0b3I6IGpRdWVyeSxcblxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcblx0bGVuZ3RoOiAwLFxuXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gR2V0IHRoZSBOdGggZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldCBPUlxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XG5cblx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XG5cdFx0aWYgKCBudW0gPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxuXHRcdHJldHVybiBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdO1xuXHR9LFxuXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXG5cdHB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkge1xuXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcblx0XHR2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVsZW1zICk7XG5cblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxuXHRcdHJldC5wcmV2T2JqZWN0ID0gdGhpcztcblxuXHRcdC8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHQvLyBFeGVjdXRlIGEgY2FsbGJhY2sgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgc2V0LlxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdG1hcDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5Lm1hcCggdGhpcywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdHNsaWNlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNsaWNlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSApO1xuXHR9LFxuXG5cdGZpcnN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xuXHR9LFxuXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAtMSApO1xuXHR9LFxuXG5cdGV2ZW46IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5LmdyZXAoIHRoaXMsIGZ1bmN0aW9uKCBfZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiAoIGkgKyAxICkgJSAyO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdG9kZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkuZ3JlcCggdGhpcywgZnVuY3Rpb24oIF9lbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuIGkgJSAyO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdGVxOiBmdW5jdGlvbiggaSApIHtcblx0XHR2YXIgbGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggaiA+PSAwICYmIGogPCBsZW4gPyBbIHRoaXNbIGogXSBdIDogW10gKTtcblx0fSxcblxuXHRlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcigpO1xuXHR9LFxuXG5cdC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXG5cdHB1c2g6IHB1c2gsXG5cdHNvcnQ6IGFyci5zb3J0LFxuXHRzcGxpY2U6IGFyci5zcGxpY2Vcbn07XG5cbmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rpb24oKSB7XG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZSxcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSxcblx0XHRpID0gMSxcblx0XHRsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuXHRcdGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICggdHlwZW9mIHRhcmdldCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0ZGVlcCA9IHRhcmdldDtcblxuXHRcdC8vIFNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIGkgXSB8fCB7fTtcblx0XHRpKys7XG5cdH1cblxuXHQvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdldCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSlcblx0aWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSBcIm9iamVjdFwiICYmICFpc0Z1bmN0aW9uKCB0YXJnZXQgKSApIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdC8vIEV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxuXHRpZiAoIGkgPT09IGxlbmd0aCApIHtcblx0XHR0YXJnZXQgPSB0aGlzO1xuXHRcdGktLTtcblx0fVxuXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXG5cdFx0Ly8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xuXG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRcdGNvcHkgPSBvcHRpb25zWyBuYW1lIF07XG5cblx0XHRcdFx0Ly8gUHJldmVudCBPYmplY3QucHJvdG90eXBlIHBvbGx1dGlvblxuXHRcdFx0XHQvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXG5cdFx0XHRcdGlmICggbmFtZSA9PT0gXCJfX3Byb3RvX19cIiB8fCB0YXJnZXQgPT09IGNvcHkgKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0aWYgKCBkZWVwICYmIGNvcHkgJiYgKCBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29weSApIHx8XG5cdFx0XHRcdFx0KCBjb3B5SXNBcnJheSA9IEFycmF5LmlzQXJyYXkoIGNvcHkgKSApICkgKSB7XG5cdFx0XHRcdFx0c3JjID0gdGFyZ2V0WyBuYW1lIF07XG5cblx0XHRcdFx0XHQvLyBFbnN1cmUgcHJvcGVyIHR5cGUgZm9yIHRoZSBzb3VyY2UgdmFsdWVcblx0XHRcdFx0XHRpZiAoIGNvcHlJc0FycmF5ICYmICFBcnJheS5pc0FycmF5KCBzcmMgKSApIHtcblx0XHRcdFx0XHRcdGNsb25lID0gW107XG5cdFx0XHRcdFx0fSBlbHNlIGlmICggIWNvcHlJc0FycmF5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggc3JjICkgKSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHt9O1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcblxuXHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0galF1ZXJ5LmV4dGVuZCggZGVlcCwgY2xvbmUsIGNvcHkgKTtcblxuXHRcdFx0XHQvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzXG5cdFx0XHRcdH0gZWxzZSBpZiAoIGNvcHkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGNvcHk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIFVuaXF1ZSBmb3IgZWFjaCBjb3B5IG9mIGpRdWVyeSBvbiB0aGUgcGFnZVxuXHRleHBhbmRvOiBcImpRdWVyeVwiICsgKCB2ZXJzaW9uICsgTWF0aC5yYW5kb20oKSApLnJlcGxhY2UoIC9cXEQvZywgXCJcIiApLFxuXG5cdC8vIEFzc3VtZSBqUXVlcnkgaXMgcmVhZHkgd2l0aG91dCB0aGUgcmVhZHkgbW9kdWxlXG5cdGlzUmVhZHk6IHRydWUsXG5cblx0ZXJyb3I6IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCBtc2cgKTtcblx0fSxcblxuXHRub29wOiBmdW5jdGlvbigpIHt9LFxuXG5cdGlzUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIHByb3RvLCBDdG9yO1xuXG5cdFx0Ly8gRGV0ZWN0IG9idmlvdXMgbmVnYXRpdmVzXG5cdFx0Ly8gVXNlIHRvU3RyaW5nIGluc3RlYWQgb2YgalF1ZXJ5LnR5cGUgdG8gY2F0Y2ggaG9zdCBvYmplY3RzXG5cdFx0aWYgKCAhb2JqIHx8IHRvU3RyaW5nLmNhbGwoIG9iaiApICE9PSBcIltvYmplY3QgT2JqZWN0XVwiICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHByb3RvID0gZ2V0UHJvdG8oIG9iaiApO1xuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIG5vIHByb3RvdHlwZSAoZS5nLiwgYE9iamVjdC5jcmVhdGUoIG51bGwgKWApIGFyZSBwbGFpblxuXHRcdGlmICggIXByb3RvICkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIHByb3RvdHlwZSBhcmUgcGxhaW4gaWZmIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCBieSBhIGdsb2JhbCBPYmplY3QgZnVuY3Rpb25cblx0XHRDdG9yID0gaGFzT3duLmNhbGwoIHByb3RvLCBcImNvbnN0cnVjdG9yXCIgKSAmJiBwcm90by5jb25zdHJ1Y3Rvcjtcblx0XHRyZXR1cm4gdHlwZW9mIEN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBmblRvU3RyaW5nLmNhbGwoIEN0b3IgKSA9PT0gT2JqZWN0RnVuY3Rpb25TdHJpbmc7XG5cdH0sXG5cblx0aXNFbXB0eU9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIgbmFtZTtcblxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHQvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBwcm92aWRlZCBjb250ZXh0OyBmYWxscyBiYWNrIHRvIHRoZSBnbG9iYWwgb25lXG5cdC8vIGlmIG5vdCBzcGVjaWZpZWQuXG5cdGdsb2JhbEV2YWw6IGZ1bmN0aW9uKCBjb2RlLCBvcHRpb25zLCBkb2MgKSB7XG5cdFx0RE9NRXZhbCggY29kZSwgeyBub25jZTogb3B0aW9ucyAmJiBvcHRpb25zLm5vbmNlIH0sIGRvYyApO1xuXHR9LFxuXG5cdGVhY2g6IGZ1bmN0aW9uKCBvYmosIGNhbGxiYWNrICkge1xuXHRcdHZhciBsZW5ndGgsIGkgPSAwO1xuXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggb2JqICkgKSB7XG5cdFx0XHRsZW5ndGggPSBvYmoubGVuZ3RoO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gb2JqICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBvYmo7XG5cdH0sXG5cblx0Ly8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYWtlQXJyYXk6IGZ1bmN0aW9uKCBhcnIsIHJlc3VsdHMgKSB7XG5cdFx0dmFyIHJldCA9IHJlc3VsdHMgfHwgW107XG5cblx0XHRpZiAoIGFyciAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBpc0FycmF5TGlrZSggT2JqZWN0KCBhcnIgKSApICkge1xuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHJldCxcblx0XHRcdFx0XHR0eXBlb2YgYXJyID09PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFsgYXJyIF0gOiBhcnJcblx0XHRcdFx0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guY2FsbCggcmV0LCBhcnIgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XG5cdFx0cmV0dXJuIGFyciA9PSBudWxsID8gLTEgOiBpbmRleE9mLmNhbGwoIGFyciwgZWxlbSwgaSApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdG1lcmdlOiBmdW5jdGlvbiggZmlyc3QsIHNlY29uZCApIHtcblx0XHR2YXIgbGVuID0gK3NlY29uZC5sZW5ndGgsXG5cdFx0XHRqID0gMCxcblx0XHRcdGkgPSBmaXJzdC5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaiBdO1xuXHRcdH1cblxuXHRcdGZpcnN0Lmxlbmd0aCA9IGk7XG5cblx0XHRyZXR1cm4gZmlyc3Q7XG5cdH0sXG5cblx0Z3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ZXJ0ICkge1xuXHRcdHZhciBjYWxsYmFja0ludmVyc2UsXG5cdFx0XHRtYXRjaGVzID0gW10sXG5cdFx0XHRpID0gMCxcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aCxcblx0XHRcdGNhbGxiYWNrRXhwZWN0ID0gIWludmVydDtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCBvbmx5IHNhdmluZyB0aGUgaXRlbXNcblx0XHQvLyB0aGF0IHBhc3MgdGhlIHZhbGlkYXRvciBmdW5jdGlvblxuXHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0Y2FsbGJhY2tJbnZlcnNlID0gIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7XG5cdFx0XHRpZiAoIGNhbGxiYWNrSW52ZXJzZSAhPT0gY2FsbGJhY2tFeHBlY3QgKSB7XG5cdFx0XHRcdG1hdGNoZXMucHVzaCggZWxlbXNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBtYXRjaGVzO1xuXHR9LFxuXG5cdC8vIGFyZyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGFyZyApIHtcblx0XHR2YXIgbGVuZ3RoLCB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0cmV0ID0gW107XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVlc1xuXHRcdGlmICggaXNBcnJheUxpa2UoIGVsZW1zICkgKSB7XG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XG5cblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBHbyB0aHJvdWdoIGV2ZXJ5IGtleSBvbiB0aGUgb2JqZWN0LFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIGVsZW1zICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdFx0cmV0dXJuIGZsYXQoIHJldCApO1xuXHR9LFxuXG5cdC8vIEEgZ2xvYmFsIEdVSUQgY291bnRlciBmb3Igb2JqZWN0c1xuXHRndWlkOiAxLFxuXG5cdC8vIGpRdWVyeS5zdXBwb3J0IGlzIG5vdCB1c2VkIGluIENvcmUgYnV0IG90aGVyIHByb2plY3RzIGF0dGFjaCB0aGVpclxuXHQvLyBwcm9wZXJ0aWVzIHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LlxuXHRzdXBwb3J0OiBzdXBwb3J0XG59ICk7XG5cbmlmICggdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICkge1xuXHRqUXVlcnkuZm5bIFN5bWJvbC5pdGVyYXRvciBdID0gYXJyWyBTeW1ib2wuaXRlcmF0b3IgXTtcbn1cblxuLy8gUG9wdWxhdGUgdGhlIGNsYXNzMnR5cGUgbWFwXG5qUXVlcnkuZWFjaCggXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KCBcIiBcIiApLFxuXHRmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdFx0Y2xhc3MydHlwZVsgXCJbb2JqZWN0IFwiICsgbmFtZSArIFwiXVwiIF0gPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cdH0gKTtcblxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcblxuXHQvLyBTdXBwb3J0OiByZWFsIGlPUyA4LjIgb25seSAobm90IHJlcHJvZHVjaWJsZSBpbiBzaW11bGF0b3IpXG5cdC8vIGBpbmAgY2hlY2sgdXNlZCB0byBwcmV2ZW50IEpJVCBlcnJvciAoZ2gtMjE0NSlcblx0Ly8gaGFzT3duIGlzbid0IHVzZWQgaGVyZSBkdWUgdG8gZmFsc2UgbmVnYXRpdmVzXG5cdC8vIHJlZ2FyZGluZyBOb2RlbGlzdCBsZW5ndGggaW4gSUVcblx0dmFyIGxlbmd0aCA9ICEhb2JqICYmIFwibGVuZ3RoXCIgaW4gb2JqICYmIG9iai5sZW5ndGgsXG5cdFx0dHlwZSA9IHRvVHlwZSggb2JqICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBvYmogKSB8fCBpc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHR5cGUgPT09IFwiYXJyYXlcIiB8fCBsZW5ndGggPT09IDAgfHxcblx0XHR0eXBlb2YgbGVuZ3RoID09PSBcIm51bWJlclwiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqO1xufVxudmFyIFNpenpsZSA9XG4vKiFcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjMuNlxuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pzLmZvdW5kYXRpb24vXG4gKlxuICogRGF0ZTogMjAyMS0wMi0xNlxuICovXG4oIGZ1bmN0aW9uKCB3aW5kb3cgKSB7XG52YXIgaSxcblx0c3VwcG9ydCxcblx0RXhwcixcblx0Z2V0VGV4dCxcblx0aXNYTUwsXG5cdHRva2VuaXplLFxuXHRjb21waWxlLFxuXHRzZWxlY3QsXG5cdG91dGVybW9zdENvbnRleHQsXG5cdHNvcnRJbnB1dCxcblx0aGFzRHVwbGljYXRlLFxuXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcblx0c2V0RG9jdW1lbnQsXG5cdGRvY3VtZW50LFxuXHRkb2NFbGVtLFxuXHRkb2N1bWVudElzSFRNTCxcblx0cmJ1Z2d5UVNBLFxuXHRyYnVnZ3lNYXRjaGVzLFxuXHRtYXRjaGVzLFxuXHRjb250YWlucyxcblxuXHQvLyBJbnN0YW5jZS1zcGVjaWZpYyBkYXRhXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcblx0ZGlycnVucyA9IDAsXG5cdGRvbmUgPSAwLFxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0dG9rZW5DYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRub25uYXRpdmVTZWxlY3RvckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0c29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIDA7XG5cdH0sXG5cblx0Ly8gSW5zdGFuY2UgbWV0aG9kc1xuXHRoYXNPd24gPSAoIHt9ICkuaGFzT3duUHJvcGVydHksXG5cdGFyciA9IFtdLFxuXHRwb3AgPSBhcnIucG9wLFxuXHRwdXNoTmF0aXZlID0gYXJyLnB1c2gsXG5cdHB1c2ggPSBhcnIucHVzaCxcblx0c2xpY2UgPSBhcnIuc2xpY2UsXG5cblx0Ly8gVXNlIGEgc3RyaXBwZWQtZG93biBpbmRleE9mIGFzIGl0J3MgZmFzdGVyIHRoYW4gbmF0aXZlXG5cdC8vIGh0dHBzOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzVcblx0aW5kZXhPZiA9IGZ1bmN0aW9uKCBsaXN0LCBlbGVtICkge1xuXHRcdHZhciBpID0gMCxcblx0XHRcdGxlbiA9IGxpc3QubGVuZ3RoO1xuXHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0aWYgKCBsaXN0WyBpIF0gPT09IGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gLTE7XG5cdH0sXG5cblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxcIiArXG5cdFx0XCJpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXG5cblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtc2VsZWN0b3JzLyN3aGl0ZXNwYWNlXG5cdHdoaXRlc3BhY2UgPSBcIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsXG5cblx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1zeW50YXgtMy8jaWRlbnQtdG9rZW4tZGlhZ3JhbVxuXHRpZGVudGlmaWVyID0gXCIoPzpcXFxcXFxcXFtcXFxcZGEtZkEtRl17MSw2fVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCI/fFxcXFxcXFxcW15cXFxcclxcXFxuXFxcXGZdfFtcXFxcdy1dfFteXFwwLVxcXFx4N2ZdKStcIixcblxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0YXR0cmlidXRlcyA9IFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XCIgKyB3aGl0ZXNwYWNlICtcblxuXHRcdC8vIE9wZXJhdG9yIChjYXB0dXJlIDIpXG5cdFx0XCIqKFsqXiR8IX5dPz0pXCIgKyB3aGl0ZXNwYWNlICtcblxuXHRcdC8vIFwiQXR0cmlidXRlIHZhbHVlcyBtdXN0IGJlIENTUyBpZGVudGlmaWVycyBbY2FwdHVyZSA1XVxuXHRcdC8vIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdXCJcblx0XHRcIiooPzonKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCJ8KFwiICsgaWRlbnRpZmllciArIFwiKSl8KVwiICtcblx0XHR3aGl0ZXNwYWNlICsgXCIqXFxcXF1cIixcblxuXHRwc2V1ZG9zID0gXCI6KFwiICsgaWRlbnRpZmllciArIFwiKSg/OlxcXFwoKFwiICtcblxuXHRcdC8vIFRvIHJlZHVjZSB0aGUgbnVtYmVyIG9mIHNlbGVjdG9ycyBuZWVkaW5nIHRva2VuaXplIGluIHRoZSBwcmVGaWx0ZXIsIHByZWZlciBhcmd1bWVudHM6XG5cdFx0Ly8gMS4gcXVvdGVkIChjYXB0dXJlIDM7IGNhcHR1cmUgNCBvciBjYXB0dXJlIDUpXG5cdFx0XCIoJygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwiKXxcIiArXG5cblx0XHQvLyAyLiBzaW1wbGUgKGNhcHR1cmUgNilcblx0XHRcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpW1xcXFxdXXxcIiArIGF0dHJpYnV0ZXMgKyBcIikqKXxcIiArXG5cblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgK1xuXHRcdHdoaXRlc3BhY2UgKyBcIiskXCIsIFwiZ1wiICksXG5cblx0cmNvbW1hID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqLFwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXG5cdHJjb21iaW5hdG9ycyA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKihbPit+XXxcIiArIHdoaXRlc3BhY2UgKyBcIilcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFwiKlwiICksXG5cdHJkZXNjZW5kID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwifD5cIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJDTEFTU1wiOiBuZXcgUmVnRXhwKCBcIl5cXFxcLihcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgK1xuXHRcdFx0d2hpdGVzcGFjZSArIFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblxuXHRcdC8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMoKVxuXHRcdC8vIFdlIHVzZSB0aGlzIGZvciBQT1MgbWF0Y2hpbmcgaW4gYHNlbGVjdGBcblx0XHRcIm5lZWRzQ29udGV4dFwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJodG1sID0gL0hUTUwkL2ksXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cblx0Ly8gQ1NTIGVzY2FwZXNcblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcW1xcXFxkYS1mQS1GXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICsgXCI/fFxcXFxcXFxcKFteXFxcXHJcXFxcblxcXFxmXSlcIiwgXCJnXCIgKSxcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIGVzY2FwZSwgbm9uSGV4ICkge1xuXHRcdHZhciBoaWdoID0gXCIweFwiICsgZXNjYXBlLnNsaWNlKCAxICkgLSAweDEwMDAwO1xuXG5cdFx0cmV0dXJuIG5vbkhleCA/XG5cblx0XHRcdC8vIFN0cmlwIHRoZSBiYWNrc2xhc2ggcHJlZml4IGZyb20gYSBub24taGV4IGVzY2FwZSBzZXF1ZW5jZVxuXHRcdFx0bm9uSGV4IDpcblxuXHRcdFx0Ly8gUmVwbGFjZSBhIGhleGFkZWNpbWFsIGVzY2FwZSBzZXF1ZW5jZSB3aXRoIHRoZSBlbmNvZGVkIFVuaWNvZGUgY29kZSBwb2ludFxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMStcblx0XHRcdC8vIEZvciB2YWx1ZXMgb3V0c2lkZSB0aGUgQmFzaWMgTXVsdGlsaW5ndWFsIFBsYW5lIChCTVApLCBtYW51YWxseSBjb25zdHJ1Y3QgYVxuXHRcdFx0Ly8gc3Vycm9nYXRlIHBhaXJcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIENTUyBzdHJpbmcvaWRlbnRpZmllciBzZXJpYWxpemF0aW9uXG5cdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jY29tbW9uLXNlcmlhbGl6aW5nLWlkaW9tc1xuXHRyY3NzZXNjYXBlID0gLyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFwwLVxceDFmXFx4N2YtXFx1RkZGRlxcdy1dL2csXG5cdGZjc3Nlc2NhcGUgPSBmdW5jdGlvbiggY2gsIGFzQ29kZVBvaW50ICkge1xuXHRcdGlmICggYXNDb2RlUG9pbnQgKSB7XG5cblx0XHRcdC8vIFUrMDAwMCBOVUxMIGJlY29tZXMgVStGRkZEIFJFUExBQ0VNRU5UIENIQVJBQ1RFUlxuXHRcdFx0aWYgKCBjaCA9PT0gXCJcXDBcIiApIHtcblx0XHRcdFx0cmV0dXJuIFwiXFx1RkZGRFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQgZXNjYXBlZCBhcyBjb2RlIHBvaW50c1xuXHRcdFx0cmV0dXJuIGNoLnNsaWNlKCAwLCAtMSApICsgXCJcXFxcXCIgK1xuXHRcdFx0XHRjaC5jaGFyQ29kZUF0KCBjaC5sZW5ndGggLSAxICkudG9TdHJpbmcoIDE2ICkgKyBcIiBcIjtcblx0XHR9XG5cblx0XHQvLyBPdGhlciBwb3RlbnRpYWxseS1zcGVjaWFsIEFTQ0lJIGNoYXJhY3RlcnMgZ2V0IGJhY2tzbGFzaC1lc2NhcGVkXG5cdFx0cmV0dXJuIFwiXFxcXFwiICsgY2g7XG5cdH0sXG5cblx0Ly8gVXNlZCBmb3IgaWZyYW1lc1xuXHQvLyBTZWUgc2V0RG9jdW1lbnQoKVxuXHQvLyBSZW1vdmluZyB0aGUgZnVuY3Rpb24gd3JhcHBlciBjYXVzZXMgYSBcIlBlcm1pc3Npb24gRGVuaWVkXCJcblx0Ly8gZXJyb3IgaW4gSUVcblx0dW5sb2FkSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuXHRcdHNldERvY3VtZW50KCk7XG5cdH0sXG5cblx0aW5EaXNhYmxlZEZpZWxkc2V0ID0gYWRkQ29tYmluYXRvcihcblx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSB0cnVlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJmaWVsZHNldFwiO1xuXHRcdH0sXG5cdFx0eyBkaXI6IFwicGFyZW50Tm9kZVwiLCBuZXh0OiBcImxlZ2VuZFwiIH1cblx0KTtcblxuLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0IClcbnRyeSB7XG5cdHB1c2guYXBwbHkoXG5cdFx0KCBhcnIgPSBzbGljZS5jYWxsKCBwcmVmZXJyZWREb2MuY2hpbGROb2RlcyApICksXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcblx0KTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMFxuXHQvLyBEZXRlY3Qgc2lsZW50bHkgZmFpbGluZyBwdXNoLmFwcGx5XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtZXhwcmVzc2lvbnNcblx0YXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rlcy5sZW5ndGggXS5ub2RlVHlwZTtcbn0gY2F0Y2ggKCBlICkge1xuXHRwdXNoID0geyBhcHBseTogYXJyLmxlbmd0aCA/XG5cblx0XHQvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHB1c2hOYXRpdmUuYXBwbHkoIHRhcmdldCwgc2xpY2UuY2FsbCggZWxzICkgKTtcblx0XHR9IDpcblxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHQvLyBPdGhlcndpc2UgYXBwZW5kIGRpcmVjdGx5XG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0dmFyIGogPSB0YXJnZXQubGVuZ3RoLFxuXHRcdFx0XHRpID0gMDtcblxuXHRcdFx0Ly8gQ2FuJ3QgdHJ1c3QgTm9kZUxpc3QubGVuZ3RoXG5cdFx0XHR3aGlsZSAoICggdGFyZ2V0WyBqKysgXSA9IGVsc1sgaSsrIF0gKSApIHt9XG5cdFx0XHR0YXJnZXQubGVuZ3RoID0gaiAtIDE7XG5cdFx0fVxuXHR9O1xufVxuXG5mdW5jdGlvbiBTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgbSwgaSwgZWxlbSwgbmlkLCBtYXRjaCwgZ3JvdXBzLCBuZXdTZWxlY3Rvcixcblx0XHRuZXdDb250ZXh0ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQsXG5cblx0XHQvLyBub2RlVHlwZSBkZWZhdWx0cyB0byA5LCBzaW5jZSBjb250ZXh0IGRlZmF1bHRzIHRvIGRvY3VtZW50XG5cdFx0bm9kZVR5cGUgPSBjb250ZXh0ID8gY29udGV4dC5ub2RlVHlwZSA6IDk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGZyb20gY2FsbHMgd2l0aCBpbnZhbGlkIHNlbGVjdG9yIG9yIGNvbnRleHRcblx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgfHwgIXNlbGVjdG9yIHx8XG5cdFx0bm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkge1xuXG5cdFx0cmV0dXJuIHJlc3VsdHM7XG5cdH1cblxuXHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzXG5cdGlmICggIXNlZWQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0XHRjb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDtcblxuXHRcdGlmICggZG9jdW1lbnRJc0hUTUwgKSB7XG5cblx0XHRcdC8vIElmIHRoZSBzZWxlY3RvciBpcyBzdWZmaWNpZW50bHkgc2ltcGxlLCB0cnkgdXNpbmcgYSBcImdldCpCeSpcIiBET00gbWV0aG9kXG5cdFx0XHQvLyAoZXhjZXB0aW5nIERvY3VtZW50RnJhZ21lbnQgY29udGV4dCwgd2hlcmUgdGhlIG1ldGhvZHMgZG9uJ3QgZXhpc3QpXG5cdFx0XHRpZiAoIG5vZGVUeXBlICE9PSAxMSAmJiAoIG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApICkgKSB7XG5cblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3Jcblx0XHRcdFx0aWYgKCAoIG0gPSBtYXRjaFsgMSBdICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb2N1bWVudCBjb250ZXh0XG5cdFx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdGlmICggKCBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKCBlbGVtID0gbmV3Q29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApICkgJiZcblx0XHRcdFx0XHRcdFx0Y29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJlxuXHRcdFx0XHRcdFx0XHRlbGVtLmlkID09PSBtICkge1xuXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHlwZSBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsgMiBdICkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHNlbGVjdG9yICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0XHQvLyBDbGFzcyBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIG0gPSBtYXRjaFsgMyBdICkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmXG5cdFx0XHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBtICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsXG5cdFx0XHRpZiAoIHN1cHBvcnQucXNhICYmXG5cdFx0XHRcdCFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF0gJiZcblx0XHRcdFx0KCAhcmJ1Z2d5UVNBIHx8ICFyYnVnZ3lRU0EudGVzdCggc2VsZWN0b3IgKSApICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOCBvbmx5XG5cdFx0XHRcdC8vIEV4Y2x1ZGUgb2JqZWN0IGVsZW1lbnRzXG5cdFx0XHRcdCggbm9kZVR5cGUgIT09IDEgfHwgY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkgKSB7XG5cblx0XHRcdFx0bmV3U2VsZWN0b3IgPSBzZWxlY3Rvcjtcblx0XHRcdFx0bmV3Q29udGV4dCA9IGNvbnRleHQ7XG5cblx0XHRcdFx0Ly8gcVNBIGNvbnNpZGVycyBlbGVtZW50cyBvdXRzaWRlIGEgc2NvcGluZyByb290IHdoZW4gZXZhbHVhdGluZyBjaGlsZCBvclxuXHRcdFx0XHQvLyBkZXNjZW5kYW50IGNvbWJpbmF0b3JzLCB3aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50LlxuXHRcdFx0XHQvLyBJbiBzdWNoIGNhc2VzLCB3ZSB3b3JrIGFyb3VuZCB0aGUgYmVoYXZpb3IgYnkgcHJlZml4aW5nIGV2ZXJ5IHNlbGVjdG9yIGluIHRoZVxuXHRcdFx0XHQvLyBsaXN0IHdpdGggYW4gSUQgc2VsZWN0b3IgcmVmZXJlbmNpbmcgdGhlIHNjb3BlIGNvbnRleHQuXG5cdFx0XHRcdC8vIFRoZSB0ZWNobmlxdWUgaGFzIHRvIGJlIHVzZWQgYXMgd2VsbCB3aGVuIGEgbGVhZGluZyBjb21iaW5hdG9yIGlzIHVzZWRcblx0XHRcdFx0Ly8gYXMgc3VjaCBzZWxlY3RvcnMgYXJlIG5vdCByZWNvZ25pemVkIGJ5IHF1ZXJ5U2VsZWN0b3JBbGwuXG5cdFx0XHRcdC8vIFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGlzIHRlY2huaXF1ZS5cblx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdCggcmRlc2NlbmQudGVzdCggc2VsZWN0b3IgKSB8fCByY29tYmluYXRvcnMudGVzdCggc2VsZWN0b3IgKSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRXhwYW5kIGNvbnRleHQgZm9yIHNpYmxpbmcgc2VsZWN0b3JzXG5cdFx0XHRcdFx0bmV3Q29udGV4dCA9IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8XG5cdFx0XHRcdFx0XHRjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gV2UgY2FuIHVzZSA6c2NvcGUgaW5zdGVhZCBvZiB0aGUgSUQgaGFjayBpZiB0aGUgYnJvd3NlclxuXHRcdFx0XHRcdC8vIHN1cHBvcnRzIGl0ICYgaWYgd2UncmUgbm90IGNoYW5naW5nIHRoZSBjb250ZXh0LlxuXHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAhPT0gY29udGV4dCB8fCAhc3VwcG9ydC5zY29wZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2FwdHVyZSB0aGUgY29udGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3Nhcnlcblx0XHRcdFx0XHRcdGlmICggKCBuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkgKSApIHtcblx0XHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRleHQuc2V0QXR0cmlidXRlKCBcImlkXCIsICggbmlkID0gZXhwYW5kbyApICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRncm91cHNbIGkgXSA9ICggbmlkID8gXCIjXCIgKyBuaWQgOiBcIjpzY29wZVwiICkgKyBcIiBcIiArXG5cdFx0XHRcdFx0XHRcdHRvU2VsZWN0b3IoIGdyb3Vwc1sgaSBdICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsXG5cdFx0XHRcdFx0XHRuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yIClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHR9IGNhdGNoICggcXNhRXJyb3IgKSB7XG5cdFx0XHRcdFx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSggc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRpZiAoIG5pZCA9PT0gZXhwYW5kbyApIHtcblx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBbGwgb3RoZXJzXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xufVxuXG4vKipcbiAqIENyZWF0ZSBrZXktdmFsdWUgY2FjaGVzIG9mIGxpbWl0ZWQgc2l6ZVxuICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KX0gUmV0dXJucyB0aGUgT2JqZWN0IGRhdGEgYWZ0ZXIgc3RvcmluZyBpdCBvbiBpdHNlbGYgd2l0aFxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXG4gKlx0ZGVsZXRpbmcgdGhlIG9sZGVzdCBlbnRyeVxuICovXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcblx0dmFyIGtleXMgPSBbXTtcblxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcblxuXHRcdC8vIFVzZSAoa2V5ICsgXCIgXCIpIHRvIGF2b2lkIGNvbGxpc2lvbiB3aXRoIG5hdGl2ZSBwcm90b3R5cGUgcHJvcGVydGllcyAoc2VlIElzc3VlICMxNTcpXG5cdFx0aWYgKCBrZXlzLnB1c2goIGtleSArIFwiIFwiICkgPiBFeHByLmNhY2hlTGVuZ3RoICkge1xuXG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoIGNhY2hlWyBrZXkgKyBcIiBcIiBdID0gdmFsdWUgKTtcblx0fVxuXHRyZXR1cm4gY2FjaGU7XG59XG5cbi8qKlxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBtYXJrXG4gKi9cbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XG5cdGZuWyBleHBhbmRvIF0gPSB0cnVlO1xuXHRyZXR1cm4gZm47XG59XG5cbi8qKlxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFBhc3NlZCB0aGUgY3JlYXRlZCBlbGVtZW50IGFuZCByZXR1cm5zIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJmaWVsZHNldFwiICk7XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4gISFmbiggZWwgKTtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9IGZpbmFsbHkge1xuXG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBlbC5wYXJlbnROb2RlICkge1xuXHRcdFx0ZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZWwgKTtcblx0XHR9XG5cblx0XHQvLyByZWxlYXNlIG1lbW9yeSBpbiBJRVxuXHRcdGVsID0gbnVsbDtcblx0fVxufVxuXG4vKipcbiAqIEFkZHMgdGhlIHNhbWUgaGFuZGxlciBmb3IgYWxsIG9mIHRoZSBzcGVjaWZpZWQgYXR0cnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRycyBQaXBlLXNlcGFyYXRlZCBsaXN0IG9mIGF0dHJpYnV0ZXNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgVGhlIG1ldGhvZCB0aGF0IHdpbGwgYmUgYXBwbGllZFxuICovXG5mdW5jdGlvbiBhZGRIYW5kbGUoIGF0dHJzLCBoYW5kbGVyICkge1xuXHR2YXIgYXJyID0gYXR0cnMuc3BsaXQoIFwifFwiICksXG5cdFx0aSA9IGFyci5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0RXhwci5hdHRySGFuZGxlWyBhcnJbIGkgXSBdID0gaGFuZGxlcjtcblx0fVxufVxuXG4vKipcbiAqIENoZWNrcyBkb2N1bWVudCBvcmRlciBvZiB0d28gc2libGluZ3NcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxuICogQHBhcmFtIHtFbGVtZW50fSBiXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBSZXR1cm5zIGxlc3MgdGhhbiAwIGlmIGEgcHJlY2VkZXMgYiwgZ3JlYXRlciB0aGFuIDAgaWYgYSBmb2xsb3dzIGJcbiAqL1xuZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkge1xuXHR2YXIgY3VyID0gYiAmJiBhLFxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDtcblxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcblx0aWYgKCBkaWZmICkge1xuXHRcdHJldHVybiBkaWZmO1xuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgYiBmb2xsb3dzIGFcblx0aWYgKCBjdXIgKSB7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGN1ci5uZXh0U2libGluZyApICkge1xuXHRcdFx0aWYgKCBjdXIgPT09IGIgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYSA/IDEgOiAtMTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGlucHV0IHR5cGVzXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVJbnB1dFBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgYnV0dG9uc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9uUHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuICggbmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCIgKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciA6ZW5hYmxlZC86ZGlzYWJsZWRcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gZGlzYWJsZWQgdHJ1ZSBmb3IgOmRpc2FibGVkOyBmYWxzZSBmb3IgOmVuYWJsZWRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGRpc2FibGVkICkge1xuXG5cdC8vIEtub3duIDpkaXNhYmxlZCBmYWxzZSBwb3NpdGl2ZXM6IGZpZWxkc2V0W2Rpc2FibGVkXSA+IGxlZ2VuZDpudGgtb2YtdHlwZShuKzIpIDpjYW4tZGlzYWJsZVxuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBPbmx5IGNlcnRhaW4gZWxlbWVudHMgY2FuIG1hdGNoIDplbmFibGVkIG9yIDpkaXNhYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWVuYWJsZWRcblx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1kaXNhYmxlZFxuXHRcdGlmICggXCJmb3JtXCIgaW4gZWxlbSApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgZm9yIGluaGVyaXRlZCBkaXNhYmxlZG5lc3Mgb24gcmVsZXZhbnQgbm9uLWRpc2FibGVkIGVsZW1lbnRzOlxuXHRcdFx0Ly8gKiBsaXN0ZWQgZm9ybS1hc3NvY2lhdGVkIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgZmllbGRzZXRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjYXRlZ29yeS1saXN0ZWRcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LWZlLWRpc2FibGVkXG5cdFx0XHQvLyAqIG9wdGlvbiBlbGVtZW50cyBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHQvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY29uY2VwdC1vcHRpb24tZGlzYWJsZWRcblx0XHRcdC8vIEFsbCBzdWNoIGVsZW1lbnRzIGhhdmUgYSBcImZvcm1cIiBwcm9wZXJ0eS5cblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICYmIGVsZW0uZGlzYWJsZWQgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdC8vIE9wdGlvbiBlbGVtZW50cyBkZWZlciB0byBhIHBhcmVudCBvcHRncm91cCBpZiBwcmVzZW50XG5cdFx0XHRcdGlmICggXCJsYWJlbFwiIGluIGVsZW0gKSB7XG5cdFx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0ucGFyZW50Tm9kZS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gMTFcblx0XHRcdFx0Ly8gVXNlIHRoZSBpc0Rpc2FibGVkIHNob3J0Y3V0IHByb3BlcnR5IHRvIGNoZWNrIGZvciBkaXNhYmxlZCBmaWVsZHNldCBhbmNlc3RvcnNcblx0XHRcdFx0cmV0dXJuIGVsZW0uaXNEaXNhYmxlZCA9PT0gZGlzYWJsZWQgfHxcblxuXHRcdFx0XHRcdC8vIFdoZXJlIHRoZXJlIGlzIG5vIGlzRGlzYWJsZWQsIGNoZWNrIG1hbnVhbGx5XG5cdFx0XHRcdFx0LyoganNoaW50IC1XMDE4ICovXG5cdFx0XHRcdFx0ZWxlbS5pc0Rpc2FibGVkICE9PSAhZGlzYWJsZWQgJiZcblx0XHRcdFx0XHRpbkRpc2FibGVkRmllbGRzZXQoIGVsZW0gKSA9PT0gZGlzYWJsZWQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblxuXHRcdC8vIFRyeSB0byB3aW5ub3cgb3V0IGVsZW1lbnRzIHRoYXQgY2FuJ3QgYmUgZGlzYWJsZWQgYmVmb3JlIHRydXN0aW5nIHRoZSBkaXNhYmxlZCBwcm9wZXJ0eS5cblx0XHQvLyBTb21lIHZpY3RpbXMgZ2V0IGNhdWdodCBpbiBvdXIgbmV0IChsYWJlbCwgbGVnZW5kLCBtZW51LCB0cmFjayksIGJ1dCBpdCBzaG91bGRuJ3Rcblx0XHQvLyBldmVuIGV4aXN0IG9uIHRoZW0sIGxldCBhbG9uZSBoYXZlIGEgYm9vbGVhbiB2YWx1ZS5cblx0XHR9IGVsc2UgaWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHR9XG5cblx0XHQvLyBSZW1haW5pbmcgZWxlbWVudHMgYXJlIG5laXRoZXIgOmVuYWJsZWQgbm9yIDpkaXNhYmxlZFxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIHBvc2l0aW9uYWxzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICovXG5mdW5jdGlvbiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmbiApIHtcblx0cmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGFyZ3VtZW50ICkge1xuXHRcdGFyZ3VtZW50ID0gK2FyZ3VtZW50O1xuXHRcdHJldHVybiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbICggaiA9IG1hdGNoSW5kZXhlc1sgaSBdICkgXSApIHtcblx0XHRcdFx0XHRzZWVkWyBqIF0gPSAhKCBtYXRjaGVzWyBqIF0gPSBzZWVkWyBqIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSApO1xufVxuXG4vKipcbiAqIENoZWNrcyBhIG5vZGUgZm9yIHZhbGlkaXR5IGFzIGEgU2l6emxlIGNvbnRleHRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3Q9fSBjb250ZXh0XG4gKiBAcmV0dXJucyB7RWxlbWVudHxPYmplY3R8Qm9vbGVhbn0gVGhlIGlucHV0IG5vZGUgaWYgYWNjZXB0YWJsZSwgb3RoZXJ3aXNlIGEgZmFsc3kgdmFsdWVcbiAqL1xuZnVuY3Rpb24gdGVzdENvbnRleHQoIGNvbnRleHQgKSB7XG5cdHJldHVybiBjb250ZXh0ICYmIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnRleHQ7XG59XG5cbi8vIEV4cG9zZSBzdXBwb3J0IHZhcnMgZm9yIGNvbnZlbmllbmNlXG5zdXBwb3J0ID0gU2l6emxlLnN1cHBvcnQgPSB7fTtcblxuLyoqXG4gKiBEZXRlY3RzIFhNTCBub2Rlc1xuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gZWxlbSBBbiBlbGVtZW50IG9yIGEgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmZiBlbGVtIGlzIGEgbm9uLUhUTUwgWE1MIG5vZGVcbiAqL1xuaXNYTUwgPSBTaXp6bGUuaXNYTUwgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5hbWVzcGFjZSA9IGVsZW0gJiYgZWxlbS5uYW1lc3BhY2VVUkksXG5cdFx0ZG9jRWxlbSA9IGVsZW0gJiYgKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApLmRvY3VtZW50RWxlbWVudDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PThcblx0Ly8gQXNzdW1lIEhUTUwgd2hlbiBkb2N1bWVudEVsZW1lbnQgZG9lc24ndCB5ZXQgZXhpc3QsIHN1Y2ggYXMgaW5zaWRlIGxvYWRpbmcgaWZyYW1lc1xuXHQvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvNDgzM1xuXHRyZXR1cm4gIXJodG1sLnRlc3QoIG5hbWVzcGFjZSB8fCBkb2NFbGVtICYmIGRvY0VsZW0ubm9kZU5hbWUgfHwgXCJIVE1MXCIgKTtcbn07XG5cbi8qKlxuICogU2V0cyBkb2N1bWVudC1yZWxhdGVkIHZhcmlhYmxlcyBvbmNlIGJhc2VkIG9uIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBbZG9jXSBBbiBlbGVtZW50IG9yIGRvY3VtZW50IG9iamVjdCB0byB1c2UgdG8gc2V0IHRoZSBkb2N1bWVudFxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY3VycmVudCBkb2N1bWVudFxuICovXG5zZXREb2N1bWVudCA9IFNpenpsZS5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKCBub2RlICkge1xuXHR2YXIgaGFzQ29tcGFyZSwgc3ViV2luZG93LFxuXHRcdGRvYyA9IG5vZGUgPyBub2RlLm93bmVyRG9jdW1lbnQgfHwgbm9kZSA6IHByZWZlcnJlZERvYztcblxuXHQvLyBSZXR1cm4gZWFybHkgaWYgZG9jIGlzIGludmFsaWQgb3IgYWxyZWFkeSBzZWxlY3RlZFxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoIGRvYyA9PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTIgLSAxOCtcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoIHByZWZlcnJlZERvYyAhPSBkb2N1bWVudCAmJlxuXHRcdCggc3ViV2luZG93ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcgKSAmJiBzdWJXaW5kb3cudG9wICE9PSBzdWJXaW5kb3cgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSAxMSwgRWRnZVxuXHRcdGlmICggc3ViV2luZG93LmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJ1bmxvYWRcIiwgdW5sb2FkSGFuZGxlciwgZmFsc2UgKTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMCBvbmx5XG5cdFx0fSBlbHNlIGlmICggc3ViV2luZG93LmF0dGFjaEV2ZW50ICkge1xuXHRcdFx0c3ViV2luZG93LmF0dGFjaEV2ZW50KCBcIm9udW5sb2FkXCIsIHVubG9hZEhhbmRsZXIgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA4IC0gMTErLCBFZGdlIDEyIC0gMTgrLCBDaHJvbWUgPD0xNiAtIDI1IG9ubHksIEZpcmVmb3ggPD0zLjYgLSAzMSBvbmx5LFxuXHQvLyBTYWZhcmkgNCAtIDUgb25seSwgT3BlcmEgPD0xMS42IC0gMTIueCBvbmx5XG5cdC8vIElFL0VkZ2UgJiBvbGRlciBicm93c2VycyBkb24ndCBzdXBwb3J0IHRoZSA6c2NvcGUgcHNldWRvLWNsYXNzLlxuXHQvLyBTdXBwb3J0OiBTYWZhcmkgNi4wIG9ubHlcblx0Ly8gU2FmYXJpIDYuMCBzdXBwb3J0cyA6c2NvcGUgYnV0IGl0J3MgYW4gYWxpYXMgb2YgOnJvb3QgdGhlcmUuXG5cdHN1cHBvcnQuc2NvcGUgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKTtcblx0XHRyZXR1cm4gdHlwZW9mIGVsLnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgJiZcblx0XHRcdCFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIjpzY29wZSBmaWVsZHNldCBkaXZcIiApLmxlbmd0aDtcblx0fSApO1xuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRlbC5jbGFzc05hbWUgPSBcImlcIjtcblx0XHRyZXR1cm4gIWVsLmdldEF0dHJpYnV0ZSggXCJjbGFzc05hbWVcIiApO1xuXHR9ICk7XG5cblx0LyogZ2V0RWxlbWVudChzKUJ5KlxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpIHJldHVybnMgb25seSBlbGVtZW50c1xuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZWwuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIFwiXCIgKSApO1xuXHRcdHJldHVybiAhZWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwiKlwiICkubGVuZ3RoO1xuXHR9ICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKTtcblxuXHQvLyBTdXBwb3J0OiBJRTwxMFxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50QnlJZCByZXR1cm5zIGVsZW1lbnRzIGJ5IG5hbWVcblx0Ly8gVGhlIGJyb2tlbiBnZXRFbGVtZW50QnlJZCBtZXRob2RzIGRvbid0IHBpY2sgdXAgcHJvZ3JhbW1hdGljYWxseS1zZXQgbmFtZXMsXG5cdC8vIHNvIHVzZSBhIHJvdW5kYWJvdXQgZ2V0RWxlbWVudHNCeU5hbWUgdGVzdFxuXHRzdXBwb3J0LmdldEJ5SWQgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmlkID0gZXhwYW5kbztcblx0XHRyZXR1cm4gIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lIHx8ICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSggZXhwYW5kbyApLmxlbmd0aDtcblx0fSApO1xuXG5cdC8vIElEIGZpbHRlciBhbmQgZmluZFxuXHRpZiAoIHN1cHBvcnQuZ2V0QnlJZCApIHtcblx0XHRFeHByLmZpbHRlclsgXCJJRFwiIF0gPSBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBcImlkXCIgKSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXHRcdEV4cHIuZmluZFsgXCJJRFwiIF0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cdFx0XHRcdHJldHVybiBlbGVtID8gWyBlbGVtIF0gOiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdEV4cHIuZmlsdGVyWyBcIklEXCIgXSA9ICBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIG5vZGUgPSB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGVOb2RlICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBcImlkXCIgKTtcblx0XHRcdFx0cmV0dXJuIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgNiAtIDcgb25seVxuXHRcdC8vIGdldEVsZW1lbnRCeUlkIGlzIG5vdCByZWxpYWJsZSBhcyBhIGZpbmQgc2hvcnRjdXRcblx0XHRFeHByLmZpbmRbIFwiSURcIiBdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIG5vZGUsIGksIGVsZW1zLFxuXHRcdFx0XHRcdGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXG5cdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdC8vIFZlcmlmeSB0aGUgaWQgYXR0cmlidXRlXG5cdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIFsgZWxlbSBdO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIEZhbGwgYmFjayBvbiBnZXRFbGVtZW50c0J5TmFtZVxuXHRcdFx0XHRcdGVsZW1zID0gY29udGV4dC5nZXRFbGVtZW50c0J5TmFtZSggaWQgKTtcblx0XHRcdFx0XHRpID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggZWxlbSA9IGVsZW1zWyBpKysgXSApICkge1xuXHRcdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gaWQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gW107XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdC8vIFRhZ1xuXHRFeHByLmZpbmRbIFwiVEFHXCIgXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgP1xuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgZG9uJ3QgaGF2ZSBnRUJUTlxuXHRcdFx0fSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyApO1xuXHRcdFx0fVxuXHRcdH0gOlxuXG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHR0bXAgPSBbXSxcblx0XHRcdFx0aSA9IDAsXG5cblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcblx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSByZXN1bHRzWyBpKysgXSApICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdHRtcC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHRtcDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdH07XG5cblx0Ly8gQ2xhc3Ncblx0RXhwci5maW5kWyBcIkNMQVNTXCIgXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkge1xuXHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApO1xuXHRcdH1cblx0fTtcblxuXHQvKiBRU0EvbWF0Y2hlc1NlbGVjdG9yXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBRU0EgYW5kIG1hdGNoZXNTZWxlY3RvciBzdXBwb3J0XG5cblx0Ly8gbWF0Y2hlc1NlbGVjdG9yKDphY3RpdmUpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChJRTkvT3BlcmEgMTEuNSlcblx0cmJ1Z2d5TWF0Y2hlcyA9IFtdO1xuXG5cdC8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpXG5cdC8vIFdlIGFsbG93IHRoaXMgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBJRTgvOSB0aGF0IHRocm93cyBhbiBlcnJvclxuXHQvLyB3aGVuZXZlciBgZG9jdW1lbnQuYWN0aXZlRWxlbWVudGAgaXMgYWNjZXNzZWQgb24gYW4gaWZyYW1lXG5cdC8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yXG5cdC8vIFNlZSBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoIHN1cHBvcnQucXNhID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsICkgKSApIHtcblxuXHRcdC8vIEJ1aWxkIFFTQSByZWdleFxuXHRcdC8vIFJlZ2V4IHN0cmF0ZWd5IGFkb3B0ZWQgZnJvbSBEaWVnbyBQZXJpbmlcblx0XHRhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblxuXHRcdFx0dmFyIGlucHV0O1xuXG5cdFx0XHQvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlXG5cdFx0XHQvLyBUaGlzIGlzIHRvIHRlc3QgSUUncyB0cmVhdG1lbnQgb2Ygbm90IGV4cGxpY2l0bHlcblx0XHRcdC8vIHNldHRpbmcgYSBib29sZWFuIGNvbnRlbnQgYXR0cmlidXRlLFxuXHRcdFx0Ly8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2hcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pbm5lckhUTUwgPSBcIjxhIGlkPSdcIiArIGV4cGFuZG8gKyBcIic+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGlkPSdcIiArIGV4cGFuZG8gKyBcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz5cIiArXG5cdFx0XHRcdFwiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNlxuXHRcdFx0Ly8gTm90aGluZyBzaG91bGQgYmUgc2VsZWN0ZWQgd2hlbiBlbXB0eSBzdHJpbmdzIGZvbGxvdyBePSBvciAkPSBvciAqPVxuXHRcdFx0Ly8gVGhlIHRlc3QgYXR0cmlidXRlIG11c3QgYmUgdW5rbm93biBpbiBPcGVyYSBidXQgXCJzYWZlXCIgZm9yIFdpblJUXG5cdFx0XHQvLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJbKl4kXT1cIiArIHdoaXRlc3BhY2UgKyBcIiooPzonJ3xcXFwiXFxcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEJvb2xlYW4gYXR0cmlidXRlcyBhbmQgXCJ2YWx1ZVwiIGFyZSBub3QgdHJlYXRlZCBjb3JyZWN0bHlcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW3NlbGVjdGVkXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKig/OnZhbHVlfFwiICsgYm9vbGVhbnMgKyBcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWU8MjksIEFuZHJvaWQ8NC40LCBTYWZhcmk8Ny4wKywgaU9TPDcuMCssIFBoYW50b21KUzwxLjkuOCtcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW2lkfj1cIiArIGV4cGFuZG8gKyBcIi1dXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIn49XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE1IC0gMTgrXG5cdFx0XHQvLyBJRSAxMS9FZGdlIGRvbid0IGZpbmQgZWxlbWVudHMgb24gYSBgW25hbWU9JyddYCBxdWVyeSBpbiBzb21lIGNhc2VzLlxuXHRcdFx0Ly8gQWRkaW5nIGEgdGVtcG9yYXJ5IGF0dHJpYnV0ZSB0byB0aGUgZG9jdW1lbnQgYmVmb3JlIHRoZSBzZWxlY3Rpb24gd29ya3Ncblx0XHRcdC8vIGFyb3VuZCB0aGUgaXNzdWUuXG5cdFx0XHQvLyBJbnRlcmVzdGluZ2x5LCBJRSAxMCAmIG9sZGVyIGRvbid0IHNlZW0gdG8gaGF2ZSB0aGUgaXNzdWUuXG5cdFx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJcIiApO1xuXHRcdFx0ZWwuYXBwZW5kQ2hpbGQoIGlucHV0ICk7XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIltuYW1lPScnXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKm5hbWVcIiArIHdoaXRlc3BhY2UgKyBcIio9XCIgK1xuXHRcdFx0XHRcdHdoaXRlc3BhY2UgKyBcIiooPzonJ3xcXFwiXFxcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBXZWJraXQvT3BlcmEgLSA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIHNlbGVjdGVkIG9wdGlvbiBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIjpjaGVja2VkXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjpjaGVja2VkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCtcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiYSNcIiArIGV4cGFuZG8gKyBcIisqXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIi4jLitbK35dXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTMuNiAtIDUgb25seVxuXHRcdFx0Ly8gT2xkIEZpcmVmb3ggZG9lc24ndCB0aHJvdyBvbiBhIGJhZGx5LWVzY2FwZWQgaWRlbnRpZmllci5cblx0XHRcdGVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiXFxcXFxcZlwiICk7XG5cdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJbXFxcXHJcXFxcblxcXFxmXVwiICk7XG5cdFx0fSApO1xuXG5cdFx0YXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+XCIgK1xuXHRcdFx0XHRcIjxzZWxlY3QgZGlzYWJsZWQ9J2Rpc2FibGVkJz48b3B0aW9uLz48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogV2luZG93cyA4IE5hdGl2ZSBBcHBzXG5cdFx0XHQvLyBUaGUgdHlwZSBhbmQgbmFtZSBhdHRyaWJ1dGVzIGFyZSByZXN0cmljdGVkIGR1cmluZyAuaW5uZXJIVE1MIGFzc2lnbm1lbnRcblx0XHRcdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJoaWRkZW5cIiApO1xuXHRcdFx0ZWwuYXBwZW5kQ2hpbGQoIGlucHV0ICkuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJEXCIgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBFbmZvcmNlIGNhc2Utc2Vuc2l0aXZpdHkgb2YgbmFtZSBhdHRyaWJ1dGVcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCJbbmFtZT1kXVwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIjplbmFibGVkXCIgKS5sZW5ndGggIT09IDIgKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU5LTExK1xuXHRcdFx0Ly8gSUUncyA6ZGlzYWJsZWQgc2VsZWN0b3IgZG9lcyBub3QgcGljayB1cCB0aGUgY2hpbGRyZW4gb2YgZGlzYWJsZWQgZmllbGRzZXRzXG5cdFx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmRpc2FibGVkID0gdHJ1ZTtcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbCggXCI6ZGlzYWJsZWRcIiApLmxlbmd0aCAhPT0gMiApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiOmVuYWJsZWRcIiwgXCI6ZGlzYWJsZWRcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBPcGVyYSAxMCAtIDExIG9ubHlcblx0XHRcdC8vIE9wZXJhIDEwLTExIGRvZXMgbm90IHRocm93IG9uIHBvc3QtY29tbWEgaW52YWxpZCBwc2V1ZG9zXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKCBcIiosOnhcIiApO1xuXHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiLC4qOlwiICk7XG5cdFx0fSApO1xuXHR9XG5cblx0aWYgKCAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAoIG1hdGNoZXMgPSBkb2NFbGVtLm1hdGNoZXMgfHxcblx0XHRkb2NFbGVtLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ubW96TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5vTWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tc01hdGNoZXNTZWxlY3RvciApICkgKSApIHtcblxuXHRcdGFzc2VydCggZnVuY3Rpb24oIGVsICkge1xuXG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3Jcblx0XHRcdC8vIG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgKElFIDkpXG5cdFx0XHRzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoID0gbWF0Y2hlcy5jYWxsKCBlbCwgXCIqXCIgKTtcblxuXHRcdFx0Ly8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvblxuXHRcdFx0Ly8gR2Vja28gZG9lcyBub3QgZXJyb3IsIHJldHVybnMgZmFsc2UgaW5zdGVhZFxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBlbCwgXCJbcyE9JyddOnhcIiApO1xuXHRcdFx0cmJ1Z2d5TWF0Y2hlcy5wdXNoKCBcIiE9XCIsIHBzZXVkb3MgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyYnVnZ3lRU0EgPSByYnVnZ3lRU0EubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneVFTQS5qb2luKCBcInxcIiApICk7XG5cdHJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oIFwifFwiICkgKTtcblxuXHQvKiBDb250YWluc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdGhhc0NvbXBhcmUgPSBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29tcGFyZURvY3VtZW50UG9zaXRpb24gKTtcblxuXHQvLyBFbGVtZW50IGNvbnRhaW5zIGFub3RoZXJcblx0Ly8gUHVycG9zZWZ1bGx5IHNlbGYtZXhjbHVzaXZlXG5cdC8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90IGNvbnRhaW4gaXRzZWxmXG5cdGNvbnRhaW5zID0gaGFzQ29tcGFyZSB8fCBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29udGFpbnMgKSA/XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHR2YXIgYWRvd24gPSBhLm5vZGVUeXBlID09PSA5ID8gYS5kb2N1bWVudEVsZW1lbnQgOiBhLFxuXHRcdFx0XHRidXAgPSBiICYmIGIucGFyZW50Tm9kZTtcblx0XHRcdHJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRhZG93bi5jb250YWlucyA/XG5cdFx0XHRcdFx0YWRvd24uY29udGFpbnMoIGJ1cCApIDpcblx0XHRcdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICYmIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGJ1cCApICYgMTZcblx0XHRcdCkgKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoIGIgPSBiLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdFx0XHRpZiAoIGIgPT09IGEgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cdC8qIFNvcnRpbmdcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIERvY3VtZW50IG9yZGVyIHNvcnRpbmdcblx0c29ydE9yZGVyID0gaGFzQ29tcGFyZSA/XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0Ly8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0Ly8gU29ydCBvbiBtZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3NpdGlvblxuXHRcdHZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtcblx0XHRpZiAoIGNvbXBhcmUgKSB7XG5cdFx0XHRyZXR1cm4gY29tcGFyZTtcblx0XHR9XG5cblx0XHQvLyBDYWxjdWxhdGUgcG9zaXRpb24gaWYgYm90aCBpbnB1dHMgYmVsb25nIHRvIHRoZSBzYW1lIGRvY3VtZW50XG5cdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRjb21wYXJlID0gKCBhLm93bmVyRG9jdW1lbnQgfHwgYSApID09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoICFzdXBwb3J0LnNvcnREZXRhY2hlZCAmJiBiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBhICkgPT09IGNvbXBhcmUgKSApIHtcblxuXHRcdFx0Ly8gQ2hvb3NlIHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgaXMgcmVsYXRlZCB0byBvdXIgcHJlZmVycmVkIGRvY3VtZW50XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0aWYgKCBhID09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PSBwcmVmZXJyZWREb2MgJiZcblx0XHRcdFx0Y29udGFpbnMoIHByZWZlcnJlZERvYywgYSApICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4K1xuXHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG5cdFx0XHRpZiAoIGIgPT0gZG9jdW1lbnQgfHwgYi5vd25lckRvY3VtZW50ID09IHByZWZlcnJlZERvYyAmJlxuXHRcdFx0XHRjb250YWlucyggcHJlZmVycmVkRG9jLCBiICkgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY29tcGFyZSAmIDQgPyAtMSA6IDE7XG5cdH0gOlxuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxuXHRcdFx0YXAgPSBbIGEgXSxcblx0XHRcdGJwID0gWyBiIF07XG5cblx0XHQvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRpc2Nvbm5lY3RlZFxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG5cdFx0XHRyZXR1cm4gYSA9PSBkb2N1bWVudCA/IC0xIDpcblx0XHRcdFx0YiA9PSBkb2N1bWVudCA/IDEgOlxuXHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIGVxZXFlcSAqL1xuXHRcdFx0XHRhdXAgPyAtMSA6XG5cdFx0XHRcdGJ1cCA/IDEgOlxuXHRcdFx0XHRzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHQvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVja1xuXHRcdH0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkge1xuXHRcdFx0cmV0dXJuIHNpYmxpbmdDaGVjayggYSwgYiApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSB3ZSBuZWVkIGZ1bGwgbGlzdHMgb2YgdGhlaXIgYW5jZXN0b3JzIGZvciBjb21wYXJpc29uXG5cdFx0Y3VyID0gYTtcblx0XHR3aGlsZSAoICggY3VyID0gY3VyLnBhcmVudE5vZGUgKSApIHtcblx0XHRcdGFwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblx0XHRjdXIgPSBiO1xuXHRcdHdoaWxlICggKCBjdXIgPSBjdXIucGFyZW50Tm9kZSApICkge1xuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcblx0XHR3aGlsZSAoIGFwWyBpIF0gPT09IGJwWyBpIF0gKSB7XG5cdFx0XHRpKys7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGkgP1xuXG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3Jcblx0XHRcdHNpYmxpbmdDaGVjayggYXBbIGkgXSwgYnBbIGkgXSApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIG5vZGVzIGluIG91ciBkb2N1bWVudCBzb3J0IGZpcnN0XG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgZXFlcWVxICovXG5cdFx0XHRhcFsgaSBdID09IHByZWZlcnJlZERvYyA/IC0xIDpcblx0XHRcdGJwWyBpIF0gPT0gcHJlZmVycmVkRG9jID8gMSA6XG5cdFx0XHQvKiBlc2xpbnQtZW5hYmxlIGVxZXFlcSAqL1xuXHRcdFx0MDtcblx0fTtcblxuXHRyZXR1cm4gZG9jdW1lbnQ7XG59O1xuXG5TaXp6bGUubWF0Y2hlcyA9IGZ1bmN0aW9uKCBleHByLCBlbGVtZW50cyApIHtcblx0cmV0dXJuIFNpenpsZSggZXhwciwgbnVsbCwgbnVsbCwgZWxlbWVudHMgKTtcbn07XG5cblNpenpsZS5tYXRjaGVzU2VsZWN0b3IgPSBmdW5jdGlvbiggZWxlbSwgZXhwciApIHtcblx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblxuXHRpZiAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yICYmIGRvY3VtZW50SXNIVE1MICYmXG5cdFx0IW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGVbIGV4cHIgKyBcIiBcIiBdICYmXG5cdFx0KCAhcmJ1Z2d5TWF0Y2hlcyB8fCAhcmJ1Z2d5TWF0Y2hlcy50ZXN0KCBleHByICkgKSAmJlxuXHRcdCggIXJidWdneVFTQSAgICAgfHwgIXJidWdneVFTQS50ZXN0KCBleHByICkgKSApIHtcblxuXHRcdHRyeSB7XG5cdFx0XHR2YXIgcmV0ID0gbWF0Y2hlcy5jYWxsKCBlbGVtLCBleHByICk7XG5cblx0XHRcdC8vIElFIDkncyBtYXRjaGVzU2VsZWN0b3IgcmV0dXJucyBmYWxzZSBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRcdGlmICggcmV0IHx8IHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggfHxcblxuXHRcdFx0XHQvLyBBcyB3ZWxsLCBkaXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQgdG8gYmUgaW4gYSBkb2N1bWVudFxuXHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XG5cdFx0XHRcdGVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBleHByLCB0cnVlICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcbn07XG5cblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xuXG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRpZiAoICggY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgKSAhPSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHR9XG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xufTtcblxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblxuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdC8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZ1xuXHQvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdHZhciBmbiA9IEV4cHIuYXR0ckhhbmRsZVsgbmFtZS50b0xvd2VyQ2FzZSgpIF0sXG5cblx0XHQvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNylcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxuXHRcdFx0dW5kZWZpbmVkO1xuXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XG5cdFx0dmFsIDpcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxuXHRcdFx0KCB2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKSApICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRudWxsO1xufTtcblxuU2l6emxlLmVzY2FwZSA9IGZ1bmN0aW9uKCBzZWwgKSB7XG5cdHJldHVybiAoIHNlbCArIFwiXCIgKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG59O1xuXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcbn07XG5cbi8qKlxuICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlc1xuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcbiAqL1xuU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHtcblx0dmFyIGVsZW0sXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxuXHRcdGogPSAwLFxuXHRcdGkgPSAwO1xuXG5cdC8vIFVubGVzcyB3ZSAqa25vdyogd2UgY2FuIGRldGVjdCBkdXBsaWNhdGVzLCBhc3N1bWUgdGhlaXIgcHJlc2VuY2Vcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XG5cdHJlc3VsdHMuc29ydCggc29ydE9yZGVyICk7XG5cblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XG5cdFx0d2hpbGUgKCAoIGVsZW0gPSByZXN1bHRzWyBpKysgXSApICkge1xuXHRcdFx0aWYgKCBlbGVtID09PSByZXN1bHRzWyBpIF0gKSB7XG5cdFx0XHRcdGogPSBkdXBsaWNhdGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRyZXN1bHRzLnNwbGljZSggZHVwbGljYXRlc1sgaiBdLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2xlYXIgaW5wdXQgYWZ0ZXIgc29ydGluZyB0byByZWxlYXNlIG9iamVjdHNcblx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvc2l6emxlL3B1bGwvMjI1XG5cdHNvcnRJbnB1dCA9IG51bGw7XG5cblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJldHJpZXZpbmcgdGhlIHRleHQgdmFsdWUgb2YgYW4gYXJyYXkgb2YgRE9NIG5vZGVzXG4gKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW1cbiAqL1xuZ2V0VGV4dCA9IFNpenpsZS5nZXRUZXh0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHZhciBub2RlLFxuXHRcdHJldCA9IFwiXCIsXG5cdFx0aSA9IDAsXG5cdFx0bm9kZVR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdGlmICggIW5vZGVUeXBlICkge1xuXG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcblx0XHR3aGlsZSAoICggbm9kZSA9IGVsZW1bIGkrKyBdICkgKSB7XG5cblx0XHRcdC8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkge1xuXG5cdFx0Ly8gVXNlIHRleHRDb250ZW50IGZvciBlbGVtZW50c1xuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLnRleHRDb250ZW50O1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIFRyYXZlcnNlIGl0cyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdHJldCArPSBnZXRUZXh0KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMyB8fCBub2RlVHlwZSA9PT0gNCApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVmFsdWU7XG5cdH1cblxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcblxuXHRyZXR1cm4gcmV0O1xufTtcblxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XG5cblx0Ly8gQ2FuIGJlIGFkanVzdGVkIGJ5IHRoZSB1c2VyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcblxuXHRjcmVhdGVQc2V1ZG86IG1hcmtGdW5jdGlvbixcblxuXHRtYXRjaDogbWF0Y2hFeHByLFxuXG5cdGF0dHJIYW5kbGU6IHt9LFxuXG5cdGZpbmQ6IHt9LFxuXG5cdHJlbGF0aXZlOiB7XG5cdFx0XCI+XCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiflwiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiB9XG5cdH0sXG5cblx0cHJlRmlsdGVyOiB7XG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdG1hdGNoWyAxIF0gPSBtYXRjaFsgMSBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cblx0XHRcdC8vIE1vdmUgdGhlIGdpdmVuIHZhbHVlIHRvIG1hdGNoWzNdIHdoZXRoZXIgcXVvdGVkIG9yIHVucXVvdGVkXG5cdFx0XHRtYXRjaFsgMyBdID0gKCBtYXRjaFsgMyBdIHx8IG1hdGNoWyA0IF0gfHxcblx0XHRcdFx0bWF0Y2hbIDUgXSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsgMiBdID09PSBcIn49XCIgKSB7XG5cdFx0XHRcdG1hdGNoWyAzIF0gPSBcIiBcIiArIG1hdGNoWyAzIF0gKyBcIiBcIjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cblx0XHRcdFx0MSB0eXBlIChvbmx5fG50aHwuLi4pXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcblx0XHRcdFx0NCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cXGQqbnwpXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ3IHNpZ24gb2YgeS1jb21wb25lbnRcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XG5cdFx0XHQqL1xuXHRcdFx0bWF0Y2hbIDEgXSA9IG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsgMSBdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XG5cblx0XHRcdFx0Ly8gbnRoLSogcmVxdWlyZXMgYXJndW1lbnRcblx0XHRcdFx0aWYgKCAhbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWyAwIF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxuXHRcdFx0XHQvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xXG5cdFx0XHRcdG1hdGNoWyA0IF0gPSArKCBtYXRjaFsgNCBdID9cblx0XHRcdFx0XHRtYXRjaFsgNSBdICsgKCBtYXRjaFsgNiBdIHx8IDEgKSA6XG5cdFx0XHRcdFx0MiAqICggbWF0Y2hbIDMgXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbIDMgXSA9PT0gXCJvZGRcIiApICk7XG5cdFx0XHRcdG1hdGNoWyA1IF0gPSArKCAoIG1hdGNoWyA3IF0gKyBtYXRjaFsgOCBdICkgfHwgbWF0Y2hbIDMgXSA9PT0gXCJvZGRcIiApO1xuXG5cdFx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBtYXRjaDtcblx0XHR9LFxuXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0dmFyIGV4Y2Vzcyxcblx0XHRcdFx0dW5xdW90ZWQgPSAhbWF0Y2hbIDYgXSAmJiBtYXRjaFsgMiBdO1xuXG5cdFx0XHRpZiAoIG1hdGNoRXhwclsgXCJDSElMRFwiIF0udGVzdCggbWF0Y2hbIDAgXSApICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWNjZXB0IHF1b3RlZCBhcmd1bWVudHMgYXMtaXNcblx0XHRcdGlmICggbWF0Y2hbIDMgXSApIHtcblx0XHRcdFx0bWF0Y2hbIDIgXSA9IG1hdGNoWyA0IF0gfHwgbWF0Y2hbIDUgXSB8fCBcIlwiO1xuXG5cdFx0XHQvLyBTdHJpcCBleGNlc3MgY2hhcmFjdGVycyBmcm9tIHVucXVvdGVkIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXG5cblx0XHRcdFx0Ly8gR2V0IGV4Y2VzcyBmcm9tIHRva2VuaXplIChyZWN1cnNpdmVseSlcblx0XHRcdFx0KCBleGNlc3MgPSB0b2tlbml6ZSggdW5xdW90ZWQsIHRydWUgKSApICYmXG5cblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXG5cdFx0XHRcdCggZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggXCIpXCIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoICkgKSB7XG5cblx0XHRcdFx0Ly8gZXhjZXNzIGlzIGEgbmVnYXRpdmUgaW5kZXhcblx0XHRcdFx0bWF0Y2hbIDAgXSA9IG1hdGNoWyAwIF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0XHRtYXRjaFsgMiBdID0gdW5xdW90ZWQuc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZXR1cm4gb25seSBjYXB0dXJlcyBuZWVkZWQgYnkgdGhlIHBzZXVkbyBmaWx0ZXIgbWV0aG9kICh0eXBlIGFuZCBhcmd1bWVudClcblx0XHRcdHJldHVybiBtYXRjaC5zbGljZSggMCwgMyApO1xuXHRcdH1cblx0fSxcblxuXHRmaWx0ZXI6IHtcblxuXHRcdFwiVEFHXCI6IGZ1bmN0aW9uKCBub2RlTmFtZVNlbGVjdG9yICkge1xuXHRcdFx0dmFyIG5vZGVOYW1lID0gbm9kZU5hbWVTZWxlY3Rvci5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbm9kZU5hbWVTZWxlY3RvciA9PT0gXCIqXCIgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcblx0XHRcdHZhciBwYXR0ZXJuID0gY2xhc3NDYWNoZVsgY2xhc3NOYW1lICsgXCIgXCIgXTtcblxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcblx0XHRcdFx0KCBwYXR0ZXJuID0gbmV3IFJlZ0V4cCggXCIoXnxcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XHRcdFwiKVwiICsgY2xhc3NOYW1lICsgXCIoXCIgKyB3aGl0ZXNwYWNlICsgXCJ8JClcIiApICkgJiYgY2xhc3NDYWNoZShcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSwgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoXG5cdFx0XHRcdFx0XHRcdFx0dHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8XG5cdFx0XHRcdFx0XHRcdFx0dHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlICE9PSBcInVuZGVmaW5lZFwiICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc1wiICkgfHxcblx0XHRcdFx0XHRcdFx0XHRcIlwiXG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdH0gKTtcblx0XHR9LFxuXG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBuYW1lLCBvcGVyYXRvciwgY2hlY2sgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciByZXN1bHQgPSBTaXp6bGUuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0XHRcdGlmICggcmVzdWx0ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIiE9XCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCAhb3BlcmF0b3IgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXN1bHQgKz0gXCJcIjtcblxuXHRcdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5cblx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIj1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIio9XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ8PVwiID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEgKSA9PT0gY2hlY2sgKyBcIi1cIiA6XG5cdFx0XHRcdFx0ZmFsc2U7XG5cdFx0XHRcdC8qIGVzbGludC1lbmFibGUgbWF4LWxlbiAqL1xuXG5cdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBfYXJndW1lbnQsIGZpcnN0LCBsYXN0ICkge1xuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxuXHRcdFx0XHRvZlR5cGUgPSB3aGF0ID09PSBcIm9mLXR5cGVcIjtcblxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xuXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuICEhZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0XHR9IDpcblxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgX2NvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHR2YXIgY2FjaGUsIHVuaXF1ZUNhY2hlLCBvdXRlckNhY2hlLCBub2RlLCBub2RlSW5kZXgsIHN0YXJ0LFxuXHRcdFx0XHRcdFx0ZGlyID0gc2ltcGxlICE9PSBmb3J3YXJkID8gXCJuZXh0U2libGluZ1wiIDogXCJwcmV2aW91c1NpYmxpbmdcIixcblx0XHRcdFx0XHRcdHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZSxcblx0XHRcdFx0XHRcdG5hbWUgPSBvZlR5cGUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLFxuXHRcdFx0XHRcdFx0dXNlQ2FjaGUgPSAheG1sICYmICFvZlR5cGUsXG5cdFx0XHRcdFx0XHRkaWZmID0gZmFsc2U7XG5cblx0XHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblxuXHRcdFx0XHRcdFx0Ly8gOihmaXJzdHxsYXN0fG9ubHkpLShjaGlsZHxvZi10eXBlKVxuXHRcdFx0XHRcdFx0aWYgKCBzaW1wbGUgKSB7XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggZGlyICkge1xuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKCBub2RlID0gbm9kZVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gUmV2ZXJzZSBkaXJlY3Rpb24gZm9yIDpvbmx5LSogKGlmIHdlIGhhdmVuJ3QgeWV0IGRvbmUgc28pXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzdGFydCA9IFsgZm9yd2FyZCA/IHBhcmVudC5maXJzdENoaWxkIDogcGFyZW50Lmxhc3RDaGlsZCBdO1xuXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxuXHRcdFx0XHRcdFx0aWYgKCBmb3J3YXJkICYmIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFNlZWsgYGVsZW1gIGZyb20gYSBwcmV2aW91c2x5LWNhY2hlZCBpbmRleFxuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0bm9kZSA9IHBhcmVudDtcblx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAoIG5vZGVbIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XG5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBGYWxsYmFjayB0byBzZWVraW5nIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdCggZGlmZiA9IG5vZGVJbmRleCA9IDAgKSB8fCBzdGFydC5wb3AoKSApICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gV2hlbiBmb3VuZCwgY2FjaGUgaW5kZXhlcyBvbiBgcGFyZW50YCBhbmQgYnJlYWtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUubm9kZVR5cGUgPT09IDEgJiYgKytkaWZmICYmIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBub2RlSW5kZXgsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKCBub2RlWyBleHBhbmRvIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXg7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoIGRpZmYgPSBub2RlSW5kZXggPSAwICkgfHwgc3RhcnQucG9wKCkgKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCggbm9kZVsgZXhwYW5kbyBdID0ge30gKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEluY29ycG9yYXRlIHRoZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplXG5cdFx0XHRcdFx0XHRkaWZmIC09IGxhc3Q7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZGlmZiA9PT0gZmlyc3QgfHwgKCBkaWZmICUgZmlyc3QgPT09IDAgJiYgZGlmZiAvIGZpcnN0ID49IDAgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBwc2V1ZG8sIGFyZ3VtZW50ICkge1xuXG5cdFx0XHQvLyBwc2V1ZG8tY2xhc3MgbmFtZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmVcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jcHNldWRvLWNsYXNzZXNcblx0XHRcdC8vIFByaW9yaXRpemUgYnkgY2FzZSBzZW5zaXRpdml0eSBpbiBjYXNlIGN1c3RvbSBwc2V1ZG9zIGFyZSBhZGRlZCB3aXRoIHVwcGVyY2FzZSBsZXR0ZXJzXG5cdFx0XHQvLyBSZW1lbWJlciB0aGF0IHNldEZpbHRlcnMgaW5oZXJpdHMgZnJvbSBwc2V1ZG9zXG5cdFx0XHR2YXIgYXJncyxcblx0XHRcdFx0Zm4gPSBFeHByLnBzZXVkb3NbIHBzZXVkbyBdIHx8IEV4cHIuc2V0RmlsdGVyc1sgcHNldWRvLnRvTG93ZXJDYXNlKCkgXSB8fFxuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBwc2V1ZG86IFwiICsgcHNldWRvICk7XG5cblx0XHRcdC8vIFRoZSB1c2VyIG1heSB1c2UgY3JlYXRlUHNldWRvIHRvIGluZGljYXRlIHRoYXRcblx0XHRcdC8vIGFyZ3VtZW50cyBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGUgZmlsdGVyIGZ1bmN0aW9uXG5cdFx0XHQvLyBqdXN0IGFzIFNpenpsZSBkb2VzXG5cdFx0XHRpZiAoIGZuWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHJldHVybiBmbiggYXJndW1lbnQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQnV0IG1haW50YWluIHN1cHBvcnQgZm9yIG9sZCBzaWduYXR1cmVzXG5cdFx0XHRpZiAoIGZuLmxlbmd0aCA+IDEgKSB7XG5cdFx0XHRcdGFyZ3MgPSBbIHBzZXVkbywgcHNldWRvLCBcIlwiLCBhcmd1bWVudCBdO1xuXHRcdFx0XHRyZXR1cm4gRXhwci5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KCBwc2V1ZG8udG9Mb3dlckNhc2UoKSApID9cblx0XHRcdFx0XHRtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0XHRcdFx0dmFyIGlkeCxcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZCA9IGZuKCBzZWVkLCBhcmd1bWVudCApLFxuXHRcdFx0XHRcdFx0XHRpID0gbWF0Y2hlZC5sZW5ndGg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWR4ID0gaW5kZXhPZiggc2VlZCwgbWF0Y2hlZFsgaSBdICk7XG5cdFx0XHRcdFx0XHRcdHNlZWRbIGlkeCBdID0gISggbWF0Y2hlc1sgaWR4IF0gPSBtYXRjaGVkWyBpIF0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZuKCBlbGVtLCAwLCBhcmdzICk7XG5cdFx0XHRcdFx0fTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZuO1xuXHRcdH1cblx0fSxcblxuXHRwc2V1ZG9zOiB7XG5cblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblxuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMsIF9jb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQgPSBtYXRjaGVyKCBzZWVkLCBudWxsLCB4bWwsIFtdICksXG5cdFx0XHRcdFx0XHRpID0gc2VlZC5sZW5ndGg7XG5cblx0XHRcdFx0XHQvLyBNYXRjaCBlbGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZWxlbSA9IHVubWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbIGkgXSA9ICEoIG1hdGNoZXNbIGkgXSA9IGVsZW0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBfY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdGlucHV0WyAwIF0gPSBlbGVtO1xuXHRcdFx0XHRcdG1hdGNoZXIoIGlucHV0LCBudWxsLCB4bWwsIHJlc3VsdHMgKTtcblxuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbIDAgXSA9IG51bGw7XG5cdFx0XHRcdFx0cmV0dXJuICFyZXN1bHRzLnBvcCgpO1xuXHRcdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gU2l6emxlKCBzZWxlY3RvciwgZWxlbSApLmxlbmd0aCA+IDA7XG5cdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdFwiY29udGFpbnNcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0gKSxcblxuXHRcdC8vIFwiV2hldGhlciBhbiBlbGVtZW50IGlzIHJlcHJlc2VudGVkIGJ5IGEgOmxhbmcoKSBzZWxlY3RvclxuXHRcdC8vIGlzIGJhc2VkIHNvbGVseSBvbiB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlXG5cdFx0Ly8gYmVpbmcgZXF1YWwgdG8gdGhlIGlkZW50aWZpZXIgQyxcblx0XHQvLyBvciBiZWdpbm5pbmcgd2l0aCB0aGUgaWRlbnRpZmllciBDIGltbWVkaWF0ZWx5IGZvbGxvd2VkIGJ5IFwiLVwiLlxuXHRcdC8vIFRoZSBtYXRjaGluZyBvZiBDIGFnYWluc3QgdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZSBpcyBwZXJmb3JtZWQgY2FzZS1pbnNlbnNpdGl2ZWx5LlxuXHRcdC8vIFRoZSBpZGVudGlmaWVyIEMgZG9lcyBub3QgaGF2ZSB0byBiZSBhIHZhbGlkIGxhbmd1YWdlIG5hbWUuXCJcblx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2xhbmctcHNldWRvXG5cdFx0XCJsYW5nXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGxhbmcgKSB7XG5cblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QoIGxhbmcgfHwgXCJcIiApICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgbGFuZzogXCIgKyBsYW5nICk7XG5cdFx0XHR9XG5cdFx0XHRsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBlbGVtTGFuZztcblx0XHRcdFx0ZG8ge1xuXHRcdFx0XHRcdGlmICggKCBlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggXCJ4bWw6bGFuZ1wiICkgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoIFwibGFuZ1wiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0ZWxlbUxhbmcgPSBlbGVtTGFuZy50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW1MYW5nID09PSBsYW5nIHx8IGVsZW1MYW5nLmluZGV4T2YoIGxhbmcgKyBcIi1cIiApID09PSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSB3aGlsZSAoICggZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSApICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9ICksXG5cblx0XHQvLyBNaXNjZWxsYW5lb3VzXG5cdFx0XCJ0YXJnZXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaDtcblx0XHRcdHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoIDEgKSA9PT0gZWxlbS5pZDtcblx0XHR9LFxuXG5cdFx0XCJyb290XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY0VsZW07XG5cdFx0fSxcblxuXHRcdFwiZm9jdXNcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJlxuXHRcdFx0XHQoICFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpICkgJiZcblx0XHRcdFx0ISEoIGVsZW0udHlwZSB8fCBlbGVtLmhyZWYgfHwgfmVsZW0udGFiSW5kZXggKTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCBmYWxzZSApLFxuXHRcdFwiZGlzYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIHRydWUgKSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0Ly8gSW4gQ1NTMywgOmNoZWNrZWQgc2hvdWxkIHJldHVybiBib3RoIGNoZWNrZWQgYW5kIHNlbGVjdGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCApIHx8XG5cdFx0XHRcdCggbm9kZU5hbWUgPT09IFwib3B0aW9uXCIgJiYgISFlbGVtLnNlbGVjdGVkICk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8vIEFjY2Vzc2luZyB0aGlzIHByb3BlcnR5IG1ha2VzIHNlbGVjdGVkLWJ5LWRlZmF1bHRcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zXG5cdFx0XHRcdGVsZW0ucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZWxlbS5zZWxlY3RlZCA9PT0gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0Ly8gQ29udGVudHNcblx0XHRcImVtcHR5XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbIFwiZW1wdHlcIiBdKCBlbGVtICk7XG5cdFx0fSxcblxuXHRcdC8vIEVsZW1lbnQvaW5wdXQgdHlwZXNcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaGVhZGVyLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJpbnB1dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaW5wdXRzLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJidXR0b25cIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSBcImJ1dHRvblwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCI7XG5cdFx0fSxcblxuXHRcdFwidGV4dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBhdHRyO1xuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXG5cdFx0XHRcdGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCIgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw4XG5cdFx0XHRcdC8vIE5ldyBIVE1MNSBhdHRyaWJ1dGUgdmFsdWVzIChlLmcuLCBcInNlYXJjaFwiKSBhcHBlYXIgd2l0aCBlbGVtLnR5cGUgPT09IFwidGV4dFwiXG5cdFx0XHRcdCggKCBhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICkgKSA9PSBudWxsIHx8XG5cdFx0XHRcdFx0YXR0ci50b0xvd2VyQ2FzZSgpID09PSBcInRleHRcIiApO1xuXHRcdH0sXG5cblx0XHQvLyBQb3NpdGlvbi1pbi1jb2xsZWN0aW9uXG5cdFx0XCJmaXJzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBbIDAgXTtcblx0XHR9ICksXG5cblx0XHRcImxhc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIF9tYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcblx0XHR9ICksXG5cblx0XHRcImVxXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBfbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0cmV0dXJuIFsgYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudCBdO1xuXHRcdH0gKSxcblxuXHRcdFwiZXZlblwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDA7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSApLFxuXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAxO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKSxcblxuXHRcdFwibHRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID9cblx0XHRcdFx0YXJndW1lbnQgKyBsZW5ndGggOlxuXHRcdFx0XHRhcmd1bWVudCA+IGxlbmd0aCA/XG5cdFx0XHRcdFx0bGVuZ3RoIDpcblx0XHRcdFx0XHRhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgLS1pID49IDA7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9ICksXG5cblx0XHRcImd0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7ICsraSA8IGxlbmd0aDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0gKVxuXHR9XG59O1xuXG5FeHByLnBzZXVkb3NbIFwibnRoXCIgXSA9IEV4cHIucHNldWRvc1sgXCJlcVwiIF07XG5cbi8vIEFkZCBidXR0b24vaW5wdXQgdHlwZSBwc2V1ZG9zXG5mb3IgKCBpIGluIHsgcmFkaW86IHRydWUsIGNoZWNrYm94OiB0cnVlLCBmaWxlOiB0cnVlLCBwYXNzd29yZDogdHJ1ZSwgaW1hZ2U6IHRydWUgfSApIHtcblx0RXhwci5wc2V1ZG9zWyBpIF0gPSBjcmVhdGVJbnB1dFBzZXVkbyggaSApO1xufVxuZm9yICggaSBpbiB7IHN1Ym1pdDogdHJ1ZSwgcmVzZXQ6IHRydWUgfSApIHtcblx0RXhwci5wc2V1ZG9zWyBpIF0gPSBjcmVhdGVCdXR0b25Qc2V1ZG8oIGkgKTtcbn1cblxuLy8gRWFzeSBBUEkgZm9yIGNyZWF0aW5nIG5ldyBzZXRGaWx0ZXJzXG5mdW5jdGlvbiBzZXRGaWx0ZXJzKCkge31cbnNldEZpbHRlcnMucHJvdG90eXBlID0gRXhwci5maWx0ZXJzID0gRXhwci5wc2V1ZG9zO1xuRXhwci5zZXRGaWx0ZXJzID0gbmV3IHNldEZpbHRlcnMoKTtcblxudG9rZW5pemUgPSBTaXp6bGUudG9rZW5pemUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIHBhcnNlT25seSApIHtcblx0dmFyIG1hdGNoZWQsIG1hdGNoLCB0b2tlbnMsIHR5cGUsXG5cdFx0c29GYXIsIGdyb3VwcywgcHJlRmlsdGVycyxcblx0XHRjYWNoZWQgPSB0b2tlbkNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XG5cblx0aWYgKCBjYWNoZWQgKSB7XG5cdFx0cmV0dXJuIHBhcnNlT25seSA/IDAgOiBjYWNoZWQuc2xpY2UoIDAgKTtcblx0fVxuXG5cdHNvRmFyID0gc2VsZWN0b3I7XG5cdGdyb3VwcyA9IFtdO1xuXHRwcmVGaWx0ZXJzID0gRXhwci5wcmVGaWx0ZXI7XG5cblx0d2hpbGUgKCBzb0ZhciApIHtcblxuXHRcdC8vIENvbW1hIGFuZCBmaXJzdCBydW5cblx0XHRpZiAoICFtYXRjaGVkIHx8ICggbWF0Y2ggPSByY29tbWEuZXhlYyggc29GYXIgKSApICkge1xuXHRcdFx0aWYgKCBtYXRjaCApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjb25zdW1lIHRyYWlsaW5nIGNvbW1hcyBhcyB2YWxpZFxuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaFsgMCBdLmxlbmd0aCApIHx8IHNvRmFyO1xuXHRcdFx0fVxuXHRcdFx0Z3JvdXBzLnB1c2goICggdG9rZW5zID0gW10gKSApO1xuXHRcdH1cblxuXHRcdG1hdGNoZWQgPSBmYWxzZTtcblxuXHRcdC8vIENvbWJpbmF0b3JzXG5cdFx0aWYgKCAoIG1hdGNoID0gcmNvbWJpbmF0b3JzLmV4ZWMoIHNvRmFyICkgKSApIHtcblx0XHRcdG1hdGNoZWQgPSBtYXRjaC5zaGlmdCgpO1xuXHRcdFx0dG9rZW5zLnB1c2goIHtcblx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cblx0XHRcdFx0Ly8gQ2FzdCBkZXNjZW5kYW50IGNvbWJpbmF0b3JzIHRvIHNwYWNlXG5cdFx0XHRcdHR5cGU6IG1hdGNoWyAwIF0ucmVwbGFjZSggcnRyaW0sIFwiIFwiIClcblx0XHRcdH0gKTtcblx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmlsdGVyc1xuXHRcdGZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7XG5cdFx0XHRpZiAoICggbWF0Y2ggPSBtYXRjaEV4cHJbIHR5cGUgXS5leGVjKCBzb0ZhciApICkgJiYgKCAhcHJlRmlsdGVyc1sgdHlwZSBdIHx8XG5cdFx0XHRcdCggbWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkgKSApICkge1xuXHRcdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdFx0dG9rZW5zLnB1c2goIHtcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRcdG1hdGNoZXM6IG1hdGNoXG5cdFx0XHRcdH0gKTtcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hlZC5sZW5ndGggKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoICFtYXRjaGVkICkge1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBsZW5ndGggb2YgdGhlIGludmFsaWQgZXhjZXNzXG5cdC8vIGlmIHdlJ3JlIGp1c3QgcGFyc2luZ1xuXHQvLyBPdGhlcndpc2UsIHRocm93IGFuIGVycm9yIG9yIHJldHVybiB0b2tlbnNcblx0cmV0dXJuIHBhcnNlT25seSA/XG5cdFx0c29GYXIubGVuZ3RoIDpcblx0XHRzb0ZhciA/XG5cdFx0XHRTaXp6bGUuZXJyb3IoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHQvLyBDYWNoZSB0aGUgdG9rZW5zXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcbn07XG5cbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRzZWxlY3RvciArPSB0b2tlbnNbIGkgXS52YWx1ZTtcblx0fVxuXHRyZXR1cm4gc2VsZWN0b3I7XG59XG5cbmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7XG5cdHZhciBkaXIgPSBjb21iaW5hdG9yLmRpcixcblx0XHRza2lwID0gY29tYmluYXRvci5uZXh0LFxuXHRcdGtleSA9IHNraXAgfHwgZGlyLFxuXHRcdGNoZWNrTm9uRWxlbWVudHMgPSBiYXNlICYmIGtleSA9PT0gXCJwYXJlbnROb2RlXCIsXG5cdFx0ZG9uZU5hbWUgPSBkb25lKys7XG5cblx0cmV0dXJuIGNvbWJpbmF0b3IuZmlyc3QgP1xuXG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBjbG9zZXN0IGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IGVsZW1bIGV4cGFuZG8gXSB8fCAoIGVsZW1bIGV4cGFuZG8gXSA9IHt9ICk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0KCBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gPSB7fSApO1xuXG5cdFx0XHRcdFx0XHRpZiAoIHNraXAgJiYgc2tpcCA9PT0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICkge1xuXHRcdFx0XHRcdFx0XHRlbGVtID0gZWxlbVsgZGlyIF0gfHwgZWxlbTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoICggb2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsga2V5IF0gKSAmJlxuXHRcdFx0XHRcdFx0XHRvbGRDYWNoZVsgMCBdID09PSBkaXJydW5zICYmIG9sZENhY2hlWyAxIF0gPT09IGRvbmVOYW1lICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFzc2lnbiB0byBuZXdDYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHJldHVybiAoIG5ld0NhY2hlWyAyIF0gPSBvbGRDYWNoZVsgMiBdICk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFJldXNlIG5ld2NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIGtleSBdID0gbmV3Q2FjaGU7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQSBtYXRjaCBtZWFucyB3ZSdyZSBkb25lOyBhIGZhaWwgbWVhbnMgd2UgaGF2ZSB0byBrZWVwIGNoZWNraW5nXG5cdFx0XHRcdFx0XHRcdGlmICggKCBuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH07XG59XG5cbmZ1bmN0aW9uIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApIHtcblx0cmV0dXJuIG1hdGNoZXJzLmxlbmd0aCA+IDEgP1xuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgaSA9IG1hdGNoZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoICFtYXRjaGVyc1sgaSBdKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWyAwIF07XG59XG5cbmZ1bmN0aW9uIG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yLCBjb250ZXh0cywgcmVzdWx0cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGNvbnRleHRzLmxlbmd0aDtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0U2l6emxlKCBzZWxlY3RvciwgY29udGV4dHNbIGkgXSwgcmVzdWx0cyApO1xuXHR9XG5cdHJldHVybiByZXN1bHRzO1xufVxuXG5mdW5jdGlvbiBjb25kZW5zZSggdW5tYXRjaGVkLCBtYXAsIGZpbHRlciwgY29udGV4dCwgeG1sICkge1xuXHR2YXIgZWxlbSxcblx0XHRuZXdVbm1hdGNoZWQgPSBbXSxcblx0XHRpID0gMCxcblx0XHRsZW4gPSB1bm1hdGNoZWQubGVuZ3RoLFxuXHRcdG1hcHBlZCA9IG1hcCAhPSBudWxsO1xuXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdGlmICggKCBlbGVtID0gdW5tYXRjaGVkWyBpIF0gKSApIHtcblx0XHRcdGlmICggIWZpbHRlciB8fCBmaWx0ZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRuZXdVbm1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0XHRpZiAoIG1hcHBlZCApIHtcblx0XHRcdFx0XHRtYXAucHVzaCggaSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG5ld1VubWF0Y2hlZDtcbn1cblxuZnVuY3Rpb24gc2V0TWF0Y2hlciggcHJlRmlsdGVyLCBzZWxlY3RvciwgbWF0Y2hlciwgcG9zdEZpbHRlciwgcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICkge1xuXHRpZiAoIHBvc3RGaWx0ZXIgJiYgIXBvc3RGaWx0ZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmlsdGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbHRlciApO1xuXHR9XG5cdGlmICggcG9zdEZpbmRlciAmJiAhcG9zdEZpbmRlclsgZXhwYW5kbyBdICkge1xuXHRcdHBvc3RGaW5kZXIgPSBzZXRNYXRjaGVyKCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKTtcblx0fVxuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoXG5cdFx0XHRcdHNlbGVjdG9yIHx8IFwiKlwiLFxuXHRcdFx0XHRjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LFxuXHRcdFx0XHRbXVxuXHRcdFx0KSxcblxuXHRcdFx0Ly8gUHJlZmlsdGVyIHRvIGdldCBtYXRjaGVyIGlucHV0LCBwcmVzZXJ2aW5nIGEgbWFwIGZvciBzZWVkLXJlc3VsdHMgc3luY2hyb25pemF0aW9uXG5cdFx0XHRtYXRjaGVySW4gPSBwcmVGaWx0ZXIgJiYgKCBzZWVkIHx8ICFzZWxlY3RvciApID9cblx0XHRcdFx0Y29uZGVuc2UoIGVsZW1zLCBwcmVNYXAsIHByZUZpbHRlciwgY29udGV4dCwgeG1sICkgOlxuXHRcdFx0XHRlbGVtcyxcblxuXHRcdFx0bWF0Y2hlck91dCA9IG1hdGNoZXIgP1xuXG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoIGVsZW0gPSB0ZW1wWyBpIF0gKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyT3V0WyBwb3N0TWFwWyBpIF0gXSA9ICEoIG1hdGNoZXJJblsgcG9zdE1hcFsgaSBdIF0gPSBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgfHwgcHJlRmlsdGVyICkge1xuXHRcdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoIGVsZW0gPSBtYXRjaGVyT3V0WyBpIF0gKSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goICggbWF0Y2hlckluWyBpIF0gPSBlbGVtICkgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgKCBtYXRjaGVyT3V0ID0gW10gKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKCBlbGVtID0gbWF0Y2hlck91dFsgaSBdICkgJiZcblx0XHRcdFx0XHRcdCggdGVtcCA9IHBvc3RGaW5kZXIgPyBpbmRleE9mKCBzZWVkLCBlbGVtICkgOiBwcmVNYXBbIGkgXSApID4gLTEgKSB7XG5cblx0XHRcdFx0XHRcdHNlZWRbIHRlbXAgXSA9ICEoIHJlc3VsdHNbIHRlbXAgXSA9IGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEFkZCBlbGVtZW50cyB0byByZXN1bHRzLCB0aHJvdWdoIHBvc3RGaW5kZXIgaWYgZGVmaW5lZFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYXRjaGVyT3V0ID0gY29uZGVuc2UoXG5cdFx0XHRcdG1hdGNoZXJPdXQgPT09IHJlc3VsdHMgP1xuXHRcdFx0XHRcdG1hdGNoZXJPdXQuc3BsaWNlKCBwcmVleGlzdGluZywgbWF0Y2hlck91dC5sZW5ndGggKSA6XG5cdFx0XHRcdFx0bWF0Y2hlck91dFxuXHRcdFx0KTtcblx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgcmVzdWx0cywgbWF0Y2hlck91dCwgeG1sICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBtYXRjaGVyT3V0ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9ICk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIDAgXS50eXBlIF0sXG5cdFx0aW1wbGljaXRSZWxhdGl2ZSA9IGxlYWRpbmdSZWxhdGl2ZSB8fCBFeHByLnJlbGF0aXZlWyBcIiBcIiBdLFxuXHRcdGkgPSBsZWFkaW5nUmVsYXRpdmUgPyAxIDogMCxcblxuXHRcdC8vIFRoZSBmb3VuZGF0aW9uYWwgbWF0Y2hlciBlbnN1cmVzIHRoYXQgZWxlbWVudHMgYXJlIHJlYWNoYWJsZSBmcm9tIHRvcC1sZXZlbCBjb250ZXh0KHMpXG5cdFx0bWF0Y2hDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gY2hlY2tDb250ZXh0O1xuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcblx0XHRtYXRjaEFueUNvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBpbmRleE9mKCBjaGVja0NvbnRleHQsIGVsZW0gKSA+IC0xO1xuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcblx0XHRtYXRjaGVycyA9IFsgZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciByZXQgPSAoICFsZWFkaW5nUmVsYXRpdmUgJiYgKCB4bWwgfHwgY29udGV4dCAhPT0gb3V0ZXJtb3N0Q29udGV4dCApICkgfHwgKFxuXHRcdFx0XHQoIGNoZWNrQ29udGV4dCA9IGNvbnRleHQgKS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXG5cdFx0XHQvLyBBdm9pZCBoYW5naW5nIG9udG8gZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdGNoZWNrQ29udGV4dCA9IG51bGw7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH0gXTtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoICggbWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgaSBdLnR5cGUgXSApICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLCBtYXRjaGVyICkgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlciA9IEV4cHIuZmlsdGVyWyB0b2tlbnNbIGkgXS50eXBlIF0uYXBwbHkoIG51bGwsIHRva2Vuc1sgaSBdLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXG5cdFx0XHRcdC8vIEZpbmQgdGhlIG5leHQgcmVsYXRpdmUgb3BlcmF0b3IgKGlmIGFueSkgZm9yIHByb3BlciBoYW5kbGluZ1xuXHRcdFx0XHRqID0gKytpO1xuXHRcdFx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgaiBdLnR5cGUgXSApIHtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gc2V0TWF0Y2hlcihcblx0XHRcdFx0XHRpID4gMSAmJiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSxcblx0XHRcdFx0XHRpID4gMSAmJiB0b1NlbGVjdG9yKFxuXG5cdFx0XHRcdFx0Ly8gSWYgdGhlIHByZWNlZGluZyB0b2tlbiB3YXMgYSBkZXNjZW5kYW50IGNvbWJpbmF0b3IsIGluc2VydCBhbiBpbXBsaWNpdCBhbnktZWxlbWVudCBgKmBcblx0XHRcdFx0XHR0b2tlbnNcblx0XHRcdFx0XHRcdC5zbGljZSggMCwgaSAtIDEgKVxuXHRcdFx0XHRcdFx0LmNvbmNhdCggeyB2YWx1ZTogdG9rZW5zWyBpIC0gMiBdLnR5cGUgPT09IFwiIFwiID8gXCIqXCIgOiBcIlwiIH0gKVxuXHRcdFx0XHRcdCkucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLFxuXHRcdFx0XHRcdG1hdGNoZXIsXG5cdFx0XHRcdFx0aSA8IGogJiYgbWF0Y2hlckZyb21Ub2tlbnMoIHRva2Vucy5zbGljZSggaSwgaiApICksXG5cdFx0XHRcdFx0aiA8IGxlbiAmJiBtYXRjaGVyRnJvbVRva2VucyggKCB0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSApICksXG5cdFx0XHRcdFx0aiA8IGxlbiAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdFx0bWF0Y2hlcnMucHVzaCggbWF0Y2hlciApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkge1xuXHR2YXIgYnlTZXQgPSBzZXRNYXRjaGVycy5sZW5ndGggPiAwLFxuXHRcdGJ5RWxlbWVudCA9IGVsZW1lbnRNYXRjaGVycy5sZW5ndGggPiAwLFxuXHRcdHN1cGVyTWF0Y2hlciA9IGZ1bmN0aW9uKCBzZWVkLCBjb250ZXh0LCB4bWwsIHJlc3VsdHMsIG91dGVybW9zdCApIHtcblx0XHRcdHZhciBlbGVtLCBqLCBtYXRjaGVyLFxuXHRcdFx0XHRtYXRjaGVkQ291bnQgPSAwLFxuXHRcdFx0XHRpID0gXCIwXCIsXG5cdFx0XHRcdHVubWF0Y2hlZCA9IHNlZWQgJiYgW10sXG5cdFx0XHRcdHNldE1hdGNoZWQgPSBbXSxcblx0XHRcdFx0Y29udGV4dEJhY2t1cCA9IG91dGVybW9zdENvbnRleHQsXG5cblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFsgXCJUQUdcIiBdKCBcIipcIiwgb3V0ZXJtb3N0ICksXG5cblx0XHRcdFx0Ly8gVXNlIGludGVnZXIgZGlycnVucyBpZmYgdGhpcyBpcyB0aGUgb3V0ZXJtb3N0IG1hdGNoZXJcblx0XHRcdFx0ZGlycnVuc1VuaXF1ZSA9ICggZGlycnVucyArPSBjb250ZXh0QmFja3VwID09IG51bGwgPyAxIDogTWF0aC5yYW5kb20oKSB8fCAwLjEgKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCtcblx0XHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHRcdC8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay5cblx0XHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dCA9PSBkb2N1bWVudCB8fCBjb250ZXh0IHx8IG91dGVybW9zdDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIGVsZW1lbnRzIHBhc3NpbmcgZWxlbWVudE1hdGNoZXJzIGRpcmVjdGx5IHRvIHJlc3VsdHNcblx0XHRcdC8vIFN1cHBvcnQ6IElFPDksIFNhZmFyaVxuXHRcdFx0Ly8gVG9sZXJhdGUgTm9kZUxpc3QgcHJvcGVydGllcyAoSUU6IFwibGVuZ3RoXCI7IFNhZmFyaTogPG51bWJlcj4pIG1hdGNoaW5nIGVsZW1lbnRzIGJ5IGlkXG5cdFx0XHRmb3IgKCA7IGkgIT09IGxlbiAmJiAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGJ5RWxlbWVudCAmJiBlbGVtICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrXG5cdFx0XHRcdFx0Ly8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nXG5cdFx0XHRcdFx0Ly8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLlxuXHRcdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPSBkb2N1bWVudCApIHtcblx0XHRcdFx0XHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdFx0XHRcdFx0XHR4bWwgPSAhZG9jdW1lbnRJc0hUTUw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHdoaWxlICggKCBtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwgKSApIHtcblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFRyYWNrIHVubWF0Y2hlZCBlbGVtZW50cyBmb3Igc2V0IGZpbHRlcnNcblx0XHRcdFx0aWYgKCBieVNldCApIHtcblxuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoICggZWxlbSA9ICFtYXRjaGVyICYmIGVsZW0gKSApIHtcblx0XHRcdFx0XHRcdG1hdGNoZWRDb3VudC0tO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIExlbmd0aGVuIHRoZSBhcnJheSBmb3IgZXZlcnkgZWxlbWVudCwgbWF0Y2hlZCBvciBub3Rcblx0XHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBgaWAgaXMgbm93IHRoZSBjb3VudCBvZiBlbGVtZW50cyB2aXNpdGVkIGFib3ZlLCBhbmQgYWRkaW5nIGl0IHRvIGBtYXRjaGVkQ291bnRgXG5cdFx0XHQvLyBtYWtlcyB0aGUgbGF0dGVyIG5vbm5lZ2F0aXZlLlxuXHRcdFx0bWF0Y2hlZENvdW50ICs9IGk7XG5cblx0XHRcdC8vIEFwcGx5IHNldCBmaWx0ZXJzIHRvIHVubWF0Y2hlZCBlbGVtZW50c1xuXHRcdFx0Ly8gTk9URTogVGhpcyBjYW4gYmUgc2tpcHBlZCBpZiB0aGVyZSBhcmUgbm8gdW5tYXRjaGVkIGVsZW1lbnRzIChpLmUuLCBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gZXF1YWxzIGBpYCksIHVubGVzcyB3ZSBkaWRuJ3QgdmlzaXQgX2FueV8gZWxlbWVudHMgaW4gdGhlIGFib3ZlIGxvb3AgYmVjYXVzZSB3ZSBoYXZlXG5cdFx0XHQvLyBubyBlbGVtZW50IG1hdGNoZXJzIGFuZCBubyBzZWVkLlxuXHRcdFx0Ly8gSW5jcmVtZW50aW5nIGFuIGluaXRpYWxseS1zdHJpbmcgXCIwXCIgYGlgIGFsbG93cyBgaWAgdG8gcmVtYWluIGEgc3RyaW5nIG9ubHkgaW4gdGhhdFxuXHRcdFx0Ly8gY2FzZSwgd2hpY2ggd2lsbCByZXN1bHQgaW4gYSBcIjAwXCIgYG1hdGNoZWRDb3VudGAgdGhhdCBkaWZmZXJzIGZyb20gYGlgIGJ1dCBpcyBhbHNvXG5cdFx0XHQvLyBudW1lcmljYWxseSB6ZXJvLlxuXHRcdFx0aWYgKCBieVNldCAmJiBpICE9PSBtYXRjaGVkQ291bnQgKSB7XG5cdFx0XHRcdGogPSAwO1xuXHRcdFx0XHR3aGlsZSAoICggbWF0Y2hlciA9IHNldE1hdGNoZXJzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cblx0XHRcdFx0XHQvLyBSZWludGVncmF0ZSBlbGVtZW50IG1hdGNoZXMgdG8gZWxpbWluYXRlIHRoZSBuZWVkIGZvciBzb3J0aW5nXG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVkQ291bnQgPiAwICkge1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggISggdW5tYXRjaGVkWyBpIF0gfHwgc2V0TWF0Y2hlZFsgaSBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0c2V0TWF0Y2hlZFsgaSBdID0gcG9wLmNhbGwoIHJlc3VsdHMgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIERpc2NhcmQgaW5kZXggcGxhY2Vob2xkZXIgdmFsdWVzIHRvIGdldCBvbmx5IGFjdHVhbCBtYXRjaGVzXG5cdFx0XHRcdFx0c2V0TWF0Y2hlZCA9IGNvbmRlbnNlKCBzZXRNYXRjaGVkICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBZGQgbWF0Y2hlcyB0byByZXN1bHRzXG5cdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNldE1hdGNoZWQgKTtcblxuXHRcdFx0XHQvLyBTZWVkbGVzcyBzZXQgbWF0Y2hlcyBzdWNjZWVkaW5nIG11bHRpcGxlIHN1Y2Nlc3NmdWwgbWF0Y2hlcnMgc3RpcHVsYXRlIHNvcnRpbmdcblx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgJiYgIXNlZWQgJiYgc2V0TWF0Y2hlZC5sZW5ndGggPiAwICYmXG5cdFx0XHRcdFx0KCBtYXRjaGVkQ291bnQgKyBzZXRNYXRjaGVycy5sZW5ndGggKSA+IDEgKSB7XG5cblx0XHRcdFx0XHRTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIE92ZXJyaWRlIG1hbmlwdWxhdGlvbiBvZiBnbG9iYWxzIGJ5IG5lc3RlZCBtYXRjaGVyc1xuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dEJhY2t1cDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHVubWF0Y2hlZDtcblx0XHR9O1xuXG5cdHJldHVybiBieVNldCA/XG5cdFx0bWFya0Z1bmN0aW9uKCBzdXBlck1hdGNoZXIgKSA6XG5cdFx0c3VwZXJNYXRjaGVyO1xufVxuXG5jb21waWxlID0gU2l6emxlLmNvbXBpbGUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIG1hdGNoIC8qIEludGVybmFsIFVzZSBPbmx5ICovICkge1xuXHR2YXIgaSxcblx0XHRzZXRNYXRjaGVycyA9IFtdLFxuXHRcdGVsZW1lbnRNYXRjaGVycyA9IFtdLFxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoICFjYWNoZWQgKSB7XG5cblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbIGkgXSApO1xuXHRcdFx0aWYgKCBjYWNoZWRbIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0c2V0TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtZW50TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FjaGUgdGhlIGNvbXBpbGVkIGZ1bmN0aW9uXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZShcblx0XHRcdHNlbGVjdG9yLFxuXHRcdFx0bWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzIClcblx0XHQpO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoIHNlbGVjdG9yID0gY29tcGlsZWQuc2VsZWN0b3IgfHwgc2VsZWN0b3IgKSApO1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFRyeSB0byBtaW5pbWl6ZSBvcGVyYXRpb25zIGlmIHRoZXJlIGlzIG9ubHkgb25lIHNlbGVjdG9yIGluIHRoZSBsaXN0IGFuZCBubyBzZWVkXG5cdC8vICh0aGUgbGF0dGVyIG9mIHdoaWNoIGd1YXJhbnRlZXMgdXMgY29udGV4dClcblx0aWYgKCBtYXRjaC5sZW5ndGggPT09IDEgKSB7XG5cblx0XHQvLyBSZWR1Y2UgY29udGV4dCBpZiB0aGUgbGVhZGluZyBjb21wb3VuZCBzZWxlY3RvciBpcyBhbiBJRFxuXHRcdHRva2VucyA9IG1hdGNoWyAwIF0gPSBtYXRjaFsgMCBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAoIHRva2VuID0gdG9rZW5zWyAwIF0gKS50eXBlID09PSBcIklEXCIgJiZcblx0XHRcdGNvbnRleHQubm9kZVR5cGUgPT09IDkgJiYgZG9jdW1lbnRJc0hUTUwgJiYgRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyAxIF0udHlwZSBdICkge1xuXG5cdFx0XHRjb250ZXh0ID0gKCBFeHByLmZpbmRbIFwiSURcIiBdKCB0b2tlbi5tYXRjaGVzWyAwIF1cblx0XHRcdFx0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksIGNvbnRleHQgKSB8fCBbXSApWyAwIF07XG5cdFx0XHRpZiAoICFjb250ZXh0ICkge1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0Ly8gUHJlY29tcGlsZWQgbWF0Y2hlcnMgd2lsbCBzdGlsbCB2ZXJpZnkgYW5jZXN0cnksIHNvIHN0ZXAgdXAgYSBsZXZlbFxuXHRcdFx0fSBlbHNlIGlmICggY29tcGlsZWQgKSB7XG5cdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cblx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3Iuc2xpY2UoIHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZldGNoIGEgc2VlZCBzZXQgZm9yIHJpZ2h0LXRvLWxlZnQgbWF0Y2hpbmdcblx0XHRpID0gbWF0Y2hFeHByWyBcIm5lZWRzQ29udGV4dFwiIF0udGVzdCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG9rZW4gPSB0b2tlbnNbIGkgXTtcblxuXHRcdFx0Ly8gQWJvcnQgaWYgd2UgaGl0IGEgY29tYmluYXRvclxuXHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyAoIHR5cGUgPSB0b2tlbi50eXBlICkgXSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICggZmluZCA9IEV4cHIuZmluZFsgdHlwZSBdICkgKSB7XG5cblx0XHRcdFx0Ly8gU2VhcmNoLCBleHBhbmRpbmcgY29udGV4dCBmb3IgbGVhZGluZyBzaWJsaW5nIGNvbWJpbmF0b3JzXG5cdFx0XHRcdGlmICggKCBzZWVkID0gZmluZChcblx0XHRcdFx0XHR0b2tlbi5tYXRjaGVzWyAwIF0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKSxcblx0XHRcdFx0XHRyc2libGluZy50ZXN0KCB0b2tlbnNbIDAgXS50eXBlICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8XG5cdFx0XHRcdFx0XHRjb250ZXh0XG5cdFx0XHRcdCkgKSApIHtcblxuXHRcdFx0XHRcdC8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseVxuXHRcdFx0XHRcdHRva2Vucy5zcGxpY2UoIGksIDEgKTtcblx0XHRcdFx0XHRzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApO1xuXHRcdFx0XHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2VlZCApO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDb21waWxlIGFuZCBleGVjdXRlIGEgZmlsdGVyaW5nIGZ1bmN0aW9uIGlmIG9uZSBpcyBub3QgcHJvdmlkZWRcblx0Ly8gUHJvdmlkZSBgbWF0Y2hgIHRvIGF2b2lkIHJldG9rZW5pemF0aW9uIGlmIHdlIG1vZGlmaWVkIHRoZSBzZWxlY3RvciBhYm92ZVxuXHQoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICkoXG5cdFx0c2VlZCxcblx0XHRjb250ZXh0LFxuXHRcdCFkb2N1bWVudElzSFRNTCxcblx0XHRyZXN1bHRzLFxuXHRcdCFjb250ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0KTtcblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vLyBPbmUtdGltZSBhc3NpZ25tZW50c1xuXG4vLyBTb3J0IHN0YWJpbGl0eVxuc3VwcG9ydC5zb3J0U3RhYmxlID0gZXhwYW5kby5zcGxpdCggXCJcIiApLnNvcnQoIHNvcnRPcmRlciApLmpvaW4oIFwiXCIgKSA9PT0gZXhwYW5kbztcblxuLy8gU3VwcG9ydDogQ2hyb21lIDE0LTM1K1xuLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlmIHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblxuc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzID0gISFoYXNEdXBsaWNhdGU7XG5cbi8vIEluaXRpYWxpemUgYWdhaW5zdCB0aGUgZGVmYXVsdCBkb2N1bWVudFxuc2V0RG9jdW1lbnQoKTtcblxuLy8gU3VwcG9ydDogV2Via2l0PDUzNy4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNylcbi8vIERldGFjaGVkIG5vZGVzIGNvbmZvdW5kaW5nbHkgZm9sbG93ICplYWNoIG90aGVyKlxuc3VwcG9ydC5zb3J0RGV0YWNoZWQgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblxuXHQvLyBTaG91bGQgcmV0dXJuIDEsIGJ1dCByZXR1cm5zIDQgKGZvbGxvd2luZylcblx0cmV0dXJuIGVsLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImZpZWxkc2V0XCIgKSApICYgMTtcbn0gKTtcblxuLy8gU3VwcG9ydDogSUU8OFxuLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgXCJpbnRlcnBvbGF0aW9uXCJcbi8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY0MjklMjhWUy44NSUyOS5hc3B4XG5pZiAoICFhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHtcblx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScjJz48L2E+XCI7XG5cdHJldHVybiBlbC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSggXCJocmVmXCIgKSA9PT0gXCIjXCI7XG59ICkgKSB7XG5cdGFkZEhhbmRsZSggXCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwgbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInR5cGVcIiA/IDEgOiAyICk7XG5cdFx0fVxuXHR9ICk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBkZWZhdWx0VmFsdWUgaW4gcGxhY2Ugb2YgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcbmlmICggIXN1cHBvcnQuYXR0cmlidXRlcyB8fCAhYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGlucHV0Lz5cIjtcblx0ZWwuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiwgXCJcIiApO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBcIlwiO1xufSApICkge1xuXHRhZGRIYW5kbGUoIFwidmFsdWVcIiwgZnVuY3Rpb24oIGVsZW0sIF9uYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLmRlZmF1bHRWYWx1ZTtcblx0XHR9XG5cdH0gKTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xuaWYgKCAhYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7XG5cdHJldHVybiBlbC5nZXRBdHRyaWJ1dGUoIFwiZGlzYWJsZWRcIiApID09IG51bGw7XG59ICkgKSB7XG5cdGFkZEhhbmRsZSggYm9vbGVhbnMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgdmFsO1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW1bIG5hbWUgXSA9PT0gdHJ1ZSA/IG5hbWUudG9Mb3dlckNhc2UoKSA6XG5cdFx0XHRcdCggdmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkgKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRcdG51bGw7XG5cdFx0fVxuXHR9ICk7XG59XG5cbnJldHVybiBTaXp6bGU7XG5cbn0gKSggd2luZG93ICk7XG5cblxuXG5qUXVlcnkuZmluZCA9IFNpenpsZTtcbmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcblxuLy8gRGVwcmVjYXRlZFxualF1ZXJ5LmV4cHJbIFwiOlwiIF0gPSBqUXVlcnkuZXhwci5wc2V1ZG9zO1xualF1ZXJ5LnVuaXF1ZVNvcnQgPSBqUXVlcnkudW5pcXVlID0gU2l6emxlLnVuaXF1ZVNvcnQ7XG5qUXVlcnkudGV4dCA9IFNpenpsZS5nZXRUZXh0O1xualF1ZXJ5LmlzWE1MRG9jID0gU2l6emxlLmlzWE1MO1xualF1ZXJ5LmNvbnRhaW5zID0gU2l6emxlLmNvbnRhaW5zO1xualF1ZXJ5LmVzY2FwZVNlbGVjdG9yID0gU2l6emxlLmVzY2FwZTtcblxuXG5cblxudmFyIGRpciA9IGZ1bmN0aW9uKCBlbGVtLCBkaXIsIHVudGlsICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdLFxuXHRcdHRydW5jYXRlID0gdW50aWwgIT09IHVuZGVmaW5lZDtcblxuXHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgJiYgZWxlbS5ub2RlVHlwZSAhPT0gOSApIHtcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRpZiAoIHRydW5jYXRlICYmIGpRdWVyeSggZWxlbSApLmlzKCB1bnRpbCApICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdG1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHNpYmxpbmdzID0gZnVuY3Rpb24oIG4sIGVsZW0gKSB7XG5cdHZhciBtYXRjaGVkID0gW107XG5cblx0Zm9yICggOyBuOyBuID0gbi5uZXh0U2libGluZyApIHtcblx0XHRpZiAoIG4ubm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHtcblx0XHRcdG1hdGNoZWQucHVzaCggbiApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBtYXRjaGVkO1xufTtcblxuXG52YXIgcm5lZWRzQ29udGV4dCA9IGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dDtcblxuXG5cbmZ1bmN0aW9uIG5vZGVOYW1lKCBlbGVtLCBuYW1lICkge1xuXG5cdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG59XG52YXIgcnNpbmdsZVRhZyA9ICggL148KFthLXpdW15cXC9cXDA+OlxceDIwXFx0XFxyXFxuXFxmXSopW1xceDIwXFx0XFxyXFxuXFxmXSpcXC8/Pig/OjxcXC9cXDE+fCkkL2kgKTtcblxuXG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBpc0Z1bmN0aW9uKCBxdWFsaWZpZXIgKSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBTaW5nbGUgZWxlbWVudFxuXHRpZiAoIHF1YWxpZmllci5ub2RlVHlwZSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gQXJyYXlsaWtlIG9mIGVsZW1lbnRzIChqUXVlcnksIGFyZ3VtZW50cywgQXJyYXkpXG5cdGlmICggdHlwZW9mIHF1YWxpZmllciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGluZGV4T2YuY2FsbCggcXVhbGlmaWVyLCBlbGVtICkgPiAtMSApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRmlsdGVyZWQgZGlyZWN0bHkgZm9yIGJvdGggc2ltcGxlIGFuZCBjb21wbGV4IHNlbGVjdG9yc1xuXHRyZXR1cm4galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cywgbm90ICk7XG59XG5cbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xuXG5cdGlmICggbm90ICkge1xuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XG5cdH1cblxuXHRpZiAoIGVsZW1zLmxlbmd0aCA9PT0gMSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGVsZW0sIGV4cHIgKSA/IFsgZWxlbSBdIDogW107XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVHlwZSA9PT0gMTtcblx0fSApICk7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZpbmQ6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgaSwgcmV0LFxuXHRcdFx0bGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRzZWxmID0gdGhpcztcblxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggc2VsZlsgaSBdLCB0aGlzICkgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gKSApO1xuXHRcdH1cblxuXHRcdHJldCA9IHRoaXMucHVzaFN0YWNrKCBbXSApO1xuXG5cdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGpRdWVyeS5maW5kKCBzZWxlY3Rvciwgc2VsZlsgaSBdLCByZXQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbGVuID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCByZXQgKSA6IHJldDtcblx0fSxcblx0ZmlsdGVyOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCBmYWxzZSApICk7XG5cdH0sXG5cdG5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSApICk7XG5cdH0sXG5cdGlzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuICEhd2lubm93KFxuXHRcdFx0dGhpcyxcblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIHBvc2l0aW9uYWwvcmVsYXRpdmUgc2VsZWN0b3IsIGNoZWNrIG1lbWJlcnNoaXAgaW4gdGhlIHJldHVybmVkIHNldFxuXHRcdFx0Ly8gc28gJChcInA6Zmlyc3RcIikuaXMoXCJwOmxhc3RcIikgd29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvIFwicFwiLlxuXHRcdFx0dHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICYmIHJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGpRdWVyeSggc2VsZWN0b3IgKSA6XG5cdFx0XHRcdHNlbGVjdG9yIHx8IFtdLFxuXHRcdFx0ZmFsc2Vcblx0XHQpLmxlbmd0aDtcblx0fVxufSApO1xuXG5cbi8vIEluaXRpYWxpemUgYSBqUXVlcnkgb2JqZWN0XG5cblxuLy8gQSBjZW50cmFsIHJlZmVyZW5jZSB0byB0aGUgcm9vdCBqUXVlcnkoZG9jdW1lbnQpXG52YXIgcm9vdGpRdWVyeSxcblxuXHQvLyBBIHNpbXBsZSB3YXkgdG8gY2hlY2sgZm9yIEhUTUwgc3RyaW5nc1xuXHQvLyBQcmlvcml0aXplICNpZCBvdmVyIDx0YWc+IHRvIGF2b2lkIFhTUyB2aWEgbG9jYXRpb24uaGFzaCAoIzk1MjEpXG5cdC8vIFN0cmljdCBIVE1MIHJlY29nbml0aW9uICgjMTEyOTA6IG11c3Qgc3RhcnQgd2l0aCA8KVxuXHQvLyBTaG9ydGN1dCBzaW1wbGUgI2lkIGNhc2UgZm9yIHNwZWVkXG5cdHJxdWlja0V4cHIgPSAvXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0rKSkkLyxcblxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XG5cdFx0dmFyIG1hdGNoLCBlbGVtO1xuXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXG5cdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHQvLyBNZXRob2QgaW5pdCgpIGFjY2VwdHMgYW4gYWx0ZXJuYXRlIHJvb3RqUXVlcnlcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXG5cdFx0cm9vdCA9IHJvb3QgfHwgcm9vdGpRdWVyeTtcblxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3Ncblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGlmICggc2VsZWN0b3JbIDAgXSA9PT0gXCI8XCIgJiZcblx0XHRcdFx0c2VsZWN0b3JbIHNlbGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gXCI+XCIgJiZcblx0XHRcdFx0c2VsZWN0b3IubGVuZ3RoID49IDMgKSB7XG5cblx0XHRcdFx0Ly8gQXNzdW1lIHRoYXQgc3RyaW5ncyB0aGF0IHN0YXJ0IGFuZCBlbmQgd2l0aCA8PiBhcmUgSFRNTCBhbmQgc2tpcCB0aGUgcmVnZXggY2hlY2tcblx0XHRcdFx0bWF0Y2ggPSBbIG51bGwsIHNlbGVjdG9yLCBudWxsIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYXRjaCBodG1sIG9yIG1ha2Ugc3VyZSBubyBjb250ZXh0IGlzIHNwZWNpZmllZCBmb3IgI2lkXG5cdFx0XHRpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkge1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJChodG1sKSAtPiAkKGFycmF5KVxuXHRcdFx0XHRpZiAoIG1hdGNoWyAxIF0gKSB7XG5cdFx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WyAwIF0gOiBjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoXG5cdFx0XHRcdFx0XHRtYXRjaFsgMSBdLFxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcblx0XHRcdFx0XHRcdHRydWVcblx0XHRcdFx0XHQpICk7XG5cblx0XHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCwgcHJvcHMpXG5cdFx0XHRcdFx0aWYgKCByc2luZ2xlVGFnLnRlc3QoIG1hdGNoWyAxIF0gKSAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICkge1xuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBQcm9wZXJ0aWVzIG9mIGNvbnRleHQgYXJlIGNhbGxlZCBhcyBtZXRob2RzIGlmIHBvc3NpYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggdGhpc1sgbWF0Y2ggXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXNbIG1hdGNoIF0oIGNvbnRleHRbIG1hdGNoIF0gKTtcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgb3RoZXJ3aXNlIHNldCBhcyBhdHRyaWJ1dGVzXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5hdHRyKCBtYXRjaCwgY29udGV4dFsgbWF0Y2ggXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKCNpZClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIG1hdGNoWyAyIF0gKTtcblxuXHRcdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3Rcblx0XHRcdFx0XHRcdHRoaXNbIDAgXSA9IGVsZW07XG5cdFx0XHRcdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXG5cdFx0XHR9IGVsc2UgaWYgKCAhY29udGV4dCB8fCBjb250ZXh0LmpxdWVyeSApIHtcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTtcblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdC8vIEhBTkRMRTogJChET01FbGVtZW50KVxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xuXHRcdFx0dGhpc1sgMCBdID0gc2VsZWN0b3I7XG5cdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdC8vIEhBTkRMRTogJChmdW5jdGlvbilcblx0XHQvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHlcblx0XHR9IGVsc2UgaWYgKCBpc0Z1bmN0aW9uKCBzZWxlY3RvciApICkge1xuXHRcdFx0cmV0dXJuIHJvb3QucmVhZHkgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHJvb3QucmVhZHkoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0c2VsZWN0b3IoIGpRdWVyeSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xuXHR9O1xuXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcblxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcblxuXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXG5cblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcblx0XHRjaGlsZHJlbjogdHJ1ZSxcblx0XHRjb250ZW50czogdHJ1ZSxcblx0XHRuZXh0OiB0cnVlLFxuXHRcdHByZXY6IHRydWVcblx0fTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHRoaXMsIHRhcmdldHNbIGkgXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxuXHRcdFx0dGFyZ2V0cyA9IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgJiYgalF1ZXJ5KCBzZWxlY3RvcnMgKTtcblxuXHRcdC8vIFBvc2l0aW9uYWwgc2VsZWN0b3JzIG5ldmVyIG1hdGNoLCBzaW5jZSB0aGVyZSdzIG5vIF9zZWxlY3Rpb25fIGNvbnRleHRcblx0XHRpZiAoICFybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXG5cdFx0XHRcdFx0Ly8gQWx3YXlzIHNraXAgZG9jdW1lbnQgZnJhZ21lbnRzXG5cdFx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHRhcmdldHMgP1xuXHRcdFx0XHRcdFx0dGFyZ2V0cy5pbmRleCggY3VyICkgPiAtMSA6XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxuXHRcdFx0XHRcdFx0Y3VyLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggY3VyLCBzZWxlY3RvcnMgKSApICkge1xuXG5cdFx0XHRcdFx0XHRtYXRjaGVkLnB1c2goIGN1ciApO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxuXHRyZXR1cm4gY3VyO1xufVxuXG5qUXVlcnkuZWFjaCgge1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIgKTtcblx0fSxcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgX2ksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiLCB1bnRpbCApO1xuXHR9LFxuXHRuZXh0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXY6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRpZiAoIGVsZW0uY29udGVudERvY3VtZW50ICE9IG51bGwgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgMTErXG5cdFx0XHQvLyA8b2JqZWN0PiBlbGVtZW50cyB3aXRoIG5vIGBkYXRhYCBhdHRyaWJ1dGUgaGFzIGFuIG9iamVjdFxuXHRcdFx0Ly8gYGNvbnRlbnREb2N1bWVudGAgd2l0aCBhIGBudWxsYCBwcm90b3R5cGUuXG5cdFx0XHRnZXRQcm90byggZWxlbS5jb250ZW50RG9jdW1lbnQgKSApIHtcblxuXHRcdFx0cmV0dXJuIGVsZW0uY29udGVudERvY3VtZW50O1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seVxuXHRcdC8vIFRyZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhhdFxuXHRcdC8vIGRvbid0IHN1cHBvcnQgaXQuXG5cdFx0aWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0ZW1wbGF0ZVwiICkgKSB7XG5cdFx0XHRlbGVtID0gZWxlbS5jb250ZW50IHx8IGVsZW07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIGVsZW0uY2hpbGROb2RlcyApO1xuXHR9XG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0bWF0Y2hlZCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBtYXRjaGVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQucmV2ZXJzZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZCApO1xuXHR9O1xufSApO1xudmFyIHJub3RodG1sd2hpdGUgPSAoIC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyApO1xuXG5cblxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XG5cdHZhciBvYmplY3QgPSB7fTtcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgdGhlbmFibGVzXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxuXHRcdFx0Ly8gKiBmYWxzZTogWyB2YWx1ZSBdLnNsaWNlKCAwICkgPT4gcmVzb2x2ZSggdmFsdWUgKVxuXHRcdFx0Ly8gKiB0cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKClcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdICk7XG5cdH1cbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsXG5cdFx0XHRcdC8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQgaW5kZXgsIFtmaW5hbCBzdGF0ZV1cblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksIDIgXSxcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDEsIFwicmVqZWN0ZWRcIiBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdFwiY2F0Y2hcIjogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBfaSwgdHVwbGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTWFwIHR1cGxlcyAocHJvZ3Jlc3MsIGRvbmUsIGZhaWwpIHRvIGFyZ3VtZW50cyAoZG9uZSwgZmFpbCwgcHJvZ3Jlc3MpXG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGlzRnVuY3Rpb24oIGZuc1sgdHVwbGVbIDQgXSBdICkgJiYgZm5zWyB0dXBsZVsgNCBdIF07XG5cblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQucHJvZ3Jlc3MoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIubm90aWZ5IH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmRvbmUoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVzb2x2ZSB9KVxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5mYWlsKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlamVjdCB9KVxuXHRcdFx0XHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDEgXSBdKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQgPSBmbiAmJiBmbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCAmJiBpc0Z1bmN0aW9uKCByZXR1cm5lZC5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC5wcm9taXNlKClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LnByb2dyZXNzKCBuZXdEZWZlci5ub3RpZnkgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZG9uZSggbmV3RGVmZXIucmVzb2x2ZSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5mYWlsKCBuZXdEZWZlci5yZWplY3QgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXJbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aGlzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50c1xuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdGZucyA9IG51bGw7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0dGhlbjogZnVuY3Rpb24oIG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCBvblByb2dyZXNzICkge1xuXHRcdFx0XHRcdHZhciBtYXhEZXB0aCA9IDA7XG5cdFx0XHRcdFx0ZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVjaWFsICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cyxcblx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQsIHRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4zXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01OVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIGRvdWJsZS1yZXNvbHV0aW9uIGF0dGVtcHRzXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoIDwgbWF4RGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQgPSBoYW5kbGVyLmFwcGx5KCB0aGF0LCBhcmdzICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjFcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTQ4XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoIFwiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uXCIgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbnMgMi4zLjMuMSwgMy41XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01NFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIFJldHJpZXZlIGB0aGVuYCBvbmx5IG9uY2Vcblx0XHRcdFx0XHRcdFx0XHRcdHRoZW4gPSByZXR1cm5lZCAmJlxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBjaGVjayBvYmplY3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCggdHlwZW9mIHJldHVybmVkID09PSBcIm9iamVjdFwiIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZW9mIHJldHVybmVkID09PSBcImZ1bmN0aW9uXCIgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC50aGVuO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBIYW5kbGUgYSByZXR1cm5lZCB0aGVuYWJsZVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGVuICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3BlY2lhbCBwcm9jZXNzb3JzIChub3RpZnkpIGp1c3Qgd2FpdCBmb3IgcmVzb2x1dGlvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gTm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGFsc28gaG9vayBpbnRvIHByb2dyZXNzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgZGlzcmVnYXJkIG9sZGVyIHJlc29sdXRpb24gdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWF4RGVwdGgrKztcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoZW4uY2FsbChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBUaHJvd2VyLCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhbGwgb3RoZXIgcmV0dXJuZWQgdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gSWRlbnRpdHkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhcmdzID0gWyByZXR1cm5lZCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gUHJvY2VzcyB0aGUgdmFsdWUocylcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmVcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCBzcGVjaWFsIHx8IGRlZmVycmVkLnJlc29sdmVXaXRoICkoIHRoYXQsIGFyZ3MgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBub3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgY2F0Y2ggYW5kIHJlamVjdCBleGNlcHRpb25zXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcyA9IHNwZWNpYWwgP1xuXHRcdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93KCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rKCBlLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgcG9zdC1yZXNvbHV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGhhbmRsZXIgIT09IFRocm93ZXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIGUgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuMVxuXHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01N1xuXHRcdFx0XHRcdFx0XHQvLyBSZS1yZXNvbHZlIHByb21pc2VzIGltbWVkaWF0ZWx5IHRvIGRvZGdlIGZhbHNlIHJlamVjdGlvbiBmcm9tXG5cdFx0XHRcdFx0XHRcdC8vIHN1YnNlcXVlbnQgZXJyb3JzXG5cdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcygpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ2FsbCBhbiBvcHRpb25hbCBob29rIHRvIHJlY29yZCB0aGUgc3RhY2ssIGluIGNhc2Ugb2YgZXhjZXB0aW9uXG5cdFx0XHRcdFx0XHRcdFx0Ly8gc2luY2UgaXQncyBvdGhlcndpc2UgbG9zdCB3aGVuIGV4ZWN1dGlvbiBnb2VzIGFzeW5jXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cHJvY2Vzcy5zdGFja1RyYWNlID0galF1ZXJ5LkRlZmVycmVkLmdldFN0YWNrSG9vaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggcHJvY2VzcyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblxuXHRcdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblByb2dyZXNzICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25Qcm9ncmVzcyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eSxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlci5ub3RpZnlXaXRoXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDEgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25GdWxmaWxsZWQgOlxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHlcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAyIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblJlamVjdGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25SZWplY3RlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRUaHJvd2VyXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBHZXQgYSBwcm9taXNlIGZvciB0aGlzIGRlZmVycmVkXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3Rcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZlcnJlZCA9IHt9O1xuXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xuXHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblx0XHRcdHZhciBsaXN0ID0gdHVwbGVbIDIgXSxcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgNSBdO1xuXG5cdFx0XHQvLyBwcm9taXNlLnByb2dyZXNzID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZG9uZSA9IGxpc3QuYWRkXG5cdFx0XHQvLyBwcm9taXNlLmZhaWwgPSBsaXN0LmFkZFxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoXG5cdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZXNvbHZlZFwiIChpLmUuLCBmdWxmaWxsZWQpXG5cdFx0XHRcdFx0XHQvLyBzdGF0ZSA9IFwicmVqZWN0ZWRcIlxuXHRcdFx0XHRcdFx0c3RhdGUgPSBzdGF0ZVN0cmluZztcblx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDIgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0dHVwbGVzWyAzIC0gaSBdWyAzIF0uZGlzYWJsZSxcblxuXHRcdFx0XHRcdC8vIHByb2dyZXNzX2NhbGxiYWNrcy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDIgXS5sb2NrLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMubG9ja1xuXHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAzIF0ubG9ja1xuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5maXJlXG5cdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0bGlzdC5hZGQoIHR1cGxlWyAzIF0uZmlyZSApO1xuXG5cdFx0XHQvLyBkZWZlcnJlZC5ub3RpZnkgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQubm90aWZ5V2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmUgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVzb2x2ZVdpdGgoLi4uKSB9XG5cdFx0XHQvLyBkZWZlcnJlZC5yZWplY3QgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVqZWN0V2l0aCguLi4pIH1cblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBkZWZlcnJlZCA/IHVuZGVmaW5lZCA6IHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH07XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeVdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHQvLyBkZWZlcnJlZC5yZXNvbHZlV2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdFdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xuXHRcdH0gKTtcblxuXHRcdC8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJvbWlzZVxuXHRcdHByb21pc2UucHJvbWlzZSggZGVmZXJyZWQgKTtcblxuXHRcdC8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnlcblx0XHRpZiAoIGZ1bmMgKSB7XG5cdFx0XHRmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApO1xuXHRcdH1cblxuXHRcdC8vIEFsbCBkb25lIVxuXHRcdHJldHVybiBkZWZlcnJlZDtcblx0fSxcblxuXHQvLyBEZWZlcnJlZCBoZWxwZXJcblx0d2hlbjogZnVuY3Rpb24oIHNpbmdsZVZhbHVlICkge1xuXHRcdHZhclxuXG5cdFx0XHQvLyBjb3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXNcblx0XHRcdHJlbWFpbmluZyA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cblx0XHRcdC8vIGNvdW50IG9mIHVucHJvY2Vzc2VkIGFyZ3VtZW50c1xuXHRcdFx0aSA9IHJlbWFpbmluZyxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgZnVsZmlsbG1lbnQgZGF0YVxuXHRcdFx0cmVzb2x2ZUNvbnRleHRzID0gQXJyYXkoIGkgKSxcblx0XHRcdHJlc29sdmVWYWx1ZXMgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSxcblxuXHRcdFx0Ly8gdGhlIHByaW1hcnkgRGVmZXJyZWRcblx0XHRcdHByaW1hcnkgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0cHJpbWFyeS5yZXNvbHZlV2l0aCggcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fTtcblxuXHRcdC8vIFNpbmdsZS0gYW5kIGVtcHR5IGFyZ3VtZW50cyBhcmUgYWRvcHRlZCBsaWtlIFByb21pc2UucmVzb2x2ZVxuXHRcdGlmICggcmVtYWluaW5nIDw9IDEgKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCBzaW5nbGVWYWx1ZSwgcHJpbWFyeS5kb25lKCB1cGRhdGVGdW5jKCBpICkgKS5yZXNvbHZlLCBwcmltYXJ5LnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIHByaW1hcnkuc3RhdGUoKSA9PT0gXCJwZW5kaW5nXCIgfHxcblx0XHRcdFx0aXNGdW5jdGlvbiggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIHJlc29sdmVWYWx1ZXNbIGkgXS50aGVuICkgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHByaW1hcnkudGhlbigpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIE11bHRpcGxlIGFyZ3VtZW50cyBhcmUgYWdncmVnYXRlZCBsaWtlIFByb21pc2UuYWxsIGFycmF5IGVsZW1lbnRzXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCByZXNvbHZlVmFsdWVzWyBpIF0sIHVwZGF0ZUZ1bmMoIGkgKSwgcHJpbWFyeS5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gcHJpbWFyeS5wcm9taXNlKCk7XG5cdH1cbn0gKTtcblxuXG4vLyBUaGVzZSB1c3VhbGx5IGluZGljYXRlIGEgcHJvZ3JhbW1lciBtaXN0YWtlIGR1cmluZyBkZXZlbG9wbWVudCxcbi8vIHdhcm4gYWJvdXQgdGhlbSBBU0FQIHJhdGhlciB0aGFuIHN3YWxsb3dpbmcgdGhlbSBieSBkZWZhdWx0LlxudmFyIHJlcnJvck5hbWVzID0gL14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJKUVycm9yJC87XG5cbmpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rID0gZnVuY3Rpb24oIGVycm9yLCBzdGFjayApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA4IC0gOSBvbmx5XG5cdC8vIENvbnNvbGUgZXhpc3RzIHdoZW4gZGV2IHRvb2xzIGFyZSBvcGVuLCB3aGljaCBjYW4gaGFwcGVuIGF0IGFueSB0aW1lXG5cdGlmICggd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUud2FybiAmJiBlcnJvciAmJiByZXJyb3JOYW1lcy50ZXN0KCBlcnJvci5uYW1lICkgKSB7XG5cdFx0d2luZG93LmNvbnNvbGUud2FybiggXCJqUXVlcnkuRGVmZXJyZWQgZXhjZXB0aW9uOiBcIiArIGVycm9yLm1lc3NhZ2UsIGVycm9yLnN0YWNrLCBzdGFjayApO1xuXHR9XG59O1xuXG5cblxuXG5qUXVlcnkucmVhZHlFeGNlcHRpb24gPSBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHR0aHJvdyBlcnJvcjtcblx0fSApO1xufTtcblxuXG5cblxuLy8gVGhlIGRlZmVycmVkIHVzZWQgb24gRE9NIHJlYWR5XG52YXIgcmVhZHlMaXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbmpRdWVyeS5mbi5yZWFkeSA9IGZ1bmN0aW9uKCBmbiApIHtcblxuXHRyZWFkeUxpc3Rcblx0XHQudGhlbiggZm4gKVxuXG5cdFx0Ly8gV3JhcCBqUXVlcnkucmVhZHlFeGNlcHRpb24gaW4gYSBmdW5jdGlvbiBzbyB0aGF0IHRoZSBsb29rdXBcblx0XHQvLyBoYXBwZW5zIGF0IHRoZSB0aW1lIG9mIGVycm9yIGhhbmRsaW5nIGluc3RlYWQgb2YgY2FsbGJhY2tcblx0XHQvLyByZWdpc3RyYXRpb24uXG5cdFx0LmNhdGNoKCBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdFx0XHRqUXVlcnkucmVhZHlFeGNlcHRpb24oIGVycm9yICk7XG5cdFx0fSApO1xuXG5cdHJldHVybiB0aGlzO1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIElzIHRoZSBET00gcmVhZHkgdG8gYmUgdXNlZD8gU2V0IHRvIHRydWUgb25jZSBpdCBvY2N1cnMuXG5cdGlzUmVhZHk6IGZhbHNlLFxuXG5cdC8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBpdGVtcyB0byB3YWl0IGZvciBiZWZvcmVcblx0Ly8gdGhlIHJlYWR5IGV2ZW50IGZpcmVzLiBTZWUgIzY3ODFcblx0cmVhZHlXYWl0OiAxLFxuXG5cdC8vIEhhbmRsZSB3aGVuIHRoZSBET00gaXMgcmVhZHlcblx0cmVhZHk6IGZ1bmN0aW9uKCB3YWl0ICkge1xuXG5cdFx0Ly8gQWJvcnQgaWYgdGhlcmUgYXJlIHBlbmRpbmcgaG9sZHMgb3Igd2UncmUgYWxyZWFkeSByZWFkeVxuXHRcdGlmICggd2FpdCA9PT0gdHJ1ZSA/IC0talF1ZXJ5LnJlYWR5V2FpdCA6IGpRdWVyeS5pc1JlYWR5ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFJlbWVtYmVyIHRoYXQgdGhlIERPTSBpcyByZWFkeVxuXHRcdGpRdWVyeS5pc1JlYWR5ID0gdHJ1ZTtcblxuXHRcdC8vIElmIGEgbm9ybWFsIERPTSBSZWFkeSBldmVudCBmaXJlZCwgZGVjcmVtZW50LCBhbmQgd2FpdCBpZiBuZWVkIGJlXG5cdFx0aWYgKCB3YWl0ICE9PSB0cnVlICYmIC0talF1ZXJ5LnJlYWR5V2FpdCA+IDAgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gSWYgdGhlcmUgYXJlIGZ1bmN0aW9ucyBib3VuZCwgdG8gZXhlY3V0ZVxuXHRcdHJlYWR5TGlzdC5yZXNvbHZlV2l0aCggZG9jdW1lbnQsIFsgalF1ZXJ5IF0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkucmVhZHkudGhlbiA9IHJlYWR5TGlzdC50aGVuO1xuXG4vLyBUaGUgcmVhZHkgZXZlbnQgaGFuZGxlciBhbmQgc2VsZiBjbGVhbnVwIG1ldGhvZFxuZnVuY3Rpb24gY29tcGxldGVkKCkge1xuXHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgY29tcGxldGVkICk7XG5cdGpRdWVyeS5yZWFkeSgpO1xufVxuXG4vLyBDYXRjaCBjYXNlcyB3aGVyZSAkKGRvY3VtZW50KS5yZWFkeSgpIGlzIGNhbGxlZFxuLy8gYWZ0ZXIgdGhlIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMCBvbmx5XG4vLyBPbGRlciBJRSBzb21ldGltZXMgc2lnbmFscyBcImludGVyYWN0aXZlXCIgdG9vIHNvb25cbmlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIHx8XG5cdCggZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIgJiYgIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCApICkge1xuXG5cdC8vIEhhbmRsZSBpdCBhc3luY2hyb25vdXNseSB0byBhbGxvdyBzY3JpcHRzIHRoZSBvcHBvcnR1bml0eSB0byBkZWxheSByZWFkeVxuXHR3aW5kb3cuc2V0VGltZW91dCggalF1ZXJ5LnJlYWR5ICk7XG5cbn0gZWxzZSB7XG5cblx0Ly8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFja1xuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cblx0Ly8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmtcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcbn1cblxuXG5cblxuLy8gTXVsdGlmdW5jdGlvbmFsIG1ldGhvZCB0byBnZXQgYW5kIHNldCB2YWx1ZXMgb2YgYSBjb2xsZWN0aW9uXG4vLyBUaGUgdmFsdWUvcyBjYW4gb3B0aW9uYWxseSBiZSBleGVjdXRlZCBpZiBpdCdzIGEgZnVuY3Rpb25cbnZhciBhY2Nlc3MgPSBmdW5jdGlvbiggZWxlbXMsIGZuLCBrZXksIHZhbHVlLCBjaGFpbmFibGUsIGVtcHR5R2V0LCByYXcgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBlbGVtcy5sZW5ndGgsXG5cdFx0YnVsayA9IGtleSA9PSBudWxsO1xuXG5cdC8vIFNldHMgbWFueSB2YWx1ZXNcblx0aWYgKCB0b1R5cGUoIGtleSApID09PSBcIm9iamVjdFwiICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cdFx0Zm9yICggaSBpbiBrZXkgKSB7XG5cdFx0XHRhY2Nlc3MoIGVsZW1zLCBmbiwgaSwga2V5WyBpIF0sIHRydWUsIGVtcHR5R2V0LCByYXcgKTtcblx0XHR9XG5cblx0Ly8gU2V0cyBvbmUgdmFsdWVcblx0fSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXG5cdFx0aWYgKCAhaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJhdyA9IHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBidWxrICkge1xuXG5cdFx0XHQvLyBCdWxrIG9wZXJhdGlvbnMgcnVuIGFnYWluc3QgdGhlIGVudGlyZSBzZXRcblx0XHRcdGlmICggcmF3ICkge1xuXHRcdFx0XHRmbi5jYWxsKCBlbGVtcywgdmFsdWUgKTtcblx0XHRcdFx0Zm4gPSBudWxsO1xuXG5cdFx0XHQvLyAuLi5leGNlcHQgd2hlbiBleGVjdXRpbmcgZnVuY3Rpb24gdmFsdWVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRidWxrID0gZm47XG5cdFx0XHRcdGZuID0gZnVuY3Rpb24oIGVsZW0sIF9rZXksIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiBidWxrLmNhbGwoIGpRdWVyeSggZWxlbSApLCB2YWx1ZSApO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0Zm4oXG5cdFx0XHRcdFx0ZWxlbXNbIGkgXSwga2V5LCByYXcgP1xuXHRcdFx0XHRcdFx0dmFsdWUgOlxuXHRcdFx0XHRcdFx0dmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIGNoYWluYWJsZSApIHtcblx0XHRyZXR1cm4gZWxlbXM7XG5cdH1cblxuXHQvLyBHZXRzXG5cdGlmICggYnVsayApIHtcblx0XHRyZXR1cm4gZm4uY2FsbCggZWxlbXMgKTtcblx0fVxuXG5cdHJldHVybiBsZW4gPyBmbiggZWxlbXNbIDAgXSwga2V5ICkgOiBlbXB0eUdldDtcbn07XG5cblxuLy8gTWF0Y2hlcyBkYXNoZWQgc3RyaW5nIGZvciBjYW1lbGl6aW5nXG52YXIgcm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFthLXpdKS9nO1xuXG4vLyBVc2VkIGJ5IGNhbWVsQ2FzZSBhcyBjYWxsYmFjayB0byByZXBsYWNlKClcbmZ1bmN0aW9uIGZjYW1lbENhc2UoIF9hbGwsIGxldHRlciApIHtcblx0cmV0dXJuIGxldHRlci50b1VwcGVyQ2FzZSgpO1xufVxuXG4vLyBDb252ZXJ0IGRhc2hlZCB0byBjYW1lbENhc2U7IHVzZWQgYnkgdGhlIGNzcyBhbmQgZGF0YSBtb2R1bGVzXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDE1XG4vLyBNaWNyb3NvZnQgZm9yZ290IHRvIGh1bXAgdGhlaXIgdmVuZG9yIHByZWZpeCAoIzk1NzIpXG5mdW5jdGlvbiBjYW1lbENhc2UoIHN0cmluZyApIHtcblx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKCBybXNQcmVmaXgsIFwibXMtXCIgKS5yZXBsYWNlKCByZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7XG59XG52YXIgYWNjZXB0RGF0YSA9IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHQvLyBBY2NlcHRzIG9ubHk6XG5cdC8vICAtIE5vZGVcblx0Ly8gICAgLSBOb2RlLkVMRU1FTlRfTk9ERVxuXHQvLyAgICAtIE5vZGUuRE9DVU1FTlRfTk9ERVxuXHQvLyAgLSBPYmplY3Rcblx0Ly8gICAgLSBBbnlcblx0cmV0dXJuIG93bmVyLm5vZGVUeXBlID09PSAxIHx8IG93bmVyLm5vZGVUeXBlID09PSA5IHx8ICEoICtvd25lci5ub2RlVHlwZSApO1xufTtcblxuXG5cblxuZnVuY3Rpb24gRGF0YSgpIHtcblx0dGhpcy5leHBhbmRvID0galF1ZXJ5LmV4cGFuZG8gKyBEYXRhLnVpZCsrO1xufVxuXG5EYXRhLnVpZCA9IDE7XG5cbkRhdGEucHJvdG90eXBlID0ge1xuXG5cdGNhY2hlOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cblx0XHQvLyBDaGVjayBpZiB0aGUgb3duZXIgb2JqZWN0IGFscmVhZHkgaGFzIGEgY2FjaGVcblx0XHR2YXIgdmFsdWUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHQvLyBJZiBub3QsIGNyZWF0ZSBvbmVcblx0XHRpZiAoICF2YWx1ZSApIHtcblx0XHRcdHZhbHVlID0ge307XG5cblx0XHRcdC8vIFdlIGNhbiBhY2NlcHQgZGF0YSBmb3Igbm9uLWVsZW1lbnQgbm9kZXMgaW4gbW9kZXJuIGJyb3dzZXJzLFxuXHRcdFx0Ly8gYnV0IHdlIHNob3VsZCBub3QsIHNlZSAjODMzNS5cblx0XHRcdC8vIEFsd2F5cyByZXR1cm4gYW4gZW1wdHkgb2JqZWN0LlxuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBvd25lciApICkge1xuXG5cdFx0XHRcdC8vIElmIGl0IGlzIGEgbm9kZSB1bmxpa2VseSB0byBiZSBzdHJpbmdpZnktZWQgb3IgbG9vcGVkIG92ZXJcblx0XHRcdFx0Ly8gdXNlIHBsYWluIGFzc2lnbm1lbnRcblx0XHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB2YWx1ZTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2Ugc2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUgcHJvcGVydHlcblx0XHRcdFx0Ly8gY29uZmlndXJhYmxlIG11c3QgYmUgdHJ1ZSB0byBhbGxvdyB0aGUgcHJvcGVydHkgdG8gYmVcblx0XHRcdFx0Ly8gZGVsZXRlZCB3aGVuIGRhdGEgaXMgcmVtb3ZlZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywge1xuXHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlLFxuXHRcdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9LFxuXHRzZXQ6IGZ1bmN0aW9uKCBvd25lciwgZGF0YSwgdmFsdWUgKSB7XG5cdFx0dmFyIHByb3AsXG5cdFx0XHRjYWNoZSA9IHRoaXMuY2FjaGUoIG93bmVyICk7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIGtleSwgdmFsdWUgXSBhcmdzXG5cdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBkYXRhICkgXSA9IHZhbHVlO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCB7IHByb3BlcnRpZXMgfSBdIGFyZ3Ncblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdFxuXHRcdFx0Zm9yICggcHJvcCBpbiBkYXRhICkge1xuXHRcdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBwcm9wICkgXSA9IGRhdGFbIHByb3AgXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGNhY2hlO1xuXHR9LFxuXHRnZXQ6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHJldHVybiBrZXkgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzLmNhY2hlKCBvd25lciApIDpcblxuXHRcdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdICYmIG93bmVyWyB0aGlzLmV4cGFuZG8gXVsgY2FtZWxDYXNlKCBrZXkgKSBdO1xuXHR9LFxuXHRhY2Nlc3M6IGZ1bmN0aW9uKCBvd25lciwga2V5LCB2YWx1ZSApIHtcblxuXHRcdC8vIEluIGNhc2VzIHdoZXJlIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gTm8ga2V5IHdhcyBzcGVjaWZpZWRcblx0XHQvLyAgIDIuIEEgc3RyaW5nIGtleSB3YXMgc3BlY2lmaWVkLCBidXQgbm8gdmFsdWUgcHJvdmlkZWRcblx0XHQvL1xuXHRcdC8vIFRha2UgdGhlIFwicmVhZFwiIHBhdGggYW5kIGFsbG93IHRoZSBnZXQgbWV0aG9kIHRvIGRldGVybWluZVxuXHRcdC8vIHdoaWNoIHZhbHVlIHRvIHJldHVybiwgcmVzcGVjdGl2ZWx5IGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gVGhlIGVudGlyZSBjYWNoZSBvYmplY3Rcblx0XHQvLyAgIDIuIFRoZSBkYXRhIHN0b3JlZCBhdCB0aGUga2V5XG5cdFx0Ly9cblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdCggKCBrZXkgJiYgdHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIiApICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSApIHtcblxuXHRcdFx0cmV0dXJuIHRoaXMuZ2V0KCBvd25lciwga2V5ICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2hlbiB0aGUga2V5IGlzIG5vdCBhIHN0cmluZywgb3IgYm90aCBhIGtleSBhbmQgdmFsdWVcblx0XHQvLyBhcmUgc3BlY2lmaWVkLCBzZXQgb3IgZXh0ZW5kIChleGlzdGluZyBvYmplY3RzKSB3aXRoIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gQW4gb2JqZWN0IG9mIHByb3BlcnRpZXNcblx0XHQvLyAgIDIuIEEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vXG5cdFx0dGhpcy5zZXQoIG93bmVyLCBrZXksIHZhbHVlICk7XG5cblx0XHQvLyBTaW5jZSB0aGUgXCJzZXRcIiBwYXRoIGNhbiBoYXZlIHR3byBwb3NzaWJsZSBlbnRyeSBwb2ludHNcblx0XHQvLyByZXR1cm4gdGhlIGV4cGVjdGVkIGRhdGEgYmFzZWQgb24gd2hpY2ggcGF0aCB3YXMgdGFrZW5bKl1cblx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoga2V5O1xuXHR9LFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHZhciBpLFxuXHRcdFx0Y2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHRpZiAoIGNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBrZXkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydCBhcnJheSBvciBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGtleXNcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSgga2V5ICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYga2V5IGlzIGFuIGFycmF5IG9mIGtleXMuLi5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHNldCBjYW1lbENhc2Uga2V5cywgc28gcmVtb3ZlIHRoYXQuXG5cdFx0XHRcdGtleSA9IGtleS5tYXAoIGNhbWVsQ2FzZSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0a2V5ID0gY2FtZWxDYXNlKCBrZXkgKTtcblxuXHRcdFx0XHQvLyBJZiBhIGtleSB3aXRoIHRoZSBzcGFjZXMgZXhpc3RzLCB1c2UgaXQuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSwgY3JlYXRlIGFuIGFycmF5IGJ5IG1hdGNoaW5nIG5vbi13aGl0ZXNwYWNlXG5cdFx0XHRcdGtleSA9IGtleSBpbiBjYWNoZSA/XG5cdFx0XHRcdFx0WyBrZXkgXSA6XG5cdFx0XHRcdFx0KCBrZXkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRpID0ga2V5Lmxlbmd0aDtcblxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5WyBpIF0gXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgdGhlcmUncyBubyBtb3JlIGRhdGFcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1XG5cdFx0XHQvLyBXZWJraXQgJiBCbGluayBwZXJmb3JtYW5jZSBzdWZmZXJzIHdoZW4gZGVsZXRpbmcgcHJvcGVydGllc1xuXHRcdFx0Ly8gZnJvbSBET00gbm9kZXMsIHNvIHNldCB0byB1bmRlZmluZWQgaW5zdGVhZFxuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9Mzc4NjA3IChidWcgcmVzdHJpY3RlZClcblx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlbGV0ZSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHRoYXNEYXRhOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cdFx0dmFyIGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdHJldHVybiBjYWNoZSAhPT0gdW5kZWZpbmVkICYmICFqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKTtcblx0fVxufTtcbnZhciBkYXRhUHJpdiA9IG5ldyBEYXRhKCk7XG5cbnZhciBkYXRhVXNlciA9IG5ldyBEYXRhKCk7XG5cblxuXG4vL1x0SW1wbGVtZW50YXRpb24gU3VtbWFyeVxuLy9cbi8vXHQxLiBFbmZvcmNlIEFQSSBzdXJmYWNlIGFuZCBzZW1hbnRpYyBjb21wYXRpYmlsaXR5IHdpdGggMS45LnggYnJhbmNoXG4vL1x0Mi4gSW1wcm92ZSB0aGUgbW9kdWxlJ3MgbWFpbnRhaW5hYmlsaXR5IGJ5IHJlZHVjaW5nIHRoZSBzdG9yYWdlXG4vL1x0XHRwYXRocyB0byBhIHNpbmdsZSBtZWNoYW5pc20uXG4vL1x0My4gVXNlIHRoZSBzYW1lIHNpbmdsZSBtZWNoYW5pc20gdG8gc3VwcG9ydCBcInByaXZhdGVcIiBhbmQgXCJ1c2VyXCIgZGF0YS5cbi8vXHQ0LiBfTmV2ZXJfIGV4cG9zZSBcInByaXZhdGVcIiBkYXRhIHRvIHVzZXIgY29kZSAoVE9ETzogRHJvcCBfZGF0YSwgX3JlbW92ZURhdGEpXG4vL1x0NS4gQXZvaWQgZXhwb3NpbmcgaW1wbGVtZW50YXRpb24gZGV0YWlscyBvbiB1c2VyIG9iamVjdHMgKGVnLiBleHBhbmRvIHByb3BlcnRpZXMpXG4vL1x0Ni4gUHJvdmlkZSBhIGNsZWFyIHBhdGggZm9yIGltcGxlbWVudGF0aW9uIHVwZ3JhZGUgdG8gV2Vha01hcCBpbiAyMDE0XG5cbnZhciByYnJhY2UgPSAvXig/Olxce1tcXHdcXFddKlxcfXxcXFtbXFx3XFxXXSpcXF0pJC8sXG5cdHJtdWx0aURhc2ggPSAvW0EtWl0vZztcblxuZnVuY3Rpb24gZ2V0RGF0YSggZGF0YSApIHtcblx0aWYgKCBkYXRhID09PSBcInRydWVcIiApIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJmYWxzZVwiICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJudWxsXCIgKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHQvLyBPbmx5IGNvbnZlcnQgdG8gYSBudW1iZXIgaWYgaXQgZG9lc24ndCBjaGFuZ2UgdGhlIHN0cmluZ1xuXHRpZiAoIGRhdGEgPT09ICtkYXRhICsgXCJcIiApIHtcblx0XHRyZXR1cm4gK2RhdGE7XG5cdH1cblxuXHRpZiAoIHJicmFjZS50ZXN0KCBkYXRhICkgKSB7XG5cdFx0cmV0dXJuIEpTT04ucGFyc2UoIGRhdGEgKTtcblx0fVxuXG5cdHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBkYXRhQXR0ciggZWxlbSwga2V5LCBkYXRhICkge1xuXHR2YXIgbmFtZTtcblxuXHQvLyBJZiBub3RoaW5nIHdhcyBmb3VuZCBpbnRlcm5hbGx5LCB0cnkgdG8gZmV0Y2ggYW55XG5cdC8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0qIGF0dHJpYnV0ZVxuXHRpZiAoIGRhdGEgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdG5hbWUgPSBcImRhdGEtXCIgKyBrZXkucmVwbGFjZSggcm11bHRpRGFzaCwgXCItJCZcIiApLnRvTG93ZXJDYXNlKCk7XG5cdFx0ZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7XG5cblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0ZGF0YSA9IGdldERhdGEoIGRhdGEgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge31cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyXG5cdFx0XHRkYXRhVXNlci5zZXQoIGVsZW0sIGtleSwgZGF0YSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gZGF0YTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuaGFzRGF0YSggZWxlbSApIHx8IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKTtcblx0fSxcblxuXHRkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVVzZXIucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH0sXG5cblx0Ly8gVE9ETzogTm93IHRoYXQgYWxsIGNhbGxzIHRvIF9kYXRhIGFuZCBfcmVtb3ZlRGF0YSBoYXZlIGJlZW4gcmVwbGFjZWRcblx0Ly8gd2l0aCBkaXJlY3QgY2FsbHMgdG8gZGF0YVByaXYgbWV0aG9kcywgdGhlc2UgY2FuIGJlIGRlcHJlY2F0ZWQuXG5cdF9kYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0X3JlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGF0YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XG5cdFx0dmFyIGksIG5hbWUsIGRhdGEsXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0YXR0cnMgPSBlbGVtICYmIGVsZW0uYXR0cmlidXRlcztcblxuXHRcdC8vIEdldHMgYWxsIHZhbHVlc1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHRoaXMubGVuZ3RoICkge1xuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFkYXRhUHJpdi5nZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIgKSApIHtcblx0XHRcdFx0XHRpID0gYXR0cnMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBUaGUgYXR0cnMgZWxlbWVudHMgY2FuIGJlIG51bGwgKCMxNDg5NClcblx0XHRcdFx0XHRcdGlmICggYXR0cnNbIGkgXSApIHtcblx0XHRcdFx0XHRcdFx0bmFtZSA9IGF0dHJzWyBpIF0ubmFtZTtcblx0XHRcdFx0XHRcdFx0aWYgKCBuYW1lLmluZGV4T2YoIFwiZGF0YS1cIiApID09PSAwICkge1xuXHRcdFx0XHRcdFx0XHRcdG5hbWUgPSBjYW1lbENhc2UoIG5hbWUuc2xpY2UoIDUgKSApO1xuXHRcdFx0XHRcdFx0XHRcdGRhdGFBdHRyKCBlbGVtLCBuYW1lLCBkYXRhWyBuYW1lIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZGF0YTtcblx0XHR9XG5cblx0XHQvLyBTZXRzIG11bHRpcGxlIHZhbHVlc1xuXHRcdGlmICggdHlwZW9mIGtleSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhVXNlci5zZXQoIHRoaXMsIGtleSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBkYXRhO1xuXG5cdFx0XHQvLyBUaGUgY2FsbGluZyBqUXVlcnkgb2JqZWN0IChlbGVtZW50IG1hdGNoZXMpIGlzIG5vdCBlbXB0eVxuXHRcdFx0Ly8gKGFuZCB0aGVyZWZvcmUgaGFzIGFuIGVsZW1lbnQgYXBwZWFycyBhdCB0aGlzWyAwIF0pIGFuZCB0aGVcblx0XHRcdC8vIGB2YWx1ZWAgcGFyYW1ldGVyIHdhcyBub3QgdW5kZWZpbmVkLiBBbiBlbXB0eSBqUXVlcnkgb2JqZWN0XG5cdFx0XHQvLyB3aWxsIHJlc3VsdCBpbiBgdW5kZWZpbmVkYCBmb3IgZWxlbSA9IHRoaXNbIDAgXSB3aGljaCB3aWxsXG5cdFx0XHQvLyB0aHJvdyBhbiBleGNlcHRpb24gaWYgYW4gYXR0ZW1wdCB0byByZWFkIGEgZGF0YSBjYWNoZSBpcyBtYWRlLlxuXHRcdFx0aWYgKCBlbGVtICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBnZXQgZGF0YSBmcm9tIHRoZSBjYWNoZVxuXHRcdFx0XHQvLyBUaGUga2V5IHdpbGwgYWx3YXlzIGJlIGNhbWVsQ2FzZWQgaW4gRGF0YVxuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIFwiZGlzY292ZXJcIiB0aGUgZGF0YSBpblxuXHRcdFx0XHQvLyBIVE1MNSBjdXN0b20gZGF0YS0qIGF0dHJzXG5cdFx0XHRcdGRhdGEgPSBkYXRhQXR0ciggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gV2UgdHJpZWQgcmVhbGx5IGhhcmQsIGJ1dCB0aGUgZGF0YSBkb2Vzbid0IGV4aXN0LlxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCB0aGUgZGF0YS4uLlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc3RvcmUgdGhlIGNhbWVsQ2FzZWQga2V5XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5LCB2YWx1ZSApO1xuXHRcdFx0fSApO1xuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSwgbnVsbCwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkYXRhVXNlci5yZW1vdmUoIHRoaXMsIGtleSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBxdWV1ZTtcblxuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHR5cGUgPSAoIHR5cGUgfHwgXCJmeFwiICkgKyBcInF1ZXVlXCI7XG5cdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmdldCggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHQvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRpbmcgb3V0IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwXG5cdFx0XHRpZiAoIGRhdGEgKSB7XG5cdFx0XHRcdGlmICggIXF1ZXVlIHx8IEFycmF5LmlzQXJyYXkoIGRhdGEgKSApIHtcblx0XHRcdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSApICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cXVldWUucHVzaCggZGF0YSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcXVldWUgfHwgW107XG5cdFx0fVxuXHR9LFxuXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLFxuXHRcdFx0c3RhcnRMZW5ndGggPSBxdWV1ZS5sZW5ndGgsXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCksXG5cdFx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgdHlwZSApLFxuXHRcdFx0bmV4dCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggZWxlbSwgdHlwZSApO1xuXHRcdFx0fTtcblxuXHRcdC8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWxcblx0XHRpZiAoIGZuID09PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdHN0YXJ0TGVuZ3RoLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblxuXHRcdFx0Ly8gQWRkIGEgcHJvZ3Jlc3Mgc2VudGluZWwgdG8gcHJldmVudCB0aGUgZnggcXVldWUgZnJvbSBiZWluZ1xuXHRcdFx0Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZFxuXHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgKSB7XG5cdFx0XHRcdHF1ZXVlLnVuc2hpZnQoIFwiaW5wcm9ncmVzc1wiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENsZWFyIHVwIHRoZSBsYXN0IHF1ZXVlIHN0b3AgZnVuY3Rpb25cblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0Zm4uY2FsbCggZWxlbSwgbmV4dCwgaG9va3MgKTtcblx0XHR9XG5cblx0XHRpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmVcblx0X3F1ZXVlSG9va3M6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHZhciBrZXkgPSB0eXBlICsgXCJxdWV1ZUhvb2tzXCI7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmdldCggZWxlbSwga2V5ICkgfHwgZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBrZXksIHtcblx0XHRcdGVtcHR5OiBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKS5hZGQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFsgdHlwZSArIFwicXVldWVcIiwga2V5IF0gKTtcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgc2V0dGVyID0gMjtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRkYXRhID0gdHlwZTtcblx0XHRcdHR5cGUgPSBcImZ4XCI7XG5cdFx0XHRzZXR0ZXItLTtcblx0XHR9XG5cblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggPCBzZXR0ZXIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnF1ZXVlKCB0aGlzWyAwIF0sIHR5cGUgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGF0YSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMgOlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBkYXRhICk7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIGEgaG9va3MgZm9yIHRoaXMgcXVldWVcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgJiYgcXVldWVbIDAgXSAhPT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHR9LFxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0fSApO1xuXHR9LFxuXHRjbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdH0sXG5cblx0Ly8gR2V0IGEgcHJvbWlzZSByZXNvbHZlZCB3aGVuIHF1ZXVlcyBvZiBhIGNlcnRhaW4gdHlwZVxuXHQvLyBhcmUgZW1wdGllZCAoZnggaXMgdGhlIHR5cGUgYnkgZGVmYXVsdClcblx0cHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iaiApIHtcblx0XHR2YXIgdG1wLFxuXHRcdFx0Y291bnQgPSAxLFxuXHRcdFx0ZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGVsZW1lbnRzID0gdGhpcyxcblx0XHRcdGkgPSB0aGlzLmxlbmd0aCxcblx0XHRcdHJlc29sdmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhKCAtLWNvdW50ICkgKSB7XG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZVdpdGgoIGVsZW1lbnRzLCBbIGVsZW1lbnRzIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRvYmogPSB0eXBlO1xuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR0bXAgPSBkYXRhUHJpdi5nZXQoIGVsZW1lbnRzWyBpIF0sIHR5cGUgKyBcInF1ZXVlSG9va3NcIiApO1xuXHRcdFx0aWYgKCB0bXAgJiYgdG1wLmVtcHR5ICkge1xuXHRcdFx0XHRjb3VudCsrO1xuXHRcdFx0XHR0bXAuZW1wdHkuYWRkKCByZXNvbHZlICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJlc29sdmUoKTtcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqICk7XG5cdH1cbn0gKTtcbnZhciBwbnVtID0gKCAvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLyApLnNvdXJjZTtcblxudmFyIHJjc3NOdW0gPSBuZXcgUmVnRXhwKCBcIl4oPzooWystXSk9fCkoXCIgKyBwbnVtICsgXCIpKFthLXolXSopJFwiLCBcImlcIiApO1xuXG5cbnZhciBjc3NFeHBhbmQgPSBbIFwiVG9wXCIsIFwiUmlnaHRcIiwgXCJCb3R0b21cIiwgXCJMZWZ0XCIgXTtcblxudmFyIGRvY3VtZW50RWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuXG5cblx0dmFyIGlzQXR0YWNoZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xuXHRcdH0sXG5cdFx0Y29tcG9zZWQgPSB7IGNvbXBvc2VkOiB0cnVlIH07XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxMiAtIDE4KywgaU9TIDEwLjAgLSAxMC4yIG9ubHlcblx0Ly8gQ2hlY2sgYXR0YWNobWVudCBhY3Jvc3Mgc2hhZG93IERPTSBib3VuZGFyaWVzIHdoZW4gcG9zc2libGUgKGdoLTM1MDQpXG5cdC8vIFN1cHBvcnQ6IGlPUyAxMC4wLTEwLjIgb25seVxuXHQvLyBFYXJseSBpT1MgMTAgdmVyc2lvbnMgc3VwcG9ydCBgYXR0YWNoU2hhZG93YCBidXQgbm90IGBnZXRSb290Tm9kZWAsXG5cdC8vIGxlYWRpbmcgdG8gZXJyb3JzLiBXZSBuZWVkIHRvIGNoZWNrIGZvciBgZ2V0Um9vdE5vZGVgLlxuXHRpZiAoIGRvY3VtZW50RWxlbWVudC5nZXRSb290Tm9kZSApIHtcblx0XHRpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSB8fFxuXHRcdFx0XHRlbGVtLmdldFJvb3ROb2RlKCBjb21wb3NlZCApID09PSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0fTtcblx0fVxudmFyIGlzSGlkZGVuV2l0aGluVHJlZSA9IGZ1bmN0aW9uKCBlbGVtLCBlbCApIHtcblxuXHRcdC8vIGlzSGlkZGVuV2l0aGluVHJlZSBtaWdodCBiZSBjYWxsZWQgZnJvbSBqUXVlcnkjZmlsdGVyIGZ1bmN0aW9uO1xuXHRcdC8vIGluIHRoYXQgY2FzZSwgZWxlbWVudCB3aWxsIGJlIHNlY29uZCBhcmd1bWVudFxuXHRcdGVsZW0gPSBlbCB8fCBlbGVtO1xuXG5cdFx0Ly8gSW5saW5lIHN0eWxlIHRydW1wcyBhbGxcblx0XHRyZXR1cm4gZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIiB8fFxuXHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmXG5cblx0XHRcdC8vIE90aGVyd2lzZSwgY2hlY2sgY29tcHV0ZWQgc3R5bGVcblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MyAtIDQ1XG5cdFx0XHQvLyBEaXNjb25uZWN0ZWQgZWxlbWVudHMgY2FuIGhhdmUgY29tcHV0ZWQgZGlzcGxheTogbm9uZSwgc28gZmlyc3QgY29uZmlybSB0aGF0IGVsZW0gaXNcblx0XHRcdC8vIGluIHRoZSBkb2N1bWVudC5cblx0XHRcdGlzQXR0YWNoZWQoIGVsZW0gKSAmJlxuXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApID09PSBcIm5vbmVcIjtcblx0fTtcblxuXG5cbmZ1bmN0aW9uIGFkanVzdENTUyggZWxlbSwgcHJvcCwgdmFsdWVQYXJ0cywgdHdlZW4gKSB7XG5cdHZhciBhZGp1c3RlZCwgc2NhbGUsXG5cdFx0bWF4SXRlcmF0aW9ucyA9IDIwLFxuXHRcdGN1cnJlbnRWYWx1ZSA9IHR3ZWVuID9cblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uY3VyKCk7XG5cdFx0XHR9IDpcblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgcHJvcCwgXCJcIiApO1xuXHRcdFx0fSxcblx0XHRpbml0aWFsID0gY3VycmVudFZhbHVlKCksXG5cdFx0dW5pdCA9IHZhbHVlUGFydHMgJiYgdmFsdWVQYXJ0c1sgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApLFxuXG5cdFx0Ly8gU3RhcnRpbmcgdmFsdWUgY29tcHV0YXRpb24gaXMgcmVxdWlyZWQgZm9yIHBvdGVudGlhbCB1bml0IG1pc21hdGNoZXNcblx0XHRpbml0aWFsSW5Vbml0ID0gZWxlbS5ub2RlVHlwZSAmJlxuXHRcdFx0KCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gfHwgdW5pdCAhPT0gXCJweFwiICYmICtpbml0aWFsICkgJiZcblx0XHRcdHJjc3NOdW0uZXhlYyggalF1ZXJ5LmNzcyggZWxlbSwgcHJvcCApICk7XG5cblx0aWYgKCBpbml0aWFsSW5Vbml0ICYmIGluaXRpYWxJblVuaXRbIDMgXSAhPT0gdW5pdCApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD01NFxuXHRcdC8vIEhhbHZlIHRoZSBpdGVyYXRpb24gdGFyZ2V0IHZhbHVlIHRvIHByZXZlbnQgaW50ZXJmZXJlbmNlIGZyb20gQ1NTIHVwcGVyIGJvdW5kcyAoZ2gtMjE0NClcblx0XHRpbml0aWFsID0gaW5pdGlhbCAvIDI7XG5cblx0XHQvLyBUcnVzdCB1bml0cyByZXBvcnRlZCBieSBqUXVlcnkuY3NzXG5cdFx0dW5pdCA9IHVuaXQgfHwgaW5pdGlhbEluVW5pdFsgMyBdO1xuXG5cdFx0Ly8gSXRlcmF0aXZlbHkgYXBwcm94aW1hdGUgZnJvbSBhIG5vbnplcm8gc3RhcnRpbmcgcG9pbnRcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWwgfHwgMTtcblxuXHRcdHdoaWxlICggbWF4SXRlcmF0aW9ucy0tICkge1xuXG5cdFx0XHQvLyBFdmFsdWF0ZSBhbmQgdXBkYXRlIG91ciBiZXN0IGd1ZXNzIChkb3VibGluZyBndWVzc2VzIHRoYXQgemVybyBvdXQpLlxuXHRcdFx0Ly8gRmluaXNoIGlmIHRoZSBzY2FsZSBlcXVhbHMgb3IgY3Jvc3NlcyAxIChtYWtpbmcgdGhlIG9sZCpuZXcgcHJvZHVjdCBub24tcG9zaXRpdmUpLlxuXHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXHRcdFx0aWYgKCAoIDEgLSBzY2FsZSApICogKCAxIC0gKCBzY2FsZSA9IGN1cnJlbnRWYWx1ZSgpIC8gaW5pdGlhbCB8fCAwLjUgKSApIDw9IDAgKSB7XG5cdFx0XHRcdG1heEl0ZXJhdGlvbnMgPSAwO1xuXHRcdFx0fVxuXHRcdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgLyBzY2FsZTtcblxuXHRcdH1cblxuXHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0ICogMjtcblx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XG5cblx0XHQvLyBNYWtlIHN1cmUgd2UgdXBkYXRlIHRoZSB0d2VlbiBwcm9wZXJ0aWVzIGxhdGVyIG9uXG5cdFx0dmFsdWVQYXJ0cyA9IHZhbHVlUGFydHMgfHwgW107XG5cdH1cblxuXHRpZiAoIHZhbHVlUGFydHMgKSB7XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsSW5Vbml0IHx8ICtpbml0aWFsIHx8IDA7XG5cblx0XHQvLyBBcHBseSByZWxhdGl2ZSBvZmZzZXQgKCs9Ly09KSBpZiBzcGVjaWZpZWRcblx0XHRhZGp1c3RlZCA9IHZhbHVlUGFydHNbIDEgXSA/XG5cdFx0XHRpbml0aWFsSW5Vbml0ICsgKCB2YWx1ZVBhcnRzWyAxIF0gKyAxICkgKiB2YWx1ZVBhcnRzWyAyIF0gOlxuXHRcdFx0K3ZhbHVlUGFydHNbIDIgXTtcblx0XHRpZiAoIHR3ZWVuICkge1xuXHRcdFx0dHdlZW4udW5pdCA9IHVuaXQ7XG5cdFx0XHR0d2Vlbi5zdGFydCA9IGluaXRpYWxJblVuaXQ7XG5cdFx0XHR0d2Vlbi5lbmQgPSBhZGp1c3RlZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGFkanVzdGVkO1xufVxuXG5cbnZhciBkZWZhdWx0RGlzcGxheU1hcCA9IHt9O1xuXG5mdW5jdGlvbiBnZXREZWZhdWx0RGlzcGxheSggZWxlbSApIHtcblx0dmFyIHRlbXAsXG5cdFx0ZG9jID0gZWxlbS5vd25lckRvY3VtZW50LFxuXHRcdG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZSxcblx0XHRkaXNwbGF5ID0gZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF07XG5cblx0aWYgKCBkaXNwbGF5ICkge1xuXHRcdHJldHVybiBkaXNwbGF5O1xuXHR9XG5cblx0dGVtcCA9IGRvYy5ib2R5LmFwcGVuZENoaWxkKCBkb2MuY3JlYXRlRWxlbWVudCggbm9kZU5hbWUgKSApO1xuXHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggdGVtcCwgXCJkaXNwbGF5XCIgKTtcblxuXHR0ZW1wLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHRlbXAgKTtcblxuXHRpZiAoIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xuXHRcdGRpc3BsYXkgPSBcImJsb2NrXCI7XG5cdH1cblx0ZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF0gPSBkaXNwbGF5O1xuXG5cdHJldHVybiBkaXNwbGF5O1xufVxuXG5mdW5jdGlvbiBzaG93SGlkZSggZWxlbWVudHMsIHNob3cgKSB7XG5cdHZhciBkaXNwbGF5LCBlbGVtLFxuXHRcdHZhbHVlcyA9IFtdLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBlbGVtZW50cy5sZW5ndGg7XG5cblx0Ly8gRGV0ZXJtaW5lIG5ldyBkaXNwbGF5IHZhbHVlIGZvciBlbGVtZW50cyB0aGF0IG5lZWQgdG8gY2hhbmdlXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRkaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5O1xuXHRcdGlmICggc2hvdyApIHtcblxuXHRcdFx0Ly8gU2luY2Ugd2UgZm9yY2UgdmlzaWJpbGl0eSB1cG9uIGNhc2NhZGUtaGlkZGVuIGVsZW1lbnRzLCBhbiBpbW1lZGlhdGUgKGFuZCBzbG93KVxuXHRcdFx0Ly8gY2hlY2sgaXMgcmVxdWlyZWQgaW4gdGhpcyBmaXJzdCBsb29wIHVubGVzcyB3ZSBoYXZlIGEgbm9uZW1wdHkgZGlzcGxheSB2YWx1ZSAoZWl0aGVyXG5cdFx0XHQvLyBpbmxpbmUgb3IgYWJvdXQtdG8tYmUtcmVzdG9yZWQpXG5cdFx0XHRpZiAoIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICkgfHwgbnVsbDtcblx0XHRcdFx0aWYgKCAhdmFsdWVzWyBpbmRleCBdICkge1xuXHRcdFx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICggZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmIGlzSGlkZGVuV2l0aGluVHJlZSggZWxlbSApICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBnZXREZWZhdWx0RGlzcGxheSggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAoIGRpc3BsYXkgIT09IFwibm9uZVwiICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBcIm5vbmVcIjtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB3aGF0IHdlJ3JlIG92ZXJ3cml0aW5nXG5cdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJkaXNwbGF5XCIsIGRpc3BsYXkgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBTZXQgdGhlIGRpc3BsYXkgb2YgdGhlIGVsZW1lbnRzIGluIGEgc2Vjb25kIGxvb3AgdG8gYXZvaWQgY29uc3RhbnQgcmVmbG93XG5cdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCB2YWx1ZXNbIGluZGV4IF0gIT0gbnVsbCApIHtcblx0XHRcdGVsZW1lbnRzWyBpbmRleCBdLnN0eWxlLmRpc3BsYXkgPSB2YWx1ZXNbIGluZGV4IF07XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRzO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHNob3c6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcywgdHJ1ZSApO1xuXHR9LFxuXHRoaWRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMgKTtcblx0fSxcblx0dG9nZ2xlOiBmdW5jdGlvbiggc3RhdGUgKSB7XG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlID8gdGhpcy5zaG93KCkgOiB0aGlzLmhpZGUoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggaXNIaWRkZW5XaXRoaW5UcmVlKCB0aGlzICkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnNob3coKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmhpZGUoKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcbnZhciByY2hlY2thYmxlVHlwZSA9ICggL14oPzpjaGVja2JveHxyYWRpbykkL2kgKTtcblxudmFyIHJ0YWdOYW1lID0gKCAvPChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSopL2kgKTtcblxudmFyIHJzY3JpcHRUeXBlID0gKCAvXiR8Xm1vZHVsZSR8XFwvKD86amF2YXxlY21hKXNjcmlwdC9pICk7XG5cblxuXG4oIGZ1bmN0aW9uKCkge1xuXHR2YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0ZGl2ID0gZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApLFxuXHRcdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seVxuXHQvLyBDaGVjayBzdGF0ZSBsb3N0IGlmIHRoZSBuYW1lIGlzIHNldCAoIzExMjE3KVxuXHQvLyBTdXBwb3J0OiBXaW5kb3dzIFdlYiBBcHBzIChXV0EpXG5cdC8vIGBuYW1lYCBhbmQgYHR5cGVgIG11c3QgdXNlIC5zZXRBdHRyaWJ1dGUgZm9yIFdXQSAoIzE0OTAxKVxuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcInJhZGlvXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcImNoZWNrZWRcIiwgXCJjaGVja2VkXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJ0XCIgKTtcblxuXHRkaXYuYXBwZW5kQ2hpbGQoIGlucHV0ICk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMSBvbmx5XG5cdC8vIE9sZGVyIFdlYktpdCBkb2Vzbid0IGNsb25lIGNoZWNrZWQgc3RhdGUgY29ycmVjdGx5IGluIGZyYWdtZW50c1xuXHRzdXBwb3J0LmNoZWNrQ2xvbmUgPSBkaXYuY2xvbmVOb2RlKCB0cnVlICkuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmNoZWNrZWQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIE1ha2Ugc3VyZSB0ZXh0YXJlYSAoYW5kIGNoZWNrYm94KSBkZWZhdWx0VmFsdWUgaXMgcHJvcGVybHkgY2xvbmVkXG5cdGRpdi5pbm5lckhUTUwgPSBcIjx0ZXh0YXJlYT54PC90ZXh0YXJlYT5cIjtcblx0c3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCA9ICEhZGl2LmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWU7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0Ly8gSUUgPD05IHJlcGxhY2VzIDxvcHRpb24+IHRhZ3Mgd2l0aCB0aGVpciBjb250ZW50cyB3aGVuIGluc2VydGVkIG91dHNpZGUgb2Zcblx0Ly8gdGhlIHNlbGVjdCBlbGVtZW50LlxuXHRkaXYuaW5uZXJIVE1MID0gXCI8b3B0aW9uPjwvb3B0aW9uPlwiO1xuXHRzdXBwb3J0Lm9wdGlvbiA9ICEhZGl2Lmxhc3RDaGlsZDtcbn0gKSgpO1xuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZVxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXG5cdC8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBlbGVtZW50cy5cblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHRfZGVmYXVsdDogWyAwLCBcIlwiLCBcIlwiIF1cbn07XG5cbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XG53cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbmlmICggIXN1cHBvcnQub3B0aW9uICkge1xuXHR3cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb24gPSBbIDEsIFwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPlwiLCBcIjwvc2VsZWN0PlwiIF07XG59XG5cblxuZnVuY3Rpb24gZ2V0QWxsKCBjb250ZXh0LCB0YWcgKSB7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHQvLyBVc2UgdHlwZW9mIHRvIGF2b2lkIHplcm8tYXJndW1lbnQgbWV0aG9kIGludm9jYXRpb24gb24gaG9zdCBvYmplY3RzICgjMTUxNTEpXG5cdHZhciByZXQ7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRyZXQgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2UgaWYgKCB0eXBlb2YgY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnIHx8IFwiKlwiICk7XG5cblx0fSBlbHNlIHtcblx0XHRyZXQgPSBbXTtcblx0fVxuXG5cdGlmICggdGFnID09PSB1bmRlZmluZWQgfHwgdGFnICYmIG5vZGVOYW1lKCBjb250ZXh0LCB0YWcgKSApIHtcblx0XHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbIGNvbnRleHQgXSwgcmV0ICk7XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufVxuXG5cbi8vIE1hcmsgc2NyaXB0cyBhcyBoYXZpbmcgYWxyZWFkeSBiZWVuIGV2YWx1YXRlZFxuZnVuY3Rpb24gc2V0R2xvYmFsRXZhbCggZWxlbXMsIHJlZkVsZW1lbnRzICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZGF0YVByaXYuc2V0KFxuXHRcdFx0ZWxlbXNbIGkgXSxcblx0XHRcdFwiZ2xvYmFsRXZhbFwiLFxuXHRcdFx0IXJlZkVsZW1lbnRzIHx8IGRhdGFQcml2LmdldCggcmVmRWxlbWVudHNbIGkgXSwgXCJnbG9iYWxFdmFsXCIgKVxuXHRcdCk7XG5cdH1cbn1cblxuXG52YXIgcmh0bWwgPSAvPHwmIz9cXHcrOy87XG5cbmZ1bmN0aW9uIGJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxlY3Rpb24sIGlnbm9yZWQgKSB7XG5cdHZhciBlbGVtLCB0bXAsIHRhZywgd3JhcCwgYXR0YWNoZWQsIGosXG5cdFx0ZnJhZ21lbnQgPSBjb250ZXh0LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRub2RlcyA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGVsZW0gPSBlbGVtc1sgaSBdO1xuXG5cdFx0aWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7XG5cblx0XHRcdC8vIEFkZCBub2RlcyBkaXJlY3RseVxuXHRcdFx0aWYgKCB0b1R5cGUoIGVsZW0gKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCBlbGVtLm5vZGVUeXBlID8gWyBlbGVtIF0gOiBlbGVtICk7XG5cblx0XHRcdC8vIENvbnZlcnQgbm9uLWh0bWwgaW50byBhIHRleHQgbm9kZVxuXHRcdFx0fSBlbHNlIGlmICggIXJodG1sLnRlc3QoIGVsZW0gKSApIHtcblx0XHRcdFx0bm9kZXMucHVzaCggY29udGV4dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7XG5cblx0XHRcdC8vIENvbnZlcnQgaHRtbCBpbnRvIERPTSBub2Rlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dG1wID0gdG1wIHx8IGZyYWdtZW50LmFwcGVuZENoaWxkKCBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xuXG5cdFx0XHRcdC8vIERlc2VyaWFsaXplIGEgc3RhbmRhcmQgcmVwcmVzZW50YXRpb25cblx0XHRcdFx0dGFnID0gKCBydGFnTmFtZS5leGVjKCBlbGVtICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdHdyYXAgPSB3cmFwTWFwWyB0YWcgXSB8fCB3cmFwTWFwLl9kZWZhdWx0O1xuXHRcdFx0XHR0bXAuaW5uZXJIVE1MID0gd3JhcFsgMSBdICsgalF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIGVsZW0gKSArIHdyYXBbIDIgXTtcblxuXHRcdFx0XHQvLyBEZXNjZW5kIHRocm91Z2ggd3JhcHBlcnMgdG8gdGhlIHJpZ2h0IGNvbnRlbnRcblx0XHRcdFx0aiA9IHdyYXBbIDAgXTtcblx0XHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdFx0dG1wID0gdG1wLmxhc3RDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIHRtcC5jaGlsZE5vZGVzICk7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgdGhlIHRvcC1sZXZlbCBjb250YWluZXJcblx0XHRcdFx0dG1wID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdFx0XHQvLyBFbnN1cmUgdGhlIGNyZWF0ZWQgbm9kZXMgYXJlIG9ycGhhbmVkICgjMTIzOTIpXG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmVtb3ZlIHdyYXBwZXIgZnJvbSBmcmFnbWVudFxuXHRmcmFnbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG5cblx0aSA9IDA7XG5cdHdoaWxlICggKCBlbGVtID0gbm9kZXNbIGkrKyBdICkgKSB7XG5cblx0XHQvLyBTa2lwIGVsZW1lbnRzIGFscmVhZHkgaW4gdGhlIGNvbnRleHQgY29sbGVjdGlvbiAodHJhYy00MDg3KVxuXHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSA+IC0xICkge1xuXHRcdFx0aWYgKCBpZ25vcmVkICkge1xuXHRcdFx0XHRpZ25vcmVkLnB1c2goIGVsZW0gKTtcblx0XHRcdH1cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGF0dGFjaGVkID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50XG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBhdHRhY2hlZCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZnJhZ21lbnQ7XG59XG5cblxudmFyIHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpLztcblxuZnVuY3Rpb24gcmV0dXJuVHJ1ZSgpIHtcblx0cmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHJldHVybkZhbHNlKCkge1xuXHRyZXR1cm4gZmFsc2U7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuLy8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXMsIGV4Y2VwdCB3aGVuIHRoZXkgYXJlIG5vLW9wLlxuLy8gU28gZXhwZWN0IGZvY3VzIHRvIGJlIHN5bmNocm9ub3VzIHdoZW4gdGhlIGVsZW1lbnQgaXMgYWxyZWFkeSBhY3RpdmUsXG4vLyBhbmQgYmx1ciB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIG5vdCBhbHJlYWR5IGFjdGl2ZS5cbi8vIChmb2N1cyBhbmQgYmx1ciBhcmUgYWx3YXlzIHN5bmNocm9ub3VzIGluIG90aGVyIHN1cHBvcnRlZCBicm93c2Vycyxcbi8vIHRoaXMganVzdCBkZWZpbmVzIHdoZW4gd2UgY2FuIGNvdW50IG9uIGl0KS5cbmZ1bmN0aW9uIGV4cGVjdFN5bmMoIGVsZW0sIHR5cGUgKSB7XG5cdHJldHVybiAoIGVsZW0gPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgKSA9PT0gKCB0eXBlID09PSBcImZvY3VzXCIgKTtcbn1cblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbi8vIEFjY2Vzc2luZyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGNhbiB0aHJvdyB1bmV4cGVjdGVkbHlcbi8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM5M1xuZnVuY3Rpb24gc2FmZUFjdGl2ZUVsZW1lbnQoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG5cdH0gY2F0Y2ggKCBlcnIgKSB7IH1cbn1cblxuZnVuY3Rpb24gb24oIGVsZW0sIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIG9uZSApIHtcblx0dmFyIG9yaWdGbiwgdHlwZTtcblxuXHQvLyBUeXBlcyBjYW4gYmUgYSBtYXAgb2YgdHlwZXMvaGFuZGxlcnNcblx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKVxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLU9iamVjdCwgZGF0YSApXG5cdFx0XHRkYXRhID0gZGF0YSB8fCBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIGRhdGEgPT0gbnVsbCAmJiBmbiA9PSBudWxsICkge1xuXG5cdFx0Ly8gKCB0eXBlcywgZm4gKVxuXHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKCBmbiA9PSBudWxsICkge1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBzZWxlY3RvciwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0fSBlbHNlIGlmICggIWZuICkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBvbmUgPT09IDEgKSB7XG5cdFx0b3JpZ0ZuID0gZm47XG5cdFx0Zm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdC8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mb1xuXHRcdFx0alF1ZXJ5KCkub2ZmKCBldmVudCApO1xuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fTtcblxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXG5cdFx0Zm4uZ3VpZCA9IG9yaWdGbi5ndWlkIHx8ICggb3JpZ0ZuLmd1aWQgPSBqUXVlcnkuZ3VpZCsrICk7XG5cdH1cblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0alF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgdHlwZXMsIGZuLCBkYXRhLCBzZWxlY3RvciApO1xuXHR9ICk7XG59XG5cbi8qXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXG4gKiBQcm9wcyB0byBEZWFuIEVkd2FyZHMnIGFkZEV2ZW50IGxpYnJhcnkgZm9yIG1hbnkgb2YgdGhlIGlkZWFzLlxuICovXG5qUXVlcnkuZXZlbnQgPSB7XG5cblx0Z2xvYmFsOiB7fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgZGF0YSwgc2VsZWN0b3IgKSB7XG5cblx0XHR2YXIgaGFuZGxlT2JqSW4sIGV2ZW50SGFuZGxlLCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHQvLyBPbmx5IGF0dGFjaCBldmVudHMgdG8gb2JqZWN0cyB0aGF0IGFjY2VwdCBkYXRhXG5cdFx0aWYgKCAhYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhbiBvYmplY3Qgb2YgY3VzdG9tIGRhdGEgaW4gbGlldSBvZiB0aGUgaGFuZGxlclxuXHRcdGlmICggaGFuZGxlci5oYW5kbGVyICkge1xuXHRcdFx0aGFuZGxlT2JqSW4gPSBoYW5kbGVyO1xuXHRcdFx0aGFuZGxlciA9IGhhbmRsZU9iakluLmhhbmRsZXI7XG5cdFx0XHRzZWxlY3RvciA9IGhhbmRsZU9iakluLnNlbGVjdG9yO1xuXHRcdH1cblxuXHRcdC8vIEVuc3VyZSB0aGF0IGludmFsaWQgc2VsZWN0b3JzIHRocm93IGV4Y2VwdGlvbnMgYXQgYXR0YWNoIHRpbWVcblx0XHQvLyBFdmFsdWF0ZSBhZ2FpbnN0IGRvY3VtZW50RWxlbWVudCBpbiBjYXNlIGVsZW0gaXMgYSBub24tZWxlbWVudCBub2RlIChlLmcuLCBkb2N1bWVudClcblx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBkb2N1bWVudEVsZW1lbnQsIHNlbGVjdG9yICk7XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgdGhlIGhhbmRsZXIgaGFzIGEgdW5pcXVlIElELCB1c2VkIHRvIGZpbmQvcmVtb3ZlIGl0IGxhdGVyXG5cdFx0aWYgKCAhaGFuZGxlci5ndWlkICkge1xuXHRcdFx0aGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKztcblx0XHR9XG5cblx0XHQvLyBJbml0IHRoZSBlbGVtZW50J3MgZXZlbnQgc3RydWN0dXJlIGFuZCBtYWluIGhhbmRsZXIsIGlmIHRoaXMgaXMgdGhlIGZpcnN0XG5cdFx0aWYgKCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyA9IE9iamVjdC5jcmVhdGUoIG51bGwgKTtcblx0XHR9XG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xuXHRcdFx0ZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxuXHRcdFx0XHQvLyB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCBhZnRlciBhIHBhZ2UgaGFzIHVubG9hZGVkXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Ly8gSGFuZGxlIG11bHRpcGxlIGV2ZW50cyBzZXBhcmF0ZWQgYnkgYSBzcGFjZVxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggc3BlY2lhbC5hZGQgKSB7XG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXG5cdFx0XHRcdGlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udFxuXHRcdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUgZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb25cblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XG5cdFx0fVxuXG5cdH0sXG5cblx0Ly8gRGV0YWNoIGFuIGV2ZW50IG9yIHNldCBvZiBldmVudHMgZnJvbSBhbiBlbGVtZW50XG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XG5cblx0XHR2YXIgaiwgb3JpZ0NvdW50LCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuaGFzRGF0YSggZWxlbSApICYmIGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gT25jZSBmb3IgZWFjaCB0eXBlLm5hbWVzcGFjZSBpbiB0eXBlczsgdHlwZSBtYXkgYmUgb21pdHRlZFxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnRcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107XG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxuXHRcdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xuXHRcdFx0b3JpZ0NvdW50ID0gaiA9IGhhbmRsZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xuXG5cdFx0XHRcdGlmICggKCBtYXBwZWRUeXBlcyB8fCBvcmlnVHlwZSA9PT0gaGFuZGxlT2JqLm9yaWdUeXBlICkgJiZcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxuXHRcdFx0XHRcdCggIXRtcCB8fCB0bXAudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgJiZcblx0XHRcdFx0XHQoICFzZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gaGFuZGxlT2JqLnNlbGVjdG9yIHx8XG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xuXHRcdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaiwgMSApO1xuXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LS07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XG5cdFx0XHRcdFx0XHRzcGVjaWFsLnJlbW92ZS5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxuXHRcdFx0Ly8gKGF2b2lkcyBwb3RlbnRpYWwgZm9yIGVuZGxlc3MgcmVjdXJzaW9uIGR1cmluZyByZW1vdmFsIG9mIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMpXG5cdFx0XHRpZiAoIG9yaWdDb3VudCAmJiAhaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBuYW1lc3BhY2VzLCBlbGVtRGF0YS5oYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSBkYXRhIGFuZCB0aGUgZXhwYW5kbyBpZiBpdCdzIG5vIGxvbmdlciB1c2VkXG5cdFx0aWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdGRpc3BhdGNoOiBmdW5jdGlvbiggbmF0aXZlRXZlbnQgKSB7XG5cblx0XHR2YXIgaSwgaiwgcmV0LCBtYXRjaGVkLCBoYW5kbGVPYmosIGhhbmRsZXJRdWV1ZSxcblx0XHRcdGFyZ3MgPSBuZXcgQXJyYXkoIGFyZ3VtZW50cy5sZW5ndGggKSxcblxuXHRcdFx0Ly8gTWFrZSBhIHdyaXRhYmxlIGpRdWVyeS5FdmVudCBmcm9tIHRoZSBuYXRpdmUgZXZlbnQgb2JqZWN0XG5cdFx0XHRldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIG5hdGl2ZUV2ZW50ICksXG5cblx0XHRcdGhhbmRsZXJzID0gKFxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsIClcblx0XHRcdClbIGV2ZW50LnR5cGUgXSB8fCBbXSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZXZlbnQudHlwZSBdIHx8IHt9O1xuXG5cdFx0Ly8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhlciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnRcblx0XHRhcmdzWyAwIF0gPSBldmVudDtcblxuXHRcdGZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0YXJnc1sgaSBdID0gYXJndW1lbnRzWyBpIF07XG5cdFx0fVxuXG5cdFx0ZXZlbnQuZGVsZWdhdGVUYXJnZXQgPSB0aGlzO1xuXG5cdFx0Ly8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZFxuXHRcdGlmICggc3BlY2lhbC5wcmVEaXNwYXRjaCAmJiBzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBoYW5kbGVyc1xuXHRcdGhhbmRsZXJRdWV1ZSA9IGpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKCB0aGlzLCBldmVudCwgaGFuZGxlcnMgKTtcblxuXHRcdC8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBiZW5lYXRoIHVzXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIG1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRldmVudC5jdXJyZW50VGFyZ2V0ID0gbWF0Y2hlZC5lbGVtO1xuXG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBoYW5kbGVPYmogPSBtYXRjaGVkLmhhbmRsZXJzWyBqKysgXSApICYmXG5cdFx0XHRcdCFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZSBldmVudCBpcyBuYW1lc3BhY2VkLCB0aGVuIGVhY2ggaGFuZGxlciBpcyBvbmx5IGludm9rZWQgaWYgaXQgaXNcblx0XHRcdFx0Ly8gc3BlY2lhbGx5IHVuaXZlcnNhbCBvciBpdHMgbmFtZXNwYWNlcyBhcmUgYSBzdXBlcnNldCBvZiB0aGUgZXZlbnQncy5cblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBoYW5kbGVPYmoubmFtZXNwYWNlID09PSBmYWxzZSB8fFxuXHRcdFx0XHRcdGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBoYW5kbGVPYmosIHNlbCwgbWF0Y2hlZEhhbmRsZXJzLCBtYXRjaGVkU2VsZWN0b3JzLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCxcblx0XHRcdGN1ciA9IGV2ZW50LnRhcmdldDtcblxuXHRcdC8vIEZpbmQgZGVsZWdhdGUgaGFuZGxlcnNcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05XG5cdFx0XHQvLyBCbGFjay1ob2xlIFNWRyA8dXNlPiBpbnN0YW5jZSB0cmVlcyAodHJhYy0xMzE4MClcblx0XHRcdGN1ci5ub2RlVHlwZSAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDJcblx0XHRcdC8vIFN1cHByZXNzIHNwZWMtdmlvbGF0aW5nIGNsaWNrcyBpbmRpY2F0aW5nIGEgbm9uLXByaW1hcnkgcG9pbnRlciBidXR0b24gKHRyYWMtMzg2MSlcblx0XHRcdC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50LXR5cGUtY2xpY2tcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdC8vIC4uLmJ1dCBub3QgYXJyb3cga2V5IFwiY2xpY2tzXCIgb2YgcmFkaW8gaW5wdXRzLCB3aGljaCBjYW4gaGF2ZSBgYnV0dG9uYCAtMSAoZ2gtMjM0Mylcblx0XHRcdCEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBldmVudC5idXR0b24gPj0gMSApICkge1xuXG5cdFx0XHRmb3IgKCA7IGN1ciAhPT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjaGVjayBub24tZWxlbWVudHMgKCMxMzIwOClcblx0XHRcdFx0Ly8gRG9uJ3QgcHJvY2VzcyBjbGlja3Mgb24gZGlzYWJsZWQgZWxlbWVudHMgKCM2OTExLCAjODE2NSwgIzExMzgyLCAjMTE3NjQpXG5cdFx0XHRcdGlmICggY3VyLm5vZGVUeXBlID09PSAxICYmICEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBjdXIuZGlzYWJsZWQgPT09IHRydWUgKSApIHtcblx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzID0ge307XG5cdFx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBkZWxlZ2F0ZUNvdW50OyBpKysgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdO1xuXG5cdFx0XHRcdFx0XHQvLyBEb24ndCBjb25mbGljdCB3aXRoIE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoIzEzMjAzKVxuXHRcdFx0XHRcdFx0c2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yICsgXCIgXCI7XG5cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPSBoYW5kbGVPYmoubmVlZHNDb250ZXh0ID9cblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+IC0xIDpcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZCggc2VsLCB0aGlzLCBudWxsLCBbIGN1ciBdICkubGVuZ3RoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRIYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVkSGFuZGxlcnMgfSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnNcblx0XHRjdXIgPSB0aGlzO1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XG5cdH0sXG5cblx0YWRkUHJvcDogZnVuY3Rpb24oIG5hbWUsIGhvb2sgKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBqUXVlcnkuRXZlbnQucHJvdG90eXBlLCBuYW1lLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXG5cdFx0XHRnZXQ6IGlzRnVuY3Rpb24oIGhvb2sgKSA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGhvb2soIHRoaXMub3JpZ2luYWxFdmVudCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudFsgbmFtZSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggdGhpcywgbmFtZSwge1xuXHRcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHdyaXRhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdHZhbHVlOiB2YWx1ZVxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGZpeDogZnVuY3Rpb24oIG9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0b3JpZ2luYWxFdmVudCA6XG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XG5cdH0sXG5cblx0c3BlY2lhbDoge1xuXHRcdGxvYWQ6IHtcblxuXHRcdFx0Ly8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZFxuXHRcdFx0bm9CdWJibGU6IHRydWVcblx0XHR9LFxuXHRcdGNsaWNrOiB7XG5cblx0XHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IHRvIGVuc3VyZSBjb3JyZWN0IHN0YXRlIGZvciBjaGVja2FibGUgaW5wdXRzXG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0XHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsLnR5cGUgKSAmJlxuXHRcdFx0XHRcdGVsLmNsaWNrICYmIG5vZGVOYW1lKCBlbCwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHQvLyBkYXRhUHJpdi5zZXQoIGVsLCBcImNsaWNrXCIsIC4uLiApXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIsIHJldHVyblRydWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0sXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbiggZGF0YSApIHtcblxuXHRcdFx0XHQvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci5cblx0XHRcdFx0Ly8gYHx8IGRhdGFgIGlzIGRlYWQgY29kZSBtZWFudCBvbmx5IHRvIHByZXNlcnZlIHRoZSB2YXJpYWJsZSB0aHJvdWdoIG1pbmlmaWNhdGlvbi5cblx0XHRcdFx0dmFyIGVsID0gdGhpcyB8fCBkYXRhO1xuXG5cdFx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyaW5nIGEgY2xpY2tcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIGVsLCBcImNsaWNrXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgc3VwcHJlc3MgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHQvLyBBbHNvIHByZXZlbnQgaXQgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZSBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2tcblx0XHRcdF9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cdFx0XHRcdHJldHVybiByY2hlY2thYmxlVHlwZS50ZXN0KCB0YXJnZXQudHlwZSApICYmXG5cdFx0XHRcdFx0dGFyZ2V0LmNsaWNrICYmIG5vZGVOYW1lKCB0YXJnZXQsIFwiaW5wdXRcIiApICYmXG5cdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0YXJnZXQsIFwiY2xpY2tcIiApIHx8XG5cdFx0XHRcdFx0bm9kZU5hbWUoIHRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBFbnN1cmUgdGhlIHByZXNlbmNlIG9mIGFuIGV2ZW50IGxpc3RlbmVyIHRoYXQgaGFuZGxlcyBtYW51YWxseS10cmlnZ2VyZWRcbi8vIHN5bnRoZXRpYyBldmVudHMgYnkgaW50ZXJydXB0aW5nIHByb2dyZXNzIHVudGlsIHJlaW52b2tlZCBpbiByZXNwb25zZSB0b1xuLy8gKm5hdGl2ZSogZXZlbnRzIHRoYXQgaXQgZmlyZXMgZGlyZWN0bHksIGVuc3VyaW5nIHRoYXQgc3RhdGUgY2hhbmdlcyBoYXZlXG4vLyBhbHJlYWR5IG9jY3VycmVkIGJlZm9yZSBvdGhlciBsaXN0ZW5lcnMgYXJlIGludm9rZWQuXG5mdW5jdGlvbiBsZXZlcmFnZU5hdGl2ZSggZWwsIHR5cGUsIGV4cGVjdFN5bmMgKSB7XG5cblx0Ly8gTWlzc2luZyBleHBlY3RTeW5jIGluZGljYXRlcyBhIHRyaWdnZXIgY2FsbCwgd2hpY2ggbXVzdCBmb3JjZSBzZXR1cCB0aHJvdWdoIGpRdWVyeS5ldmVudC5hZGRcblx0aWYgKCAhZXhwZWN0U3luYyApIHtcblx0XHRpZiAoIGRhdGFQcml2LmdldCggZWwsIHR5cGUgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHJldHVyblRydWUgKTtcblx0XHR9XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gUmVnaXN0ZXIgdGhlIGNvbnRyb2xsZXIgYXMgYSBzcGVjaWFsIHVuaXZlcnNhbCBoYW5kbGVyIGZvciBhbGwgZXZlbnQgbmFtZXNwYWNlc1xuXHRkYXRhUHJpdi5zZXQoIGVsLCB0eXBlLCBmYWxzZSApO1xuXHRqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwge1xuXHRcdG5hbWVzcGFjZTogZmFsc2UsXG5cdFx0aGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIG5vdEFzeW5jLCByZXN1bHQsXG5cdFx0XHRcdHNhdmVkID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdGlmICggKCBldmVudC5pc1RyaWdnZXIgJiAxICkgJiYgdGhpc1sgdHlwZSBdICkge1xuXG5cdFx0XHRcdC8vIEludGVycnVwdCBwcm9jZXNzaW5nIG9mIHRoZSBvdXRlciBzeW50aGV0aWMgLnRyaWdnZXIoKWVkIGV2ZW50XG5cdFx0XHRcdC8vIFNhdmVkIGRhdGEgc2hvdWxkIGJlIGZhbHNlIGluIHN1Y2ggY2FzZXMsIGJ1dCBtaWdodCBiZSBhIGxlZnRvdmVyIGNhcHR1cmUgb2JqZWN0XG5cdFx0XHRcdC8vIGZyb20gYW4gYXN5bmMgbmF0aXZlIGhhbmRsZXIgKGdoLTQzNTApXG5cdFx0XHRcdGlmICggIXNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGFyZ3VtZW50cyBmb3IgdXNlIHdoZW4gaGFuZGxpbmcgdGhlIGlubmVyIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRcdC8vIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGF0IGxlYXN0IG9uZSBhcmd1bWVudCAoYW4gZXZlbnQgb2JqZWN0KSwgc28gdGhpcyBhcnJheVxuXHRcdFx0XHRcdC8vIHdpbGwgbm90IGJlIGNvbmZ1c2VkIHdpdGggYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdC5cblx0XHRcdFx0XHRzYXZlZCA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgc2F2ZWQgKTtcblxuXHRcdFx0XHRcdC8vIFRyaWdnZXIgdGhlIG5hdGl2ZSBldmVudCBhbmQgY2FwdHVyZSBpdHMgcmVzdWx0XG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0Ly8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXNcblx0XHRcdFx0XHRub3RBc3luYyA9IGV4cGVjdFN5bmMoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHR0aGlzWyB0eXBlIF0oKTtcblx0XHRcdFx0XHRyZXN1bHQgPSBkYXRhUHJpdi5nZXQoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgfHwgbm90QXN5bmMgKSB7XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIGZhbHNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHJlc3VsdCA9IHt9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNhdmVkICE9PSByZXN1bHQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIENhbmNlbCB0aGUgb3V0ZXIgc3ludGhldGljIGV2ZW50XG5cdFx0XHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA4Nitcblx0XHRcdFx0XHRcdC8vIEluIENocm9tZSwgaWYgYW4gZWxlbWVudCBoYXZpbmcgYSBmb2N1c291dCBoYW5kbGVyIGlzIGJsdXJyZWQgYnlcblx0XHRcdFx0XHRcdC8vIGNsaWNraW5nIG91dHNpZGUgb2YgaXQsIGl0IGludm9rZXMgdGhlIGhhbmRsZXIgc3luY2hyb25vdXNseS4gSWZcblx0XHRcdFx0XHRcdC8vIHRoYXQgaGFuZGxlciBjYWxscyBgLnJlbW92ZSgpYCBvbiB0aGUgZWxlbWVudCwgdGhlIGRhdGEgaXMgY2xlYXJlZCxcblx0XHRcdFx0XHRcdC8vIGxlYXZpbmcgYHJlc3VsdGAgdW5kZWZpbmVkLiBXZSBuZWVkIHRvIGd1YXJkIGFnYWluc3QgdGhpcy5cblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHQgJiYgcmVzdWx0LnZhbHVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGlzIGlzIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCBmb3IgYW4gZXZlbnQgd2l0aCBhIGJ1YmJsaW5nIHN1cnJvZ2F0ZVxuXHRcdFx0XHQvLyAoZm9jdXMgb3IgYmx1ciksIGFzc3VtZSB0aGF0IHRoZSBzdXJyb2dhdGUgYWxyZWFkeSBwcm9wYWdhdGVkIGZyb20gdHJpZ2dlcmluZyB0aGVcblx0XHRcdFx0Ly8gbmF0aXZlIGV2ZW50IGFuZCBwcmV2ZW50IHRoYXQgZnJvbSBoYXBwZW5pbmcgYWdhaW4gaGVyZS5cblx0XHRcdFx0Ly8gVGhpcyB0ZWNobmljYWxseSBnZXRzIHRoZSBvcmRlcmluZyB3cm9uZyB3LnIudC4gdG8gYC50cmlnZ2VyKClgIChpbiB3aGljaCB0aGVcblx0XHRcdFx0Ly8gYnViYmxpbmcgc3Vycm9nYXRlIHByb3BhZ2F0ZXMgKmFmdGVyKiB0aGUgbm9uLWJ1YmJsaW5nIGJhc2UpLCBidXQgdGhhdCBzZWVtc1xuXHRcdFx0XHQvLyBsZXNzIGJhZCB0aGFuIGR1cGxpY2F0aW9uLlxuXHRcdFx0XHR9IGVsc2UgaWYgKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge30gKS5kZWxlZ2F0ZVR5cGUgKSB7XG5cdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIG5hdGl2ZSBldmVudCB0cmlnZ2VyZWQgYWJvdmUsIGV2ZXJ5dGhpbmcgaXMgbm93IGluIG9yZGVyXG5cdFx0XHQvLyBGaXJlIGFuIGlubmVyIHN5bnRoZXRpYyBldmVudCB3aXRoIHRoZSBvcmlnaW5hbCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHNhdmVkLmxlbmd0aCApIHtcblxuXHRcdFx0XHQvLyAuLi5hbmQgY2FwdHVyZSB0aGUgcmVzdWx0XG5cdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwge1xuXHRcdFx0XHRcdHZhbHVlOiBqUXVlcnkuZXZlbnQudHJpZ2dlcihcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTErXG5cdFx0XHRcdFx0XHQvLyBFeHRlbmQgd2l0aCB0aGUgcHJvdG90eXBlIHRvIHJlc2V0IHRoZSBhYm92ZSBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmV4dGVuZCggc2F2ZWRbIDAgXSwgalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSApLFxuXHRcdFx0XHRcdFx0c2F2ZWQuc2xpY2UoIDEgKSxcblx0XHRcdFx0XHRcdHRoaXNcblx0XHRcdFx0XHQpXG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBBYm9ydCBoYW5kbGluZyBvZiB0aGUgbmF0aXZlIGV2ZW50XG5cdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSApO1xufVxuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0Mylcblx0XHR0aGlzLnRhcmdldCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgP1xuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcblx0XHRcdHNyYy50YXJnZXQ7XG5cblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcblx0XHR0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRhcmdldDtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpO1xuXG5cdC8vIE1hcmsgaXQgYXMgZml4ZWRcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XG59O1xuXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcbmpRdWVyeS5lYWNoKCB7XG5cdGFsdEtleTogdHJ1ZSxcblx0YnViYmxlczogdHJ1ZSxcblx0Y2FuY2VsYWJsZTogdHJ1ZSxcblx0Y2hhbmdlZFRvdWNoZXM6IHRydWUsXG5cdGN0cmxLZXk6IHRydWUsXG5cdGRldGFpbDogdHJ1ZSxcblx0ZXZlbnRQaGFzZTogdHJ1ZSxcblx0bWV0YUtleTogdHJ1ZSxcblx0cGFnZVg6IHRydWUsXG5cdHBhZ2VZOiB0cnVlLFxuXHRzaGlmdEtleTogdHJ1ZSxcblx0dmlldzogdHJ1ZSxcblx0XCJjaGFyXCI6IHRydWUsXG5cdGNvZGU6IHRydWUsXG5cdGNoYXJDb2RlOiB0cnVlLFxuXHRrZXk6IHRydWUsXG5cdGtleUNvZGU6IHRydWUsXG5cdGJ1dHRvbjogdHJ1ZSxcblx0YnV0dG9uczogdHJ1ZSxcblx0Y2xpZW50WDogdHJ1ZSxcblx0Y2xpZW50WTogdHJ1ZSxcblx0b2Zmc2V0WDogdHJ1ZSxcblx0b2Zmc2V0WTogdHJ1ZSxcblx0cG9pbnRlcklkOiB0cnVlLFxuXHRwb2ludGVyVHlwZTogdHJ1ZSxcblx0c2NyZWVuWDogdHJ1ZSxcblx0c2NyZWVuWTogdHJ1ZSxcblx0dGFyZ2V0VG91Y2hlczogdHJ1ZSxcblx0dG9FbGVtZW50OiB0cnVlLFxuXHR0b3VjaGVzOiB0cnVlLFxuXHR3aGljaDogdHJ1ZVxufSwgalF1ZXJ5LmV2ZW50LmFkZFByb3AgKTtcblxualF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIHR5cGUsIGRlbGVnYXRlVHlwZSApIHtcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSA9IHtcblxuXHRcdC8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IGlmIHBvc3NpYmxlIHNvIGJsdXIvZm9jdXMgc2VxdWVuY2UgaXMgY29ycmVjdFxuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXJcblx0XHRcdC8vIGRhdGFQcml2LnNldCggdGhpcywgXCJmb2N1c1wiLCAuLi4gKVxuXHRcdFx0Ly8gZGF0YVByaXYuc2V0KCB0aGlzLCBcImJsdXJcIiwgLi4uIClcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlLCBleHBlY3RTeW5jICk7XG5cblx0XHRcdC8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRm9yY2Ugc2V0dXAgYmVmb3JlIHRyaWdnZXJcblx0XHRcdGxldmVyYWdlTmF0aXZlKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdC8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb25cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBTdXBwcmVzcyBuYXRpdmUgZm9jdXMgb3IgYmx1ciBhcyBpdCdzIGFscmVhZHkgYmVpbmcgZmlyZWRcblx0XHQvLyBpbiBsZXZlcmFnZU5hdGl2ZS5cblx0XHRfZGVmYXVsdDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0ZGVsZWdhdGVUeXBlOiBkZWxlZ2F0ZVR5cGVcblx0fTtcbn0gKTtcblxuLy8gQ3JlYXRlIG1vdXNlZW50ZXIvbGVhdmUgZXZlbnRzIHVzaW5nIG1vdXNlb3Zlci9vdXQgYW5kIGV2ZW50LXRpbWUgY2hlY2tzXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcbi8vXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ3MDI1OFxuLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVkIGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS5cbmpRdWVyeS5lYWNoKCB7XG5cdG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG5cdG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIixcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXG5cdHBvaW50ZXJsZWF2ZTogXCJwb2ludGVyb3V0XCJcbn0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XG5cdFx0ZGVsZWdhdGVUeXBlOiBmaXgsXG5cdFx0YmluZFR5cGU6IGZpeCxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIHJldCxcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcblx0XHRcdFx0cmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsXG5cdFx0XHRcdGhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajtcblxuXHRcdFx0Ly8gRm9yIG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7XG5cdFx0XHRcdHJldCA9IGhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApO1xuXHR9LFxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xuXHRcdHZhciBoYW5kbGVPYmosIHR5cGU7XG5cdFx0aWYgKCB0eXBlcyAmJiB0eXBlcy5wcmV2ZW50RGVmYXVsdCAmJiB0eXBlcy5oYW5kbGVPYmogKSB7XG5cblx0XHRcdC8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnRcblx0XHRcdGhhbmRsZU9iaiA9IHR5cGVzLmhhbmRsZU9iajtcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXG5cdFx0XHRcdGhhbmRsZU9iai5uYW1lc3BhY2UgP1xuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxuXHRcdFx0XHRoYW5kbGVPYmouc2VsZWN0b3IsXG5cdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKVxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdFx0dGhpcy5vZmYoIHR5cGUsIHNlbGVjdG9yLCB0eXBlc1sgdHlwZSBdICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG52YXJcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEsIEVkZ2UgMTIgLSAxMyBvbmx5XG5cdC8vIEluIElFL0VkZ2UgdXNpbmcgcmVnZXggZ3JvdXBzIGhlcmUgY2F1c2VzIHNldmVyZSBzbG93ZG93bnMuXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxuXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZztcblxuLy8gUHJlZmVyIGEgdGJvZHkgb3ZlciBpdHMgcGFyZW50IHRhYmxlIGZvciBjb250YWluaW5nIG5ldyByb3dzXG5mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoIGVsZW0sIGNvbnRlbnQgKSB7XG5cdGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGFibGVcIiApICYmXG5cdFx0bm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgKSB7XG5cblx0XHRyZXR1cm4galF1ZXJ5KCBlbGVtICkuY2hpbGRyZW4oIFwidGJvZHlcIiApWyAwIF0gfHwgZWxlbTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG4vLyBSZXBsYWNlL3Jlc3RvcmUgdGhlIHR5cGUgYXR0cmlidXRlIG9mIHNjcmlwdCBlbGVtZW50cyBmb3Igc2FmZSBET00gbWFuaXB1bGF0aW9uXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xuXHRlbGVtLnR5cGUgPSAoIGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICE9PSBudWxsICkgKyBcIi9cIiArIGVsZW0udHlwZTtcblx0cmV0dXJuIGVsZW07XG59XG5mdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkge1xuXHRpZiAoICggZWxlbS50eXBlIHx8IFwiXCIgKS5zbGljZSggMCwgNSApID09PSBcInRydWUvXCIgKSB7XG5cdFx0ZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7XG5cdH0gZWxzZSB7XG5cdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIFwidHlwZVwiICk7XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQoIHNyYywgZGVzdCApIHtcblx0dmFyIGksIGwsIHR5cGUsIHBkYXRhT2xkLCB1ZGF0YU9sZCwgdWRhdGFDdXIsIGV2ZW50cztcblxuXHRpZiAoIGRlc3Qubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gMS4gQ29weSBwcml2YXRlIGRhdGE6IGV2ZW50cywgaGFuZGxlcnMsIGV0Yy5cblx0aWYgKCBkYXRhUHJpdi5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHRwZGF0YU9sZCA9IGRhdGFQcml2LmdldCggc3JjICk7XG5cdFx0ZXZlbnRzID0gcGRhdGFPbGQuZXZlbnRzO1xuXG5cdFx0aWYgKCBldmVudHMgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGRlc3QsIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cblx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRmb3IgKCBpID0gMCwgbCA9IGV2ZW50c1sgdHlwZSBdLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCBkZXN0LCB0eXBlLCBldmVudHNbIHR5cGUgXVsgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyAyLiBDb3B5IHVzZXIgZGF0YVxuXHRpZiAoIGRhdGFVc2VyLmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHVkYXRhT2xkID0gZGF0YVVzZXIuYWNjZXNzKCBzcmMgKTtcblx0XHR1ZGF0YUN1ciA9IGpRdWVyeS5leHRlbmQoIHt9LCB1ZGF0YU9sZCApO1xuXG5cdFx0ZGF0YVVzZXIuc2V0KCBkZXN0LCB1ZGF0YUN1ciApO1xuXHR9XG59XG5cbi8vIEZpeCBJRSBidWdzLCBzZWUgc3VwcG9ydCB0ZXN0c1xuZnVuY3Rpb24gZml4SW5wdXQoIHNyYywgZGVzdCApIHtcblx0dmFyIG5vZGVOYW1lID0gZGVzdC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdC8vIEZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3ggb3IgcmFkaW8gYnV0dG9uLlxuXHRpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgcmNoZWNrYWJsZVR5cGUudGVzdCggc3JjLnR5cGUgKSApIHtcblx0XHRkZXN0LmNoZWNrZWQgPSBzcmMuY2hlY2tlZDtcblxuXHQvLyBGYWlscyB0byByZXR1cm4gdGhlIHNlbGVjdGVkIG9wdGlvbiB0byB0aGUgZGVmYXVsdCBzZWxlY3RlZCBzdGF0ZSB3aGVuIGNsb25pbmcgb3B0aW9uc1xuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5vZGVOYW1lID09PSBcInRleHRhcmVhXCIgKSB7XG5cdFx0ZGVzdC5kZWZhdWx0VmFsdWUgPSBzcmMuZGVmYXVsdFZhbHVlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGRvbU1hbmlwKCBjb2xsZWN0aW9uLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApIHtcblxuXHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdGFyZ3MgPSBmbGF0KCBhcmdzICk7XG5cblx0dmFyIGZyYWdtZW50LCBmaXJzdCwgc2NyaXB0cywgaGFzU2NyaXB0cywgbm9kZSwgZG9jLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBjb2xsZWN0aW9uLmxlbmd0aCxcblx0XHRpTm9DbG9uZSA9IGwgLSAxLFxuXHRcdHZhbHVlID0gYXJnc1sgMCBdLFxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0Ly8gV2UgY2FuJ3QgY2xvbmVOb2RlIGZyYWdtZW50cyB0aGF0IGNvbnRhaW4gY2hlY2tlZCwgaW4gV2ViS2l0XG5cdGlmICggdmFsdWVJc0Z1bmN0aW9uIHx8XG5cdFx0XHQoIGwgPiAxICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc3VwcG9ydC5jaGVja0Nsb25lICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSApIHtcblx0XHRyZXR1cm4gY29sbGVjdGlvbi5lYWNoKCBmdW5jdGlvbiggaW5kZXggKSB7XG5cdFx0XHR2YXIgc2VsZiA9IGNvbGxlY3Rpb24uZXEoIGluZGV4ICk7XG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0YXJnc1sgMCBdID0gdmFsdWUuY2FsbCggdGhpcywgaW5kZXgsIHNlbGYuaHRtbCgpICk7XG5cdFx0XHR9XG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoIGwgKSB7XG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHR9XG5cblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcblx0XHRpZiAoIGZpcnN0IHx8IGlnbm9yZWQgKSB7XG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxuXHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xuXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xuXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcblxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBzY3JpcHRzWyBpIF07XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHQhZGF0YVByaXYuYWNjZXNzKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkge1xuXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICYmICggbm9kZS50eXBlIHx8IFwiXCIgKS50b0xvd2VyQ2FzZSgpICAhPT0gXCJtb2R1bGVcIiApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudFxuXHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5fZXZhbFVybCAmJiAhbm9kZS5ub01vZHVsZSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuX2V2YWxVcmwoIG5vZGUuc3JjLCB7XG5cdFx0XHRcdFx0XHRcdFx0XHRub25jZTogbm9kZS5ub25jZSB8fCBub2RlLmdldEF0dHJpYnV0ZSggXCJub25jZVwiIClcblx0XHRcdFx0XHRcdFx0XHR9LCBkb2MgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0RE9NRXZhbCggbm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKSwgbm9kZSwgZG9jICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xuXHR2YXIgbm9kZSxcblx0XHRub2RlcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyAoIG5vZGUgPSBub2Rlc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdGlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApO1xuXHRcdH1cblxuXHRcdGlmICggbm9kZS5wYXJlbnROb2RlICkge1xuXHRcdFx0aWYgKCBrZWVwRGF0YSAmJiBpc0F0dGFjaGVkKCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbDtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gRml4IElFIGNsb25pbmcgaXNzdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCAmJiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJlxuXHRcdFx0XHQhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cHM6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxuXHRcdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApO1xuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcblxuXHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZpeElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcblx0XHRpZiAoIGRhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xuXHRcdFx0XHRkZXN0RWxlbWVudHMgPSBkZXN0RWxlbWVudHMgfHwgZ2V0QWxsKCBjbG9uZSApO1xuXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xuXHRcdGlmICggZGVzdEVsZW1lbnRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXRcblx0XHRyZXR1cm4gY2xvbmU7XG5cdH0sXG5cblx0Y2xlYW5EYXRhOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cdFx0dmFyIGRhdGEsIGVsZW0sIHR5cGUsXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9PSB1bmRlZmluZWQ7IGkrKyApIHtcblx0XHRcdGlmICggYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0XHRpZiAoICggZGF0YSA9IGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSApICkge1xuXHRcdFx0XHRcdGlmICggZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gVGhpcyBpcyBhIHNob3J0Y3V0IHRvIGF2b2lkIGpRdWVyeS5ldmVudC5yZW1vdmUncyBvdmVyaGVhZFxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdICkge1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yICk7XG5cdH0sXG5cblx0dGV4dDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnRleHQoIHRoaXMgKSA6XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdGFwcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHByZXBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGJlZm9yZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YWZ0ZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzLm5leHRTaWJsaW5nICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSB0aGlzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gUHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cblx0XHRcdFx0Ly8gUmVtb3ZlIGFueSByZW1haW5pbmcgbm9kZXNcblx0XHRcdFx0ZWxlbS50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzO1xuXHRcdGRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50cztcblxuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNsb25lKCB0aGlzLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApO1xuXHRcdH0gKTtcblx0fSxcblxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF0gfHwge30sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pbm5lckhUTUw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNlZSBpZiB3ZSBjYW4gdGFrZSBhIHNob3J0Y3V0IGFuZCBqdXN0IHVzZSBpbm5lckhUTUxcblx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJlxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XG5cblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlciggdmFsdWUgKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRcdGVsZW0gPSB0aGlzWyBpIF0gfHwge307XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtID0gMDtcblxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2Rcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5hcHBlbmQoIHZhbHVlICk7XG5cdFx0XHR9XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGlnbm9yZWQgPSBbXTtcblxuXHRcdC8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1pZ25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudFxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG5cblx0XHRcdGlmICggalF1ZXJ5LmluQXJyYXkoIHRoaXMsIGlnbm9yZWQgKSA8IDAgKSB7XG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7XG5cdFx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRcdHBhcmVudC5yZXBsYWNlQ2hpbGQoIGVsZW0sIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvblxuXHRcdH0sIGlnbm9yZWQgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCgge1xuXHRhcHBlbmRUbzogXCJhcHBlbmRcIixcblx0cHJlcGVuZFRvOiBcInByZXBlbmRcIixcblx0aW5zZXJ0QmVmb3JlOiBcImJlZm9yZVwiLFxuXHRpbnNlcnRBZnRlcjogXCJhZnRlclwiLFxuXHRyZXBsYWNlQWxsOiBcInJlcGxhY2VXaXRoXCJcbn0sIGZ1bmN0aW9uKCBuYW1lLCBvcmlnaW5hbCApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGVsZW1zLFxuXHRcdFx0cmV0ID0gW10sXG5cdFx0XHRpbnNlcnQgPSBqUXVlcnkoIHNlbGVjdG9yICksXG5cdFx0XHRsYXN0ID0gaW5zZXJ0Lmxlbmd0aCAtIDEsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7XG5cdFx0XHRlbGVtcyA9IGkgPT09IGxhc3QgPyB0aGlzIDogdGhpcy5jbG9uZSggdHJ1ZSApO1xuXHRcdFx0alF1ZXJ5KCBpbnNlcnRbIGkgXSApWyBvcmlnaW5hbCBdKCBlbGVtcyApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdC8vIC5nZXQoKSBiZWNhdXNlIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdHB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCApO1xuXHR9O1xufSApO1xudmFyIHJudW1ub25weCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoPyFweClbYS16JV0rJFwiLCBcImlcIiApO1xuXG52YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHksIEZpcmVmb3ggPD0zMCAoIzE1MDk4LCAjMTQxNTApXG5cdFx0Ly8gSUUgdGhyb3dzIG9uIGVsZW1lbnRzIGNyZWF0ZWQgaW4gcG9wdXBzXG5cdFx0Ly8gRkYgbWVhbndoaWxlIHRocm93cyBvbiBmcmFtZSBlbGVtZW50cyB0aHJvdWdoIFwiZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZVwiXG5cdFx0dmFyIHZpZXcgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cblx0XHRpZiAoICF2aWV3IHx8ICF2aWV3Lm9wZW5lciApIHtcblx0XHRcdHZpZXcgPSB3aW5kb3c7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSggZWxlbSApO1xuXHR9O1xuXG52YXIgc3dhcCA9IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBjYWxsYmFjayApIHtcblx0dmFyIHJldCwgbmFtZSxcblx0XHRvbGQgPSB7fTtcblxuXHQvLyBSZW1lbWJlciB0aGUgb2xkIHZhbHVlcywgYW5kIGluc2VydCB0aGUgbmV3IG9uZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdG9sZFsgbmFtZSBdID0gZWxlbS5zdHlsZVsgbmFtZSBdO1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9wdGlvbnNbIG5hbWUgXTtcblx0fVxuXG5cdHJldCA9IGNhbGxiYWNrLmNhbGwoIGVsZW0gKTtcblxuXHQvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9sZFsgbmFtZSBdO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn07XG5cblxudmFyIHJib3hTdHlsZSA9IG5ldyBSZWdFeHAoIGNzc0V4cGFuZC5qb2luKCBcInxcIiApLCBcImlcIiApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblxuXHQvLyBFeGVjdXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWlyZSBvbmx5IG9uZSBsYXlvdXRcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cblx0ZnVuY3Rpb24gY29tcHV0ZVN0eWxlVGVzdHMoKSB7XG5cblx0XHQvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlXG5cdFx0aWYgKCAhZGl2ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7XCIgK1xuXHRcdFx0XCJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjBcIjtcblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94O292ZXJmbG93OnNjcm9sbDtcIiArXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xuXHRcdFx0XCJ3aWR0aDo2MCU7dG9wOjElXCI7XG5cdFx0ZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKS5hcHBlbmRDaGlsZCggZGl2ICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSA0NFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUubWFyZ2luTGVmdCApID09PSAxMjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIFNhZmFyaSA8PTkuMSAtIDEwLjEsIGlPUyA8PTcuMCAtIDkuM1xuXHRcdC8vIFNvbWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0aGV5IHNob3VsZG4ndFxuXHRcdGRpdi5zdHlsZS5yaWdodCA9IFwiNjAlXCI7XG5cdFx0cGl4ZWxCb3hTdHlsZXNWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLnJpZ2h0ICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0XHQvLyBEZXRlY3QgbWlzcmVwb3J0aW5nIG9mIGNvbnRlbnQgZGltZW5zaW9ucyBmb3IgYm94LXNpemluZzpib3JkZXItYm94IGVsZW1lbnRzXG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLndpZHRoICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0Ly8gRGV0ZWN0IG92ZXJmbG93OnNjcm9sbCBzY3Jld2luZXNzIChnaC0zNjk5KVxuXHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTY0XG5cdFx0Ly8gRG9uJ3QgZ2V0IHRyaWNrZWQgd2hlbiB6b29tIGFmZmVjdHMgb2Zmc2V0V2lkdGggKGdoLTQwMjkpXG5cdFx0ZGl2LnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuXHRcdHNjcm9sbGJveFNpemVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdi5vZmZzZXRXaWR0aCAvIDMgKSA9PT0gMTI7XG5cblx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXG5cdFx0Ly8gTnVsbGlmeSB0aGUgZGl2IHNvIGl0IHdvdWxkbid0IGJlIHN0b3JlZCBpbiB0aGUgbWVtb3J5IGFuZFxuXHRcdC8vIGl0IHdpbGwgYWxzbyBiZSBhIHNpZ24gdGhhdCBjaGVja3MgYWxyZWFkeSBwZXJmb3JtZWRcblx0XHRkaXYgPSBudWxsO1xuXHR9XG5cblx0ZnVuY3Rpb24gcm91bmRQaXhlbE1lYXN1cmVzKCBtZWFzdXJlICkge1xuXHRcdHJldHVybiBNYXRoLnJvdW5kKCBwYXJzZUZsb2F0KCBtZWFzdXJlICkgKTtcblx0fVxuXG5cdHZhciBwaXhlbFBvc2l0aW9uVmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCwgc2Nyb2xsYm94U2l6ZVZhbCwgcGl4ZWxCb3hTdHlsZXNWYWwsXG5cdFx0cmVsaWFibGVUckRpbWVuc2lvbnNWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCxcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdC8vIEZpbmlzaCBlYXJseSBpbiBsaW1pdGVkIChub24tYnJvd3NlcikgZW52aXJvbm1lbnRzXG5cdGlmICggIWRpdi5zdHlsZSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFN0eWxlIG9mIGNsb25lZCBlbGVtZW50IGFmZmVjdHMgc291cmNlIGVsZW1lbnQgY2xvbmVkICgjODkwOClcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xuXHRzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSA9IGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9PT0gXCJjb250ZW50LWJveFwiO1xuXG5cdGpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHtcblx0XHRib3hTaXppbmdSZWxpYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIGJveFNpemluZ1JlbGlhYmxlVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxCb3hTdHlsZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbEJveFN0eWxlc1ZhbDtcblx0XHR9LFxuXHRcdHBpeGVsUG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbFBvc2l0aW9uVmFsO1xuXHRcdH0sXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVNYXJnaW5MZWZ0VmFsO1xuXHRcdH0sXG5cdFx0c2Nyb2xsYm94U2l6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHNjcm9sbGJveFNpemVWYWw7XG5cdFx0fSxcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHQvLyBJRS9FZGdlIG1pc3JlcG9ydCBgZ2V0Q29tcHV0ZWRTdHlsZWAgb2YgdGFibGUgcm93cyB3aXRoIHdpZHRoL2hlaWdodFxuXHRcdC8vIHNldCBpbiBDU1Mgd2hpbGUgYG9mZnNldCpgIHByb3BlcnRpZXMgcmVwb3J0IGNvcnJlY3QgdmFsdWVzLlxuXHRcdC8vIEJlaGF2aW9yIGluIElFIDkgaXMgbW9yZSBzdWJ0bGUgdGhhbiBpbiBuZXdlciB2ZXJzaW9ucyAmIGl0IHBhc3Nlc1xuXHRcdC8vIHNvbWUgdmVyc2lvbnMgb2YgdGhpcyB0ZXN0OyBtYWtlIHN1cmUgbm90IHRvIG1ha2UgaXQgcGFzcyB0aGVyZSFcblx0XHQvL1xuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNzArXG5cdFx0Ly8gT25seSBGaXJlZm94IGluY2x1ZGVzIGJvcmRlciB3aWR0aHNcblx0XHQvLyBpbiBjb21wdXRlZCBkaW1lbnNpb25zLiAoZ2gtNDUyOSlcblx0XHRyZWxpYWJsZVRyRGltZW5zaW9uczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdGFibGUsIHRyLCB0ckNoaWxkLCB0clN0eWxlO1xuXHRcdFx0aWYgKCByZWxpYWJsZVRyRGltZW5zaW9uc1ZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidGFibGVcIiApO1xuXHRcdFx0XHR0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidHJcIiApO1xuXHRcdFx0XHR0ckNoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdFx0XHRcdHRhYmxlLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7Ym9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlXCI7XG5cdFx0XHRcdHRyLnN0eWxlLmNzc1RleHQgPSBcImJvcmRlcjoxcHggc29saWRcIjtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgODYrXG5cdFx0XHRcdC8vIEhlaWdodCBzZXQgdGhyb3VnaCBjc3NUZXh0IGRvZXMgbm90IGdldCBhcHBsaWVkLlxuXHRcdFx0XHQvLyBDb21wdXRlZCBoZWlnaHQgdGhlbiBjb21lcyBiYWNrIGFzIDAuXG5cdFx0XHRcdHRyLnN0eWxlLmhlaWdodCA9IFwiMXB4XCI7XG5cdFx0XHRcdHRyQ2hpbGQuc3R5bGUuaGVpZ2h0ID0gXCI5cHhcIjtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDggQ2hyb21lIDg2K1xuXHRcdFx0XHQvLyBJbiBvdXIgYm9keUJhY2tncm91bmQuaHRtbCBpZnJhbWUsXG5cdFx0XHRcdC8vIGRpc3BsYXkgZm9yIGFsbCBkaXYgZWxlbWVudHMgaXMgc2V0IHRvIFwiaW5saW5lXCIsXG5cdFx0XHRcdC8vIHdoaWNoIGNhdXNlcyBhIHByb2JsZW0gb25seSBpbiBBbmRyb2lkIDggQ2hyb21lIDg2LlxuXHRcdFx0XHQvLyBFbnN1cmluZyB0aGUgZGl2IGlzIGRpc3BsYXk6IGJsb2NrXG5cdFx0XHRcdC8vIGdldHMgYXJvdW5kIHRoaXMgaXNzdWUuXG5cdFx0XHRcdHRyQ2hpbGQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcblxuXHRcdFx0XHRkb2N1bWVudEVsZW1lbnRcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRhYmxlIClcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRyIClcblx0XHRcdFx0XHQuYXBwZW5kQ2hpbGQoIHRyQ2hpbGQgKTtcblxuXHRcdFx0XHR0clN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIHRyICk7XG5cdFx0XHRcdHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsID0gKCBwYXJzZUludCggdHJTdHlsZS5oZWlnaHQsIDEwICkgK1xuXHRcdFx0XHRcdHBhcnNlSW50KCB0clN0eWxlLmJvcmRlclRvcFdpZHRoLCAxMCApICtcblx0XHRcdFx0XHRwYXJzZUludCggdHJTdHlsZS5ib3JkZXJCb3R0b21XaWR0aCwgMTAgKSApID09PSB0ci5vZmZzZXRIZWlnaHQ7XG5cblx0XHRcdFx0ZG9jdW1lbnRFbGVtZW50LnJlbW92ZUNoaWxkKCB0YWJsZSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsO1xuXHRcdH1cblx0fSApO1xufSApKCk7XG5cblxuZnVuY3Rpb24gY3VyQ1NTKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHtcblx0dmFyIHdpZHRoLCBtaW5XaWR0aCwgbWF4V2lkdGgsIHJldCxcblxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNTErXG5cdFx0Ly8gUmV0cmlldmluZyBzdHlsZSBiZWZvcmUgY29tcHV0ZWQgc29tZWhvd1xuXHRcdC8vIGZpeGVzIGFuIGlzc3VlIHdpdGggZ2V0dGluZyB3cm9uZyB2YWx1ZXNcblx0XHQvLyBvbiBkZXRhY2hlZCBlbGVtZW50c1xuXHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xuXG5cdC8vIGdldFByb3BlcnR5VmFsdWUgaXMgbmVlZGVkIGZvcjpcblx0Ly8gICAuY3NzKCdmaWx0ZXInKSAoSUUgOSBvbmx5LCAjMTI1MzcpXG5cdC8vICAgLmNzcygnLS1jdXN0b21Qcm9wZXJ0eSkgKCMzMTQ0KVxuXHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdHJldCA9IGNvbXB1dGVkLmdldFByb3BlcnR5VmFsdWUoIG5hbWUgKSB8fCBjb21wdXRlZFsgbmFtZSBdO1xuXG5cdFx0aWYgKCByZXQgPT09IFwiXCIgJiYgIWlzQXR0YWNoZWQoIGVsZW0gKSApIHtcblx0XHRcdHJldCA9IGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIEEgdHJpYnV0ZSB0byB0aGUgXCJhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXCJcblx0XHQvLyBBbmRyb2lkIEJyb3dzZXIgcmV0dXJucyBwZXJjZW50YWdlIGZvciBzb21lIHZhbHVlcyxcblx0XHQvLyBidXQgd2lkdGggc2VlbXMgdG8gYmUgcmVsaWFibHkgcGl4ZWxzLlxuXHRcdC8vIFRoaXMgaXMgYWdhaW5zdCB0aGUgQ1NTT00gZHJhZnQgc3BlYzpcblx0XHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI3Jlc29sdmVkLXZhbHVlc1xuXHRcdGlmICggIXN1cHBvcnQucGl4ZWxCb3hTdHlsZXMoKSAmJiBybnVtbm9ucHgudGVzdCggcmV0ICkgJiYgcmJveFN0eWxlLnRlc3QoIG5hbWUgKSApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIG9yaWdpbmFsIHZhbHVlc1xuXHRcdFx0d2lkdGggPSBzdHlsZS53aWR0aDtcblx0XHRcdG1pbldpZHRoID0gc3R5bGUubWluV2lkdGg7XG5cdFx0XHRtYXhXaWR0aCA9IHN0eWxlLm1heFdpZHRoO1xuXG5cdFx0XHQvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0XG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IHN0eWxlLm1heFdpZHRoID0gc3R5bGUud2lkdGggPSByZXQ7XG5cdFx0XHRyZXQgPSBjb21wdXRlZC53aWR0aDtcblxuXHRcdFx0Ly8gUmV2ZXJ0IHRoZSBjaGFuZ2VkIHZhbHVlc1xuXHRcdFx0c3R5bGUud2lkdGggPSB3aWR0aDtcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gbWluV2lkdGg7XG5cdFx0XHRzdHlsZS5tYXhXaWR0aCA9IG1heFdpZHRoO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXQgIT09IHVuZGVmaW5lZCA/XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdFx0Ly8gSUUgcmV0dXJucyB6SW5kZXggdmFsdWUgYXMgYW4gaW50ZWdlci5cblx0XHRyZXQgKyBcIlwiIDpcblx0XHRyZXQ7XG59XG5cblxuZnVuY3Rpb24gYWRkR2V0SG9va0lmKCBjb25kaXRpb25GbiwgaG9va0ZuICkge1xuXG5cdC8vIERlZmluZSB0aGUgaG9vaywgd2UnbGwgY2hlY2sgb24gdGhlIGZpcnN0IHJ1biBpZiBpdCdzIHJlYWxseSBuZWVkZWQuXG5cdHJldHVybiB7XG5cdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggY29uZGl0aW9uRm4oKSApIHtcblxuXHRcdFx0XHQvLyBIb29rIG5vdCBuZWVkZWQgKG9yIGl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBpdCBkdWVcblx0XHRcdFx0Ly8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LlxuXHRcdFx0XHRkZWxldGUgdGhpcy5nZXQ7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSG9vayBuZWVkZWQ7IHJlZGVmaW5lIGl0IHNvIHRoYXQgdGhlIHN1cHBvcnQgdGVzdCBpcyBub3QgZXhlY3V0ZWQgYWdhaW4uXG5cdFx0XHRyZXR1cm4gKCB0aGlzLmdldCA9IGhvb2tGbiApLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9XG5cdH07XG59XG5cblxudmFyIGNzc1ByZWZpeGVzID0gWyBcIldlYmtpdFwiLCBcIk1velwiLCBcIm1zXCIgXSxcblx0ZW1wdHlTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKS5zdHlsZSxcblx0dmVuZG9yUHJvcHMgPSB7fTtcblxuLy8gUmV0dXJuIGEgdmVuZG9yLXByZWZpeGVkIHByb3BlcnR5IG9yIHVuZGVmaW5lZFxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XG5cblx0Ly8gQ2hlY2sgZm9yIHZlbmRvciBwcmVmaXhlZCBuYW1lc1xuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbi8vIFJldHVybiBhIHBvdGVudGlhbGx5LW1hcHBlZCBqUXVlcnkuY3NzUHJvcHMgb3IgdmVuZG9yIHByZWZpeGVkIHByb3BlcnR5XG5mdW5jdGlvbiBmaW5hbFByb3BOYW1lKCBuYW1lICkge1xuXHR2YXIgZmluYWwgPSBqUXVlcnkuY3NzUHJvcHNbIG5hbWUgXSB8fCB2ZW5kb3JQcm9wc1sgbmFtZSBdO1xuXG5cdGlmICggZmluYWwgKSB7XG5cdFx0cmV0dXJuIGZpbmFsO1xuXHR9XG5cdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdHJldHVybiBuYW1lO1xuXHR9XG5cdHJldHVybiB2ZW5kb3JQcm9wc1sgbmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB8fCBuYW1lO1xufVxuXG5cbnZhclxuXG5cdC8vIFN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGVcblx0Ly8gZXhjZXB0IFwidGFibGVcIiwgXCJ0YWJsZS1jZWxsXCIsIG9yIFwidGFibGUtY2FwdGlvblwiXG5cdC8vIFNlZSBoZXJlIGZvciBkaXNwbGF5IHZhbHVlczogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9DU1MvZGlzcGxheVxuXHRyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sXG5cdHJjdXN0b21Qcm9wID0gL14tLS8sXG5cdGNzc1Nob3cgPSB7IHBvc2l0aW9uOiBcImFic29sdXRlXCIsIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIGRpc3BsYXk6IFwiYmxvY2tcIiB9LFxuXHRjc3NOb3JtYWxUcmFuc2Zvcm0gPSB7XG5cdFx0bGV0dGVyU3BhY2luZzogXCIwXCIsXG5cdFx0Zm9udFdlaWdodDogXCI0MDBcIlxuXHR9O1xuXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggX2VsZW0sIHZhbHVlLCBzdWJ0cmFjdCApIHtcblxuXHQvLyBBbnkgcmVsYXRpdmUgKCsvLSkgdmFsdWVzIGhhdmUgYWxyZWFkeSBiZWVuXG5cdC8vIG5vcm1hbGl6ZWQgYXQgdGhpcyBwb2ludFxuXHR2YXIgbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKTtcblx0cmV0dXJuIG1hdGNoZXMgP1xuXG5cdFx0Ly8gR3VhcmQgYWdhaW5zdCB1bmRlZmluZWQgXCJzdWJ0cmFjdFwiLCBlLmcuLCB3aGVuIHVzZWQgYXMgaW4gY3NzSG9va3Ncblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMiBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApIDpcblx0XHR2YWx1ZTtcbn1cblxuZnVuY3Rpb24gYm94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIGJveCwgaXNCb3JkZXJCb3gsIHN0eWxlcywgY29tcHV0ZWRWYWwgKSB7XG5cdHZhciBpID0gZGltZW5zaW9uID09PSBcIndpZHRoXCIgPyAxIDogMCxcblx0XHRleHRyYSA9IDAsXG5cdFx0ZGVsdGEgPSAwO1xuXG5cdC8vIEFkanVzdG1lbnQgbWF5IG5vdCBiZSBuZWNlc3Nhcnlcblx0aWYgKCBib3ggPT09ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSApIHtcblx0XHRyZXR1cm4gMDtcblx0fVxuXG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHtcblxuXHRcdC8vIEJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpblxuXHRcdGlmICggYm94ID09PSBcIm1hcmdpblwiICkge1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgYm94ICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBjb250ZW50LWJveCwgd2UncmUgc2Vla2luZyBcInBhZGRpbmdcIiBvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCJcblx0XHRpZiAoICFpc0JvcmRlckJveCApIHtcblxuXHRcdFx0Ly8gQWRkIHBhZGRpbmdcblx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXG5cdFx0XHQvLyBGb3IgXCJib3JkZXJcIiBvciBcIm1hcmdpblwiLCBhZGQgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJwYWRkaW5nXCIgKSB7XG5cdFx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEJ1dCBzdGlsbCBrZWVwIHRyYWNrIG9mIGl0IG90aGVyd2lzZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZXh0cmEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBib3JkZXItYm94IChjb250ZW50ICsgcGFkZGluZyArIGJvcmRlciksIHdlJ3JlIHNlZWtpbmcgXCJjb250ZW50XCIgb3Jcblx0XHQvLyBcInBhZGRpbmdcIiBvciBcIm1hcmdpblwiXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gRm9yIFwiY29udGVudFwiLCBzdWJ0cmFjdCBwYWRkaW5nXG5cdFx0XHRpZiAoIGJveCA9PT0gXCJjb250ZW50XCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIgb3IgXCJwYWRkaW5nXCIsIHN1YnRyYWN0IGJvcmRlclxuXHRcdFx0aWYgKCBib3ggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWNjb3VudCBmb3IgcG9zaXRpdmUgY29udGVudC1ib3ggc2Nyb2xsIGd1dHRlciB3aGVuIHJlcXVlc3RlZCBieSBwcm92aWRpbmcgY29tcHV0ZWRWYWxcblx0aWYgKCAhaXNCb3JkZXJCb3ggJiYgY29tcHV0ZWRWYWwgPj0gMCApIHtcblxuXHRcdC8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyBhIHJvdW5kZWQgc3VtIG9mIGNvbnRlbnQsIHBhZGRpbmcsIHNjcm9sbCBndXR0ZXIsIGFuZCBib3JkZXJcblx0XHQvLyBBc3N1bWluZyBpbnRlZ2VyIHNjcm9sbCBndXR0ZXIsIHN1YnRyYWN0IHRoZSByZXN0IGFuZCByb3VuZCBkb3duXG5cdFx0ZGVsdGEgKz0gTWF0aC5tYXgoIDAsIE1hdGguY2VpbChcblx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXG5cdFx0XHRjb21wdXRlZFZhbCAtXG5cdFx0XHRkZWx0YSAtXG5cdFx0XHRleHRyYSAtXG5cdFx0XHQwLjVcblxuXHRcdC8vIElmIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyB1bmtub3duLCB0aGVuIHdlIGNhbid0IGRldGVybWluZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyXG5cdFx0Ly8gVXNlIGFuIGV4cGxpY2l0IHplcm8gdG8gYXZvaWQgTmFOIChnaC0zOTY0KVxuXHRcdCkgKSB8fCAwO1xuXHR9XG5cblx0cmV0dXJuIGRlbHRhO1xufVxuXG5mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICkge1xuXG5cdC8vIFN0YXJ0IHdpdGggY29tcHV0ZWQgc3R5bGVcblx0dmFyIHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXG5cdFx0Ly8gVG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdywgb25seSBmZXRjaCBib3hTaXppbmcgaWYgd2UgbmVlZCBpdCAoZ2gtNDMyMikuXG5cdFx0Ly8gRmFrZSBjb250ZW50LWJveCB1bnRpbCB3ZSBrbm93IGl0J3MgbmVlZGVkIHRvIGtub3cgdGhlIHRydWUgdmFsdWUuXG5cdFx0Ym94U2l6aW5nTmVlZGVkID0gIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCBleHRyYSxcblx0XHRpc0JvcmRlckJveCA9IGJveFNpemluZ05lZWRlZCAmJlxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gaXNCb3JkZXJCb3gsXG5cblx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIGRpbWVuc2lvbiwgc3R5bGVzICksXG5cdFx0b2Zmc2V0UHJvcCA9IFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICk7XG5cblx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdC8vIFJldHVybiBhIGNvbmZvdW5kaW5nIG5vbi1waXhlbCB2YWx1ZSBvciBmZWlnbiBpZ25vcmFuY2UsIGFzIGFwcHJvcHJpYXRlLlxuXHRpZiAoIHJudW1ub25weC50ZXN0KCB2YWwgKSApIHtcblx0XHRpZiAoICFleHRyYSApIHtcblx0XHRcdHJldHVybiB2YWw7XG5cdFx0fVxuXHRcdHZhbCA9IFwiYXV0b1wiO1xuXHR9XG5cblxuXHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHQvLyBVc2Ugb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGZvciB3aGVuIGJveCBzaXppbmcgaXMgdW5yZWxpYWJsZS5cblx0Ly8gSW4gdGhvc2UgY2FzZXMsIHRoZSBjb21wdXRlZCB2YWx1ZSBjYW4gYmUgdHJ1c3RlZCB0byBiZSBib3JkZXItYm94LlxuXHRpZiAoICggIXN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSAmJiBpc0JvcmRlckJveCB8fFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgMTAgLSAxMSssIEVkZ2UgMTUgLSAxOCtcblx0XHQvLyBJRS9FZGdlIG1pc3JlcG9ydCBgZ2V0Q29tcHV0ZWRTdHlsZWAgb2YgdGFibGUgcm93cyB3aXRoIHdpZHRoL2hlaWdodFxuXHRcdC8vIHNldCBpbiBDU1Mgd2hpbGUgYG9mZnNldCpgIHByb3BlcnRpZXMgcmVwb3J0IGNvcnJlY3QgdmFsdWVzLlxuXHRcdC8vIEludGVyZXN0aW5nbHksIGluIHNvbWUgY2FzZXMgSUUgOSBkb2Vzbid0IHN1ZmZlciBmcm9tIHRoaXMgaXNzdWUuXG5cdFx0IXN1cHBvcnQucmVsaWFibGVUckRpbWVuc2lvbnMoKSAmJiBub2RlTmFtZSggZWxlbSwgXCJ0clwiICkgfHxcblxuXHRcdC8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgd2hlbiB2YWx1ZSBpcyBcImF1dG9cIlxuXHRcdC8vIFRoaXMgaGFwcGVucyBmb3IgaW5saW5lIGVsZW1lbnRzIHdpdGggbm8gZXhwbGljaXQgc2V0dGluZyAoZ2gtMzU3MSlcblx0XHR2YWwgPT09IFwiYXV0b1wiIHx8XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIC0gNC4zIG9ubHlcblx0XHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIG1pc3JlcG9ydGVkIGlubGluZSBkaW1lbnNpb25zIChnaC0zNjAyKVxuXHRcdCFwYXJzZUZsb2F0KCB2YWwgKSAmJiBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImlubGluZVwiICkgJiZcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGUgZWxlbWVudCBpcyB2aXNpYmxlICYgY29ubmVjdGVkXG5cdFx0ZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblxuXHRcdGlzQm9yZGVyQm94ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIjtcblxuXHRcdC8vIFdoZXJlIGF2YWlsYWJsZSwgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGFwcHJveGltYXRlIGJvcmRlciBib3ggZGltZW5zaW9ucy5cblx0XHQvLyBXaGVyZSBub3QgYXZhaWxhYmxlIChlLmcuLCBTVkcpLCBhc3N1bWUgdW5yZWxpYWJsZSBib3gtc2l6aW5nIGFuZCBpbnRlcnByZXQgdGhlXG5cdFx0Ly8gcmV0cmlldmVkIHZhbHVlIGFzIGEgY29udGVudCBib3ggZGltZW5zaW9uLlxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBvZmZzZXRQcm9wIGluIGVsZW07XG5cdFx0aWYgKCB2YWx1ZUlzQm9yZGVyQm94ICkge1xuXHRcdFx0dmFsID0gZWxlbVsgb2Zmc2V0UHJvcCBdO1xuXHRcdH1cblx0fVxuXG5cdC8vIE5vcm1hbGl6ZSBcIlwiIGFuZCBhdXRvXG5cdHZhbCA9IHBhcnNlRmxvYXQoIHZhbCApIHx8IDA7XG5cblx0Ly8gQWRqdXN0IGZvciB0aGUgZWxlbWVudCdzIGJveCBtb2RlbFxuXHRyZXR1cm4gKCB2YWwgK1xuXHRcdGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdGVsZW0sXG5cdFx0XHRkaW1lbnNpb24sXG5cdFx0XHRleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICksXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxuXHRcdFx0c3R5bGVzLFxuXG5cdFx0XHQvLyBQcm92aWRlIHRoZSBjdXJyZW50IGNvbXB1dGVkIHNpemUgdG8gcmVxdWVzdCBzY3JvbGwgZ3V0dGVyIGNhbGN1bGF0aW9uIChnaC0zNTg5KVxuXHRcdFx0dmFsXG5cdFx0KVxuXHQpICsgXCJweFwiO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQWRkIGluIHN0eWxlIHByb3BlcnR5IGhvb2tzIGZvciBvdmVycmlkaW5nIHRoZSBkZWZhdWx0XG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxuXHRjc3NIb29rczoge1xuXHRcdG9wYWNpdHk6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcblx0XHRcdFx0XHR2YXIgcmV0ID0gY3VyQ1NTKCBlbGVtLCBcIm9wYWNpdHlcIiApO1xuXHRcdFx0XHRcdHJldHVybiByZXQgPT09IFwiXCIgPyBcIjFcIiA6IHJldDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBEb24ndCBhdXRvbWF0aWNhbGx5IGFkZCBcInB4XCIgdG8gdGhlc2UgcG9zc2libHktdW5pdGxlc3MgcHJvcGVydGllc1xuXHRjc3NOdW1iZXI6IHtcblx0XHRcImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50XCI6IHRydWUsXG5cdFx0XCJjb2x1bW5Db3VudFwiOiB0cnVlLFxuXHRcdFwiZmlsbE9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcImZsZXhHcm93XCI6IHRydWUsXG5cdFx0XCJmbGV4U2hyaW5rXCI6IHRydWUsXG5cdFx0XCJmb250V2VpZ2h0XCI6IHRydWUsXG5cdFx0XCJncmlkQXJlYVwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtbkVuZFwiOiB0cnVlLFxuXHRcdFwiZ3JpZENvbHVtblN0YXJ0XCI6IHRydWUsXG5cdFx0XCJncmlkUm93XCI6IHRydWUsXG5cdFx0XCJncmlkUm93RW5kXCI6IHRydWUsXG5cdFx0XCJncmlkUm93U3RhcnRcIjogdHJ1ZSxcblx0XHRcImxpbmVIZWlnaHRcIjogdHJ1ZSxcblx0XHRcIm9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcIm9yZGVyXCI6IHRydWUsXG5cdFx0XCJvcnBoYW5zXCI6IHRydWUsXG5cdFx0XCJ3aWRvd3NcIjogdHJ1ZSxcblx0XHRcInpJbmRleFwiOiB0cnVlLFxuXHRcdFwiem9vbVwiOiB0cnVlXG5cdH0sXG5cblx0Ly8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZVxuXHQvLyBzZXR0aW5nIG9yIGdldHRpbmcgdGhlIHZhbHVlXG5cdGNzc1Byb3BzOiB7fSxcblxuXHQvLyBHZXQgYW5kIHNldCB0aGUgc3R5bGUgcHJvcGVydHkgb24gYSBET00gTm9kZVxuXHRzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHtcblxuXHRcdC8vIERvbid0IHNldCBzdHlsZXMgb24gdGV4dCBhbmQgY29tbWVudCBub2Rlc1xuXHRcdGlmICggIWVsZW0gfHwgZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8ICFlbGVtLnN0eWxlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxuXHRcdHZhciByZXQsIHR5cGUsIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKSxcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIHF1ZXJ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gR2V0cyBob29rIGZvciB0aGUgcHJlZml4ZWQgdmVyc2lvbiwgdGhlbiB1bnByZWZpeGVkIHZlcnNpb25cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIENoZWNrIGlmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZVxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cblx0XHRcdC8vIENvbnZlcnQgXCIrPVwiIG9yIFwiLT1cIiB0byByZWxhdGl2ZSBudW1iZXJzICgjNzM0NSlcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiAoIHJldCA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmIHJldFsgMSBdICkge1xuXHRcdFx0XHR2YWx1ZSA9IGFkanVzdENTUyggZWxlbSwgbmFtZSwgcmV0ICk7XG5cblx0XHRcdFx0Ly8gRml4ZXMgYnVnICM5MjM3XG5cdFx0XHRcdHR5cGUgPSBcIm51bWJlclwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCBudWxsIGFuZCBOYU4gdmFsdWVzIGFyZW4ndCBzZXQgKCM3MTE2KVxuXHRcdFx0aWYgKCB2YWx1ZSA9PSBudWxsIHx8IHZhbHVlICE9PSB2YWx1ZSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIG51bWJlciB3YXMgcGFzc2VkIGluLCBhZGQgdGhlIHVuaXQgKGV4Y2VwdCBmb3IgY2VydGFpbiBDU1MgcHJvcGVydGllcylcblx0XHRcdC8vIFRoZSBpc0N1c3RvbVByb3AgY2hlY2sgY2FuIGJlIHJlbW92ZWQgaW4galF1ZXJ5IDQuMCB3aGVuIHdlIG9ubHkgYXV0by1hcHBlbmRcblx0XHRcdC8vIFwicHhcIiB0byBhIGZldyBoYXJkY29kZWQgdmFsdWVzLlxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICYmICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcblx0XHRcdGlmICggIXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSBcIlwiICYmIG5hbWUuaW5kZXhPZiggXCJiYWNrZ3JvdW5kXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IFwiaW5oZXJpdFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWVcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxuXHRcdFx0XHQoIHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0aWYgKCBpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRcdFx0c3R5bGUuc2V0UHJvcGVydHkoIG5hbWUsIHZhbHVlICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgbm9uLWNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgZmFsc2UsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE90aGVyd2lzZSBqdXN0IGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgc3R5bGUgb2JqZWN0XG5cdFx0XHRyZXR1cm4gc3R5bGVbIG5hbWUgXTtcblx0XHR9XG5cdH0sXG5cblx0Y3NzOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZXh0cmEsIHN0eWxlcyApIHtcblx0XHR2YXIgdmFsLCBudW0sIGhvb2tzLFxuXHRcdFx0b3JpZ05hbWUgPSBjYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3Rcblx0XHQvLyB3YW50IHRvIG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgaXMgYSBDU1MgY3VzdG9tIHByb3BlcnR5XG5cdFx0Ly8gc2luY2UgdGhleSBhcmUgdXNlci1kZWZpbmVkLlxuXHRcdGlmICggIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdG5hbWUgPSBmaW5hbFByb3BOYW1lKCBvcmlnTmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIFRyeSBwcmVmaXhlZCBuYW1lIGZvbGxvd2VkIGJ5IHRoZSB1bnByZWZpeGVkIG5hbWVcblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsID0gaG9va3MuZ2V0KCBlbGVtLCB0cnVlLCBleHRyYSApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSwgaWYgYSB3YXkgdG8gZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBleGlzdHMsIHVzZSB0aGF0XG5cdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgbmFtZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBcIm5vcm1hbFwiIHRvIGNvbXB1dGVkIHZhbHVlXG5cdFx0aWYgKCB2YWwgPT09IFwibm9ybWFsXCIgJiYgbmFtZSBpbiBjc3NOb3JtYWxUcmFuc2Zvcm0gKSB7XG5cdFx0XHR2YWwgPSBjc3NOb3JtYWxUcmFuc2Zvcm1bIG5hbWUgXTtcblx0XHR9XG5cblx0XHQvLyBNYWtlIG51bWVyaWMgaWYgZm9yY2VkIG9yIGEgcXVhbGlmaWVyIHdhcyBwcm92aWRlZCBhbmQgdmFsIGxvb2tzIG51bWVyaWNcblx0XHRpZiAoIGV4dHJhID09PSBcIlwiIHx8IGV4dHJhICkge1xuXHRcdFx0bnVtID0gcGFyc2VGbG9hdCggdmFsICk7XG5cdFx0XHRyZXR1cm4gZXh0cmEgPT09IHRydWUgfHwgaXNGaW5pdGUoIG51bSApID8gbnVtIHx8IDAgOiB2YWw7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbDtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImhlaWdodFwiLCBcIndpZHRoXCIgXSwgZnVuY3Rpb24oIF9pLCBkaW1lbnNpb24gKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgZGltZW5zaW9uIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBDZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gYnV0IGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXRcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4K1xuXHRcdFx0XHRcdC8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvXG5cdFx0XHRcdFx0Ly8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHRcdFx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlXG5cdFx0XHRcdFx0Ly8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLlxuXHRcdFx0XHRcdCggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/XG5cdFx0XHRcdFx0c3dhcCggZWxlbSwgY3NzU2hvdywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0Z2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSB7XG5cdFx0XHR2YXIgbWF0Y2hlcyxcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cblx0XHRcdFx0Ly8gT25seSByZWFkIHN0eWxlcy5wb3NpdGlvbiBpZiB0aGUgdGVzdCBoYXMgYSBjaGFuY2UgdG8gZmFpbFxuXHRcdFx0XHQvLyB0byBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LlxuXHRcdFx0XHRzY3JvbGxib3hTaXplQnVnZ3kgPSAhc3VwcG9ydC5zY3JvbGxib3hTaXplKCkgJiZcblx0XHRcdFx0XHRzdHlsZXMucG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIixcblxuXHRcdFx0XHQvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC0zOTkxKVxuXHRcdFx0XHRib3hTaXppbmdOZWVkZWQgPSBzY3JvbGxib3hTaXplQnVnZ3kgfHwgZXh0cmEsXG5cdFx0XHRcdGlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmXG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHRcdFx0c3VidHJhY3QgPSBleHRyYSA/XG5cdFx0XHRcdFx0Ym94TW9kZWxBZGp1c3RtZW50KFxuXHRcdFx0XHRcdFx0ZWxlbSxcblx0XHRcdFx0XHRcdGRpbWVuc2lvbixcblx0XHRcdFx0XHRcdGV4dHJhLFxuXHRcdFx0XHRcdFx0aXNCb3JkZXJCb3gsXG5cdFx0XHRcdFx0XHRzdHlsZXNcblx0XHRcdFx0XHQpIDpcblx0XHRcdFx0XHQwO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB1bnJlbGlhYmxlIGJvcmRlci1ib3ggZGltZW5zaW9ucyBieSBjb21wYXJpbmcgb2Zmc2V0KiB0byBjb21wdXRlZCBhbmRcblx0XHRcdC8vIGZha2luZyBhIGNvbnRlbnQtYm94IHRvIGdldCBib3JkZXIgYW5kIHBhZGRpbmcgKGdoLTM2OTkpXG5cdFx0XHRpZiAoIGlzQm9yZGVyQm94ICYmIHNjcm9sbGJveFNpemVCdWdneSApIHtcblx0XHRcdFx0c3VidHJhY3QgLT0gTWF0aC5jZWlsKFxuXHRcdFx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXG5cdFx0XHRcdFx0cGFyc2VGbG9hdCggc3R5bGVzWyBkaW1lbnNpb24gXSApIC1cblx0XHRcdFx0XHRib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgXCJib3JkZXJcIiwgZmFsc2UsIHN0eWxlcyApIC1cblx0XHRcdFx0XHQwLjVcblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCB0byBwaXhlbHMgaWYgdmFsdWUgYWRqdXN0bWVudCBpcyBuZWVkZWRcblx0XHRcdGlmICggc3VidHJhY3QgJiYgKCBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiZcblx0XHRcdFx0KCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgIT09IFwicHhcIiApIHtcblxuXHRcdFx0XHRlbGVtLnN0eWxlWyBkaW1lbnNpb24gXSA9IHZhbHVlO1xuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5jc3MoIGVsZW0sIGRpbWVuc2lvbiApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApO1xuXHRcdH1cblx0fTtcbn0gKTtcblxualF1ZXJ5LmNzc0hvb2tzLm1hcmdpbkxlZnQgPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucmVsaWFibGVNYXJnaW5MZWZ0LFxuXHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdHJldHVybiAoIHBhcnNlRmxvYXQoIGN1ckNTUyggZWxlbSwgXCJtYXJnaW5MZWZ0XCIgKSApIHx8XG5cdFx0XHRcdGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCAtXG5cdFx0XHRcdFx0c3dhcCggZWxlbSwgeyBtYXJnaW5MZWZ0OiAwIH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDtcblx0XHRcdFx0XHR9IClcblx0XHRcdCkgKyBcInB4XCI7XG5cdFx0fVxuXHR9XG4pO1xuXG4vLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRlIHRvIGV4cGFuZCBwcm9wZXJ0aWVzXG5qUXVlcnkuZWFjaCgge1xuXHRtYXJnaW46IFwiXCIsXG5cdHBhZGRpbmc6IFwiXCIsXG5cdGJvcmRlcjogXCJXaWR0aFwiXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0gPSB7XG5cdFx0ZXhwYW5kOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgaSA9IDAsXG5cdFx0XHRcdGV4cGFuZGVkID0ge30sXG5cblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXG5cdFx0XHRcdHBhcnRzID0gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUuc3BsaXQoIFwiIFwiICkgOiBbIHZhbHVlIF07XG5cblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcblx0XHRcdFx0ZXhwYW5kZWRbIHByZWZpeCArIGNzc0V4cGFuZFsgaSBdICsgc3VmZml4IF0gPVxuXHRcdFx0XHRcdHBhcnRzWyBpIF0gfHwgcGFydHNbIGkgLSAyIF0gfHwgcGFydHNbIDAgXTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV4cGFuZGVkO1xuXHRcdH1cblx0fTtcblxuXHRpZiAoIHByZWZpeCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0Y3NzOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0dmFyIHN0eWxlcywgbGVuLFxuXHRcdFx0XHRtYXAgPSB7fSxcblx0XHRcdFx0aSA9IDA7XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggbmFtZSApICkge1xuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKTtcblx0XHRcdFx0bGVuID0gbmFtZS5sZW5ndGg7XG5cblx0XHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0bWFwWyBuYW1lWyBpIF0gXSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWVbIGkgXSwgZmFsc2UsIHN0eWxlcyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG1hcDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7XG5cdFx0fSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH1cbn0gKTtcblxuXG5mdW5jdGlvbiBUd2VlbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKSB7XG5cdHJldHVybiBuZXcgVHdlZW4ucHJvdG90eXBlLmluaXQoIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICk7XG59XG5qUXVlcnkuVHdlZW4gPSBUd2VlbjtcblxuVHdlZW4ucHJvdG90eXBlID0ge1xuXHRjb25zdHJ1Y3RvcjogVHdlZW4sXG5cdGluaXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZywgdW5pdCApIHtcblx0XHR0aGlzLmVsZW0gPSBlbGVtO1xuXHRcdHRoaXMucHJvcCA9IHByb3A7XG5cdFx0dGhpcy5lYXNpbmcgPSBlYXNpbmcgfHwgalF1ZXJ5LmVhc2luZy5fZGVmYXVsdDtcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdHRoaXMuc3RhcnQgPSB0aGlzLm5vdyA9IHRoaXMuY3VyKCk7XG5cdFx0dGhpcy5lbmQgPSBlbmQ7XG5cdFx0dGhpcy51bml0ID0gdW5pdCB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0fSxcblx0Y3VyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0cmV0dXJuIGhvb2tzICYmIGhvb2tzLmdldCA/XG5cdFx0XHRob29rcy5nZXQoIHRoaXMgKSA6XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KCB0aGlzICk7XG5cdH0sXG5cdHJ1bjogZnVuY3Rpb24oIHBlcmNlbnQgKSB7XG5cdFx0dmFyIGVhc2VkLFxuXHRcdFx0aG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0galF1ZXJ5LmVhc2luZ1sgdGhpcy5lYXNpbmcgXShcblx0XHRcdFx0cGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uXG5cdFx0XHQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0gcGVyY2VudDtcblx0XHR9XG5cdFx0dGhpcy5ub3cgPSAoIHRoaXMuZW5kIC0gdGhpcy5zdGFydCApICogZWFzZWQgKyB0aGlzLnN0YXJ0O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuc3RlcCApIHtcblx0XHRcdHRoaXMub3B0aW9ucy5zdGVwLmNhbGwoIHRoaXMuZWxlbSwgdGhpcy5ub3csIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnNldCApIHtcblx0XHRcdGhvb2tzLnNldCggdGhpcyApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KCB0aGlzICk7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59O1xuXG5Ud2Vlbi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGUgPSBUd2Vlbi5wcm90b3R5cGU7XG5cblR3ZWVuLnByb3BIb29rcyA9IHtcblx0X2RlZmF1bHQ6IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblx0XHRcdHZhciByZXN1bHQ7XG5cblx0XHRcdC8vIFVzZSBhIHByb3BlcnR5IG9uIHRoZSBlbGVtZW50IGRpcmVjdGx5IHdoZW4gaXQgaXMgbm90IGEgRE9NIGVsZW1lbnQsXG5cdFx0XHQvLyBvciB3aGVuIHRoZXJlIGlzIG5vIG1hdGNoaW5nIHN0eWxlIHByb3BlcnR5IHRoYXQgZXhpc3RzLlxuXHRcdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICE9PSAxIHx8XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSAhPSBudWxsICYmIHR3ZWVuLmVsZW0uc3R5bGVbIHR3ZWVuLnByb3AgXSA9PSBudWxsICkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBQYXNzaW5nIGFuIGVtcHR5IHN0cmluZyBhcyBhIDNyZCBwYXJhbWV0ZXIgdG8gLmNzcyB3aWxsIGF1dG9tYXRpY2FsbHlcblx0XHRcdC8vIGF0dGVtcHQgYSBwYXJzZUZsb2F0IGFuZCBmYWxsYmFjayB0byBhIHN0cmluZyBpZiB0aGUgcGFyc2UgZmFpbHMuXG5cdFx0XHQvLyBTaW1wbGUgdmFsdWVzIHN1Y2ggYXMgXCIxMHB4XCIgYXJlIHBhcnNlZCB0byBGbG9hdDtcblx0XHRcdC8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgXCJyb3RhdGUoMXJhZClcIiBhcmUgcmV0dXJuZWQgYXMtaXMuXG5cdFx0XHRyZXN1bHQgPSBqUXVlcnkuY3NzKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCBcIlwiICk7XG5cblx0XHRcdC8vIEVtcHR5IHN0cmluZ3MsIG51bGwsIHVuZGVmaW5lZCBhbmQgXCJhdXRvXCIgYXJlIGNvbnZlcnRlZCB0byAwLlxuXHRcdFx0cmV0dXJuICFyZXN1bHQgfHwgcmVzdWx0ID09PSBcImF1dG9cIiA/IDAgOiByZXN1bHQ7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcblxuXHRcdFx0Ly8gVXNlIHN0ZXAgaG9vayBmb3IgYmFjayBjb21wYXQuXG5cdFx0XHQvLyBVc2UgY3NzSG9vayBpZiBpdHMgdGhlcmUuXG5cdFx0XHQvLyBVc2UgLnN0eWxlIGlmIGF2YWlsYWJsZSBhbmQgdXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlLlxuXHRcdFx0aWYgKCBqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdICkge1xuXHRcdFx0XHRqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdKCB0d2VlbiApO1xuXHRcdFx0fSBlbHNlIGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoXG5cdFx0XHRcdGpRdWVyeS5jc3NIb29rc1sgdHdlZW4ucHJvcCBdIHx8XG5cdFx0XHRcdFx0dHdlZW4uZWxlbS5zdHlsZVsgZmluYWxQcm9wTmFtZSggdHdlZW4ucHJvcCApIF0gIT0gbnVsbCApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5lYXNpbmcgPSB7XG5cdGxpbmVhcjogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIHA7XG5cdH0sXG5cdHN3aW5nOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xuXHR9LFxuXHRfZGVmYXVsdDogXCJzd2luZ1wiXG59O1xuXG5qUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcblxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcbmpRdWVyeS5meC5zdGVwID0ge307XG5cblxuXG5cbnZhclxuXHRmeE5vdywgaW5Qcm9ncmVzcyxcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xuXG5mdW5jdGlvbiBzY2hlZHVsZSgpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdGlmICggZG9jdW1lbnQuaGlkZGVuID09PSBmYWxzZSAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lICkge1xuXHRcdFx0d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggc2NoZWR1bGUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0d2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTtcblx0XHR9XG5cblx0XHRqUXVlcnkuZngudGljaygpO1xuXHR9XG59XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBEYXRlLm5vdygpICk7XG59XG5cbi8vIEdlbmVyYXRlIHBhcmFtZXRlcnMgdG8gY3JlYXRlIGEgc3RhbmRhcmQgYW5pbWF0aW9uXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xuXHR2YXIgd2hpY2gsXG5cdFx0aSA9IDAsXG5cdFx0YXR0cnMgPSB7IGhlaWdodDogdHlwZSB9O1xuXG5cdC8vIElmIHdlIGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMSB0byBkbyBhbGwgY3NzRXhwYW5kIHZhbHVlcyxcblx0Ly8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiAtIGluY2x1ZGVXaWR0aCApIHtcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xuXHR9XG5cblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XG5cdFx0YXR0cnMub3BhY2l0eSA9IGF0dHJzLndpZHRoID0gdHlwZTtcblx0fVxuXG5cdHJldHVybiBhdHRycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7XG5cdHZhciB0d2Vlbixcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHR2YXIgcHJvcCwgdmFsdWUsIHRvZ2dsZSwgaG9va3MsIG9sZGZpcmUsIHByb3BUd2VlbiwgcmVzdG9yZURpc3BsYXksIGRpc3BsYXksXG5cdFx0aXNCb3ggPSBcIndpZHRoXCIgaW4gcHJvcHMgfHwgXCJoZWlnaHRcIiBpbiBwcm9wcyxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICksXG5cdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBRdWV1ZS1za2lwcGluZyBhbmltYXRpb25zIGhpamFjayB0aGUgZnggaG9va3Ncblx0aWYgKCAhb3B0cy5xdWV1ZSApIHtcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xuXHRcdFx0aG9va3MudW5xdWV1ZWQgPSAwO1xuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggIWhvb2tzLnVucXVldWVkICkge1xuXHRcdFx0XHRcdG9sZGZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aG9va3MudW5xdWV1ZWQrKztcblxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb21wbGV0ZSBoYW5kbGVyIGlzIGNhbGxlZCBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRGV0ZWN0IHNob3cvaGlkZSBhbmltYXRpb25zXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XG5cdFx0dmFsdWUgPSBwcm9wc1sgcHJvcCBdO1xuXHRcdGlmICggcmZ4dHlwZXMudGVzdCggdmFsdWUgKSApIHtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xuXHRcdFx0dG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVlID09PSBcInRvZ2dsZVwiO1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJldGVuZCB0byBiZSBoaWRkZW4gaWYgdGhpcyBpcyBhIFwic2hvd1wiIGFuZFxuXHRcdFx0XHQvLyB0aGVyZSBpcyBzdGlsbCBkYXRhIGZyb20gYSBzdG9wcGVkIHNob3cvaGlkZVxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gdHJ1ZTtcblxuXHRcdFx0XHQvLyBJZ25vcmUgYWxsIG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gfHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQmFpbCBvdXQgaWYgdGhpcyBpcyBhIG5vLW9wIGxpa2UgLmhpZGUoKS5oaWRlKClcblx0cHJvcFR3ZWVuID0gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wcyApO1xuXHRpZiAoICFwcm9wVHdlZW4gJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBSZXN0cmljdCBcIm92ZXJmbG93XCIgYW5kIFwiZGlzcGxheVwiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnNcblx0aWYgKCBpc0JveCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3QgaW5mZXIgdGhlIHNob3J0aGFuZFxuXHRcdC8vIGZyb20gaWRlbnRpY2FsbHktdmFsdWVkIG92ZXJmbG93WCBhbmQgb3ZlcmZsb3dZIGFuZCBFZGdlIGp1c3QgbWlycm9yc1xuXHRcdC8vIHRoZSBvdmVyZmxvd1ggdmFsdWUgdGhlcmUuXG5cdFx0b3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZsb3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07XG5cblx0XHQvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGVcblx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFTaG93ICYmIGRhdGFTaG93LmRpc3BsYXk7XG5cdFx0aWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkge1xuXHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0fVxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ICkge1xuXHRcdFx0XHRkaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEdldCBub25lbXB0eSB2YWx1ZShzKSBieSB0ZW1wb3JhcmlseSBmb3JjaW5nIHZpc2liaWxpdHlcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5IHx8IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQW5pbWF0ZSBpbmxpbmUgZWxlbWVudHMgYXMgaW5saW5lLWJsb2NrXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcImlubGluZVwiIHx8IGRpc3BsYXkgPT09IFwiaW5saW5lLWJsb2NrXCIgJiYgcmVzdG9yZURpc3BsYXkgIT0gbnVsbCApIHtcblx0XHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXG5cdFx0XHRcdC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIGRpc3BsYXkgdmFsdWUgYXQgdGhlIGVuZCBvZiBwdXJlIHNob3cvaGlkZSBhbmltYXRpb25zXG5cdFx0XHRcdGlmICggIXByb3BUd2VlbiApIHtcblx0XHRcdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5ID0gc3R5bGUuZGlzcGxheTtcblx0XHRcdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgPyBcIlwiIDogZGlzcGxheTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3dbIDAgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WSA9IG9wdHMub3ZlcmZsb3dbIDIgXTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBJbXBsZW1lbnQgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0cHJvcFR3ZWVuID0gZmFsc2U7XG5cdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblxuXHRcdC8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5pbWF0aW9uXG5cdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0aWYgKCBkYXRhU2hvdyApIHtcblx0XHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IGRhdGFTaG93LmhpZGRlbjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIFwiZnhzaG93XCIsIHsgZGlzcGxheTogcmVzdG9yZURpc3BsYXkgfSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdG9yZSBoaWRkZW4vdmlzaWJsZSBmb3IgdG9nZ2xlIHNvIGAuc3RvcCgpLnRvZ2dsZSgpYCBcInJldmVyc2VzXCJcblx0XHRcdGlmICggdG9nZ2xlICkge1xuXHRcdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTaG93IGVsZW1lbnRzIGJlZm9yZSBhbmltYXRpbmcgdGhlbVxuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRcdC8vIFRoZSBmaW5hbCBzdGVwIG9mIGEgXCJoaWRlXCIgYW5pbWF0aW9uIGlzIGFjdHVhbGx5IGhpZGluZyB0aGUgZWxlbWVudFxuXHRcdFx0XHRpZiAoICFoaWRkZW4gKSB7XG5cdFx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImZ4c2hvd1wiICk7XG5cdFx0XHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Ly8gUGVyLXByb3BlcnR5IHNldHVwXG5cdFx0cHJvcFR3ZWVuID0gY3JlYXRlVHdlZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7XG5cdFx0aWYgKCAhKCBwcm9wIGluIGRhdGFTaG93ICkgKSB7XG5cdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHByb3BUd2Vlbi5lbmQgPSBwcm9wVHdlZW4uc3RhcnQ7XG5cdFx0XHRcdHByb3BUd2Vlbi5zdGFydCA9IDA7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0gY2FtZWxDYXNlKCBpbmRleCApO1xuXHRcdGVhc2luZyA9IHNwZWNpYWxFYXNpbmdbIG5hbWUgXTtcblx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdO1xuXHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdGVhc2luZyA9IHZhbHVlWyAxIF07XG5cdFx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdID0gdmFsdWVbIDAgXTtcblx0XHR9XG5cblx0XHRpZiAoIGluZGV4ICE9PSBuYW1lICkge1xuXHRcdFx0cHJvcHNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBpbmRleCBdO1xuXHRcdH1cblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF07XG5cdFx0aWYgKCBob29rcyAmJiBcImV4cGFuZFwiIGluIGhvb2tzICkge1xuXHRcdFx0dmFsdWUgPSBob29rcy5leHBhbmQoIHZhbHVlICk7XG5cdFx0XHRkZWxldGUgcHJvcHNbIG5hbWUgXTtcblxuXHRcdFx0Ly8gTm90IHF1aXRlICQuZXh0ZW5kLCB0aGlzIHdvbid0IG92ZXJ3cml0ZSBleGlzdGluZyBrZXlzLlxuXHRcdFx0Ly8gUmV1c2luZyAnaW5kZXgnIGJlY2F1c2Ugd2UgaGF2ZSB0aGUgY29ycmVjdCBcIm5hbWVcIlxuXHRcdFx0Zm9yICggaW5kZXggaW4gdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggISggaW5kZXggaW4gcHJvcHMgKSApIHtcblx0XHRcdFx0XHRwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyBpbmRleCBdO1xuXHRcdFx0XHRcdHNwZWNpYWxFYXNpbmdbIGluZGV4IF0gPSBlYXNpbmc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0c3BlY2lhbEVhc2luZ1sgbmFtZSBdID0gZWFzaW5nO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBBbmltYXRpb24oIGVsZW0sIHByb3BlcnRpZXMsIG9wdGlvbnMgKSB7XG5cdHZhciByZXN1bHQsXG5cdFx0c3RvcHBlZCxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gQW5pbWF0aW9uLnByZWZpbHRlcnMubGVuZ3RoLFxuXHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCkuYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRG9uJ3QgbWF0Y2ggZWxlbSBpbiB0aGUgOmFuaW1hdGVkIHNlbGVjdG9yXG5cdFx0XHRkZWxldGUgdGljay5lbGVtO1xuXHRcdH0gKSxcblx0XHR0aWNrID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIHN0b3BwZWQgKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHRcdHZhciBjdXJyZW50VGltZSA9IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRcdHJlbWFpbmluZyA9IE1hdGgubWF4KCAwLCBhbmltYXRpb24uc3RhcnRUaW1lICsgYW5pbWF0aW9uLmR1cmF0aW9uIC0gY3VycmVudFRpbWUgKSxcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuMyBvbmx5XG5cdFx0XHRcdC8vIEFyY2hhaWMgY3Jhc2ggYnVnIHdvbid0IGFsbG93IHVzIHRvIHVzZSBgMSAtICggMC41IHx8IDAgKWAgKCMxMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCBwZXJjZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBwZXJjZW50LCByZW1haW5pbmcgXSApO1xuXG5cdFx0XHQvLyBJZiB0aGVyZSdzIG1vcmUgdG8gZG8sIHlpZWxkXG5cdFx0XHRpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHtcblx0XHRcdFx0cmV0dXJuIHJlbWFpbmluZztcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgdGhpcyB3YXMgYW4gZW1wdHkgYW5pbWF0aW9uLCBzeW50aGVzaXplIGEgZmluYWwgcHJvZ3Jlc3Mgbm90aWZpY2F0aW9uXG5cdFx0XHRpZiAoICFsZW5ndGggKSB7XG5cdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVzb2x2ZSB0aGUgYW5pbWF0aW9uIGFuZCByZXBvcnQgaXRzIGNvbmNsdXNpb25cblx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSxcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0cHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxuXHRcdFx0XHRlYXNpbmc6IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHRcblx0XHRcdH0sIG9wdGlvbnMgKSxcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcblx0XHRcdG9yaWdpbmFsT3B0aW9uczogb3B0aW9ucyxcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0dHdlZW5zOiBbXSxcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXG5cdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XG5cdFx0XHRcdFx0cmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0Ly8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnNcblx0YW5pbWF0aW9uXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHRyZXR1cm4gYW5pbWF0aW9uO1xufVxuXG5qUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7XG5cblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSA9IEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmXG5cdGlmICggalF1ZXJ5LmZ4Lm9mZiApIHtcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xuXG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0aWYgKCBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyApIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7XG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIG9wdDtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNldHRpbmcgb3BhY2l0eSB0byAwXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRyZWUgKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggX2ksIG5hbWUgKSB7XG5cdHZhciBjc3NGbiA9IGpRdWVyeS5mblsgbmFtZSBdO1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gc3BlZWQgPT0gbnVsbCB8fCB0eXBlb2Ygc3BlZWQgPT09IFwiYm9vbGVhblwiID9cblx0XHRcdGNzc0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA6XG5cdFx0XHR0aGlzLmFuaW1hdGUoIGdlbkZ4KCBuYW1lLCB0cnVlICksIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3IgY3VzdG9tIGFuaW1hdGlvbnNcbmpRdWVyeS5lYWNoKCB7XG5cdHNsaWRlRG93bjogZ2VuRngoIFwic2hvd1wiICksXG5cdHNsaWRlVXA6IGdlbkZ4KCBcImhpZGVcIiApLFxuXHRzbGlkZVRvZ2dsZTogZ2VuRngoIFwidG9nZ2xlXCIgKSxcblx0ZmFkZUluOiB7IG9wYWNpdHk6IFwic2hvd1wiIH0sXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS50aW1lcnMgPSBbXTtcbmpRdWVyeS5meC50aWNrID0gZnVuY3Rpb24oKSB7XG5cdHZhciB0aW1lcixcblx0XHRpID0gMCxcblx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzO1xuXG5cdGZ4Tm93ID0gRGF0ZS5ub3coKTtcblxuXHRmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7XG5cdFx0dGltZXIgPSB0aW1lcnNbIGkgXTtcblxuXHRcdC8vIFJ1biB0aGUgdGltZXIgYW5kIHNhZmVseSByZW1vdmUgaXQgd2hlbiBkb25lIChhbGxvd2luZyBmb3IgZXh0ZXJuYWwgcmVtb3ZhbClcblx0XHRpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09PSB0aW1lciApIHtcblx0XHRcdHRpbWVycy5zcGxpY2UoIGktLSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmZ4LnN0b3AoKTtcblx0fVxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcbn07XG5cbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcblx0alF1ZXJ5LnRpbWVycy5wdXNoKCB0aW1lciApO1xuXHRqUXVlcnkuZnguc3RhcnQoKTtcbn07XG5cbmpRdWVyeS5meC5pbnRlcnZhbCA9IDEzO1xualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG5cdGlmICggaW5Qcm9ncmVzcyApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRpblByb2dyZXNzID0gdHJ1ZTtcblx0c2NoZWR1bGUoKTtcbn07XG5cbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdGluUHJvZ3Jlc3MgPSBudWxsO1xufTtcblxualF1ZXJ5LmZ4LnNwZWVkcyA9IHtcblx0c2xvdzogNjAwLFxuXHRmYXN0OiAyMDAsXG5cblx0Ly8gRGVmYXVsdCBzcGVlZFxuXHRfZGVmYXVsdDogNDAwXG59O1xuXG5cbi8vIEJhc2VkIG9mZiBvZiB0aGUgcGx1Z2luIGJ5IENsaW50IEhlbGZlcnMsIHdpdGggcGVybWlzc2lvbi5cbi8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDEwMDMyNDAxNDc0Ny9odHRwOi8vYmxpbmRzaWduYWxzLmNvbS9pbmRleC5waHAvMjAwOS8wNy9qcXVlcnktZGVsYXkvXG5qUXVlcnkuZm4uZGVsYXkgPSBmdW5jdGlvbiggdGltZSwgdHlwZSApIHtcblx0dGltZSA9IGpRdWVyeS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTtcblx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7XG5cdFx0dmFyIHRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCggbmV4dCwgdGltZSApO1xuXHRcdGhvb2tzLnN0b3AgPSBmdW5jdGlvbigpIHtcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoIHRpbWVvdXQgKTtcblx0XHR9O1xuXHR9ICk7XG59O1xuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApLFxuXHRcdHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2VsZWN0XCIgKSxcblx0XHRvcHQgPSBzZWxlY3QuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib3B0aW9uXCIgKSApO1xuXG5cdGlucHV0LnR5cGUgPSBcImNoZWNrYm94XCI7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMyBvbmx5XG5cdC8vIERlZmF1bHQgdmFsdWUgZm9yIGEgY2hlY2tib3ggc2hvdWxkIGJlIFwib25cIlxuXHRzdXBwb3J0LmNoZWNrT24gPSBpbnB1dC52YWx1ZSAhPT0gXCJcIjtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gTXVzdCBhY2Nlc3Mgc2VsZWN0ZWRJbmRleCB0byBtYWtlIGRlZmF1bHQgb3B0aW9ucyBzZWxlY3Rcblx0c3VwcG9ydC5vcHRTZWxlY3RlZCA9IG9wdC5zZWxlY3RlZDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gQW4gaW5wdXQgbG9zZXMgaXRzIHZhbHVlIGFmdGVyIGJlY29taW5nIGEgcmFkaW9cblx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0aW5wdXQudmFsdWUgPSBcInRcIjtcblx0aW5wdXQudHlwZSA9IFwicmFkaW9cIjtcblx0c3VwcG9ydC5yYWRpb1ZhbHVlID0gaW5wdXQudmFsdWUgPT09IFwidFwiO1xufSApKCk7XG5cblxudmFyIGJvb2xIb29rLFxuXHRhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LmF0dHIsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIHRoaXMsIG5hbWUgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IGF0dHJpYnV0ZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBGYWxsYmFjayB0byBwcm9wIHdoZW4gYXR0cmlidXRlcyBhcmUgbm90IHN1cHBvcnRlZFxuXHRcdGlmICggdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlID09PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1lLCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdC8vIEF0dHJpYnV0ZSBob29rcyBhcmUgZGV0ZXJtaW5lZCBieSB0aGUgbG93ZXJjYXNlIHZlcnNpb25cblx0XHQvLyBHcmFiIG5lY2Vzc2FyeSBob29rIGlmIG9uZSBpcyBkZWZpbmVkXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5hdHRySG9va3NbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC50ZXN0KCBuYW1lICkgPyBib29sSG9vayA6IHVuZGVmaW5lZCApO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdC8vIE5vbi1leGlzdGVudCBhdHRyaWJ1dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkXG5cdFx0cmV0dXJuIHJldCA9PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xuXHR9LFxuXG5cdGF0dHJIb29rczoge1xuXHRcdHR5cGU6IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxuXHRcdFx0XHRcdG5vZGVOYW1lKCBlbGVtLCBcImlucHV0XCIgKSApIHtcblx0XHRcdFx0XHR2YXIgdmFsID0gZWxlbS52YWx1ZTtcblx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIHZhbHVlICk7XG5cdFx0XHRcdFx0aWYgKCB2YWwgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnZhbHVlID0gdmFsO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdHZhciBuYW1lLFxuXHRcdFx0aSA9IDAsXG5cblx0XHRcdC8vIEF0dHJpYnV0ZSBuYW1lcyBjYW4gY29udGFpbiBub24tSFRNTCB3aGl0ZXNwYWNlIGNoYXJhY3RlcnNcblx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI2F0dHJpYnV0ZXMtMlxuXHRcdFx0YXR0ck5hbWVzID0gdmFsdWUgJiYgdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblxuXHRcdGlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHR3aGlsZSAoICggbmFtZSA9IGF0dHJOYW1lc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIG5hbWUgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlc1xuYm9vbEhvb2sgPSB7XG5cdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkge1xuXHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgYm9vbGVhbiBhdHRyaWJ1dGVzIHdoZW4gc2V0IHRvIGZhbHNlXG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgbmFtZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gbmFtZTtcblx0fVxufTtcblxualF1ZXJ5LmVhY2goIGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXFx3Ky9nICksIGZ1bmN0aW9uKCBfaSwgbmFtZSApIHtcblx0dmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyO1xuXG5cdGF0dHJIYW5kbGVbIG5hbWUgXSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgcmV0LCBoYW5kbGUsXG5cdFx0XHRsb3dlcmNhc2VOYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cblx0XHRcdC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3AgYnkgdGVtcG9yYXJpbHkgcmVtb3ZpbmcgdGhpcyBmdW5jdGlvbiBmcm9tIHRoZSBnZXR0ZXJcblx0XHRcdGhhbmRsZSA9IGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXTtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IHJldDtcblx0XHRcdHJldCA9IGdldHRlciggZWxlbSwgbmFtZSwgaXNYTUwgKSAhPSBudWxsID9cblx0XHRcdFx0bG93ZXJjYXNlTmFtZSA6XG5cdFx0XHRcdG51bGw7XG5cdFx0XHRhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSBoYW5kbGU7XG5cdFx0fVxuXHRcdHJldHVybiByZXQ7XG5cdH07XG59ICk7XG5cblxuXG5cbnZhciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmNsaWNrYWJsZSA9IC9eKD86YXxhcmVhKSQvaTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LnByb3AsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZVByb3A6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGVsZXRlIHRoaXNbIGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZSBdO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgcHJvcGVydGllcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBGaXggbmFtZSBhbmQgYXR0YWNoIGhvb2tzXG5cdFx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXHRcdFx0aG9va3MgPSBqUXVlcnkucHJvcEhvb2tzWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuICggZWxlbVsgbmFtZSBdID0gdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKCByZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSApICE9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cblx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdO1xuXHR9LFxuXG5cdHByb3BIb29rczoge1xuXHRcdHRhYkluZGV4OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHRcdFx0Ly8gZWxlbS50YWJJbmRleCBkb2Vzbid0IGFsd2F5cyByZXR1cm4gdGhlXG5cdFx0XHRcdC8vIGNvcnJlY3QgdmFsdWUgd2hlbiBpdCBoYXNuJ3QgYmVlbiBleHBsaWNpdGx5IHNldFxuXHRcdFx0XHQvLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxNDExMTYyMzMzNDcvaHR0cDovL2ZsdWlkcHJvamVjdC5vcmcvYmxvZy8yMDA4LzAxLzA5L2dldHRpbmctc2V0dGluZy1hbmQtcmVtb3ZpbmctdGFiaW5kZXgtdmFsdWVzLXdpdGgtamF2YXNjcmlwdC9cblx0XHRcdFx0Ly8gVXNlIHByb3BlciBhdHRyaWJ1dGUgcmV0cmlldmFsKCMxMjA3Milcblx0XHRcdFx0dmFyIHRhYmluZGV4ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ0YWJpbmRleFwiICk7XG5cblx0XHRcdFx0aWYgKCB0YWJpbmRleCApIHtcblx0XHRcdFx0XHRyZXR1cm4gcGFyc2VJbnQoIHRhYmluZGV4LCAxMCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdHJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8XG5cdFx0XHRcdFx0cmNsaWNrYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiZcblx0XHRcdFx0XHRlbGVtLmhyZWZcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHByb3BGaXg6IHtcblx0XHRcImZvclwiOiBcImh0bWxGb3JcIixcblx0XHRcImNsYXNzXCI6IFwiY2xhc3NOYW1lXCJcblx0fVxufSApO1xuXG4vLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcbi8vIEFjY2Vzc2luZyB0aGUgc2VsZWN0ZWRJbmRleCBwcm9wZXJ0eVxuLy8gZm9yY2VzIHRoZSBicm93c2VyIHRvIHJlc3BlY3Qgc2V0dGluZyBzZWxlY3RlZFxuLy8gb24gdGhlIG9wdGlvblxuLy8gVGhlIGdldHRlciBlbnN1cmVzIGEgZGVmYXVsdCBvcHRpb24gaXMgc2VsZWN0ZWRcbi8vIHdoZW4gaW4gYW4gb3B0Z3JvdXBcbi8vIGVzbGludCBydWxlIFwibm8tdW51c2VkLWV4cHJlc3Npb25zXCIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgY29kZVxuLy8gc2luY2UgaXQgY29uc2lkZXJzIHN1Y2ggYWNjZXNzaW9ucyBub29wXG5pZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkge1xuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0cGFyZW50LnNlbGVjdGVkSW5kZXg7XG5cblx0XHRcdFx0aWYgKCBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG5qUXVlcnkuZWFjaCggW1xuXHRcInRhYkluZGV4XCIsXG5cdFwicmVhZE9ubHlcIixcblx0XCJtYXhMZW5ndGhcIixcblx0XCJjZWxsU3BhY2luZ1wiLFxuXHRcImNlbGxQYWRkaW5nXCIsXG5cdFwicm93U3BhblwiLFxuXHRcImNvbFNwYW5cIixcblx0XCJ1c2VNYXBcIixcblx0XCJmcmFtZUJvcmRlclwiLFxuXHRcImNvbnRlbnRFZGl0YWJsZVwiXG5dLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpcztcbn0gKTtcblxuXG5cblxuXHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZSBhY2NvcmRpbmcgdG8gSFRNTCBzcGVjXG5cdC8vIGh0dHBzOi8vaW5mcmEuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2UtYXNjaWktd2hpdGVzcGFjZVxuXHRmdW5jdGlvbiBzdHJpcEFuZENvbGxhcHNlKCB2YWx1ZSApIHtcblx0XHR2YXIgdG9rZW5zID0gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0XHRyZXR1cm4gdG9rZW5zLmpvaW4oIFwiIFwiICk7XG5cdH1cblxuXG5mdW5jdGlvbiBnZXRDbGFzcyggZWxlbSApIHtcblx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlICYmIGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzXCIgKSB8fCBcIlwiO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VzVG9BcnJheSggdmFsdWUgKSB7XG5cdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRyZXR1cm4gdmFsdWU7XG5cdH1cblx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdH1cblx0cmV0dXJuIFtdO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuYWRkQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3Nlcy5sZW5ndGggKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblx0XHRcdFx0XHRcdGlmICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApIDwgMCApIHtcblx0XHRcdFx0XHRcdFx0Y3VyICs9IGNsYXp6ICsgXCIgXCI7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuYXR0ciggXCJjbGFzc1wiLCBcIlwiICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NlcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc2VzLmxlbmd0aCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xuXG5cdFx0XHRcdC8vIFRoaXMgZXhwcmVzc2lvbiBpcyBoZXJlIGZvciBiZXR0ZXIgY29tcHJlc3NpYmlsaXR5IChzZWUgYWRkQ2xhc3MpXG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSAqYWxsKiBpbnN0YW5jZXNcblx0XHRcdFx0XHRcdHdoaWxlICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciA9IGN1ci5yZXBsYWNlKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIsIFwiIFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHtcblx0XHR2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZSxcblx0XHRcdGlzVmFsaWRWYWx1ZSA9IHR5cGUgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggdHlwZW9mIHN0YXRlVmFsID09PSBcImJvb2xlYW5cIiAmJiBpc1ZhbGlkVmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGVWYWwgPyB0aGlzLmFkZENsYXNzKCB2YWx1ZSApIDogdGhpcy5yZW1vdmVDbGFzcyggdmFsdWUgKTtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSxcblx0XHRcdFx0XHRzdGF0ZVZhbFxuXHRcdFx0XHQpO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGNsYXNzTmFtZSwgaSwgc2VsZiwgY2xhc3NOYW1lcztcblxuXHRcdFx0aWYgKCBpc1ZhbGlkVmFsdWUgKSB7XG5cblx0XHRcdFx0Ly8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXNcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblx0XHRcdFx0Y2xhc3NOYW1lcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0XHRcdHdoaWxlICggKCBjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2hlY2sgZWFjaCBjbGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGFyYXRlZCBsaXN0XG5cdFx0XHRcdFx0aWYgKCBzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKSApIHtcblx0XHRcdFx0XHRcdHNlbGYucmVtb3ZlQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gVG9nZ2xlIHdob2xlIGNsYXNzIG5hbWVcblx0XHRcdH0gZWxzZSBpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgfHwgdHlwZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRcdGNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7XG5cdFx0XHRcdGlmICggY2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0Ly8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldFxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIsIGNsYXNzTmFtZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhlIGVsZW1lbnQgaGFzIGEgY2xhc3MgbmFtZSBvciBpZiB3ZSdyZSBwYXNzZWQgYGZhbHNlYCxcblx0XHRcdFx0Ly8gdGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFib3ZlIHNhdmVkIGl0KS5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcblx0XHRcdFx0Ly8gZmFsbGluZyBiYWNrIHRvIHRoZSBlbXB0eSBzdHJpbmcgaWYgbm90aGluZyB3YXMgc3RvcmVkLlxuXHRcdFx0XHRpZiAoIHRoaXMuc2V0QXR0cmlidXRlICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsXG5cdFx0XHRcdFx0XHRjbGFzc05hbWUgfHwgdmFsdWUgPT09IGZhbHNlID9cblx0XHRcdFx0XHRcdFx0XCJcIiA6XG5cdFx0XHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcblx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGdldENsYXNzKCBlbGVtICkgKSArIFwiIFwiICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBycmV0dXJuID0gL1xcci9nO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCB2YWx1ZUlzRnVuY3Rpb24sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIG1vc3QgY29tbW9uIHN0cmluZyBjYXNlc1xuXHRcdFx0XHRpZiAoIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcblx0XHRcdFx0cmV0dXJuIHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB2YWw7XG5cblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWwgKz0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSBvbmx5XG5cdFx0XHRcdFx0Ly8gb3B0aW9uLnRleHQgdGhyb3dzIGV4Y2VwdGlvbnMgKCMxNDY4NiwgIzE0ODU4KVxuXHRcdFx0XHRcdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLXdoaXRlc3BhY2Vcblx0XHRcdFx0XHRzdHJpcEFuZENvbGxhcHNlKCBqUXVlcnkudGV4dCggZWxlbSApICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzZWxlY3Q6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciB2YWx1ZSwgb3B0aW9uLCBpLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0aW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsXG5cdFx0XHRcdFx0b25lID0gZWxlbS50eXBlID09PSBcInNlbGVjdC1vbmVcIixcblx0XHRcdFx0XHR2YWx1ZXMgPSBvbmUgPyBudWxsIDogW10sXG5cdFx0XHRcdFx0bWF4ID0gb25lID8gaW5kZXggKyAxIDogb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0aWYgKCBpbmRleCA8IDAgKSB7XG5cdFx0XHRcdFx0aSA9IG1heDtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGkgPSBvbmUgPyBpbmRleCA6IDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0Ly8gSUU4LTkgZG9lc24ndCB1cGRhdGUgc2VsZWN0ZWQgYWZ0ZXIgZm9ybSByZXNldCAoIzI1NTEpXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXG5cblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XG5cdFx0XHRcdFx0XHRcdFx0IW5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgXCJvcHRncm91cFwiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxuXHRcdFx0XHRcdFx0dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpO1xuXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xuXHRcdFx0XHRcdFx0aWYgKCBvbmUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTXVsdGktU2VsZWN0cyByZXR1cm4gYW4gYXJyYXlcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIG9wdGlvblNldCwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0dmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKSxcblx0XHRcdFx0XHRpID0gb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tY29uZC1hc3NpZ24gKi9cblxuXHRcdFx0XHRcdGlmICggb3B0aW9uLnNlbGVjdGVkID1cblx0XHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID4gLTFcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdG9wdGlvblNldCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xuXHRcdFx0XHRcdGVsZW0uc2VsZWN0ZWRJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIFJhZGlvcyBhbmQgY2hlY2tib3hlcyBnZXR0ZXIvc2V0dGVyXG5qUXVlcnkuZWFjaCggWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XG5cdFx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0uZ2V0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cblxuXG5zdXBwb3J0LmZvY3VzaW4gPSBcIm9uZm9jdXNpblwiIGluIHdpbmRvdztcblxuXG52YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sXG5cdHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0fTtcblxualF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmV2ZW50LCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XG5cblx0XHR2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLCBsYXN0RWxlbWVudCxcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxuXHRcdFx0dHlwZSA9IGhhc093bi5jYWxsKCBldmVudCwgXCJ0eXBlXCIgKSA/IGV2ZW50LnR5cGUgOiBldmVudCxcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xuXG5cdFx0Y3VyID0gbGFzdEVsZW1lbnQgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXG5cdFx0Ly8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNClcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIXNwZWNpYWwubm9CdWJibGUgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdGJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlO1xuXHRcdFx0aWYgKCAhcmZvY3VzTW9ycGgudGVzdCggYnViYmxlVHlwZSArIHR5cGUgKSApIHtcblx0XHRcdFx0Y3VyID0gY3VyLnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKCA7IGN1cjsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0dG1wID0gY3VyO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSlcblx0XHRcdGlmICggdG1wID09PSAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCApICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggdG1wLmRlZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmlyZSBoYW5kbGVycyBvbiB0aGUgZXZlbnQgcGF0aFxuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBjdXIgPSBldmVudFBhdGhbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRsYXN0RWxlbWVudCA9IGN1cjtcblx0XHRcdGV2ZW50LnR5cGUgPSBpID4gMSA/XG5cdFx0XHRcdGJ1YmJsZVR5cGUgOlxuXHRcdFx0XHRzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGU7XG5cblx0XHRcdC8vIGpRdWVyeSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSAoIGRhdGFQcml2LmdldCggY3VyLCBcImV2ZW50c1wiICkgfHwgT2JqZWN0LmNyZWF0ZSggbnVsbCApIClbIGV2ZW50LnR5cGUgXSAmJlxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIGN1ciwgXCJoYW5kbGVcIiApO1xuXHRcdFx0aWYgKCBoYW5kbGUgKSB7XG5cdFx0XHRcdGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE5hdGl2ZSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSBvbnR5cGUgJiYgY3VyWyBvbnR5cGUgXTtcblx0XHRcdGlmICggaGFuZGxlICYmIGhhbmRsZS5hcHBseSAmJiBhY2NlcHREYXRhKCBjdXIgKSApIHtcblx0XHRcdFx0ZXZlbnQucmVzdWx0ID0gaGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZXZlbnQudHlwZSA9IHR5cGU7XG5cblx0XHQvLyBJZiBub2JvZHkgcHJldmVudGVkIHRoZSBkZWZhdWx0IGFjdGlvbiwgZG8gaXQgbm93XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApIHtcblxuXHRcdFx0aWYgKCAoICFzcGVjaWFsLl9kZWZhdWx0IHx8XG5cdFx0XHRcdHNwZWNpYWwuX2RlZmF1bHQuYXBwbHkoIGV2ZW50UGF0aC5wb3AoKSwgZGF0YSApID09PSBmYWxzZSApICYmXG5cdFx0XHRcdGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblxuXHRcdFx0XHQvLyBDYWxsIGEgbmF0aXZlIERPTSBtZXRob2Qgb24gdGhlIHRhcmdldCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGlzRnVuY3Rpb24oIGVsZW1bIHR5cGUgXSApICYmICFpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZPTyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZFxuXHRcdFx0XHRcdHRtcCA9IGVsZW1bIG9udHlwZSBdO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IG51bGw7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJldmVudCByZS10cmlnZ2VyaW5nIG9mIHRoZSBzYW1lIGV2ZW50LCBzaW5jZSB3ZSBhbHJlYWR5IGJ1YmJsZWQgaXQgYWJvdmVcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbVsgdHlwZSBdKCk7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XG5cdFx0dmFyIGUgPSBqUXVlcnkuZXh0ZW5kKFxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxuXHRcdFx0ZXZlbnQsXG5cdFx0XHR7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXG5cdFx0XHR9XG5cdFx0KTtcblxuXHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7XG5cdH1cblxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbi8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00NFxuLy8gRmlyZWZveCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50c1xuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02ODc3ODdcbi8vXG4vLyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjFcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxuLy8gd2hpY2ggaXMgc3BlYyB2aW9sYXRpb24gLSBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50cy1mb2N1c2V2ZW50LWV2ZW50LW9yZGVyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1N1xuaWYgKCAhc3VwcG9ydC5mb2N1c2luICkge1xuXHRqUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXG5cdFx0Ly8gQXR0YWNoIGEgc2luZ2xlIGNhcHR1cmluZyBoYW5kbGVyIG9uIHRoZSBkb2N1bWVudCB3aGlsZSBzb21lb25lIHdhbnRzIGZvY3VzaW4vZm9jdXNvdXRcblx0XHR2YXIgaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICkgKTtcblx0XHR9O1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0ge1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIEhhbmRsZTogcmVndWxhciBub2RlcyAodmlhIGB0aGlzLm93bmVyRG9jdW1lbnRgKSwgd2luZG93XG5cdFx0XHRcdC8vICh2aWEgYHRoaXMuZG9jdW1lbnRgKSAmIGRvY3VtZW50ICh2aWEgYHRoaXNgKS5cblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLmRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTtcblx0XHRcdH0sXG5cdFx0XHR0ZWFyZG93bjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcy5kb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApIC0gMTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZG9jLCBmaXggKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsIGF0dGFjaGVzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9ICk7XG59XG52YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XG5cbnZhciBub25jZSA9IHsgZ3VpZDogRGF0ZS5ub3coKSB9O1xuXG52YXIgcnF1ZXJ5ID0gKCAvXFw/LyApO1xuXG5cblxuLy8gQ3Jvc3MtYnJvd3NlciB4bWwgcGFyc2luZ1xualF1ZXJ5LnBhcnNlWE1MID0gZnVuY3Rpb24oIGRhdGEgKSB7XG5cdHZhciB4bWwsIHBhcnNlckVycm9yRWxlbTtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge31cblxuXHRwYXJzZXJFcnJvckVsZW0gPSB4bWwgJiYgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInBhcnNlcmVycm9yXCIgKVsgMCBdO1xuXHRpZiAoICF4bWwgfHwgcGFyc2VyRXJyb3JFbGVtICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyAoXG5cdFx0XHRwYXJzZXJFcnJvckVsZW0gP1xuXHRcdFx0XHRqUXVlcnkubWFwKCBwYXJzZXJFcnJvckVsZW0uY2hpbGROb2RlcywgZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0XHRcdHJldHVybiBlbC50ZXh0Q29udGVudDtcblx0XHRcdFx0fSApLmpvaW4oIFwiXFxuXCIgKSA6XG5cdFx0XHRcdGRhdGFcblx0XHQpICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cblxudmFyXG5cdHJicmFja2V0ID0gL1xcW1xcXSQvLFxuXHRyQ1JMRiA9IC9cXHI/XFxuL2csXG5cdHJzdWJtaXR0ZXJUeXBlcyA9IC9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxcblx0cnN1Ym1pdHRhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO1xuXG5mdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7XG5cdHZhciBuYW1lO1xuXG5cdGlmICggQXJyYXkuaXNBcnJheSggb2JqICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS5cblx0XHRqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHtcblx0XHRcdGlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7XG5cblx0XHRcdFx0Ly8gVHJlYXQgZWFjaCBhcnJheSBpdGVtIGFzIGEgc2NhbGFyLlxuXHRcdFx0XHRhZGQoIHByZWZpeCwgdiApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cyBudW1lcmljIGluZGV4LlxuXHRcdFx0XHRidWlsZFBhcmFtcyhcblx0XHRcdFx0XHRwcmVmaXggKyBcIltcIiArICggdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPSBudWxsID8gaSA6IFwiXCIgKSArIFwiXVwiLFxuXHRcdFx0XHRcdHYsXG5cdFx0XHRcdFx0dHJhZGl0aW9uYWwsXG5cdFx0XHRcdFx0YWRkXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdH0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiB0b1R5cGUoIG9iaiApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIG9iamVjdCBpdGVtLlxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCArIFwiW1wiICsgbmFtZSArIFwiXVwiLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHNjYWxhciBpdGVtLlxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcblx0fVxufVxuXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxuLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XG5cdHZhciBwcmVmaXgsXG5cdFx0cyA9IFtdLFxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCB1c2UgaXRzIHJldHVybiB2YWx1ZVxuXHRcdFx0dmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgP1xuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb24oKSA6XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbjtcblxuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArXG5cdFx0XHRcdGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdH07XG5cblx0aWYgKCBhID09IG51bGwgKSB7XG5cdFx0cmV0dXJuIFwiXCI7XG5cdH1cblxuXHQvLyBJZiBhbiBhcnJheSB3YXMgcGFzc2VkIGluLCBhc3N1bWUgdGhhdCBpdCBpcyBhbiBhcnJheSBvZiBmb3JtIGVsZW1lbnRzLlxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHNcblx0XHRqUXVlcnkuZWFjaCggYSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApO1xuXHRcdH0gKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gSWYgdHJhZGl0aW9uYWwsIGVuY29kZSB0aGUgXCJvbGRcIiB3YXkgKHRoZSB3YXkgMS4zLjIgb3Igb2xkZXJcblx0XHQvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS5cblx0XHRmb3IgKCBwcmVmaXggaW4gYSApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXgsIGFbIHByZWZpeCBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvblxuXHRyZXR1cm4gcy5qb2luKCBcIiZcIiApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzZXJpYWxpemU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnkucGFyYW0oIHRoaXMuc2VyaWFsaXplQXJyYXkoKSApO1xuXHR9LFxuXHRzZXJpYWxpemVBcnJheTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2FuIGFkZCBwcm9wSG9vayBmb3IgXCJlbGVtZW50c1wiIHRvIGZpbHRlciBvciBhZGQgZm9ybSBlbGVtZW50c1xuXHRcdFx0dmFyIGVsZW1lbnRzID0galF1ZXJ5LnByb3AoIHRoaXMsIFwiZWxlbWVudHNcIiApO1xuXHRcdFx0cmV0dXJuIGVsZW1lbnRzID8galF1ZXJ5Lm1ha2VBcnJheSggZWxlbWVudHMgKSA6IHRoaXM7XG5cdFx0fSApLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdHlwZSA9IHRoaXMudHlwZTtcblxuXHRcdFx0Ly8gVXNlIC5pcyggXCI6ZGlzYWJsZWRcIiApIHNvIHRoYXQgZmllbGRzZXRbZGlzYWJsZWRdIHdvcmtzXG5cdFx0XHRyZXR1cm4gdGhpcy5uYW1lICYmICFqUXVlcnkoIHRoaXMgKS5pcyggXCI6ZGlzYWJsZWRcIiApICYmXG5cdFx0XHRcdHJzdWJtaXR0YWJsZS50ZXN0KCB0aGlzLm5vZGVOYW1lICkgJiYgIXJzdWJtaXR0ZXJUeXBlcy50ZXN0KCB0eXBlICkgJiZcblx0XHRcdFx0KCB0aGlzLmNoZWNrZWQgfHwgIXJjaGVja2FibGVUeXBlLnRlc3QoIHR5cGUgKSApO1xuXHRcdH0gKS5tYXAoIGZ1bmN0aW9uKCBfaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdH0gKS5nZXQoKTtcblx0fVxufSApO1xuXG5cbnZhclxuXHRyMjAgPSAvJTIwL2csXG5cdHJoYXNoID0gLyMuKiQvLFxuXHRyYW50aUNhY2hlID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcblxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblxub3JpZ2luQW5jaG9yLmhyZWYgPSBsb2NhdGlvbi5ocmVmO1xuXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XG5mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHtcblxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXG5cdHJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkge1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZnVuYyA9IGRhdGFUeXBlRXhwcmVzc2lvbjtcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xuXHRcdH1cblxuXHRcdHZhciBkYXRhVHlwZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0ZGF0YVR5cGVzID0gZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggZnVuYyApICkge1xuXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcblx0XHRcdFx0aWYgKCBkYXRhVHlwZVsgMCBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkucHVzaCggZnVuYyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XG5cblx0dmFyIGluc3BlY3RlZCA9IHt9LFxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xuXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xuXHRcdHZhciBzZWxlY3RlZDtcblx0XHRpbnNwZWN0ZWRbIGRhdGFUeXBlIF0gPSB0cnVlO1xuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xuXHRcdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydCA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XG5cblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xuXHR9XG5cblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XG59XG5cbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcbi8vIEZpeGVzICM5ODg3XG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcblx0dmFyIGtleSwgZGVlcCxcblx0XHRmbGF0T3B0aW9ucyA9IGpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnMgfHwge307XG5cblx0Zm9yICgga2V5IGluIHNyYyApIHtcblx0XHRpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENvbmRlbnNlIGVxdWl2YWxlbmNlIGNvbnZlcnRlcnNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y3VycmVudCA9IHRtcFsgMCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXBwbHkgY29udmVydGVyIChpZiBub3QgYW4gZXF1aXZhbGVuY2UpXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcblxuXHRcdFx0XHRcdC8vIFVubGVzcyBlcnJvcnMgYXJlIGFsbG93ZWQgdG8gYnViYmxlLCBjYXRjaCBhbmQgcmV0dXJuIHRoZW1cblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgcy50aHJvd3MgKSB7XG5cdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXRlOiBcInBhcnNlcmVycm9yXCIsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNvbnYgPyBlIDogXCJObyBjb252ZXJzaW9uIGZyb20gXCIgKyBwcmV2ICsgXCIgdG8gXCIgKyBjdXJyZW50XG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHsgc3RhdGU6IFwic3VjY2Vzc1wiLCBkYXRhOiByZXNwb25zZSB9O1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzXG5cdGFjdGl2ZTogMCxcblxuXHQvLyBMYXN0LU1vZGlmaWVkIGhlYWRlciBjYWNoZSBmb3IgbmV4dCByZXF1ZXN0XG5cdGxhc3RNb2RpZmllZDoge30sXG5cdGV0YWc6IHt9LFxuXG5cdGFqYXhTZXR0aW5nczoge1xuXHRcdHVybDogbG9jYXRpb24uaHJlZixcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGlzTG9jYWw6IHJsb2NhbFByb3RvY29sLnRlc3QoIGxvY2F0aW9uLnByb3RvY29sICksXG5cdFx0Z2xvYmFsOiB0cnVlLFxuXHRcdHByb2Nlc3NEYXRhOiB0cnVlLFxuXHRcdGFzeW5jOiB0cnVlLFxuXHRcdGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLFxuXG5cdFx0Lypcblx0XHR0aW1lb3V0OiAwLFxuXHRcdGRhdGE6IG51bGwsXG5cdFx0ZGF0YVR5cGU6IG51bGwsXG5cdFx0dXNlcm5hbWU6IG51bGwsXG5cdFx0cGFzc3dvcmQ6IG51bGwsXG5cdFx0Y2FjaGU6IG51bGwsXG5cdFx0dGhyb3dzOiBmYWxzZSxcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXG5cdFx0aGVhZGVyczoge30sXG5cdFx0Ki9cblxuXHRcdGFjY2VwdHM6IHtcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxuXHRcdFx0aHRtbDogXCJ0ZXh0L2h0bWxcIixcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXG5cdFx0fSxcblxuXHRcdGNvbnRlbnRzOiB7XG5cdFx0XHR4bWw6IC9cXGJ4bWxcXGIvLFxuXHRcdFx0aHRtbDogL1xcYmh0bWwvLFxuXHRcdFx0anNvbjogL1xcYmpzb25cXGIvXG5cdFx0fSxcblxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XG5cdFx0XHR4bWw6IFwicmVzcG9uc2VYTUxcIixcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXG5cdFx0fSxcblxuXHRcdC8vIERhdGEgY29udmVydGVyc1xuXHRcdC8vIEtleXMgc2VwYXJhdGUgc291cmNlIChvciBjYXRjaGFsbCBcIipcIikgYW5kIGRlc3RpbmF0aW9uIHR5cGVzIHdpdGggYSBzaW5nbGUgc3BhY2Vcblx0XHRjb252ZXJ0ZXJzOiB7XG5cblx0XHRcdC8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dFxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxuXG5cdFx0XHQvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbilcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXG5cblx0XHRcdC8vIEV2YWx1YXRlIHRleHQgYXMgYSBqc29uIGV4cHJlc3Npb25cblx0XHRcdFwidGV4dCBqc29uXCI6IEpTT04ucGFyc2UsXG5cblx0XHRcdC8vIFBhcnNlIHRleHQgYXMgeG1sXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxuXHRcdH0sXG5cblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcblx0XHQvLyBhbmQgd2hlbiB5b3UgY3JlYXRlIG9uZSB0aGF0IHNob3VsZG4ndCBiZVxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxuXHRcdGZsYXRPcHRpb25zOiB7XG5cdFx0XHR1cmw6IHRydWUsXG5cdFx0XHRjb250ZXh0OiB0cnVlXG5cdFx0fVxuXHR9LFxuXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XG5cdC8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy5cblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcblx0XHRyZXR1cm4gc2V0dGluZ3MgP1xuXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxuXHRcdFx0YWpheEV4dGVuZCggYWpheEV4dGVuZCggdGFyZ2V0LCBqUXVlcnkuYWpheFNldHRpbmdzICksIHNldHRpbmdzICkgOlxuXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXG5cdFx0XHRhamF4RXh0ZW5kKCBqUXVlcnkuYWpheFNldHRpbmdzLCB0YXJnZXQgKTtcblx0fSxcblxuXHRhamF4UHJlZmlsdGVyOiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMgKSxcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXG5cblx0Ly8gTWFpbiBtZXRob2Rcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcblxuXHRcdC8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0b3B0aW9ucyA9IHVybDtcblx0XHRcdHVybCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBGb3JjZSBvcHRpb25zIHRvIGJlIGFuIG9iamVjdFxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdFx0dmFyIHRyYW5zcG9ydCxcblxuXHRcdFx0Ly8gVVJMIHdpdGhvdXQgYW50aS1jYWNoZSBwYXJhbVxuXHRcdFx0Y2FjaGVVUkwsXG5cblx0XHRcdC8vIFJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyxcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcblxuXHRcdFx0Ly8gdGltZW91dCBoYW5kbGVcblx0XHRcdHRpbWVvdXRUaW1lcixcblxuXHRcdFx0Ly8gVXJsIGNsZWFudXAgdmFyXG5cdFx0XHR1cmxBbmNob3IsXG5cblx0XHRcdC8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBzZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbilcblx0XHRcdGNvbXBsZXRlZCxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkXG5cdFx0XHRmaXJlR2xvYmFscyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJsXG5cdFx0XHR1bmNhY2hlZCxcblxuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdFxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXG5cblx0XHRcdC8vIENhbGxiYWNrcyBjb250ZXh0XG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcblxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXG5cdFx0XHRcdCggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdGpRdWVyeSggY2FsbGJhY2tDb250ZXh0ICkgOlxuXHRcdFx0XHRqUXVlcnkuZXZlbnQsXG5cblx0XHRcdC8vIERlZmVycmVkc1xuXHRcdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXG5cblx0XHRcdC8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0IG9uY2UpXG5cdFx0XHRyZXF1ZXN0SGVhZGVycyA9IHt9LFxuXHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lcyA9IHt9LFxuXG5cdFx0XHQvLyBEZWZhdWx0IGFib3J0IG1lc3NhZ2Vcblx0XHRcdHN0ckFib3J0ID0gXCJjYW5jZWxlZFwiLFxuXG5cdFx0XHQvLyBGYWtlIHhoclxuXHRcdFx0anFYSFIgPSB7XG5cdFx0XHRcdHJlYWR5U3RhdGU6IDAsXG5cblx0XHRcdFx0Ly8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5lZWRlZFxuXHRcdFx0XHRnZXRSZXNwb25zZUhlYWRlcjogZnVuY3Rpb24oIGtleSApIHtcblx0XHRcdFx0XHR2YXIgbWF0Y2g7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICFyZXNwb25zZUhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVycyA9IHt9O1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNwb25zZUhlYWRlcnNTdHJpbmcgKSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSA9XG5cdFx0XHRcdFx0XHRcdFx0XHQoIHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSB8fCBbXSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5jb25jYXQoIG1hdGNoWyAyIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoID09IG51bGwgPyBudWxsIDogbWF0Y2guam9pbiggXCIsIFwiICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gUmF3IHN0cmluZ1xuXHRcdFx0XHRnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBjb21wbGV0ZWQgPyByZXNwb25zZUhlYWRlcnNTdHJpbmcgOiBudWxsO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhY2hlcyB0aGUgaGVhZGVyXG5cdFx0XHRcdHNldFJlcXVlc3RIZWFkZXI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0bmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdID1cblx0XHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHwgbmFtZTtcblx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGVzIHJlc3BvbnNlIGNvbnRlbnQtdHlwZSBoZWFkZXJcblx0XHRcdFx0b3ZlcnJpZGVNaW1lVHlwZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdHMubWltZVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0XHRzdGF0dXNDb2RlOiBmdW5jdGlvbiggbWFwICkge1xuXHRcdFx0XHRcdHZhciBjb2RlO1xuXHRcdFx0XHRcdGlmICggbWFwICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gRXhlY3V0ZSB0aGUgYXBwcm9wcmlhdGUgY2FsbGJhY2tzXG5cdFx0XHRcdFx0XHRcdGpxWEhSLmFsd2F5cyggbWFwWyBqcVhIUi5zdGF0dXMgXSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBMYXp5LWFkZCB0aGUgbmV3IGNhbGxiYWNrcyBpbiBhIHdheSB0aGF0IHByZXNlcnZlcyBvbGQgb25lc1xuXHRcdFx0XHRcdFx0XHRmb3IgKCBjb2RlIGluIG1hcCApIHtcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYW5jZWwgdGhlIHJlcXVlc3Rcblx0XHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCBzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHZhciBmaW5hbFRleHQgPSBzdGF0dXNUZXh0IHx8IHN0ckFib3J0O1xuXHRcdFx0XHRcdGlmICggdHJhbnNwb3J0ICkge1xuXHRcdFx0XHRcdFx0dHJhbnNwb3J0LmFib3J0KCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZG9uZSggMCwgZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHQvLyBBdHRhY2ggZGVmZXJyZWRzXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKTtcblxuXHRcdC8vIEFkZCBwcm90b2NvbCBpZiBub3QgcHJvdmlkZWQgKHByZWZpbHRlcnMgbWlnaHQgZXhwZWN0IGl0KVxuXHRcdC8vIEhhbmRsZSBmYWxzeSB1cmwgaW4gdGhlIHNldHRpbmdzIG9iamVjdCAoIzEwMDkzOiBjb25zaXN0ZW5jeSB3aXRoIG9sZCBzaWduYXR1cmUpXG5cdFx0Ly8gV2UgYWxzbyB1c2UgdGhlIHVybCBwYXJhbWV0ZXIgaWYgYXZhaWxhYmxlXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGxvY2F0aW9uLmhyZWYgKSArIFwiXCIgKVxuXHRcdFx0LnJlcGxhY2UoIHJwcm90b2NvbCwgbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKTtcblxuXHRcdC8vIEFsaWFzIG1ldGhvZCBvcHRpb24gdG8gdHlwZSBhcyBwZXIgdGlja2V0ICMxMjAwNFxuXHRcdHMudHlwZSA9IG9wdGlvbnMubWV0aG9kIHx8IG9wdGlvbnMudHlwZSB8fCBzLm1ldGhvZCB8fCBzLnR5cGU7XG5cblx0XHQvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0XG5cdFx0cy5kYXRhVHlwZXMgPSAoIHMuZGF0YVR5cGUgfHwgXCIqXCIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cblx0XHQvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gdGhlIG9yaWdpbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IG9yaWdpbi5cblx0XHRpZiAoIHMuY3Jvc3NEb21haW4gPT0gbnVsbCApIHtcblx0XHRcdHVybEFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExLCBFZGdlIDEyIC0gMTVcblx0XHRcdC8vIElFIHRocm93cyBleGNlcHRpb24gb24gYWNjZXNzaW5nIHRoZSBocmVmIHByb3BlcnR5IGlmIHVybCBpcyBtYWxmb3JtZWQsXG5cdFx0XHQvLyBlLmcuIGh0dHA6Ly9leGFtcGxlLmNvbTo4MHgvXG5cdFx0XHR0cnkge1xuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHMudXJsO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExIG9ubHlcblx0XHRcdFx0Ly8gQW5jaG9yJ3MgaG9zdCBwcm9wZXJ0eSBpc24ndCBjb3JyZWN0bHkgc2V0IHdoZW4gcy51cmwgaXMgcmVsYXRpdmVcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjtcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IG9yaWdpbkFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIG9yaWdpbkFuY2hvci5ob3N0ICE9PVxuXHRcdFx0XHRcdHVybEFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIHVybEFuY2hvci5ob3N0O1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgVVJMLCBhc3N1bWUgaXQgaXMgY3Jvc3NEb21haW4sXG5cdFx0XHRcdC8vIGl0IGNhbiBiZSByZWplY3RlZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWRcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwcmVmaWx0ZXJzXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZVxuXHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdH1cblxuXHRcdC8vIFdlIGNhbiBmaXJlIGdsb2JhbCBldmVudHMgYXMgb2Ygbm93IGlmIGFza2VkIHRvXG5cdFx0Ly8gRG9uJ3QgZmlyZSBldmVudHMgaWYgalF1ZXJ5LmV2ZW50IGlzIHVuZGVmaW5lZCBpbiBhbiBBTUQtdXNhZ2Ugc2NlbmFyaW8gKCMxNTExOClcblx0XHRmaXJlR2xvYmFscyA9IGpRdWVyeS5ldmVudCAmJiBzLmdsb2JhbDtcblxuXHRcdC8vIFdhdGNoIGZvciBhIG5ldyBzZXQgb2YgcmVxdWVzdHNcblx0XHRpZiAoIGZpcmVHbG9iYWxzICYmIGpRdWVyeS5hY3RpdmUrKyA9PT0gMCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdGFydFwiICk7XG5cdFx0fVxuXG5cdFx0Ly8gVXBwZXJjYXNlIHRoZSB0eXBlXG5cdFx0cy50eXBlID0gcy50eXBlLnRvVXBwZXJDYXNlKCk7XG5cblx0XHQvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudFxuXHRcdHMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApO1xuXG5cdFx0Ly8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUgdG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlXG5cdFx0Ly8gYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyIGxhdGVyIG9uXG5cdFx0Ly8gUmVtb3ZlIGhhc2ggdG8gc2ltcGxpZnkgdXJsIG1hbmlwdWxhdGlvblxuXHRcdGNhY2hlVVJMID0gcy51cmwucmVwbGFjZSggcmhhc2gsIFwiXCIgKTtcblxuXHRcdC8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50XG5cdFx0aWYgKCAhcy5oYXNDb250ZW50ICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgaGFzaCBzbyB3ZSBjYW4gcHV0IGl0IGJhY2tcblx0XHRcdHVuY2FjaGVkID0gcy51cmwuc2xpY2UoIGNhY2hlVVJMLmxlbmd0aCApO1xuXG5cdFx0XHQvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSBhbmQgc2hvdWxkIGJlIHByb2Nlc3NlZCwgYXBwZW5kIGRhdGEgdG8gdXJsXG5cdFx0XHRpZiAoIHMuZGF0YSAmJiAoIHMucHJvY2Vzc0RhdGEgfHwgdHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiApICkge1xuXHRcdFx0XHRjYWNoZVVSTCArPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgcy5kYXRhO1xuXG5cdFx0XHRcdC8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcblx0XHRcdFx0ZGVsZXRlIHMuZGF0YTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIG9yIHVwZGF0ZSBhbnRpLWNhY2hlIHBhcmFtIGlmIG5lZWRlZFxuXHRcdFx0aWYgKCBzLmNhY2hlID09PSBmYWxzZSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgPSBjYWNoZVVSTC5yZXBsYWNlKCByYW50aUNhY2hlLCBcIiQxXCIgKTtcblx0XHRcdFx0dW5jYWNoZWQgPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgXCJfPVwiICsgKCBub25jZS5ndWlkKysgKSArXG5cdFx0XHRcdFx0dW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFVzZSBhIG5vb3AgY29udmVydGVyIGZvciBtaXNzaW5nIHNjcmlwdCBidXQgbm90IGlmIGpzb25wXG5cdFx0XHRpZiAoICFpc1N1Y2Nlc3MgJiZcblx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIFwic2NyaXB0XCIsIHMuZGF0YVR5cGVzICkgPiAtMSAmJlxuXHRcdFx0XHRqUXVlcnkuaW5BcnJheSggXCJqc29uXCIsIHMuZGF0YVR5cGVzICkgPCAwICkge1xuXHRcdFx0XHRzLmNvbnZlcnRlcnNbIFwidGV4dCBzY3JpcHRcIiBdID0gZnVuY3Rpb24oKSB7fTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCBubyBtYXR0ZXIgd2hhdCAodGhhdCB3YXkgcmVzcG9uc2VYWFggZmllbGRzIGFyZSBhbHdheXMgc2V0KVxuXHRcdFx0cmVzcG9uc2UgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKTtcblxuXHRcdFx0Ly8gSWYgc3VjY2Vzc2Z1bCwgaGFuZGxlIHR5cGUgY2hhaW5pbmdcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXG5cdFx0XHRcdC8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuXG5cdFx0XHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiTGFzdC1Nb2RpZmllZFwiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJldGFnXCIgKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBpZiBubyBjb250ZW50XG5cdFx0XHRcdGlmICggc3RhdHVzID09PSAyMDQgfHwgcy50eXBlID09PSBcIkhFQURcIiApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJub2NvbnRlbnRcIjtcblxuXHRcdFx0XHQvLyBpZiBub3QgbW9kaWZpZWRcblx0XHRcdFx0fSBlbHNlIGlmICggc3RhdHVzID09PSAzMDQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm90bW9kaWZpZWRcIjtcblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGRhdGEsIGxldCdzIGNvbnZlcnQgaXRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7XG5cdFx0XHRcdFx0c3VjY2VzcyA9IHJlc3BvbnNlLmRhdGE7XG5cdFx0XHRcdFx0ZXJyb3IgPSByZXNwb25zZS5lcnJvcjtcblx0XHRcdFx0XHRpc1N1Y2Nlc3MgPSAhZXJyb3I7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gRXh0cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHQgYW5kIG5vcm1hbGl6ZSBmb3Igbm9uLWFib3J0c1xuXHRcdFx0XHRlcnJvciA9IHN0YXR1c1RleHQ7XG5cdFx0XHRcdGlmICggc3RhdHVzIHx8ICFzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcImVycm9yXCI7XG5cdFx0XHRcdFx0aWYgKCBzdGF0dXMgPCAwICkge1xuXHRcdFx0XHRcdFx0c3RhdHVzID0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IGRhdGEgZm9yIHRoZSBmYWtlIHhociBvYmplY3Rcblx0XHRcdGpxWEhSLnN0YXR1cyA9IHN0YXR1cztcblx0XHRcdGpxWEhSLnN0YXR1c1RleHQgPSAoIG5hdGl2ZVN0YXR1c1RleHQgfHwgc3RhdHVzVGV4dCApICsgXCJcIjtcblxuXHRcdFx0Ly8gU3VjY2Vzcy9FcnJvclxuXHRcdFx0aWYgKCBpc1N1Y2Nlc3MgKSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsgc3VjY2Vzcywgc3RhdHVzVGV4dCwganFYSFIgXSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0LCBlcnJvciBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRqcVhIUi5zdGF0dXNDb2RlKCBzdGF0dXNDb2RlICk7XG5cdFx0XHRzdGF0dXNDb2RlID0gdW5kZWZpbmVkO1xuXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggaXNTdWNjZXNzID8gXCJhamF4U3VjY2Vzc1wiIDogXCJhamF4RXJyb3JcIixcblx0XHRcdFx0XHRbIGpxWEhSLCBzLCBpc1N1Y2Nlc3MgPyBzdWNjZXNzIDogZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb21wbGV0ZVxuXHRcdFx0Y29tcGxldGVEZWZlcnJlZC5maXJlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0IF0gKTtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheENvbXBsZXRlXCIsIFsganFYSFIsIHMgXSApO1xuXG5cdFx0XHRcdC8vIEhhbmRsZSB0aGUgZ2xvYmFsIEFKQVggY291bnRlclxuXHRcdFx0XHRpZiAoICEoIC0talF1ZXJ5LmFjdGl2ZSApICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdG9wXCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBqcVhIUjtcblx0fSxcblxuXHRnZXRKU09OOiBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgXCJqc29uXCIgKTtcblx0fSxcblxuXHRnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5lZCwgY2FsbGJhY2ssIFwic2NyaXB0XCIgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImdldFwiLCBcInBvc3RcIiBdLCBmdW5jdGlvbiggX2ksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGRhdGEgKSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IGNhbGxiYWNrO1xuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUgLnVybClcblx0XHRyZXR1cm4galF1ZXJ5LmFqYXgoIGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0dHlwZTogbWV0aG9kLFxuXHRcdFx0ZGF0YVR5cGU6IHR5cGUsXG5cdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0c3VjY2VzczogY2FsbGJhY2tcblx0XHR9LCBqUXVlcnkuaXNQbGFpbk9iamVjdCggdXJsICkgJiYgdXJsICkgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xuXHR2YXIgaTtcblx0Zm9yICggaSBpbiBzLmhlYWRlcnMgKSB7XG5cdFx0aWYgKCBpLnRvTG93ZXJDYXNlKCkgPT09IFwiY29udGVudC10eXBlXCIgKSB7XG5cdFx0XHRzLmNvbnRlbnRUeXBlID0gcy5oZWFkZXJzWyBpIF0gfHwgXCJcIjtcblx0XHR9XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuX2V2YWxVcmwgPSBmdW5jdGlvbiggdXJsLCBvcHRpb25zLCBkb2MgKSB7XG5cdHJldHVybiBqUXVlcnkuYWpheCgge1xuXHRcdHVybDogdXJsLFxuXG5cdFx0Ly8gTWFrZSB0aGlzIGV4cGxpY2l0LCBzaW5jZSB1c2VyIGNhbiBvdmVycmlkZSB0aGlzIHRocm91Z2ggYWpheFNldHVwICgjMTEyNjQpXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRkYXRhVHlwZTogXCJzY3JpcHRcIixcblx0XHRjYWNoZTogdHJ1ZSxcblx0XHRhc3luYzogZmFsc2UsXG5cdFx0Z2xvYmFsOiBmYWxzZSxcblxuXHRcdC8vIE9ubHkgZXZhbHVhdGUgdGhlIHJlc3BvbnNlIGlmIGl0IGlzIHN1Y2Nlc3NmdWwgKGdoLTQxMjYpXG5cdFx0Ly8gZGF0YUZpbHRlciBpcyBub3QgaW52b2tlZCBmb3IgZmFpbHVyZSByZXNwb25zZXMsIHNvIHVzaW5nIGl0IGluc3RlYWRcblx0XHQvLyBvZiB0aGUgZGVmYXVsdCBjb252ZXJ0ZXIgaXMga2x1ZGd5IGJ1dCBpdCB3b3Jrcy5cblx0XHRjb252ZXJ0ZXJzOiB7XG5cdFx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCkge31cblx0XHR9LFxuXHRcdGRhdGFGaWx0ZXI6IGZ1bmN0aW9uKCByZXNwb25zZSApIHtcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCByZXNwb25zZSwgb3B0aW9ucywgZG9jICk7XG5cdFx0fVxuXHR9ICk7XG59O1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0d3JhcEFsbDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIHdyYXA7XG5cblx0XHRpZiAoIHRoaXNbIDAgXSApIHtcblx0XHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0XHRodG1sID0gaHRtbC5jYWxsKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmRcblx0XHRcdHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNbIDAgXS5vd25lckRvY3VtZW50ICkuZXEoIDAgKS5jbG9uZSggdHJ1ZSApO1xuXG5cdFx0XHRpZiAoIHRoaXNbIDAgXS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHdyYXAubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xuXG5cdFx0XHRcdHdoaWxlICggZWxlbS5maXJzdEVsZW1lbnRDaGlsZCApIHtcblx0XHRcdFx0XHRlbGVtID0gZWxlbS5maXJzdEVsZW1lbnRDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBlbGVtO1xuXHRcdFx0fSApLmFwcGVuZCggdGhpcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHdyYXBJbm5lcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcElubmVyKCBodG1sLmNhbGwoIHRoaXMsIGkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSxcblx0XHRcdFx0Y29udGVudHMgPSBzZWxmLmNvbnRlbnRzKCk7XG5cblx0XHRcdGlmICggY29udGVudHMubGVuZ3RoICkge1xuXHRcdFx0XHRjb250ZW50cy53cmFwQWxsKCBodG1sICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNlbGYuYXBwZW5kKCBodG1sICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciBodG1sSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIGh0bWwgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaHRtbElzRnVuY3Rpb24gPyBodG1sLmNhbGwoIHRoaXMsIGkgKSA6IGh0bWwgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0dW53cmFwOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dGhpcy5wYXJlbnQoIHNlbGVjdG9yICkubm90KCBcImJvZHlcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkucmVwbGFjZVdpdGgoIHRoaXMuY2hpbGROb2RlcyApO1xuXHRcdH0gKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuaGlkZGVuID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlKCBlbGVtICk7XG59O1xualF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhISggZWxlbS5vZmZzZXRXaWR0aCB8fCBlbGVtLm9mZnNldEhlaWdodCB8fCBlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICk7XG59O1xuXG5cblxuXG5qUXVlcnkuYWpheFNldHRpbmdzLnhociA9IGZ1bmN0aW9uKCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XG5cdH0gY2F0Y2ggKCBlICkge31cbn07XG5cbnZhciB4aHJTdWNjZXNzU3RhdHVzID0ge1xuXG5cdFx0Ly8gRmlsZSBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyBjb2RlIDAsIGFzc3VtZSAyMDBcblx0XHQwOiAyMDAsXG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdC8vICMxNDUwOiBzb21ldGltZXMgSUUgcmV0dXJucyAxMjIzIHdoZW4gaXQgc2hvdWxkIGJlIDIwNFxuXHRcdDEyMjM6IDIwNFxuXHR9LFxuXHR4aHJTdXBwb3J0ZWQgPSBqUXVlcnkuYWpheFNldHRpbmdzLnhocigpO1xuXG5zdXBwb3J0LmNvcnMgPSAhIXhoclN1cHBvcnRlZCAmJiAoIFwid2l0aENyZWRlbnRpYWxzXCIgaW4geGhyU3VwcG9ydGVkICk7XG5zdXBwb3J0LmFqYXggPSB4aHJTdXBwb3J0ZWQgPSAhIXhoclN1cHBvcnRlZDtcblxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHR2YXIgY2FsbGJhY2ssIGVycm9yQ2FsbGJhY2s7XG5cblx0Ly8gQ3Jvc3MgZG9tYWluIG9ubHkgYWxsb3dlZCBpZiBzdXBwb3J0ZWQgdGhyb3VnaCBYTUxIdHRwUmVxdWVzdFxuXHRpZiAoIHN1cHBvcnQuY29ycyB8fCB4aHJTdXBwb3J0ZWQgJiYgIW9wdGlvbnMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbmQ6IGZ1bmN0aW9uKCBoZWFkZXJzLCBjb21wbGV0ZSApIHtcblx0XHRcdFx0dmFyIGksXG5cdFx0XHRcdFx0eGhyID0gb3B0aW9ucy54aHIoKTtcblxuXHRcdFx0XHR4aHIub3Blbihcblx0XHRcdFx0XHRvcHRpb25zLnR5cGUsXG5cdFx0XHRcdFx0b3B0aW9ucy51cmwsXG5cdFx0XHRcdFx0b3B0aW9ucy5hc3luYyxcblx0XHRcdFx0XHRvcHRpb25zLnVzZXJuYW1lLFxuXHRcdFx0XHRcdG9wdGlvbnMucGFzc3dvcmRcblx0XHRcdFx0KTtcblxuXHRcdFx0XHQvLyBBcHBseSBjdXN0b20gZmllbGRzIGlmIHByb3ZpZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0Zm9yICggaSBpbiBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRcdHhoclsgaSBdID0gb3B0aW9ucy54aHJGaWVsZHNbIGkgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBPdmVycmlkZSBtaW1lIHR5cGUgaWYgbmVlZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy5taW1lVHlwZSAmJiB4aHIub3ZlcnJpZGVNaW1lVHlwZSApIHtcblx0XHRcdFx0XHR4aHIub3ZlcnJpZGVNaW1lVHlwZSggb3B0aW9ucy5taW1lVHlwZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gWC1SZXF1ZXN0ZWQtV2l0aCBoZWFkZXJcblx0XHRcdFx0Ly8gRm9yIGNyb3NzLWRvbWFpbiByZXF1ZXN0cywgc2VlaW5nIGFzIGNvbmRpdGlvbnMgZm9yIGEgcHJlZmxpZ2h0IGFyZVxuXHRcdFx0XHQvLyBha2luIHRvIGEgamlnc2F3IHB1enpsZSwgd2Ugc2ltcGx5IG5ldmVyIHNldCBpdCB0byBiZSBzdXJlLlxuXHRcdFx0XHQvLyAoaXQgY2FuIGFsd2F5cyBiZSBzZXQgb24gYSBwZXItcmVxdWVzdCBiYXNpcyBvciBldmVuIHVzaW5nIGFqYXhTZXR1cClcblx0XHRcdFx0Ly8gRm9yIHNhbWUtZG9tYWluIHJlcXVlc3RzLCB3b24ndCBjaGFuZ2UgaGVhZGVyIGlmIGFscmVhZHkgcHJvdmlkZWQuXG5cdFx0XHRcdGlmICggIW9wdGlvbnMuY3Jvc3NEb21haW4gJiYgIWhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gKSB7XG5cdFx0XHRcdFx0aGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSA9IFwiWE1MSHR0cFJlcXVlc3RcIjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFNldCBoZWFkZXJzXG5cdFx0XHRcdGZvciAoIGkgaW4gaGVhZGVycyApIHtcblx0XHRcdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlciggaSwgaGVhZGVyc1sgaSBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gZXJyb3JDYWxsYmFjayA9IHhoci5vbmxvYWQgPVxuXHRcdFx0XHRcdFx0XHRcdHhoci5vbmVycm9yID0geGhyLm9uYWJvcnQgPSB4aHIub250aW1lb3V0ID1cblx0XHRcdFx0XHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuXG5cdFx0XHRcdFx0XHRcdGlmICggdHlwZSA9PT0gXCJhYm9ydFwiICkge1xuXHRcdFx0XHRcdFx0XHRcdHhoci5hYm9ydCgpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCB0eXBlID09PSBcImVycm9yXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIE9uIGEgbWFudWFsIG5hdGl2ZSBhYm9ydCwgSUU5IHRocm93c1xuXHRcdFx0XHRcdFx0XHRcdC8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNzIHRoYXQgaXMgbm90IHJlYWR5U3RhdGVcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHR5cGVvZiB4aHIuc3RhdHVzICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIDAsIFwiZXJyb3JcIiApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBGaWxlOiBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwN1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHJTdWNjZXNzU3RhdHVzWyB4aHIuc3RhdHVzIF0gfHwgeGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0LFxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSUU5IGhhcyBubyBYSFIyIGJ1dCB0aHJvd3Mgb24gYmluYXJ5ICh0cmFjLTExNDI2KVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OClcblx0XHRcdFx0XHRcdFx0XHRcdCggeGhyLnJlc3BvbnNlVHlwZSB8fCBcInRleHRcIiApICE9PSBcInRleHRcIiAgfHxcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiB4aHIucmVzcG9uc2VUZXh0ICE9PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBiaW5hcnk6IHhoci5yZXNwb25zZSB9IDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyB0ZXh0OiB4aHIucmVzcG9uc2VUZXh0IH0sXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBMaXN0ZW4gdG8gZXZlbnRzXG5cdFx0XHRcdHhoci5vbmxvYWQgPSBjYWxsYmFjaygpO1xuXHRcdFx0XHRlcnJvckNhbGxiYWNrID0geGhyLm9uZXJyb3IgPSB4aHIub250aW1lb3V0ID0gY2FsbGJhY2soIFwiZXJyb3JcIiApO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDkgb25seVxuXHRcdFx0XHQvLyBVc2Ugb25yZWFkeXN0YXRlY2hhbmdlIHRvIHJlcGxhY2Ugb25hYm9ydFxuXHRcdFx0XHQvLyB0byBoYW5kbGUgdW5jYXVnaHQgYWJvcnRzXG5cdFx0XHRcdGlmICggeGhyLm9uYWJvcnQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR4aHIub25hYm9ydCA9IGVycm9yQ2FsbGJhY2s7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0XHQvLyBDaGVjayByZWFkeVN0YXRlIGJlZm9yZSB0aW1lb3V0IGFzIGl0IGNoYW5nZXNcblx0XHRcdFx0XHRcdGlmICggeGhyLnJlYWR5U3RhdGUgPT09IDQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQWxsb3cgb25lcnJvciB0byBiZSBjYWxsZWQgZmlyc3QsXG5cdFx0XHRcdFx0XHRcdC8vIGJ1dCB0aGF0IHdpbGwgbm90IGhhbmRsZSBhIG5hdGl2ZSBhYm9ydFxuXHRcdFx0XHRcdFx0XHQvLyBBbHNvLCBzYXZlIGVycm9yQ2FsbGJhY2sgdG8gYSB2YXJpYWJsZVxuXHRcdFx0XHRcdFx0XHQvLyBhcyB4aHIub25lcnJvciBjYW5ub3QgYmUgYWNjZXNzZWRcblx0XHRcdFx0XHRcdFx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRlcnJvckNhbGxiYWNrKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENyZWF0ZSB0aGUgYWJvcnQgY2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBjYWxsYmFjayggXCJhYm9ydFwiICk7XG5cblx0XHRcdFx0dHJ5IHtcblxuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3QgKHRoaXMgbWF5IHJhaXNlIGFuIGV4Y2VwdGlvbilcblx0XHRcdFx0XHR4aHIuc2VuZCggb3B0aW9ucy5oYXNDb250ZW50ICYmIG9wdGlvbnMuZGF0YSB8fCBudWxsICk7XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0Ly8gIzE0NjgzOiBPbmx5IHJldGhyb3cgaWYgdGhpcyBoYXNuJ3QgYmVlbiBub3RpZmllZCBhcyBhbiBlcnJvciB5ZXRcblx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG4vLyBQcmV2ZW50IGF1dG8tZXhlY3V0aW9uIG9mIHNjcmlwdHMgd2hlbiBubyBleHBsaWNpdCBkYXRhVHlwZSB3YXMgcHJvdmlkZWQgKFNlZSBnaC0yNDMyKVxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy5jb250ZW50cy5zY3JpcHQgPSBmYWxzZTtcblx0fVxufSApO1xuXG4vLyBJbnN0YWxsIHNjcmlwdCBkYXRhVHlwZVxualF1ZXJ5LmFqYXhTZXR1cCgge1xuXHRhY2NlcHRzOiB7XG5cdFx0c2NyaXB0OiBcInRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgXCIgK1xuXHRcdFx0XCJhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIlxuXHR9LFxuXHRjb250ZW50czoge1xuXHRcdHNjcmlwdDogL1xcYig/OmphdmF8ZWNtYSlzY3JpcHRcXGIvXG5cdH0sXG5cdGNvbnZlcnRlcnM6IHtcblx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoIHRleHQgKTtcblx0XHRcdHJldHVybiB0ZXh0O1xuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIYW5kbGUgY2FjaGUncyBzcGVjaWFsIGNhc2UgYW5kIGNyb3NzRG9tYWluXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdHMuY2FjaGUgPSBmYWxzZTtcblx0fVxuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy50eXBlID0gXCJHRVRcIjtcblx0fVxufSApO1xuXG4vLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnRcbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblxuXHQvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIG9yIGZvcmNlZC1ieS1hdHRycyByZXF1ZXN0c1xuXHRpZiAoIHMuY3Jvc3NEb21haW4gfHwgcy5zY3JpcHRBdHRycyApIHtcblx0XHR2YXIgc2NyaXB0LCBjYWxsYmFjaztcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIF8sIGNvbXBsZXRlICkge1xuXHRcdFx0XHRzY3JpcHQgPSBqUXVlcnkoIFwiPHNjcmlwdD5cIiApXG5cdFx0XHRcdFx0LmF0dHIoIHMuc2NyaXB0QXR0cnMgfHwge30gKVxuXHRcdFx0XHRcdC5wcm9wKCB7IGNoYXJzZXQ6IHMuc2NyaXB0Q2hhcnNldCwgc3JjOiBzLnVybCB9IClcblx0XHRcdFx0XHQub24oIFwibG9hZCBlcnJvclwiLCBjYWxsYmFjayA9IGZ1bmN0aW9uKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRzY3JpcHQucmVtb3ZlKCk7XG5cdFx0XHRcdFx0XHRjYWxsYmFjayA9IG51bGw7XG5cdFx0XHRcdFx0XHRpZiAoIGV2dCApIHtcblx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIGV2dC50eXBlID09PSBcImVycm9yXCIgPyA0MDQgOiAyMDAsIGV2dC50eXBlICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSApO1xuXG5cdFx0XHRcdC8vIFVzZSBuYXRpdmUgRE9NIG1hbmlwdWxhdGlvbiB0byBhdm9pZCBvdXIgZG9tTWFuaXAgQUpBWCB0cmlja2VyeVxuXHRcdFx0XHRkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHRbIDAgXSApO1xuXHRcdFx0fSxcblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgb2xkQ2FsbGJhY2tzID0gW10sXG5cdHJqc29ucCA9IC8oPSlcXD8oPz0mfCQpfFxcP1xcPy87XG5cbi8vIERlZmF1bHQganNvbnAgc2V0dGluZ3NcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0anNvbnA6IFwiY2FsbGJhY2tcIixcblx0anNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGNhbGxiYWNrID0gb2xkQ2FsbGJhY2tzLnBvcCgpIHx8ICggalF1ZXJ5LmV4cGFuZG8gKyBcIl9cIiArICggbm9uY2UuZ3VpZCsrICkgKTtcblx0XHR0aGlzWyBjYWxsYmFjayBdID0gdHJ1ZTtcblx0XHRyZXR1cm4gY2FsbGJhY2s7XG5cdH1cbn0gKTtcblxuLy8gRGV0ZWN0LCBub3JtYWxpemUgb3B0aW9ucyBhbmQgaW5zdGFsbCBjYWxsYmFja3MgZm9yIGpzb25wIHJlcXVlc3RzXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJqc29uIGpzb25wXCIsIGZ1bmN0aW9uKCBzLCBvcmlnaW5hbFNldHRpbmdzLCBqcVhIUiApIHtcblxuXHR2YXIgY2FsbGJhY2tOYW1lLCBvdmVyd3JpdHRlbiwgcmVzcG9uc2VDb250YWluZXIsXG5cdFx0anNvblByb3AgPSBzLmpzb25wICE9PSBmYWxzZSAmJiAoIHJqc29ucC50ZXN0KCBzLnVybCApID9cblx0XHRcdFwidXJsXCIgOlxuXHRcdFx0dHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApXG5cdFx0XHRcdFx0LmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCAmJlxuXHRcdFx0XHRyanNvbnAudGVzdCggcy5kYXRhICkgJiYgXCJkYXRhXCJcblx0XHQpO1xuXG5cdC8vIEhhbmRsZSBpZmYgdGhlIGV4cGVjdGVkIGRhdGEgdHlwZSBpcyBcImpzb25wXCIgb3Igd2UgaGF2ZSBhIHBhcmFtZXRlciB0byBzZXRcblx0aWYgKCBqc29uUHJvcCB8fCBzLmRhdGFUeXBlc1sgMCBdID09PSBcImpzb25wXCIgKSB7XG5cblx0XHQvLyBHZXQgY2FsbGJhY2sgbmFtZSwgcmVtZW1iZXJpbmcgcHJlZXhpc3RpbmcgdmFsdWUgYXNzb2NpYXRlZCB3aXRoIGl0XG5cdFx0Y2FsbGJhY2tOYW1lID0gcy5qc29ucENhbGxiYWNrID0gaXNGdW5jdGlvbiggcy5qc29ucENhbGxiYWNrICkgP1xuXHRcdFx0cy5qc29ucENhbGxiYWNrKCkgOlxuXHRcdFx0cy5qc29ucENhbGxiYWNrO1xuXG5cdFx0Ly8gSW5zZXJ0IGNhbGxiYWNrIGludG8gdXJsIG9yIGZvcm0gZGF0YVxuXHRcdGlmICgganNvblByb3AgKSB7XG5cdFx0XHRzWyBqc29uUHJvcCBdID0gc1sganNvblByb3AgXS5yZXBsYWNlKCByanNvbnAsIFwiJDFcIiArIGNhbGxiYWNrTmFtZSApO1xuXHRcdH0gZWxzZSBpZiAoIHMuanNvbnAgIT09IGZhbHNlICkge1xuXHRcdFx0cy51cmwgKz0gKCBycXVlcnkudGVzdCggcy51cmwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuanNvbnAgKyBcIj1cIiArIGNhbGxiYWNrTmFtZTtcblx0XHR9XG5cblx0XHQvLyBVc2UgZGF0YSBjb252ZXJ0ZXIgdG8gcmV0cmlldmUganNvbiBhZnRlciBzY3JpcHQgZXhlY3V0aW9uXG5cdFx0cy5jb252ZXJ0ZXJzWyBcInNjcmlwdCBqc29uXCIgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCAhcmVzcG9uc2VDb250YWluZXIgKSB7XG5cdFx0XHRcdGpRdWVyeS5lcnJvciggY2FsbGJhY2tOYW1lICsgXCIgd2FzIG5vdCBjYWxsZWRcIiApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3BvbnNlQ29udGFpbmVyWyAwIF07XG5cdFx0fTtcblxuXHRcdC8vIEZvcmNlIGpzb24gZGF0YVR5cGVcblx0XHRzLmRhdGFUeXBlc1sgMCBdID0gXCJqc29uXCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrXG5cdFx0b3ZlcndyaXR0ZW4gPSB3aW5kb3dbIGNhbGxiYWNrTmFtZSBdO1xuXHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gYXJndW1lbnRzO1xuXHRcdH07XG5cblx0XHQvLyBDbGVhbi11cCBmdW5jdGlvbiAoZmlyZXMgYWZ0ZXIgY29udmVydGVycylcblx0XHRqcVhIUi5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBJZiBwcmV2aW91cyB2YWx1ZSBkaWRuJ3QgZXhpc3QgLSByZW1vdmUgaXRcblx0XHRcdGlmICggb3ZlcndyaXR0ZW4gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0alF1ZXJ5KCB3aW5kb3cgKS5yZW1vdmVQcm9wKCBjYWxsYmFja05hbWUgKTtcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHJlc3RvcmUgcHJlZXhpc3RpbmcgdmFsdWVcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBvdmVyd3JpdHRlbjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2F2ZSBiYWNrIGFzIGZyZWVcblx0XHRcdGlmICggc1sgY2FsbGJhY2tOYW1lIF0gKSB7XG5cblx0XHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgcmUtdXNpbmcgdGhlIG9wdGlvbnMgZG9lc24ndCBzY3JldyB0aGluZ3MgYXJvdW5kXG5cdFx0XHRcdHMuanNvbnBDYWxsYmFjayA9IG9yaWdpbmFsU2V0dGluZ3MuanNvbnBDYWxsYmFjaztcblxuXHRcdFx0XHQvLyBTYXZlIHRoZSBjYWxsYmFjayBuYW1lIGZvciBmdXR1cmUgdXNlXG5cdFx0XHRcdG9sZENhbGxiYWNrcy5wdXNoKCBjYWxsYmFja05hbWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3BvbnNlXG5cdFx0XHRpZiAoIHJlc3BvbnNlQ29udGFpbmVyICYmIGlzRnVuY3Rpb24oIG92ZXJ3cml0dGVuICkgKSB7XG5cdFx0XHRcdG92ZXJ3cml0dGVuKCByZXNwb25zZUNvbnRhaW5lclsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gb3ZlcndyaXR0ZW4gPSB1bmRlZmluZWQ7XG5cdFx0fSApO1xuXG5cdFx0Ly8gRGVsZWdhdGUgdG8gc2NyaXB0XG5cdFx0cmV0dXJuIFwic2NyaXB0XCI7XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gU3VwcG9ydDogU2FmYXJpIDggb25seVxuLy8gSW4gU2FmYXJpIDggZG9jdW1lbnRzIGNyZWF0ZWQgdmlhIGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudFxuLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuXG4vLyBCZWNhdXNlIG9mIHRoYXQsIHRoaXMgc2VjdXJpdHkgbWVhc3VyZSBoYXMgdG8gYmUgZGlzYWJsZWQgaW4gU2FmYXJpIDguXG4vLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM3MzM3XG5zdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICggZnVuY3Rpb24oKSB7XG5cdHZhciBib2R5ID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCBcIlwiICkuYm9keTtcblx0Ym9keS5pbm5lckhUTUwgPSBcIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCI7XG5cdHJldHVybiBib2R5LmNoaWxkTm9kZXMubGVuZ3RoID09PSAyO1xufSApKCk7XG5cblxuLy8gQXJndW1lbnQgXCJkYXRhXCIgc2hvdWxkIGJlIHN0cmluZyBvZiBodG1sXG4vLyBjb250ZXh0IChvcHRpb25hbCk6IElmIHNwZWNpZmllZCwgdGhlIGZyYWdtZW50IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGlzIGNvbnRleHQsXG4vLyBkZWZhdWx0cyB0byBkb2N1bWVudFxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xualF1ZXJ5LnBhcnNlSFRNTCA9IGZ1bmN0aW9uKCBkYXRhLCBjb250ZXh0LCBrZWVwU2NyaXB0cyApIHtcblx0aWYgKCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gW107XG5cdH1cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0a2VlcFNjcmlwdHMgPSBjb250ZXh0O1xuXHRcdGNvbnRleHQgPSBmYWxzZTtcblx0fVxuXG5cdHZhciBiYXNlLCBwYXJzZWQsIHNjcmlwdHM7XG5cblx0aWYgKCAhY29udGV4dCApIHtcblxuXHRcdC8vIFN0b3Agc2NyaXB0cyBvciBpbmxpbmUgZXZlbnQgaGFuZGxlcnMgZnJvbSBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseVxuXHRcdC8vIGJ5IHVzaW5nIGRvY3VtZW50LmltcGxlbWVudGF0aW9uXG5cdFx0aWYgKCBzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCApIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKTtcblxuXHRcdFx0Ly8gU2V0IHRoZSBiYXNlIGhyZWYgZm9yIHRoZSBjcmVhdGVkIGRvY3VtZW50XG5cdFx0XHQvLyBzbyBhbnkgcGFyc2VkIGVsZW1lbnRzIHdpdGggVVJMc1xuXHRcdFx0Ly8gYXJlIGJhc2VkIG9uIHRoZSBkb2N1bWVudCdzIFVSTCAoZ2gtMjk2NSlcblx0XHRcdGJhc2UgPSBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiYmFzZVwiICk7XG5cdFx0XHRiYXNlLmhyZWYgPSBkb2N1bWVudC5sb2NhdGlvbi5ocmVmO1xuXHRcdFx0Y29udGV4dC5oZWFkLmFwcGVuZENoaWxkKCBiYXNlICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudDtcblx0XHR9XG5cdH1cblxuXHRwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRhdGEgKTtcblx0c2NyaXB0cyA9ICFrZWVwU2NyaXB0cyAmJiBbXTtcblxuXHQvLyBTaW5nbGUgdGFnXG5cdGlmICggcGFyc2VkICkge1xuXHRcdHJldHVybiBbIGNvbnRleHQuY3JlYXRlRWxlbWVudCggcGFyc2VkWyAxIF0gKSBdO1xuXHR9XG5cblx0cGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNjcmlwdHMgKTtcblxuXHRpZiAoIHNjcmlwdHMgJiYgc2NyaXB0cy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5KCBzY3JpcHRzICkucmVtb3ZlKCk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgcGFyc2VkLmNoaWxkTm9kZXMgKTtcbn07XG5cblxuLyoqXG4gKiBMb2FkIGEgdXJsIGludG8gYSBwYWdlXG4gKi9cbmpRdWVyeS5mbi5sb2FkID0gZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHtcblx0dmFyIHNlbGVjdG9yLCB0eXBlLCByZXNwb25zZSxcblx0XHRzZWxmID0gdGhpcyxcblx0XHRvZmYgPSB1cmwuaW5kZXhPZiggXCIgXCIgKTtcblxuXHRpZiAoIG9mZiA+IC0xICkge1xuXHRcdHNlbGVjdG9yID0gc3RyaXBBbmRDb2xsYXBzZSggdXJsLnNsaWNlKCBvZmYgKSApO1xuXHRcdHVybCA9IHVybC5zbGljZSggMCwgb2ZmICk7XG5cdH1cblxuXHQvLyBJZiBpdCdzIGEgZnVuY3Rpb25cblx0aWYgKCBpc0Z1bmN0aW9uKCBwYXJhbXMgKSApIHtcblxuXHRcdC8vIFdlIGFzc3VtZSB0aGF0IGl0J3MgdGhlIGNhbGxiYWNrXG5cdFx0Y2FsbGJhY2sgPSBwYXJhbXM7XG5cdFx0cGFyYW1zID0gdW5kZWZpbmVkO1xuXG5cdC8vIE90aGVyd2lzZSwgYnVpbGQgYSBwYXJhbSBzdHJpbmdcblx0fSBlbHNlIGlmICggcGFyYW1zICYmIHR5cGVvZiBwYXJhbXMgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0dHlwZSA9IFwiUE9TVFwiO1xuXHR9XG5cblx0Ly8gSWYgd2UgaGF2ZSBlbGVtZW50cyB0byBtb2RpZnksIG1ha2UgdGhlIHJlcXVlc3Rcblx0aWYgKCBzZWxmLmxlbmd0aCA+IDAgKSB7XG5cdFx0alF1ZXJ5LmFqYXgoIHtcblx0XHRcdHVybDogdXJsLFxuXG5cdFx0XHQvLyBJZiBcInR5cGVcIiB2YXJpYWJsZSBpcyB1bmRlZmluZWQsIHRoZW4gXCJHRVRcIiBtZXRob2Qgd2lsbCBiZSB1c2VkLlxuXHRcdFx0Ly8gTWFrZSB2YWx1ZSBvZiB0aGlzIGZpZWxkIGV4cGxpY2l0IHNpbmNlXG5cdFx0XHQvLyB1c2VyIGNhbiBvdmVycmlkZSBpdCB0aHJvdWdoIGFqYXhTZXR1cCBtZXRob2Rcblx0XHRcdHR5cGU6IHR5cGUgfHwgXCJHRVRcIixcblx0XHRcdGRhdGFUeXBlOiBcImh0bWxcIixcblx0XHRcdGRhdGE6IHBhcmFtc1xuXHRcdH0gKS5kb25lKCBmdW5jdGlvbiggcmVzcG9uc2VUZXh0ICkge1xuXG5cdFx0XHQvLyBTYXZlIHJlc3BvbnNlIGZvciB1c2UgaW4gY29tcGxldGUgY2FsbGJhY2tcblx0XHRcdHJlc3BvbnNlID0gYXJndW1lbnRzO1xuXG5cdFx0XHRzZWxmLmh0bWwoIHNlbGVjdG9yID9cblxuXHRcdFx0XHQvLyBJZiBhIHNlbGVjdG9yIHdhcyBzcGVjaWZpZWQsIGxvY2F0ZSB0aGUgcmlnaHQgZWxlbWVudHMgaW4gYSBkdW1teSBkaXZcblx0XHRcdFx0Ly8gRXhjbHVkZSBzY3JpcHRzIHRvIGF2b2lkIElFICdQZXJtaXNzaW9uIERlbmllZCcgZXJyb3JzXG5cdFx0XHRcdGpRdWVyeSggXCI8ZGl2PlwiICkuYXBwZW5kKCBqUXVlcnkucGFyc2VIVE1MKCByZXNwb25zZVRleHQgKSApLmZpbmQoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSB1c2UgdGhlIGZ1bGwgcmVzdWx0XG5cdFx0XHRcdHJlc3BvbnNlVGV4dCApO1xuXG5cdFx0Ly8gSWYgdGhlIHJlcXVlc3Qgc3VjY2VlZHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImRhdGFcIiwgXCJzdGF0dXNcIiwgXCJqcVhIUlwiXG5cdFx0Ly8gYnV0IHRoZXkgYXJlIGlnbm9yZWQgYmVjYXVzZSByZXNwb25zZSB3YXMgc2V0IGFib3ZlLlxuXHRcdC8vIElmIGl0IGZhaWxzLCB0aGlzIGZ1bmN0aW9uIGdldHMgXCJqcVhIUlwiLCBcInN0YXR1c1wiLCBcImVycm9yXCJcblx0XHR9ICkuYWx3YXlzKCBjYWxsYmFjayAmJiBmdW5jdGlvbigganFYSFIsIHN0YXR1cyApIHtcblx0XHRcdHNlbGYuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGNhbGxiYWNrLmFwcGx5KCB0aGlzLCByZXNwb25zZSB8fCBbIGpxWEhSLnJlc3BvbnNlVGV4dCwgc3RhdHVzLCBqcVhIUiBdICk7XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5cblxuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmFuaW1hdGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiBqUXVlcnkuZ3JlcCggalF1ZXJ5LnRpbWVycywgZnVuY3Rpb24oIGZuICkge1xuXHRcdHJldHVybiBlbGVtID09PSBmbi5lbGVtO1xuXHR9ICkubGVuZ3RoO1xufTtcblxuXG5cblxualF1ZXJ5Lm9mZnNldCA9IHtcblx0c2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHtcblx0XHR2YXIgY3VyUG9zaXRpb24sIGN1ckxlZnQsIGN1ckNTU1RvcCwgY3VyVG9wLCBjdXJPZmZzZXQsIGN1ckNTU0xlZnQsIGNhbGN1bGF0ZVBvc2l0aW9uLFxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcblx0XHRcdGN1ckVsZW0gPSBqUXVlcnkoIGVsZW0gKSxcblx0XHRcdHByb3BzID0ge307XG5cblx0XHQvLyBTZXQgcG9zaXRpb24gZmlyc3QsIGluLWNhc2UgdG9wL2xlZnQgYXJlIHNldCBldmVuIG9uIHN0YXRpYyBlbGVtXG5cdFx0aWYgKCBwb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG5cdFx0fVxuXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcblx0XHRjdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCBcInRvcFwiICk7XG5cdFx0Y3VyQ1NTTGVmdCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwibGVmdFwiICk7XG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXG5cdFx0XHQoIGN1ckNTU1RvcCArIGN1ckNTU0xlZnQgKS5pbmRleE9mKCBcImF1dG9cIiApID4gLTE7XG5cblx0XHQvLyBOZWVkIHRvIGJlIGFibGUgdG8gY2FsY3VsYXRlIHBvc2l0aW9uIGlmIGVpdGhlclxuXHRcdC8vIHRvcCBvciBsZWZ0IGlzIGF1dG8gYW5kIHBvc2l0aW9uIGlzIGVpdGhlciBhYnNvbHV0ZSBvciBmaXhlZFxuXHRcdGlmICggY2FsY3VsYXRlUG9zaXRpb24gKSB7XG5cdFx0XHRjdXJQb3NpdGlvbiA9IGN1ckVsZW0ucG9zaXRpb24oKTtcblx0XHRcdGN1clRvcCA9IGN1clBvc2l0aW9uLnRvcDtcblx0XHRcdGN1ckxlZnQgPSBjdXJQb3NpdGlvbi5sZWZ0O1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1clRvcCA9IHBhcnNlRmxvYXQoIGN1ckNTU1RvcCApIHx8IDA7XG5cdFx0XHRjdXJMZWZ0ID0gcGFyc2VGbG9hdCggY3VyQ1NTTGVmdCApIHx8IDA7XG5cdFx0fVxuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7XG5cblx0XHRcdC8vIFVzZSBqUXVlcnkuZXh0ZW5kIGhlcmUgdG8gYWxsb3cgbW9kaWZpY2F0aW9uIG9mIGNvb3JkaW5hdGVzIGFyZ3VtZW50IChnaC0xODQ4KVxuXHRcdFx0b3B0aW9ucyA9IG9wdGlvbnMuY2FsbCggZWxlbSwgaSwgalF1ZXJ5LmV4dGVuZCgge30sIGN1ck9mZnNldCApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHRpb25zLnRvcCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMudG9wID0gKCBvcHRpb25zLnRvcCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDtcblx0XHR9XG5cdFx0aWYgKCBvcHRpb25zLmxlZnQgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLmxlZnQgPSAoIG9wdGlvbnMubGVmdCAtIGN1ck9mZnNldC5sZWZ0ICkgKyBjdXJMZWZ0O1xuXHRcdH1cblxuXHRcdGlmICggXCJ1c2luZ1wiIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRvcHRpb25zLnVzaW5nLmNhbGwoIGVsZW0sIHByb3BzICk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyRWxlbS5jc3MoIHByb3BzICk7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0Ly8gb2Zmc2V0KCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgYm9yZGVyIGJveCB0byB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0XHQvLyBQcmVzZXJ2ZSBjaGFpbmluZyBmb3Igc2V0dGVyXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHRoaXMgOlxuXHRcdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRcdGpRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KCB0aGlzLCBvcHRpb25zLCBpICk7XG5cdFx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHR2YXIgcmVjdCwgd2luLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHplcm9zIGZvciBkaXNjb25uZWN0ZWQgYW5kIGhpZGRlbiAoZGlzcGxheTogbm9uZSkgZWxlbWVudHMgKGdoLTIzMTApXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYVxuXHRcdC8vIGRpc2Nvbm5lY3RlZCBub2RlIGluIElFIHRocm93cyBhbiBlcnJvclxuXHRcdGlmICggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTtcblx0XHR9XG5cblx0XHQvLyBHZXQgZG9jdW1lbnQtcmVsYXRpdmUgcG9zaXRpb24gYnkgYWRkaW5nIHZpZXdwb3J0IHNjcm9sbCB0byB2aWV3cG9ydC1yZWxhdGl2ZSBnQkNSXG5cdFx0cmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0d2luID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IHJlY3QudG9wICsgd2luLnBhZ2VZT2Zmc2V0LFxuXHRcdFx0bGVmdDogcmVjdC5sZWZ0ICsgd2luLnBhZ2VYT2Zmc2V0XG5cdFx0fTtcblx0fSxcblxuXHQvLyBwb3NpdGlvbigpIHJlbGF0ZXMgYW4gZWxlbWVudCdzIG1hcmdpbiBib3ggdG8gaXRzIG9mZnNldCBwYXJlbnQncyBwYWRkaW5nIGJveFxuXHQvLyBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSBiZWhhdmlvciBvZiBDU1MgYWJzb2x1dGUgcG9zaXRpb25pbmdcblx0cG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggIXRoaXNbIDAgXSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgb2Zmc2V0UGFyZW50LCBvZmZzZXQsIGRvYyxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwgbGVmdDogMCB9O1xuXG5cdFx0Ly8gcG9zaXRpb246Zml4ZWQgZWxlbWVudHMgYXJlIG9mZnNldCBmcm9tIHRoZSB2aWV3cG9ydCwgd2hpY2ggaXRzZWxmIGFsd2F5cyBoYXMgemVybyBvZmZzZXRcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XG5cblx0XHRcdC8vIEFzc3VtZSBwb3NpdGlvbjpmaXhlZCBpbXBsaWVzIGF2YWlsYWJpbGl0eSBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3Rcblx0XHRcdG9mZnNldCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0b2Zmc2V0ID0gdGhpcy5vZmZzZXQoKTtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdGhlICpyZWFsKiBvZmZzZXQgcGFyZW50LCB3aGljaCBjYW4gYmUgdGhlIGRvY3VtZW50IG9yIGl0cyByb290IGVsZW1lbnRcblx0XHRcdC8vIHdoZW4gYSBzdGF0aWNhbGx5IHBvc2l0aW9uZWQgZWxlbWVudCBpcyBpZGVudGlmaWVkXG5cdFx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0XHRvZmZzZXRQYXJlbnQgPSBlbGVtLm9mZnNldFBhcmVudCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiZcblx0XHRcdFx0KCBvZmZzZXRQYXJlbnQgPT09IGRvYy5ib2R5IHx8IG9mZnNldFBhcmVudCA9PT0gZG9jLmRvY3VtZW50RWxlbWVudCApICYmXG5cdFx0XHRcdGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cblx0XHRcdFx0b2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGVsZW0gJiYgb2Zmc2V0UGFyZW50Lm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIEluY29ycG9yYXRlIGJvcmRlcnMgaW50byBpdHMgb2Zmc2V0LCBzaW5jZSB0aGV5IGFyZSBvdXRzaWRlIGl0cyBjb250ZW50IG9yaWdpblxuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBqUXVlcnkoIG9mZnNldFBhcmVudCApLm9mZnNldCgpO1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQudG9wICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC5sZWZ0ICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXG5cdFx0fTtcblx0fSxcblxuXHQvLyBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBkb2N1bWVudEVsZW1lbnQgaW4gdGhlIGZvbGxvd2luZyBjYXNlczpcblx0Ly8gMSkgRm9yIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgaWZyYW1lIHdpdGhvdXQgb2Zmc2V0UGFyZW50LCB0aGlzIG1ldGhvZCB3aWxsIHJldHVyblxuXHQvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3aW5kb3dcblx0Ly8gMikgRm9yIHRoZSBoaWRkZW4gb3IgZGV0YWNoZWQgZWxlbWVudFxuXHQvLyAzKSBGb3IgYm9keSBvciBodG1sIGVsZW1lbnQsIGkuZS4gaW4gY2FzZSBvZiB0aGUgaHRtbCBub2RlIC0gaXQgd2lsbCByZXR1cm4gaXRzZWxmXG5cdC8vXG5cdC8vIGJ1dCB0aG9zZSBleGNlcHRpb25zIHdlcmUgbmV2ZXIgcHJlc2VudGVkIGFzIGEgcmVhbCBsaWZlIHVzZS1jYXNlc1xuXHQvLyBhbmQgbWlnaHQgYmUgY29uc2lkZXJlZCBhcyBtb3JlIHByZWZlcmFibGUgcmVzdWx0cy5cblx0Ly9cblx0Ly8gVGhpcyBsb2dpYywgaG93ZXZlciwgaXMgbm90IGd1YXJhbnRlZWQgYW5kIGNhbiBjaGFuZ2UgYXQgYW55IHBvaW50IGluIHRoZSBmdXR1cmVcblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50O1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiBcInBhZ2VYT2Zmc2V0XCIsIHNjcm9sbFRvcDogXCJwYWdlWU9mZnNldFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIHByb3AgKSB7XG5cdHZhciB0b3AgPSBcInBhZ2VZT2Zmc2V0XCIgPT09IHByb3A7XG5cblx0alF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG1ldGhvZCwgdmFsICkge1xuXG5cdFx0XHQvLyBDb2FsZXNjZSBkb2N1bWVudHMgYW5kIHdpbmRvd3Ncblx0XHRcdHZhciB3aW47XG5cdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW07XG5cdFx0XHR9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR3aW4gPSBlbGVtLmRlZmF1bHRWaWV3O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gd2luID8gd2luWyBwcm9wIF0gOiBlbGVtWyBtZXRob2QgXTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB3aW4gKSB7XG5cdFx0XHRcdHdpbi5zY3JvbGxUbyhcblx0XHRcdFx0XHQhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LFxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldFxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtWyBtZXRob2QgXSA9IHZhbDtcblx0XHRcdH1cblx0XHR9LCBtZXRob2QsIHZhbCwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9O1xufSApO1xuXG4vLyBTdXBwb3J0OiBTYWZhcmkgPD03IC0gOS4xLCBDaHJvbWUgPD0zNyAtIDQ5XG4vLyBBZGQgdGhlIHRvcC9sZWZ0IGNzc0hvb2tzIHVzaW5nIGpRdWVyeS5mbi5wb3NpdGlvblxuLy8gV2Via2l0IGJ1ZzogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTI5MDg0XG4vLyBCbGluayBidWc6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTU4OTM0N1xuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodDtcbi8vIHJhdGhlciB0aGFuIG1ha2UgdGhlIGNzcyBtb2R1bGUgZGVwZW5kIG9uIHRoZSBvZmZzZXQgbW9kdWxlLCBqdXN0IGNoZWNrIGZvciBpdCBoZXJlXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggX2ksIHByb3AgKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJvcCBdID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnBpeGVsUG9zaXRpb24sXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdFx0Y29tcHV0ZWQgPSBjdXJDU1MoIGVsZW0sIHByb3AgKTtcblxuXHRcdFx0XHQvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXRcblx0XHRcdFx0cmV0dXJuIHJudW1ub25weC50ZXN0KCBjb21wdXRlZCApID9cblx0XHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5wb3NpdGlvbigpWyBwcm9wIF0gKyBcInB4XCIgOlxuXHRcdFx0XHRcdGNvbXB1dGVkO1xuXHRcdFx0fVxuXHRcdH1cblx0KTtcbn0gKTtcblxuXG4vLyBDcmVhdGUgaW5uZXJIZWlnaHQsIGlubmVyV2lkdGgsIGhlaWdodCwgd2lkdGgsIG91dGVySGVpZ2h0IGFuZCBvdXRlcldpZHRoIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IEhlaWdodDogXCJoZWlnaHRcIiwgV2lkdGg6IFwid2lkdGhcIiB9LCBmdW5jdGlvbiggbmFtZSwgdHlwZSApIHtcblx0alF1ZXJ5LmVhY2goIHtcblx0XHRwYWRkaW5nOiBcImlubmVyXCIgKyBuYW1lLFxuXHRcdGNvbnRlbnQ6IHR5cGUsXG5cdFx0XCJcIjogXCJvdXRlclwiICsgbmFtZVxuXHR9LCBmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5lYWNoKCBbXG5cdFwiYWpheFN0YXJ0XCIsXG5cdFwiYWpheFN0b3BcIixcblx0XCJhamF4Q29tcGxldGVcIixcblx0XCJhamF4RXJyb3JcIixcblx0XCJhamF4U3VjY2Vzc1wiLFxuXHRcImFqYXhTZW5kXCJcbl0sIGZ1bmN0aW9uKCBfaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH0sXG5cblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKFxuXHQoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIF9pLCBuYW1lICkge1xuXG5cdFx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0XHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHtcblx0XHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMCA/XG5cdFx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0XHR0aGlzLnRyaWdnZXIoIG5hbWUgKTtcblx0XHR9O1xuXHR9XG4pO1xuXG5cblxuXG4vLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHlcbi8vIE1ha2Ugc3VyZSB3ZSB0cmltIEJPTSBhbmQgTkJTUFxudmFyIHJ0cmltID0gL15bXFxzXFx1RkVGRlxceEEwXSt8W1xcc1xcdUZFRkZcXHhBMF0rJC9nO1xuXG4vLyBCaW5kIGEgZnVuY3Rpb24gdG8gYSBjb250ZXh0LCBvcHRpb25hbGx5IHBhcnRpYWxseSBhcHBseWluZyBhbnlcbi8vIGFyZ3VtZW50cy5cbi8vIGpRdWVyeS5wcm94eSBpcyBkZXByZWNhdGVkIHRvIHByb21vdGUgc3RhbmRhcmRzIChzcGVjaWZpY2FsbHkgRnVuY3Rpb24jYmluZClcbi8vIEhvd2V2ZXIsIGl0IGlzIG5vdCBzbGF0ZWQgZm9yIHJlbW92YWwgYW55IHRpbWUgc29vblxualF1ZXJ5LnByb3h5ID0gZnVuY3Rpb24oIGZuLCBjb250ZXh0ICkge1xuXHR2YXIgdG1wLCBhcmdzLCBwcm94eTtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcInN0cmluZ1wiICkge1xuXHRcdHRtcCA9IGZuWyBjb250ZXh0IF07XG5cdFx0Y29udGV4dCA9IGZuO1xuXHRcdGZuID0gdG1wO1xuXHR9XG5cblx0Ly8gUXVpY2sgY2hlY2sgdG8gZGV0ZXJtaW5lIGlmIHRhcmdldCBpcyBjYWxsYWJsZSwgaW4gdGhlIHNwZWNcblx0Ly8gdGhpcyB0aHJvd3MgYSBUeXBlRXJyb3IsIGJ1dCB3ZSB3aWxsIGp1c3QgcmV0dXJuIHVuZGVmaW5lZC5cblx0aWYgKCAhaXNGdW5jdGlvbiggZm4gKSApIHtcblx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHR9XG5cblx0Ly8gU2ltdWxhdGVkIGJpbmRcblx0YXJncyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMiApO1xuXHRwcm94eSA9IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBmbi5hcHBseSggY29udGV4dCB8fCB0aGlzLCBhcmdzLmNvbmNhdCggc2xpY2UuY2FsbCggYXJndW1lbnRzICkgKSApO1xuXHR9O1xuXG5cdC8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZFxuXHRwcm94eS5ndWlkID0gZm4uZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKztcblxuXHRyZXR1cm4gcHJveHk7XG59O1xuXG5qUXVlcnkuaG9sZFJlYWR5ID0gZnVuY3Rpb24oIGhvbGQgKSB7XG5cdGlmICggaG9sZCApIHtcblx0XHRqUXVlcnkucmVhZHlXYWl0Kys7XG5cdH0gZWxzZSB7XG5cdFx0alF1ZXJ5LnJlYWR5KCB0cnVlICk7XG5cdH1cbn07XG5qUXVlcnkuaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5qUXVlcnkucGFyc2VKU09OID0gSlNPTi5wYXJzZTtcbmpRdWVyeS5ub2RlTmFtZSA9IG5vZGVOYW1lO1xualF1ZXJ5LmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xualF1ZXJ5LmlzV2luZG93ID0gaXNXaW5kb3c7XG5qUXVlcnkuY2FtZWxDYXNlID0gY2FtZWxDYXNlO1xualF1ZXJ5LnR5cGUgPSB0b1R5cGU7XG5cbmpRdWVyeS5ub3cgPSBEYXRlLm5vdztcblxualF1ZXJ5LmlzTnVtZXJpYyA9IGZ1bmN0aW9uKCBvYmogKSB7XG5cblx0Ly8gQXMgb2YgalF1ZXJ5IDMuMCwgaXNOdW1lcmljIGlzIGxpbWl0ZWQgdG9cblx0Ly8gc3RyaW5ncyBhbmQgbnVtYmVycyAocHJpbWl0aXZlcyBvciBvYmplY3RzKVxuXHQvLyB0aGF0IGNhbiBiZSBjb2VyY2VkIHRvIGZpbml0ZSBudW1iZXJzIChnaC0yNjYyKVxuXHR2YXIgdHlwZSA9IGpRdWVyeS50eXBlKCBvYmogKTtcblx0cmV0dXJuICggdHlwZSA9PT0gXCJudW1iZXJcIiB8fCB0eXBlID09PSBcInN0cmluZ1wiICkgJiZcblxuXHRcdC8vIHBhcnNlRmxvYXQgTmFOcyBudW1lcmljLWNhc3QgZmFsc2UgcG9zaXRpdmVzIChcIlwiKVxuXHRcdC8vIC4uLmJ1dCBtaXNpbnRlcnByZXRzIGxlYWRpbmctbnVtYmVyIHN0cmluZ3MsIHBhcnRpY3VsYXJseSBoZXggbGl0ZXJhbHMgKFwiMHguLi5cIilcblx0XHQvLyBzdWJ0cmFjdGlvbiBmb3JjZXMgaW5maW5pdGllcyB0byBOYU5cblx0XHQhaXNOYU4oIG9iaiAtIHBhcnNlRmxvYXQoIG9iaiApICk7XG59O1xuXG5qUXVlcnkudHJpbSA9IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRyZXR1cm4gdGV4dCA9PSBudWxsID9cblx0XHRcIlwiIDpcblx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiXCIgKTtcbn07XG5cblxuXG4vLyBSZWdpc3RlciBhcyBhIG5hbWVkIEFNRCBtb2R1bGUsIHNpbmNlIGpRdWVyeSBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGggb3RoZXJcbi8vIGZpbGVzIHRoYXQgbWF5IHVzZSBkZWZpbmUsIGJ1dCBub3QgdmlhIGEgcHJvcGVyIGNvbmNhdGVuYXRpb24gc2NyaXB0IHRoYXRcbi8vIHVuZGVyc3RhbmRzIGFub255bW91cyBBTUQgbW9kdWxlcy4gQSBuYW1lZCBBTUQgaXMgc2FmZXN0IGFuZCBtb3N0IHJvYnVzdFxuLy8gd2F5IHRvIHJlZ2lzdGVyLiBMb3dlcmNhc2UganF1ZXJ5IGlzIHVzZWQgYmVjYXVzZSBBTUQgbW9kdWxlIG5hbWVzIGFyZVxuLy8gZGVyaXZlZCBmcm9tIGZpbGUgbmFtZXMsIGFuZCBqUXVlcnkgaXMgbm9ybWFsbHkgZGVsaXZlcmVkIGluIGEgbG93ZXJjYXNlXG4vLyBmaWxlIG5hbWUuIERvIHRoaXMgYWZ0ZXIgY3JlYXRpbmcgdGhlIGdsb2JhbCBzbyB0aGF0IGlmIGFuIEFNRCBtb2R1bGUgd2FudHNcbi8vIHRvIGNhbGwgbm9Db25mbGljdCB0byBoaWRlIHRoaXMgdmVyc2lvbiBvZiBqUXVlcnksIGl0IHdpbGwgd29yay5cblxuLy8gTm90ZSB0aGF0IGZvciBtYXhpbXVtIHBvcnRhYmlsaXR5LCBsaWJyYXJpZXMgdGhhdCBhcmUgbm90IGpRdWVyeSBzaG91bGRcbi8vIGRlY2xhcmUgdGhlbXNlbHZlcyBhcyBhbm9ueW1vdXMgbW9kdWxlcywgYW5kIGF2b2lkIHNldHRpbmcgYSBnbG9iYWwgaWYgYW5cbi8vIEFNRCBsb2FkZXIgaXMgcHJlc2VudC4galF1ZXJ5IGlzIGEgc3BlY2lhbCBjYXNlLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlXG4vLyBodHRwczovL2dpdGh1Yi5jb20vanJidXJrZS9yZXF1aXJlanMvd2lraS9VcGRhdGluZy1leGlzdGluZy1saWJyYXJpZXMjd2lraS1hbm9uXG5cbmlmICggdHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQgKSB7XG5cdGRlZmluZSggXCJqcXVlcnlcIiwgW10sIGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnk7XG5cdH0gKTtcbn1cblxuXG5cblxudmFyXG5cblx0Ly8gTWFwIG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF9qUXVlcnkgPSB3aW5kb3cualF1ZXJ5LFxuXG5cdC8vIE1hcCBvdmVyIHRoZSAkIGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF8kID0gd2luZG93LiQ7XG5cbmpRdWVyeS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oIGRlZXAgKSB7XG5cdGlmICggd2luZG93LiQgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cuJCA9IF8kO1xuXHR9XG5cblx0aWYgKCBkZWVwICYmIHdpbmRvdy5qUXVlcnkgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cualF1ZXJ5ID0gX2pRdWVyeTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnk7XG59O1xuXG4vLyBFeHBvc2UgalF1ZXJ5IGFuZCAkIGlkZW50aWZpZXJzLCBldmVuIGluIEFNRFxuLy8gKCM3MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNTU3KVxuLy8gYW5kIENvbW1vbkpTIGZvciBicm93c2VyIGVtdWxhdG9ycyAoIzEzNTY2KVxuaWYgKCB0eXBlb2Ygbm9HbG9iYWwgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdHdpbmRvdy5qUXVlcnkgPSB3aW5kb3cuJCA9IGpRdWVyeTtcbn1cblxuXG5cblxucmV0dXJuIGpRdWVyeTtcbn0gKTtcbiIsIiFmdW5jdGlvbihpKXtcInVzZSBzdHJpY3RcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImpxdWVyeVwiXSxpKTpcInVuZGVmaW5lZFwiIT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1pKHJlcXVpcmUoXCJqcXVlcnlcIikpOmkoalF1ZXJ5KX0oZnVuY3Rpb24oaSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9d2luZG93LlNsaWNrfHx7fTsoZT1mdW5jdGlvbigpe3ZhciBlPTA7cmV0dXJuIGZ1bmN0aW9uKHQsbyl7dmFyIHMsbj10aGlzO24uZGVmYXVsdHM9e2FjY2Vzc2liaWxpdHk6ITAsYWRhcHRpdmVIZWlnaHQ6ITEsYXBwZW5kQXJyb3dzOmkodCksYXBwZW5kRG90czppKHQpLGFycm93czohMCxhc05hdkZvcjpudWxsLHByZXZBcnJvdzonPGJ1dHRvbiBjbGFzcz1cInNsaWNrLXByZXZcIiBhcmlhLWxhYmVsPVwiUHJldmlvdXNcIiB0eXBlPVwiYnV0dG9uXCI+UHJldmlvdXM8L2J1dHRvbj4nLG5leHRBcnJvdzonPGJ1dHRvbiBjbGFzcz1cInNsaWNrLW5leHRcIiBhcmlhLWxhYmVsPVwiTmV4dFwiIHR5cGU9XCJidXR0b25cIj5OZXh0PC9idXR0b24+JyxhdXRvcGxheTohMSxhdXRvcGxheVNwZWVkOjNlMyxjZW50ZXJNb2RlOiExLGNlbnRlclBhZGRpbmc6XCI1MHB4XCIsY3NzRWFzZTpcImVhc2VcIixjdXN0b21QYWdpbmc6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSgnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgLz4nKS50ZXh0KHQrMSl9LGRvdHM6ITEsZG90c0NsYXNzOlwic2xpY2stZG90c1wiLGRyYWdnYWJsZTohMCxlYXNpbmc6XCJsaW5lYXJcIixlZGdlRnJpY3Rpb246LjM1LGZhZGU6ITEsZm9jdXNPblNlbGVjdDohMSxmb2N1c09uQ2hhbmdlOiExLGluZmluaXRlOiEwLGluaXRpYWxTbGlkZTowLGxhenlMb2FkOlwib25kZW1hbmRcIixtb2JpbGVGaXJzdDohMSxwYXVzZU9uSG92ZXI6ITAscGF1c2VPbkZvY3VzOiEwLHBhdXNlT25Eb3RzSG92ZXI6ITEscmVzcG9uZFRvOlwid2luZG93XCIscmVzcG9uc2l2ZTpudWxsLHJvd3M6MSxydGw6ITEsc2xpZGU6XCJcIixzbGlkZXNQZXJSb3c6MSxzbGlkZXNUb1Nob3c6MSxzbGlkZXNUb1Njcm9sbDoxLHNwZWVkOjUwMCxzd2lwZTohMCxzd2lwZVRvU2xpZGU6ITEsdG91Y2hNb3ZlOiEwLHRvdWNoVGhyZXNob2xkOjUsdXNlQ1NTOiEwLHVzZVRyYW5zZm9ybTohMCx2YXJpYWJsZVdpZHRoOiExLHZlcnRpY2FsOiExLHZlcnRpY2FsU3dpcGluZzohMSx3YWl0Rm9yQW5pbWF0ZTohMCx6SW5kZXg6MWUzfSxuLmluaXRpYWxzPXthbmltYXRpbmc6ITEsZHJhZ2dpbmc6ITEsYXV0b1BsYXlUaW1lcjpudWxsLGN1cnJlbnREaXJlY3Rpb246MCxjdXJyZW50TGVmdDpudWxsLGN1cnJlbnRTbGlkZTowLGRpcmVjdGlvbjoxLCRkb3RzOm51bGwsbGlzdFdpZHRoOm51bGwsbGlzdEhlaWdodDpudWxsLGxvYWRJbmRleDowLCRuZXh0QXJyb3c6bnVsbCwkcHJldkFycm93Om51bGwsc2Nyb2xsaW5nOiExLHNsaWRlQ291bnQ6bnVsbCxzbGlkZVdpZHRoOm51bGwsJHNsaWRlVHJhY2s6bnVsbCwkc2xpZGVzOm51bGwsc2xpZGluZzohMSxzbGlkZU9mZnNldDowLHN3aXBlTGVmdDpudWxsLHN3aXBpbmc6ITEsJGxpc3Q6bnVsbCx0b3VjaE9iamVjdDp7fSx0cmFuc2Zvcm1zRW5hYmxlZDohMSx1bnNsaWNrZWQ6ITF9LGkuZXh0ZW5kKG4sbi5pbml0aWFscyksbi5hY3RpdmVCcmVha3BvaW50PW51bGwsbi5hbmltVHlwZT1udWxsLG4uYW5pbVByb3A9bnVsbCxuLmJyZWFrcG9pbnRzPVtdLG4uYnJlYWtwb2ludFNldHRpbmdzPVtdLG4uY3NzVHJhbnNpdGlvbnM9ITEsbi5mb2N1c3NlZD0hMSxuLmludGVycnVwdGVkPSExLG4uaGlkZGVuPVwiaGlkZGVuXCIsbi5wYXVzZWQ9ITAsbi5wb3NpdGlvblByb3A9bnVsbCxuLnJlc3BvbmRUbz1udWxsLG4ucm93Q291bnQ9MSxuLnNob3VsZENsaWNrPSEwLG4uJHNsaWRlcj1pKHQpLG4uJHNsaWRlc0NhY2hlPW51bGwsbi50cmFuc2Zvcm1UeXBlPW51bGwsbi50cmFuc2l0aW9uVHlwZT1udWxsLG4udmlzaWJpbGl0eUNoYW5nZT1cInZpc2liaWxpdHljaGFuZ2VcIixuLndpbmRvd1dpZHRoPTAsbi53aW5kb3dUaW1lcj1udWxsLHM9aSh0KS5kYXRhKFwic2xpY2tcIil8fHt9LG4ub3B0aW9ucz1pLmV4dGVuZCh7fSxuLmRlZmF1bHRzLG8scyksbi5jdXJyZW50U2xpZGU9bi5vcHRpb25zLmluaXRpYWxTbGlkZSxuLm9yaWdpbmFsU2V0dGluZ3M9bi5vcHRpb25zLHZvaWQgMCE9PWRvY3VtZW50Lm1vekhpZGRlbj8obi5oaWRkZW49XCJtb3pIaWRkZW5cIixuLnZpc2liaWxpdHlDaGFuZ2U9XCJtb3p2aXNpYmlsaXR5Y2hhbmdlXCIpOnZvaWQgMCE9PWRvY3VtZW50LndlYmtpdEhpZGRlbiYmKG4uaGlkZGVuPVwid2Via2l0SGlkZGVuXCIsbi52aXNpYmlsaXR5Q2hhbmdlPVwid2Via2l0dmlzaWJpbGl0eWNoYW5nZVwiKSxuLmF1dG9QbGF5PWkucHJveHkobi5hdXRvUGxheSxuKSxuLmF1dG9QbGF5Q2xlYXI9aS5wcm94eShuLmF1dG9QbGF5Q2xlYXIsbiksbi5hdXRvUGxheUl0ZXJhdG9yPWkucHJveHkobi5hdXRvUGxheUl0ZXJhdG9yLG4pLG4uY2hhbmdlU2xpZGU9aS5wcm94eShuLmNoYW5nZVNsaWRlLG4pLG4uY2xpY2tIYW5kbGVyPWkucHJveHkobi5jbGlja0hhbmRsZXIsbiksbi5zZWxlY3RIYW5kbGVyPWkucHJveHkobi5zZWxlY3RIYW5kbGVyLG4pLG4uc2V0UG9zaXRpb249aS5wcm94eShuLnNldFBvc2l0aW9uLG4pLG4uc3dpcGVIYW5kbGVyPWkucHJveHkobi5zd2lwZUhhbmRsZXIsbiksbi5kcmFnSGFuZGxlcj1pLnByb3h5KG4uZHJhZ0hhbmRsZXIsbiksbi5rZXlIYW5kbGVyPWkucHJveHkobi5rZXlIYW5kbGVyLG4pLG4uaW5zdGFuY2VVaWQ9ZSsrLG4uaHRtbEV4cHI9L14oPzpcXHMqKDxbXFx3XFxXXSs+KVtePl0qKSQvLG4ucmVnaXN0ZXJCcmVha3BvaW50cygpLG4uaW5pdCghMCl9fSgpKS5wcm90b3R5cGUuYWN0aXZhdGVBREE9ZnVuY3Rpb24oKXt0aGlzLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stYWN0aXZlXCIpLmF0dHIoe1wiYXJpYS1oaWRkZW5cIjpcImZhbHNlXCJ9KS5maW5kKFwiYSwgaW5wdXQsIGJ1dHRvbiwgc2VsZWN0XCIpLmF0dHIoe3RhYmluZGV4OlwiMFwifSl9LGUucHJvdG90eXBlLmFkZFNsaWRlPWUucHJvdG90eXBlLnNsaWNrQWRkPWZ1bmN0aW9uKGUsdCxvKXt2YXIgcz10aGlzO2lmKFwiYm9vbGVhblwiPT10eXBlb2YgdClvPXQsdD1udWxsO2Vsc2UgaWYodDwwfHx0Pj1zLnNsaWRlQ291bnQpcmV0dXJuITE7cy51bmxvYWQoKSxcIm51bWJlclwiPT10eXBlb2YgdD8wPT09dCYmMD09PXMuJHNsaWRlcy5sZW5ndGg/aShlKS5hcHBlbmRUbyhzLiRzbGlkZVRyYWNrKTpvP2koZSkuaW5zZXJ0QmVmb3JlKHMuJHNsaWRlcy5lcSh0KSk6aShlKS5pbnNlcnRBZnRlcihzLiRzbGlkZXMuZXEodCkpOiEwPT09bz9pKGUpLnByZXBlbmRUbyhzLiRzbGlkZVRyYWNrKTppKGUpLmFwcGVuZFRvKHMuJHNsaWRlVHJhY2spLHMuJHNsaWRlcz1zLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkscy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLHMuJHNsaWRlVHJhY2suYXBwZW5kKHMuJHNsaWRlcykscy4kc2xpZGVzLmVhY2goZnVuY3Rpb24oZSx0KXtpKHQpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsZSl9KSxzLiRzbGlkZXNDYWNoZT1zLiRzbGlkZXMscy5yZWluaXQoKX0sZS5wcm90b3R5cGUuYW5pbWF0ZUhlaWdodD1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aWYoMT09PWkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJiEwPT09aS5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0JiYhMT09PWkub3B0aW9ucy52ZXJ0aWNhbCl7dmFyIGU9aS4kc2xpZGVzLmVxKGkuY3VycmVudFNsaWRlKS5vdXRlckhlaWdodCghMCk7aS4kbGlzdC5hbmltYXRlKHtoZWlnaHQ6ZX0saS5vcHRpb25zLnNwZWVkKX19LGUucHJvdG90eXBlLmFuaW1hdGVTbGlkZT1mdW5jdGlvbihlLHQpe3ZhciBvPXt9LHM9dGhpcztzLmFuaW1hdGVIZWlnaHQoKSwhMD09PXMub3B0aW9ucy5ydGwmJiExPT09cy5vcHRpb25zLnZlcnRpY2FsJiYoZT0tZSksITE9PT1zLnRyYW5zZm9ybXNFbmFibGVkPyExPT09cy5vcHRpb25zLnZlcnRpY2FsP3MuJHNsaWRlVHJhY2suYW5pbWF0ZSh7bGVmdDplfSxzLm9wdGlvbnMuc3BlZWQscy5vcHRpb25zLmVhc2luZyx0KTpzLiRzbGlkZVRyYWNrLmFuaW1hdGUoe3RvcDplfSxzLm9wdGlvbnMuc3BlZWQscy5vcHRpb25zLmVhc2luZyx0KTohMT09PXMuY3NzVHJhbnNpdGlvbnM/KCEwPT09cy5vcHRpb25zLnJ0bCYmKHMuY3VycmVudExlZnQ9LXMuY3VycmVudExlZnQpLGkoe2FuaW1TdGFydDpzLmN1cnJlbnRMZWZ0fSkuYW5pbWF0ZSh7YW5pbVN0YXJ0OmV9LHtkdXJhdGlvbjpzLm9wdGlvbnMuc3BlZWQsZWFzaW5nOnMub3B0aW9ucy5lYXNpbmcsc3RlcDpmdW5jdGlvbihpKXtpPU1hdGguY2VpbChpKSwhMT09PXMub3B0aW9ucy52ZXJ0aWNhbD8ob1tzLmFuaW1UeXBlXT1cInRyYW5zbGF0ZShcIitpK1wicHgsIDBweClcIixzLiRzbGlkZVRyYWNrLmNzcyhvKSk6KG9bcy5hbmltVHlwZV09XCJ0cmFuc2xhdGUoMHB4LFwiK2krXCJweClcIixzLiRzbGlkZVRyYWNrLmNzcyhvKSl9LGNvbXBsZXRlOmZ1bmN0aW9uKCl7dCYmdC5jYWxsKCl9fSkpOihzLmFwcGx5VHJhbnNpdGlvbigpLGU9TWF0aC5jZWlsKGUpLCExPT09cy5vcHRpb25zLnZlcnRpY2FsP29bcy5hbmltVHlwZV09XCJ0cmFuc2xhdGUzZChcIitlK1wicHgsIDBweCwgMHB4KVwiOm9bcy5hbmltVHlwZV09XCJ0cmFuc2xhdGUzZCgwcHgsXCIrZStcInB4LCAwcHgpXCIscy4kc2xpZGVUcmFjay5jc3MobyksdCYmc2V0VGltZW91dChmdW5jdGlvbigpe3MuZGlzYWJsZVRyYW5zaXRpb24oKSx0LmNhbGwoKX0scy5vcHRpb25zLnNwZWVkKSl9LGUucHJvdG90eXBlLmdldE5hdlRhcmdldD1mdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1lLm9wdGlvbnMuYXNOYXZGb3I7cmV0dXJuIHQmJm51bGwhPT10JiYodD1pKHQpLm5vdChlLiRzbGlkZXIpKSx0fSxlLnByb3RvdHlwZS5hc05hdkZvcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmdldE5hdlRhcmdldCgpO251bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdC5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKS5zbGljayhcImdldFNsaWNrXCIpO3QudW5zbGlja2VkfHx0LnNsaWRlSGFuZGxlcihlLCEwKX0pfSxlLnByb3RvdHlwZS5hcHBseVRyYW5zaXRpb249ZnVuY3Rpb24oaSl7dmFyIGU9dGhpcyx0PXt9OyExPT09ZS5vcHRpb25zLmZhZGU/dFtlLnRyYW5zaXRpb25UeXBlXT1lLnRyYW5zZm9ybVR5cGUrXCIgXCIrZS5vcHRpb25zLnNwZWVkK1wibXMgXCIrZS5vcHRpb25zLmNzc0Vhc2U6dFtlLnRyYW5zaXRpb25UeXBlXT1cIm9wYWNpdHkgXCIrZS5vcHRpb25zLnNwZWVkK1wibXMgXCIrZS5vcHRpb25zLmNzc0Vhc2UsITE9PT1lLm9wdGlvbnMuZmFkZT9lLiRzbGlkZVRyYWNrLmNzcyh0KTplLiRzbGlkZXMuZXEoaSkuY3NzKHQpfSxlLnByb3RvdHlwZS5hdXRvUGxheT1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5hdXRvUGxheUNsZWFyKCksaS5zbGlkZUNvdW50Pmkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihpLmF1dG9QbGF5VGltZXI9c2V0SW50ZXJ2YWwoaS5hdXRvUGxheUl0ZXJhdG9yLGkub3B0aW9ucy5hdXRvcGxheVNwZWVkKSl9LGUucHJvdG90eXBlLmF1dG9QbGF5Q2xlYXI9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO2kuYXV0b1BsYXlUaW1lciYmY2xlYXJJbnRlcnZhbChpLmF1dG9QbGF5VGltZXIpfSxlLnByb3RvdHlwZS5hdXRvUGxheUl0ZXJhdG9yPWZ1bmN0aW9uKCl7dmFyIGk9dGhpcyxlPWkuY3VycmVudFNsaWRlK2kub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtpLnBhdXNlZHx8aS5pbnRlcnJ1cHRlZHx8aS5mb2N1c3NlZHx8KCExPT09aS5vcHRpb25zLmluZmluaXRlJiYoMT09PWkuZGlyZWN0aW9uJiZpLmN1cnJlbnRTbGlkZSsxPT09aS5zbGlkZUNvdW50LTE/aS5kaXJlY3Rpb249MDowPT09aS5kaXJlY3Rpb24mJihlPWkuY3VycmVudFNsaWRlLWkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCxpLmN1cnJlbnRTbGlkZS0xPT0wJiYoaS5kaXJlY3Rpb249MSkpKSxpLnNsaWRlSGFuZGxlcihlKSl9LGUucHJvdG90eXBlLmJ1aWxkQXJyb3dzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpczshMD09PWUub3B0aW9ucy5hcnJvd3MmJihlLiRwcmV2QXJyb3c9aShlLm9wdGlvbnMucHJldkFycm93KS5hZGRDbGFzcyhcInNsaWNrLWFycm93XCIpLGUuJG5leHRBcnJvdz1pKGUub3B0aW9ucy5uZXh0QXJyb3cpLmFkZENsYXNzKFwic2xpY2stYXJyb3dcIiksZS5zbGlkZUNvdW50PmUub3B0aW9ucy5zbGlkZXNUb1Nob3c/KGUuJHByZXZBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWhpZGRlblwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gdGFiaW5kZXhcIiksZS4kbmV4dEFycm93LnJlbW92ZUNsYXNzKFwic2xpY2staGlkZGVuXCIpLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlbiB0YWJpbmRleFwiKSxlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLnByZXZBcnJvdykmJmUuJHByZXZBcnJvdy5wcmVwZW5kVG8oZS5vcHRpb25zLmFwcGVuZEFycm93cyksZS5odG1sRXhwci50ZXN0KGUub3B0aW9ucy5uZXh0QXJyb3cpJiZlLiRuZXh0QXJyb3cuYXBwZW5kVG8oZS5vcHRpb25zLmFwcGVuZEFycm93cyksITAhPT1lLm9wdGlvbnMuaW5maW5pdGUmJmUuJHByZXZBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpKTplLiRwcmV2QXJyb3cuYWRkKGUuJG5leHRBcnJvdykuYWRkQ2xhc3MoXCJzbGljay1oaWRkZW5cIikuYXR0cih7XCJhcmlhLWRpc2FibGVkXCI6XCJ0cnVlXCIsdGFiaW5kZXg6XCItMVwifSkpfSxlLnByb3RvdHlwZS5idWlsZERvdHM9ZnVuY3Rpb24oKXt2YXIgZSx0LG89dGhpcztpZighMD09PW8ub3B0aW9ucy5kb3RzKXtmb3Ioby4kc2xpZGVyLmFkZENsYXNzKFwic2xpY2stZG90dGVkXCIpLHQ9aShcIjx1bCAvPlwiKS5hZGRDbGFzcyhvLm9wdGlvbnMuZG90c0NsYXNzKSxlPTA7ZTw9by5nZXREb3RDb3VudCgpO2UrPTEpdC5hcHBlbmQoaShcIjxsaSAvPlwiKS5hcHBlbmQoby5vcHRpb25zLmN1c3RvbVBhZ2luZy5jYWxsKHRoaXMsbyxlKSkpO28uJGRvdHM9dC5hcHBlbmRUbyhvLm9wdGlvbnMuYXBwZW5kRG90cyksby4kZG90cy5maW5kKFwibGlcIikuZmlyc3QoKS5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKX19LGUucHJvdG90eXBlLmJ1aWxkT3V0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLiRzbGlkZXM9ZS4kc2xpZGVyLmNoaWxkcmVuKGUub3B0aW9ucy5zbGlkZStcIjpub3QoLnNsaWNrLWNsb25lZClcIikuYWRkQ2xhc3MoXCJzbGljay1zbGlkZVwiKSxlLnNsaWRlQ291bnQ9ZS4kc2xpZGVzLmxlbmd0aCxlLiRzbGlkZXMuZWFjaChmdW5jdGlvbihlLHQpe2kodCkuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIixlKS5kYXRhKFwib3JpZ2luYWxTdHlsaW5nXCIsaSh0KS5hdHRyKFwic3R5bGVcIil8fFwiXCIpfSksZS4kc2xpZGVyLmFkZENsYXNzKFwic2xpY2stc2xpZGVyXCIpLGUuJHNsaWRlVHJhY2s9MD09PWUuc2xpZGVDb3VudD9pKCc8ZGl2IGNsYXNzPVwic2xpY2stdHJhY2tcIi8+JykuYXBwZW5kVG8oZS4kc2xpZGVyKTplLiRzbGlkZXMud3JhcEFsbCgnPGRpdiBjbGFzcz1cInNsaWNrLXRyYWNrXCIvPicpLnBhcmVudCgpLGUuJGxpc3Q9ZS4kc2xpZGVUcmFjay53cmFwKCc8ZGl2IGNsYXNzPVwic2xpY2stbGlzdFwiLz4nKS5wYXJlbnQoKSxlLiRzbGlkZVRyYWNrLmNzcyhcIm9wYWNpdHlcIiwwKSwhMCE9PWUub3B0aW9ucy5jZW50ZXJNb2RlJiYhMCE9PWUub3B0aW9ucy5zd2lwZVRvU2xpZGV8fChlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw9MSksaShcImltZ1tkYXRhLWxhenldXCIsZS4kc2xpZGVyKS5ub3QoXCJbc3JjXVwiKS5hZGRDbGFzcyhcInNsaWNrLWxvYWRpbmdcIiksZS5zZXR1cEluZmluaXRlKCksZS5idWlsZEFycm93cygpLGUuYnVpbGREb3RzKCksZS51cGRhdGVEb3RzKCksZS5zZXRTbGlkZUNsYXNzZXMoXCJudW1iZXJcIj09dHlwZW9mIGUuY3VycmVudFNsaWRlP2UuY3VycmVudFNsaWRlOjApLCEwPT09ZS5vcHRpb25zLmRyYWdnYWJsZSYmZS4kbGlzdC5hZGRDbGFzcyhcImRyYWdnYWJsZVwiKX0sZS5wcm90b3R5cGUuYnVpbGRSb3dzPWZ1bmN0aW9uKCl7dmFyIGksZSx0LG8scyxuLHIsbD10aGlzO2lmKG89ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLG49bC4kc2xpZGVyLmNoaWxkcmVuKCksbC5vcHRpb25zLnJvd3M+MSl7Zm9yKHI9bC5vcHRpb25zLnNsaWRlc1BlclJvdypsLm9wdGlvbnMucm93cyxzPU1hdGguY2VpbChuLmxlbmd0aC9yKSxpPTA7aTxzO2krKyl7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtmb3IoZT0wO2U8bC5vcHRpb25zLnJvd3M7ZSsrKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2Zvcih0PTA7dDxsLm9wdGlvbnMuc2xpZGVzUGVyUm93O3QrKyl7dmFyIGM9aSpyKyhlKmwub3B0aW9ucy5zbGlkZXNQZXJSb3crdCk7bi5nZXQoYykmJmEuYXBwZW5kQ2hpbGQobi5nZXQoYykpfWQuYXBwZW5kQ2hpbGQoYSl9by5hcHBlbmRDaGlsZChkKX1sLiRzbGlkZXIuZW1wdHkoKS5hcHBlbmQobyksbC4kc2xpZGVyLmNoaWxkcmVuKCkuY2hpbGRyZW4oKS5jaGlsZHJlbigpLmNzcyh7d2lkdGg6MTAwL2wub3B0aW9ucy5zbGlkZXNQZXJSb3crXCIlXCIsZGlzcGxheTpcImlubGluZS1ibG9ja1wifSl9fSxlLnByb3RvdHlwZS5jaGVja1Jlc3BvbnNpdmU9ZnVuY3Rpb24oZSx0KXt2YXIgbyxzLG4scj10aGlzLGw9ITEsZD1yLiRzbGlkZXIud2lkdGgoKSxhPXdpbmRvdy5pbm5lcldpZHRofHxpKHdpbmRvdykud2lkdGgoKTtpZihcIndpbmRvd1wiPT09ci5yZXNwb25kVG8/bj1hOlwic2xpZGVyXCI9PT1yLnJlc3BvbmRUbz9uPWQ6XCJtaW5cIj09PXIucmVzcG9uZFRvJiYobj1NYXRoLm1pbihhLGQpKSxyLm9wdGlvbnMucmVzcG9uc2l2ZSYmci5vcHRpb25zLnJlc3BvbnNpdmUubGVuZ3RoJiZudWxsIT09ci5vcHRpb25zLnJlc3BvbnNpdmUpe3M9bnVsbDtmb3IobyBpbiByLmJyZWFrcG9pbnRzKXIuYnJlYWtwb2ludHMuaGFzT3duUHJvcGVydHkobykmJighMT09PXIub3JpZ2luYWxTZXR0aW5ncy5tb2JpbGVGaXJzdD9uPHIuYnJlYWtwb2ludHNbb10mJihzPXIuYnJlYWtwb2ludHNbb10pOm4+ci5icmVha3BvaW50c1tvXSYmKHM9ci5icmVha3BvaW50c1tvXSkpO251bGwhPT1zP251bGwhPT1yLmFjdGl2ZUJyZWFrcG9pbnQ/KHMhPT1yLmFjdGl2ZUJyZWFrcG9pbnR8fHQpJiYoci5hY3RpdmVCcmVha3BvaW50PXMsXCJ1bnNsaWNrXCI9PT1yLmJyZWFrcG9pbnRTZXR0aW5nc1tzXT9yLnVuc2xpY2socyk6KHIub3B0aW9ucz1pLmV4dGVuZCh7fSxyLm9yaWdpbmFsU2V0dGluZ3Msci5icmVha3BvaW50U2V0dGluZ3Nbc10pLCEwPT09ZSYmKHIuY3VycmVudFNsaWRlPXIub3B0aW9ucy5pbml0aWFsU2xpZGUpLHIucmVmcmVzaChlKSksbD1zKTooci5hY3RpdmVCcmVha3BvaW50PXMsXCJ1bnNsaWNrXCI9PT1yLmJyZWFrcG9pbnRTZXR0aW5nc1tzXT9yLnVuc2xpY2socyk6KHIub3B0aW9ucz1pLmV4dGVuZCh7fSxyLm9yaWdpbmFsU2V0dGluZ3Msci5icmVha3BvaW50U2V0dGluZ3Nbc10pLCEwPT09ZSYmKHIuY3VycmVudFNsaWRlPXIub3B0aW9ucy5pbml0aWFsU2xpZGUpLHIucmVmcmVzaChlKSksbD1zKTpudWxsIT09ci5hY3RpdmVCcmVha3BvaW50JiYoci5hY3RpdmVCcmVha3BvaW50PW51bGwsci5vcHRpb25zPXIub3JpZ2luYWxTZXR0aW5ncywhMD09PWUmJihyLmN1cnJlbnRTbGlkZT1yLm9wdGlvbnMuaW5pdGlhbFNsaWRlKSxyLnJlZnJlc2goZSksbD1zKSxlfHwhMT09PWx8fHIuJHNsaWRlci50cmlnZ2VyKFwiYnJlYWtwb2ludFwiLFtyLGxdKX19LGUucHJvdG90eXBlLmNoYW5nZVNsaWRlPWZ1bmN0aW9uKGUsdCl7dmFyIG8scyxuLHI9dGhpcyxsPWkoZS5jdXJyZW50VGFyZ2V0KTtzd2l0Y2gobC5pcyhcImFcIikmJmUucHJldmVudERlZmF1bHQoKSxsLmlzKFwibGlcIil8fChsPWwuY2xvc2VzdChcImxpXCIpKSxuPXIuc2xpZGVDb3VudCVyLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwhPTAsbz1uPzA6KHIuc2xpZGVDb3VudC1yLmN1cnJlbnRTbGlkZSklci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLGUuZGF0YS5tZXNzYWdlKXtjYXNlXCJwcmV2aW91c1wiOnM9MD09PW8/ci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOnIub3B0aW9ucy5zbGlkZXNUb1Nob3ctbyxyLnNsaWRlQ291bnQ+ci5vcHRpb25zLnNsaWRlc1RvU2hvdyYmci5zbGlkZUhhbmRsZXIoci5jdXJyZW50U2xpZGUtcywhMSx0KTticmVhaztjYXNlXCJuZXh0XCI6cz0wPT09bz9yLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw6byxyLnNsaWRlQ291bnQ+ci5vcHRpb25zLnNsaWRlc1RvU2hvdyYmci5zbGlkZUhhbmRsZXIoci5jdXJyZW50U2xpZGUrcywhMSx0KTticmVhaztjYXNlXCJpbmRleFwiOnZhciBkPTA9PT1lLmRhdGEuaW5kZXg/MDplLmRhdGEuaW5kZXh8fGwuaW5kZXgoKSpyLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7ci5zbGlkZUhhbmRsZXIoci5jaGVja05hdmlnYWJsZShkKSwhMSx0KSxsLmNoaWxkcmVuKCkudHJpZ2dlcihcImZvY3VzXCIpO2JyZWFrO2RlZmF1bHQ6cmV0dXJufX0sZS5wcm90b3R5cGUuY2hlY2tOYXZpZ2FibGU9ZnVuY3Rpb24oaSl7dmFyIGUsdDtpZihlPXRoaXMuZ2V0TmF2aWdhYmxlSW5kZXhlcygpLHQ9MCxpPmVbZS5sZW5ndGgtMV0paT1lW2UubGVuZ3RoLTFdO2Vsc2UgZm9yKHZhciBvIGluIGUpe2lmKGk8ZVtvXSl7aT10O2JyZWFrfXQ9ZVtvXX1yZXR1cm4gaX0sZS5wcm90b3R5cGUuY2xlYW5VcEV2ZW50cz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5vcHRpb25zLmRvdHMmJm51bGwhPT1lLiRkb3RzJiYoaShcImxpXCIsZS4kZG90cykub2ZmKFwiY2xpY2suc2xpY2tcIixlLmNoYW5nZVNsaWRlKS5vZmYoXCJtb3VzZWVudGVyLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCEwKSkub2ZmKFwibW91c2VsZWF2ZS5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMSkpLCEwPT09ZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkmJmUuJGRvdHMub2ZmKFwia2V5ZG93bi5zbGlja1wiLGUua2V5SGFuZGxlcikpLGUuJHNsaWRlci5vZmYoXCJmb2N1cy5zbGljayBibHVyLnNsaWNrXCIpLCEwPT09ZS5vcHRpb25zLmFycm93cyYmZS5zbGlkZUNvdW50PmUub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihlLiRwcmV2QXJyb3cmJmUuJHByZXZBcnJvdy5vZmYoXCJjbGljay5zbGlja1wiLGUuY2hhbmdlU2xpZGUpLGUuJG5leHRBcnJvdyYmZS4kbmV4dEFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIsZS5jaGFuZ2VTbGlkZSksITA9PT1lLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmKGUuJHByZXZBcnJvdyYmZS4kcHJldkFycm93Lm9mZihcImtleWRvd24uc2xpY2tcIixlLmtleUhhbmRsZXIpLGUuJG5leHRBcnJvdyYmZS4kbmV4dEFycm93Lm9mZihcImtleWRvd24uc2xpY2tcIixlLmtleUhhbmRsZXIpKSksZS4kbGlzdC5vZmYoXCJ0b3VjaHN0YXJ0LnNsaWNrIG1vdXNlZG93bi5zbGlja1wiLGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9mZihcInRvdWNobW92ZS5zbGljayBtb3VzZW1vdmUuc2xpY2tcIixlLnN3aXBlSGFuZGxlciksZS4kbGlzdC5vZmYoXCJ0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrXCIsZS5zd2lwZUhhbmRsZXIpLGUuJGxpc3Qub2ZmKFwidG91Y2hjYW5jZWwuc2xpY2sgbW91c2VsZWF2ZS5zbGlja1wiLGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9mZihcImNsaWNrLnNsaWNrXCIsZS5jbGlja0hhbmRsZXIpLGkoZG9jdW1lbnQpLm9mZihlLnZpc2liaWxpdHlDaGFuZ2UsZS52aXNpYmlsaXR5KSxlLmNsZWFuVXBTbGlkZUV2ZW50cygpLCEwPT09ZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkmJmUuJGxpc3Qub2ZmKFwia2V5ZG93bi5zbGlja1wiLGUua2V5SGFuZGxlciksITA9PT1lLm9wdGlvbnMuZm9jdXNPblNlbGVjdCYmaShlLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9mZihcImNsaWNrLnNsaWNrXCIsZS5zZWxlY3RIYW5kbGVyKSxpKHdpbmRvdykub2ZmKFwib3JpZW50YXRpb25jaGFuZ2Uuc2xpY2suc2xpY2stXCIrZS5pbnN0YW5jZVVpZCxlLm9yaWVudGF0aW9uQ2hhbmdlKSxpKHdpbmRvdykub2ZmKFwicmVzaXplLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsZS5yZXNpemUpLGkoXCJbZHJhZ2dhYmxlIT10cnVlXVwiLGUuJHNsaWRlVHJhY2spLm9mZihcImRyYWdzdGFydFwiLGUucHJldmVudERlZmF1bHQpLGkod2luZG93KS5vZmYoXCJsb2FkLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsZS5zZXRQb3NpdGlvbil9LGUucHJvdG90eXBlLmNsZWFuVXBTbGlkZUV2ZW50cz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS4kbGlzdC5vZmYoXCJtb3VzZWVudGVyLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCEwKSksZS4kbGlzdC5vZmYoXCJtb3VzZWxlYXZlLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCExKSl9LGUucHJvdG90eXBlLmNsZWFuVXBSb3dzPWZ1bmN0aW9uKCl7dmFyIGksZT10aGlzO2Uub3B0aW9ucy5yb3dzPjEmJigoaT1lLiRzbGlkZXMuY2hpbGRyZW4oKS5jaGlsZHJlbigpKS5yZW1vdmVBdHRyKFwic3R5bGVcIiksZS4kc2xpZGVyLmVtcHR5KCkuYXBwZW5kKGkpKX0sZS5wcm90b3R5cGUuY2xpY2tIYW5kbGVyPWZ1bmN0aW9uKGkpeyExPT09dGhpcy5zaG91bGRDbGljayYmKGkuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksaS5zdG9wUHJvcGFnYXRpb24oKSxpLnByZXZlbnREZWZhdWx0KCkpfSxlLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5hdXRvUGxheUNsZWFyKCksdC50b3VjaE9iamVjdD17fSx0LmNsZWFuVXBFdmVudHMoKSxpKFwiLnNsaWNrLWNsb25lZFwiLHQuJHNsaWRlcikuZGV0YWNoKCksdC4kZG90cyYmdC4kZG90cy5yZW1vdmUoKSx0LiRwcmV2QXJyb3cmJnQuJHByZXZBcnJvdy5sZW5ndGgmJih0LiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIikuY3NzKFwiZGlzcGxheVwiLFwiXCIpLHQuaHRtbEV4cHIudGVzdCh0Lm9wdGlvbnMucHJldkFycm93KSYmdC4kcHJldkFycm93LnJlbW92ZSgpKSx0LiRuZXh0QXJyb3cmJnQuJG5leHRBcnJvdy5sZW5ndGgmJih0LiRuZXh0QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIikuY3NzKFwiZGlzcGxheVwiLFwiXCIpLHQuaHRtbEV4cHIudGVzdCh0Lm9wdGlvbnMubmV4dEFycm93KSYmdC4kbmV4dEFycm93LnJlbW92ZSgpKSx0LiRzbGlkZXMmJih0LiRzbGlkZXMucmVtb3ZlQ2xhc3MoXCJzbGljay1zbGlkZSBzbGljay1hY3RpdmUgc2xpY2stY2VudGVyIHNsaWNrLXZpc2libGUgc2xpY2stY3VycmVudFwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW5cIikucmVtb3ZlQXR0cihcImRhdGEtc2xpY2staW5kZXhcIikuZWFjaChmdW5jdGlvbigpe2kodGhpcykuYXR0cihcInN0eWxlXCIsaSh0aGlzKS5kYXRhKFwib3JpZ2luYWxTdHlsaW5nXCIpKX0pLHQuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSx0LiRzbGlkZVRyYWNrLmRldGFjaCgpLHQuJGxpc3QuZGV0YWNoKCksdC4kc2xpZGVyLmFwcGVuZCh0LiRzbGlkZXMpKSx0LmNsZWFuVXBSb3dzKCksdC4kc2xpZGVyLnJlbW92ZUNsYXNzKFwic2xpY2stc2xpZGVyXCIpLHQuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpLHQuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWRvdHRlZFwiKSx0LnVuc2xpY2tlZD0hMCxlfHx0LiRzbGlkZXIudHJpZ2dlcihcImRlc3Ryb3lcIixbdF0pfSxlLnByb3RvdHlwZS5kaXNhYmxlVHJhbnNpdGlvbj1mdW5jdGlvbihpKXt2YXIgZT10aGlzLHQ9e307dFtlLnRyYW5zaXRpb25UeXBlXT1cIlwiLCExPT09ZS5vcHRpb25zLmZhZGU/ZS4kc2xpZGVUcmFjay5jc3ModCk6ZS4kc2xpZGVzLmVxKGkpLmNzcyh0KX0sZS5wcm90b3R5cGUuZmFkZVNsaWRlPWZ1bmN0aW9uKGksZSl7dmFyIHQ9dGhpczshMT09PXQuY3NzVHJhbnNpdGlvbnM/KHQuJHNsaWRlcy5lcShpKS5jc3Moe3pJbmRleDp0Lm9wdGlvbnMuekluZGV4fSksdC4kc2xpZGVzLmVxKGkpLmFuaW1hdGUoe29wYWNpdHk6MX0sdC5vcHRpb25zLnNwZWVkLHQub3B0aW9ucy5lYXNpbmcsZSkpOih0LmFwcGx5VHJhbnNpdGlvbihpKSx0LiRzbGlkZXMuZXEoaSkuY3NzKHtvcGFjaXR5OjEsekluZGV4OnQub3B0aW9ucy56SW5kZXh9KSxlJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5kaXNhYmxlVHJhbnNpdGlvbihpKSxlLmNhbGwoKX0sdC5vcHRpb25zLnNwZWVkKSl9LGUucHJvdG90eXBlLmZhZGVTbGlkZU91dD1mdW5jdGlvbihpKXt2YXIgZT10aGlzOyExPT09ZS5jc3NUcmFuc2l0aW9ucz9lLiRzbGlkZXMuZXEoaSkuYW5pbWF0ZSh7b3BhY2l0eTowLHpJbmRleDplLm9wdGlvbnMuekluZGV4LTJ9LGUub3B0aW9ucy5zcGVlZCxlLm9wdGlvbnMuZWFzaW5nKTooZS5hcHBseVRyYW5zaXRpb24oaSksZS4kc2xpZGVzLmVxKGkpLmNzcyh7b3BhY2l0eTowLHpJbmRleDplLm9wdGlvbnMuekluZGV4LTJ9KSl9LGUucHJvdG90eXBlLmZpbHRlclNsaWRlcz1lLnByb3RvdHlwZS5zbGlja0ZpbHRlcj1mdW5jdGlvbihpKXt2YXIgZT10aGlzO251bGwhPT1pJiYoZS4kc2xpZGVzQ2FjaGU9ZS4kc2xpZGVzLGUudW5sb2FkKCksZS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLGUuJHNsaWRlc0NhY2hlLmZpbHRlcihpKS5hcHBlbmRUbyhlLiRzbGlkZVRyYWNrKSxlLnJlaW5pdCgpKX0sZS5wcm90b3R5cGUuZm9jdXNIYW5kbGVyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLiRzbGlkZXIub2ZmKFwiZm9jdXMuc2xpY2sgYmx1ci5zbGlja1wiKS5vbihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIixcIipcIixmdW5jdGlvbih0KXt0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO3ZhciBvPWkodGhpcyk7c2V0VGltZW91dChmdW5jdGlvbigpe2Uub3B0aW9ucy5wYXVzZU9uRm9jdXMmJihlLmZvY3Vzc2VkPW8uaXMoXCI6Zm9jdXNcIiksZS5hdXRvUGxheSgpKX0sMCl9KX0sZS5wcm90b3R5cGUuZ2V0Q3VycmVudD1lLnByb3RvdHlwZS5zbGlja0N1cnJlbnRTbGlkZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmN1cnJlbnRTbGlkZX0sZS5wcm90b3R5cGUuZ2V0RG90Q291bnQ9ZnVuY3Rpb24oKXt2YXIgaT10aGlzLGU9MCx0PTAsbz0wO2lmKCEwPT09aS5vcHRpb25zLmluZmluaXRlKWlmKGkuc2xpZGVDb3VudDw9aS5vcHRpb25zLnNsaWRlc1RvU2hvdykrK287ZWxzZSBmb3IoO2U8aS5zbGlkZUNvdW50OykrK28sZT10K2kub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCx0Kz1pLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw8PWkub3B0aW9ucy5zbGlkZXNUb1Nob3c/aS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOmkub3B0aW9ucy5zbGlkZXNUb1Nob3c7ZWxzZSBpZighMD09PWkub3B0aW9ucy5jZW50ZXJNb2RlKW89aS5zbGlkZUNvdW50O2Vsc2UgaWYoaS5vcHRpb25zLmFzTmF2Rm9yKWZvcig7ZTxpLnNsaWRlQ291bnQ7KSsrbyxlPXQraS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLHQrPWkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDw9aS5vcHRpb25zLnNsaWRlc1RvU2hvdz9pLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw6aS5vcHRpb25zLnNsaWRlc1RvU2hvdztlbHNlIG89MStNYXRoLmNlaWwoKGkuc2xpZGVDb3VudC1pLm9wdGlvbnMuc2xpZGVzVG9TaG93KS9pLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpO3JldHVybiBvLTF9LGUucHJvdG90eXBlLmdldExlZnQ9ZnVuY3Rpb24oaSl7dmFyIGUsdCxvLHMsbj10aGlzLHI9MDtyZXR1cm4gbi5zbGlkZU9mZnNldD0wLHQ9bi4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQoITApLCEwPT09bi5vcHRpb25zLmluZmluaXRlPyhuLnNsaWRlQ291bnQ+bi5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKG4uc2xpZGVPZmZzZXQ9bi5zbGlkZVdpZHRoKm4ub3B0aW9ucy5zbGlkZXNUb1Nob3cqLTEscz0tMSwhMD09PW4ub3B0aW9ucy52ZXJ0aWNhbCYmITA9PT1uLm9wdGlvbnMuY2VudGVyTW9kZSYmKDI9PT1uLm9wdGlvbnMuc2xpZGVzVG9TaG93P3M9LTEuNToxPT09bi5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKHM9LTIpKSxyPXQqbi5vcHRpb25zLnNsaWRlc1RvU2hvdypzKSxuLnNsaWRlQ291bnQlbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIT0wJiZpK24ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbD5uLnNsaWRlQ291bnQmJm4uc2xpZGVDb3VudD5uLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYoaT5uLnNsaWRlQ291bnQ/KG4uc2xpZGVPZmZzZXQ9KG4ub3B0aW9ucy5zbGlkZXNUb1Nob3ctKGktbi5zbGlkZUNvdW50KSkqbi5zbGlkZVdpZHRoKi0xLHI9KG4ub3B0aW9ucy5zbGlkZXNUb1Nob3ctKGktbi5zbGlkZUNvdW50KSkqdCotMSk6KG4uc2xpZGVPZmZzZXQ9bi5zbGlkZUNvdW50JW4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCpuLnNsaWRlV2lkdGgqLTEscj1uLnNsaWRlQ291bnQlbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKnQqLTEpKSk6aStuLm9wdGlvbnMuc2xpZGVzVG9TaG93Pm4uc2xpZGVDb3VudCYmKG4uc2xpZGVPZmZzZXQ9KGkrbi5vcHRpb25zLnNsaWRlc1RvU2hvdy1uLnNsaWRlQ291bnQpKm4uc2xpZGVXaWR0aCxyPShpK24ub3B0aW9ucy5zbGlkZXNUb1Nob3ctbi5zbGlkZUNvdW50KSp0KSxuLnNsaWRlQ291bnQ8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihuLnNsaWRlT2Zmc2V0PTAscj0wKSwhMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlJiZuLnNsaWRlQ291bnQ8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3c/bi5zbGlkZU9mZnNldD1uLnNsaWRlV2lkdGgqTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93KS8yLW4uc2xpZGVXaWR0aCpuLnNsaWRlQ291bnQvMjohMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlJiYhMD09PW4ub3B0aW9ucy5pbmZpbml0ZT9uLnNsaWRlT2Zmc2V0Kz1uLnNsaWRlV2lkdGgqTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIpLW4uc2xpZGVXaWR0aDohMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlJiYobi5zbGlkZU9mZnNldD0wLG4uc2xpZGVPZmZzZXQrPW4uc2xpZGVXaWR0aCpNYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMikpLGU9ITE9PT1uLm9wdGlvbnMudmVydGljYWw/aSpuLnNsaWRlV2lkdGgqLTErbi5zbGlkZU9mZnNldDppKnQqLTErciwhMD09PW4ub3B0aW9ucy52YXJpYWJsZVdpZHRoJiYobz1uLnNsaWRlQ291bnQ8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3d8fCExPT09bi5vcHRpb25zLmluZmluaXRlP24uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoaSk6bi4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5lcShpK24ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLGU9ITA9PT1uLm9wdGlvbnMucnRsP29bMF0/LTEqKG4uJHNsaWRlVHJhY2sud2lkdGgoKS1vWzBdLm9mZnNldExlZnQtby53aWR0aCgpKTowOm9bMF0/LTEqb1swXS5vZmZzZXRMZWZ0OjAsITA9PT1uLm9wdGlvbnMuY2VudGVyTW9kZSYmKG89bi5zbGlkZUNvdW50PD1uLm9wdGlvbnMuc2xpZGVzVG9TaG93fHwhMT09PW4ub3B0aW9ucy5pbmZpbml0ZT9uLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmVxKGkpOm4uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoaStuLm9wdGlvbnMuc2xpZGVzVG9TaG93KzEpLGU9ITA9PT1uLm9wdGlvbnMucnRsP29bMF0/LTEqKG4uJHNsaWRlVHJhY2sud2lkdGgoKS1vWzBdLm9mZnNldExlZnQtby53aWR0aCgpKTowOm9bMF0/LTEqb1swXS5vZmZzZXRMZWZ0OjAsZSs9KG4uJGxpc3Qud2lkdGgoKS1vLm91dGVyV2lkdGgoKSkvMikpLGV9LGUucHJvdG90eXBlLmdldE9wdGlvbj1lLnByb3RvdHlwZS5zbGlja0dldE9wdGlvbj1mdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5vcHRpb25zW2ldfSxlLnByb3RvdHlwZS5nZXROYXZpZ2FibGVJbmRleGVzPWZ1bmN0aW9uKCl7dmFyIGksZT10aGlzLHQ9MCxvPTAscz1bXTtmb3IoITE9PT1lLm9wdGlvbnMuaW5maW5pdGU/aT1lLnNsaWRlQ291bnQ6KHQ9LTEqZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLG89LTEqZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLGk9MiplLnNsaWRlQ291bnQpO3Q8aTspcy5wdXNoKHQpLHQ9bytlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwsbys9ZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsPD1lLm9wdGlvbnMuc2xpZGVzVG9TaG93P2Uub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDplLm9wdGlvbnMuc2xpZGVzVG9TaG93O3JldHVybiBzfSxlLnByb3RvdHlwZS5nZXRTbGljaz1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxlLnByb3RvdHlwZS5nZXRTbGlkZUNvdW50PWZ1bmN0aW9uKCl7dmFyIGUsdCxvPXRoaXM7cmV0dXJuIHQ9ITA9PT1vLm9wdGlvbnMuY2VudGVyTW9kZT9vLnNsaWRlV2lkdGgqTWF0aC5mbG9vcihvLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIpOjAsITA9PT1vLm9wdGlvbnMuc3dpcGVUb1NsaWRlPyhvLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stc2xpZGVcIikuZWFjaChmdW5jdGlvbihzLG4pe2lmKG4ub2Zmc2V0TGVmdC10K2kobikub3V0ZXJXaWR0aCgpLzI+LTEqby5zd2lwZUxlZnQpcmV0dXJuIGU9biwhMX0pLE1hdGguYWJzKGkoZSkuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIiktby5jdXJyZW50U2xpZGUpfHwxKTpvLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGx9LGUucHJvdG90eXBlLmdvVG89ZS5wcm90b3R5cGUuc2xpY2tHb1RvPWZ1bmN0aW9uKGksZSl7dGhpcy5jaGFuZ2VTbGlkZSh7ZGF0YTp7bWVzc2FnZTpcImluZGV4XCIsaW5kZXg6cGFyc2VJbnQoaSl9fSxlKX0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbihlKXt2YXIgdD10aGlzO2kodC4kc2xpZGVyKS5oYXNDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpfHwoaSh0LiRzbGlkZXIpLmFkZENsYXNzKFwic2xpY2staW5pdGlhbGl6ZWRcIiksdC5idWlsZFJvd3MoKSx0LmJ1aWxkT3V0KCksdC5zZXRQcm9wcygpLHQuc3RhcnRMb2FkKCksdC5sb2FkU2xpZGVyKCksdC5pbml0aWFsaXplRXZlbnRzKCksdC51cGRhdGVBcnJvd3MoKSx0LnVwZGF0ZURvdHMoKSx0LmNoZWNrUmVzcG9uc2l2ZSghMCksdC5mb2N1c0hhbmRsZXIoKSksZSYmdC4kc2xpZGVyLnRyaWdnZXIoXCJpbml0XCIsW3RdKSwhMD09PXQub3B0aW9ucy5hY2Nlc3NpYmlsaXR5JiZ0LmluaXRBREEoKSx0Lm9wdGlvbnMuYXV0b3BsYXkmJih0LnBhdXNlZD0hMSx0LmF1dG9QbGF5KCkpfSxlLnByb3RvdHlwZS5pbml0QURBPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PU1hdGguY2VpbChlLnNsaWRlQ291bnQvZS5vcHRpb25zLnNsaWRlc1RvU2hvdyksbz1lLmdldE5hdmlnYWJsZUluZGV4ZXMoKS5maWx0ZXIoZnVuY3Rpb24oaSl7cmV0dXJuIGk+PTAmJmk8ZS5zbGlkZUNvdW50fSk7ZS4kc2xpZGVzLmFkZChlLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCIsdGFiaW5kZXg6XCItMVwifSkuZmluZChcImEsIGlucHV0LCBidXR0b24sIHNlbGVjdFwiKS5hdHRyKHt0YWJpbmRleDpcIi0xXCJ9KSxudWxsIT09ZS4kZG90cyYmKGUuJHNsaWRlcy5ub3QoZS4kc2xpZGVUcmFjay5maW5kKFwiLnNsaWNrLWNsb25lZFwiKSkuZWFjaChmdW5jdGlvbih0KXt2YXIgcz1vLmluZGV4T2YodCk7aSh0aGlzKS5hdHRyKHtyb2xlOlwidGFicGFuZWxcIixpZDpcInNsaWNrLXNsaWRlXCIrZS5pbnN0YW5jZVVpZCt0LHRhYmluZGV4Oi0xfSksLTEhPT1zJiZpKHRoaXMpLmF0dHIoe1wiYXJpYS1kZXNjcmliZWRieVwiOlwic2xpY2stc2xpZGUtY29udHJvbFwiK2UuaW5zdGFuY2VVaWQrc30pfSksZS4kZG90cy5hdHRyKFwicm9sZVwiLFwidGFibGlzdFwiKS5maW5kKFwibGlcIikuZWFjaChmdW5jdGlvbihzKXt2YXIgbj1vW3NdO2kodGhpcykuYXR0cih7cm9sZTpcInByZXNlbnRhdGlvblwifSksaSh0aGlzKS5maW5kKFwiYnV0dG9uXCIpLmZpcnN0KCkuYXR0cih7cm9sZTpcInRhYlwiLGlkOlwic2xpY2stc2xpZGUtY29udHJvbFwiK2UuaW5zdGFuY2VVaWQrcyxcImFyaWEtY29udHJvbHNcIjpcInNsaWNrLXNsaWRlXCIrZS5pbnN0YW5jZVVpZCtuLFwiYXJpYS1sYWJlbFwiOnMrMStcIiBvZiBcIit0LFwiYXJpYS1zZWxlY3RlZFwiOm51bGwsdGFiaW5kZXg6XCItMVwifSl9KS5lcShlLmN1cnJlbnRTbGlkZSkuZmluZChcImJ1dHRvblwiKS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcInRydWVcIix0YWJpbmRleDpcIjBcIn0pLmVuZCgpKTtmb3IodmFyIHM9ZS5jdXJyZW50U2xpZGUsbj1zK2Uub3B0aW9ucy5zbGlkZXNUb1Nob3c7czxuO3MrKyllLiRzbGlkZXMuZXEocykuYXR0cihcInRhYmluZGV4XCIsMCk7ZS5hY3RpdmF0ZUFEQSgpfSxlLnByb3RvdHlwZS5pbml0QXJyb3dFdmVudHM9ZnVuY3Rpb24oKXt2YXIgaT10aGlzOyEwPT09aS5vcHRpb25zLmFycm93cyYmaS5zbGlkZUNvdW50Pmkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihpLiRwcmV2QXJyb3cub2ZmKFwiY2xpY2suc2xpY2tcIikub24oXCJjbGljay5zbGlja1wiLHttZXNzYWdlOlwicHJldmlvdXNcIn0saS5jaGFuZ2VTbGlkZSksaS4kbmV4dEFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIpLm9uKFwiY2xpY2suc2xpY2tcIix7bWVzc2FnZTpcIm5leHRcIn0saS5jaGFuZ2VTbGlkZSksITA9PT1pLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmKGkuJHByZXZBcnJvdy5vbihcImtleWRvd24uc2xpY2tcIixpLmtleUhhbmRsZXIpLGkuJG5leHRBcnJvdy5vbihcImtleWRvd24uc2xpY2tcIixpLmtleUhhbmRsZXIpKSl9LGUucHJvdG90eXBlLmluaXREb3RFdmVudHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzOyEwPT09ZS5vcHRpb25zLmRvdHMmJihpKFwibGlcIixlLiRkb3RzKS5vbihcImNsaWNrLnNsaWNrXCIse21lc3NhZ2U6XCJpbmRleFwifSxlLmNoYW5nZVNsaWRlKSwhMD09PWUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5JiZlLiRkb3RzLm9uKFwia2V5ZG93bi5zbGlja1wiLGUua2V5SGFuZGxlcikpLCEwPT09ZS5vcHRpb25zLmRvdHMmJiEwPT09ZS5vcHRpb25zLnBhdXNlT25Eb3RzSG92ZXImJmkoXCJsaVwiLGUuJGRvdHMpLm9uKFwibW91c2VlbnRlci5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMCkpLm9uKFwibW91c2VsZWF2ZS5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMSkpfSxlLnByb3RvdHlwZS5pbml0U2xpZGVFdmVudHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2Uub3B0aW9ucy5wYXVzZU9uSG92ZXImJihlLiRsaXN0Lm9uKFwibW91c2VlbnRlci5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMCkpLGUuJGxpc3Qub24oXCJtb3VzZWxlYXZlLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCExKSkpfSxlLnByb3RvdHlwZS5pbml0aWFsaXplRXZlbnRzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLmluaXRBcnJvd0V2ZW50cygpLGUuaW5pdERvdEV2ZW50cygpLGUuaW5pdFNsaWRlRXZlbnRzKCksZS4kbGlzdC5vbihcInRvdWNoc3RhcnQuc2xpY2sgbW91c2Vkb3duLnNsaWNrXCIse2FjdGlvbjpcInN0YXJ0XCJ9LGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9uKFwidG91Y2htb3ZlLnNsaWNrIG1vdXNlbW92ZS5zbGlja1wiLHthY3Rpb246XCJtb3ZlXCJ9LGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9uKFwidG91Y2hlbmQuc2xpY2sgbW91c2V1cC5zbGlja1wiLHthY3Rpb246XCJlbmRcIn0sZS5zd2lwZUhhbmRsZXIpLGUuJGxpc3Qub24oXCJ0b3VjaGNhbmNlbC5zbGljayBtb3VzZWxlYXZlLnNsaWNrXCIse2FjdGlvbjpcImVuZFwifSxlLnN3aXBlSGFuZGxlciksZS4kbGlzdC5vbihcImNsaWNrLnNsaWNrXCIsZS5jbGlja0hhbmRsZXIpLGkoZG9jdW1lbnQpLm9uKGUudmlzaWJpbGl0eUNoYW5nZSxpLnByb3h5KGUudmlzaWJpbGl0eSxlKSksITA9PT1lLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmZS4kbGlzdC5vbihcImtleWRvd24uc2xpY2tcIixlLmtleUhhbmRsZXIpLCEwPT09ZS5vcHRpb25zLmZvY3VzT25TZWxlY3QmJmkoZS4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vbihcImNsaWNrLnNsaWNrXCIsZS5zZWxlY3RIYW5kbGVyKSxpKHdpbmRvdykub24oXCJvcmllbnRhdGlvbmNoYW5nZS5zbGljay5zbGljay1cIitlLmluc3RhbmNlVWlkLGkucHJveHkoZS5vcmllbnRhdGlvbkNoYW5nZSxlKSksaSh3aW5kb3cpLm9uKFwicmVzaXplLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsaS5wcm94eShlLnJlc2l6ZSxlKSksaShcIltkcmFnZ2FibGUhPXRydWVdXCIsZS4kc2xpZGVUcmFjaykub24oXCJkcmFnc3RhcnRcIixlLnByZXZlbnREZWZhdWx0KSxpKHdpbmRvdykub24oXCJsb2FkLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsZS5zZXRQb3NpdGlvbiksaShlLnNldFBvc2l0aW9uKX0sZS5wcm90b3R5cGUuaW5pdFVJPWZ1bmN0aW9uKCl7dmFyIGk9dGhpczshMD09PWkub3B0aW9ucy5hcnJvd3MmJmkuc2xpZGVDb3VudD5pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYoaS4kcHJldkFycm93LnNob3coKSxpLiRuZXh0QXJyb3cuc2hvdygpKSwhMD09PWkub3B0aW9ucy5kb3RzJiZpLnNsaWRlQ291bnQ+aS5vcHRpb25zLnNsaWRlc1RvU2hvdyYmaS4kZG90cy5zaG93KCl9LGUucHJvdG90eXBlLmtleUhhbmRsZXI9ZnVuY3Rpb24oaSl7dmFyIGU9dGhpcztpLnRhcmdldC50YWdOYW1lLm1hdGNoKFwiVEVYVEFSRUF8SU5QVVR8U0VMRUNUXCIpfHwoMzc9PT1pLmtleUNvZGUmJiEwPT09ZS5vcHRpb25zLmFjY2Vzc2liaWxpdHk/ZS5jaGFuZ2VTbGlkZSh7ZGF0YTp7bWVzc2FnZTohMD09PWUub3B0aW9ucy5ydGw/XCJuZXh0XCI6XCJwcmV2aW91c1wifX0pOjM5PT09aS5rZXlDb2RlJiYhMD09PWUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5JiZlLmNoYW5nZVNsaWRlKHtkYXRhOnttZXNzYWdlOiEwPT09ZS5vcHRpb25zLnJ0bD9cInByZXZpb3VzXCI6XCJuZXh0XCJ9fSkpfSxlLnByb3RvdHlwZS5sYXp5TG9hZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7aShcImltZ1tkYXRhLWxhenldXCIsZSkuZWFjaChmdW5jdGlvbigpe3ZhciBlPWkodGhpcyksdD1pKHRoaXMpLmF0dHIoXCJkYXRhLWxhenlcIiksbz1pKHRoaXMpLmF0dHIoXCJkYXRhLXNyY3NldFwiKSxzPWkodGhpcykuYXR0cihcImRhdGEtc2l6ZXNcIil8fG4uJHNsaWRlci5hdHRyKFwiZGF0YS1zaXplc1wiKSxyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7ci5vbmxvYWQ9ZnVuY3Rpb24oKXtlLmFuaW1hdGUoe29wYWNpdHk6MH0sMTAwLGZ1bmN0aW9uKCl7byYmKGUuYXR0cihcInNyY3NldFwiLG8pLHMmJmUuYXR0cihcInNpemVzXCIscykpLGUuYXR0cihcInNyY1wiLHQpLmFuaW1hdGUoe29wYWNpdHk6MX0sMjAwLGZ1bmN0aW9uKCl7ZS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXNcIikucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpfSksbi4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZGVkXCIsW24sZSx0XSl9KX0sci5vbmVycm9yPWZ1bmN0aW9uKCl7ZS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5XCIpLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKS5hZGRDbGFzcyhcInNsaWNrLWxhenlsb2FkLWVycm9yXCIpLG4uJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRFcnJvclwiLFtuLGUsdF0pfSxyLnNyYz10fSl9dmFyIHQsbyxzLG49dGhpcztpZighMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlPyEwPT09bi5vcHRpb25zLmluZmluaXRlP3M9KG89bi5jdXJyZW50U2xpZGUrKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMisxKSkrbi5vcHRpb25zLnNsaWRlc1RvU2hvdysyOihvPU1hdGgubWF4KDAsbi5jdXJyZW50U2xpZGUtKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMisxKSkscz1uLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIrMSsyK24uY3VycmVudFNsaWRlKToobz1uLm9wdGlvbnMuaW5maW5pdGU/bi5vcHRpb25zLnNsaWRlc1RvU2hvdytuLmN1cnJlbnRTbGlkZTpuLmN1cnJlbnRTbGlkZSxzPU1hdGguY2VpbChvK24ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLCEwPT09bi5vcHRpb25zLmZhZGUmJihvPjAmJm8tLSxzPD1uLnNsaWRlQ291bnQmJnMrKykpLHQ9bi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIikuc2xpY2UobyxzKSxcImFudGljaXBhdGVkXCI9PT1uLm9wdGlvbnMubGF6eUxvYWQpZm9yKHZhciByPW8tMSxsPXMsZD1uLiRzbGlkZXIuZmluZChcIi5zbGljay1zbGlkZVwiKSxhPTA7YTxuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7YSsrKXI8MCYmKHI9bi5zbGlkZUNvdW50LTEpLHQ9KHQ9dC5hZGQoZC5lcShyKSkpLmFkZChkLmVxKGwpKSxyLS0sbCsrO2UodCksbi5zbGlkZUNvdW50PD1uLm9wdGlvbnMuc2xpZGVzVG9TaG93P2Uobi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIikpOm4uY3VycmVudFNsaWRlPj1uLnNsaWRlQ291bnQtbi5vcHRpb25zLnNsaWRlc1RvU2hvdz9lKG4uJHNsaWRlci5maW5kKFwiLnNsaWNrLWNsb25lZFwiKS5zbGljZSgwLG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKTowPT09bi5jdXJyZW50U2xpZGUmJmUobi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpLnNsaWNlKC0xKm4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKX0sZS5wcm90b3R5cGUubG9hZFNsaWRlcj1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5zZXRQb3NpdGlvbigpLGkuJHNsaWRlVHJhY2suY3NzKHtvcGFjaXR5OjF9KSxpLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLGkuaW5pdFVJKCksXCJwcm9ncmVzc2l2ZVwiPT09aS5vcHRpb25zLmxhenlMb2FkJiZpLnByb2dyZXNzaXZlTGF6eUxvYWQoKX0sZS5wcm90b3R5cGUubmV4dD1lLnByb3RvdHlwZS5zbGlja05leHQ9ZnVuY3Rpb24oKXt0aGlzLmNoYW5nZVNsaWRlKHtkYXRhOnttZXNzYWdlOlwibmV4dFwifX0pfSxlLnByb3RvdHlwZS5vcmllbnRhdGlvbkNoYW5nZT1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5jaGVja1Jlc3BvbnNpdmUoKSxpLnNldFBvc2l0aW9uKCl9LGUucHJvdG90eXBlLnBhdXNlPWUucHJvdG90eXBlLnNsaWNrUGF1c2U9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO2kuYXV0b1BsYXlDbGVhcigpLGkucGF1c2VkPSEwfSxlLnByb3RvdHlwZS5wbGF5PWUucHJvdG90eXBlLnNsaWNrUGxheT1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5hdXRvUGxheSgpLGkub3B0aW9ucy5hdXRvcGxheT0hMCxpLnBhdXNlZD0hMSxpLmZvY3Vzc2VkPSExLGkuaW50ZXJydXB0ZWQ9ITF9LGUucHJvdG90eXBlLnBvc3RTbGlkZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QudW5zbGlja2VkfHwodC4kc2xpZGVyLnRyaWdnZXIoXCJhZnRlckNoYW5nZVwiLFt0LGVdKSx0LmFuaW1hdGluZz0hMSx0LnNsaWRlQ291bnQ+dC5vcHRpb25zLnNsaWRlc1RvU2hvdyYmdC5zZXRQb3NpdGlvbigpLHQuc3dpcGVMZWZ0PW51bGwsdC5vcHRpb25zLmF1dG9wbGF5JiZ0LmF1dG9QbGF5KCksITA9PT10Lm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmKHQuaW5pdEFEQSgpLHQub3B0aW9ucy5mb2N1c09uQ2hhbmdlJiZpKHQuJHNsaWRlcy5nZXQodC5jdXJyZW50U2xpZGUpKS5hdHRyKFwidGFiaW5kZXhcIiwwKS5mb2N1cygpKSl9LGUucHJvdG90eXBlLnByZXY9ZS5wcm90b3R5cGUuc2xpY2tQcmV2PWZ1bmN0aW9uKCl7dGhpcy5jaGFuZ2VTbGlkZSh7ZGF0YTp7bWVzc2FnZTpcInByZXZpb3VzXCJ9fSl9LGUucHJvdG90eXBlLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKGkpe2kucHJldmVudERlZmF1bHQoKX0sZS5wcm90b3R5cGUucHJvZ3Jlc3NpdmVMYXp5TG9hZD1mdW5jdGlvbihlKXtlPWV8fDE7dmFyIHQsbyxzLG4scixsPXRoaXMsZD1pKFwiaW1nW2RhdGEtbGF6eV1cIixsLiRzbGlkZXIpO2QubGVuZ3RoPyh0PWQuZmlyc3QoKSxvPXQuYXR0cihcImRhdGEtbGF6eVwiKSxzPXQuYXR0cihcImRhdGEtc3Jjc2V0XCIpLG49dC5hdHRyKFwiZGF0YS1zaXplc1wiKXx8bC4kc2xpZGVyLmF0dHIoXCJkYXRhLXNpemVzXCIpLChyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIikpLm9ubG9hZD1mdW5jdGlvbigpe3MmJih0LmF0dHIoXCJzcmNzZXRcIixzKSxuJiZ0LmF0dHIoXCJzaXplc1wiLG4pKSx0LmF0dHIoXCJzcmNcIixvKS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXNcIikucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLCEwPT09bC5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0JiZsLnNldFBvc2l0aW9uKCksbC4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZGVkXCIsW2wsdCxvXSksbC5wcm9ncmVzc2l2ZUxhenlMb2FkKCl9LHIub25lcnJvcj1mdW5jdGlvbigpe2U8Mz9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bC5wcm9ncmVzc2l2ZUxhenlMb2FkKGUrMSl9LDUwMCk6KHQucmVtb3ZlQXR0cihcImRhdGEtbGF6eVwiKS5yZW1vdmVDbGFzcyhcInNsaWNrLWxvYWRpbmdcIikuYWRkQ2xhc3MoXCJzbGljay1sYXp5bG9hZC1lcnJvclwiKSxsLiRzbGlkZXIudHJpZ2dlcihcImxhenlMb2FkRXJyb3JcIixbbCx0LG9dKSxsLnByb2dyZXNzaXZlTGF6eUxvYWQoKSl9LHIuc3JjPW8pOmwuJHNsaWRlci50cmlnZ2VyKFwiYWxsSW1hZ2VzTG9hZGVkXCIsW2xdKX0sZS5wcm90b3R5cGUucmVmcmVzaD1mdW5jdGlvbihlKXt2YXIgdCxvLHM9dGhpcztvPXMuc2xpZGVDb3VudC1zLm9wdGlvbnMuc2xpZGVzVG9TaG93LCFzLm9wdGlvbnMuaW5maW5pdGUmJnMuY3VycmVudFNsaWRlPm8mJihzLmN1cnJlbnRTbGlkZT1vKSxzLnNsaWRlQ291bnQ8PXMub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihzLmN1cnJlbnRTbGlkZT0wKSx0PXMuY3VycmVudFNsaWRlLHMuZGVzdHJveSghMCksaS5leHRlbmQocyxzLmluaXRpYWxzLHtjdXJyZW50U2xpZGU6dH0pLHMuaW5pdCgpLGV8fHMuY2hhbmdlU2xpZGUoe2RhdGE6e21lc3NhZ2U6XCJpbmRleFwiLGluZGV4OnR9fSwhMSl9LGUucHJvdG90eXBlLnJlZ2lzdGVyQnJlYWtwb2ludHM9ZnVuY3Rpb24oKXt2YXIgZSx0LG8scz10aGlzLG49cy5vcHRpb25zLnJlc3BvbnNpdmV8fG51bGw7aWYoXCJhcnJheVwiPT09aS50eXBlKG4pJiZuLmxlbmd0aCl7cy5yZXNwb25kVG89cy5vcHRpb25zLnJlc3BvbmRUb3x8XCJ3aW5kb3dcIjtmb3IoZSBpbiBuKWlmKG89cy5icmVha3BvaW50cy5sZW5ndGgtMSxuLmhhc093blByb3BlcnR5KGUpKXtmb3IodD1uW2VdLmJyZWFrcG9pbnQ7bz49MDspcy5icmVha3BvaW50c1tvXSYmcy5icmVha3BvaW50c1tvXT09PXQmJnMuYnJlYWtwb2ludHMuc3BsaWNlKG8sMSksby0tO3MuYnJlYWtwb2ludHMucHVzaCh0KSxzLmJyZWFrcG9pbnRTZXR0aW5nc1t0XT1uW2VdLnNldHRpbmdzfXMuYnJlYWtwb2ludHMuc29ydChmdW5jdGlvbihpLGUpe3JldHVybiBzLm9wdGlvbnMubW9iaWxlRmlyc3Q/aS1lOmUtaX0pfX0sZS5wcm90b3R5cGUucmVpbml0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLiRzbGlkZXM9ZS4kc2xpZGVUcmFjay5jaGlsZHJlbihlLm9wdGlvbnMuc2xpZGUpLmFkZENsYXNzKFwic2xpY2stc2xpZGVcIiksZS5zbGlkZUNvdW50PWUuJHNsaWRlcy5sZW5ndGgsZS5jdXJyZW50U2xpZGU+PWUuc2xpZGVDb3VudCYmMCE9PWUuY3VycmVudFNsaWRlJiYoZS5jdXJyZW50U2xpZGU9ZS5jdXJyZW50U2xpZGUtZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSxlLnNsaWRlQ291bnQ8PWUub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihlLmN1cnJlbnRTbGlkZT0wKSxlLnJlZ2lzdGVyQnJlYWtwb2ludHMoKSxlLnNldFByb3BzKCksZS5zZXR1cEluZmluaXRlKCksZS5idWlsZEFycm93cygpLGUudXBkYXRlQXJyb3dzKCksZS5pbml0QXJyb3dFdmVudHMoKSxlLmJ1aWxkRG90cygpLGUudXBkYXRlRG90cygpLGUuaW5pdERvdEV2ZW50cygpLGUuY2xlYW5VcFNsaWRlRXZlbnRzKCksZS5pbml0U2xpZGVFdmVudHMoKSxlLmNoZWNrUmVzcG9uc2l2ZSghMSwhMCksITA9PT1lLm9wdGlvbnMuZm9jdXNPblNlbGVjdCYmaShlLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9uKFwiY2xpY2suc2xpY2tcIixlLnNlbGVjdEhhbmRsZXIpLGUuc2V0U2xpZGVDbGFzc2VzKFwibnVtYmVyXCI9PXR5cGVvZiBlLmN1cnJlbnRTbGlkZT9lLmN1cnJlbnRTbGlkZTowKSxlLnNldFBvc2l0aW9uKCksZS5mb2N1c0hhbmRsZXIoKSxlLnBhdXNlZD0hZS5vcHRpb25zLmF1dG9wbGF5LGUuYXV0b1BsYXkoKSxlLiRzbGlkZXIudHJpZ2dlcihcInJlSW5pdFwiLFtlXSl9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXM7aSh3aW5kb3cpLndpZHRoKCkhPT1lLndpbmRvd1dpZHRoJiYoY2xlYXJUaW1lb3V0KGUud2luZG93RGVsYXkpLGUud2luZG93RGVsYXk9d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLndpbmRvd1dpZHRoPWkod2luZG93KS53aWR0aCgpLGUuY2hlY2tSZXNwb25zaXZlKCksZS51bnNsaWNrZWR8fGUuc2V0UG9zaXRpb24oKX0sNTApKX0sZS5wcm90b3R5cGUucmVtb3ZlU2xpZGU9ZS5wcm90b3R5cGUuc2xpY2tSZW1vdmU9ZnVuY3Rpb24oaSxlLHQpe3ZhciBvPXRoaXM7aWYoaT1cImJvb2xlYW5cIj09dHlwZW9mIGk/ITA9PT0oZT1pKT8wOm8uc2xpZGVDb3VudC0xOiEwPT09ZT8tLWk6aSxvLnNsaWRlQ291bnQ8MXx8aTwwfHxpPm8uc2xpZGVDb3VudC0xKXJldHVybiExO28udW5sb2FkKCksITA9PT10P28uJHNsaWRlVHJhY2suY2hpbGRyZW4oKS5yZW1vdmUoKTpvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZXEoaSkucmVtb3ZlKCksby4kc2xpZGVzPW8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKSxvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksby4kc2xpZGVUcmFjay5hcHBlbmQoby4kc2xpZGVzKSxvLiRzbGlkZXNDYWNoZT1vLiRzbGlkZXMsby5yZWluaXQoKX0sZS5wcm90b3R5cGUuc2V0Q1NTPWZ1bmN0aW9uKGkpe3ZhciBlLHQsbz10aGlzLHM9e307ITA9PT1vLm9wdGlvbnMucnRsJiYoaT0taSksZT1cImxlZnRcIj09by5wb3NpdGlvblByb3A/TWF0aC5jZWlsKGkpK1wicHhcIjpcIjBweFwiLHQ9XCJ0b3BcIj09by5wb3NpdGlvblByb3A/TWF0aC5jZWlsKGkpK1wicHhcIjpcIjBweFwiLHNbby5wb3NpdGlvblByb3BdPWksITE9PT1vLnRyYW5zZm9ybXNFbmFibGVkP28uJHNsaWRlVHJhY2suY3NzKHMpOihzPXt9LCExPT09by5jc3NUcmFuc2l0aW9ucz8oc1tvLmFuaW1UeXBlXT1cInRyYW5zbGF0ZShcIitlK1wiLCBcIit0K1wiKVwiLG8uJHNsaWRlVHJhY2suY3NzKHMpKTooc1tvLmFuaW1UeXBlXT1cInRyYW5zbGF0ZTNkKFwiK2UrXCIsIFwiK3QrXCIsIDBweClcIixvLiRzbGlkZVRyYWNrLmNzcyhzKSkpfSxlLnByb3RvdHlwZS5zZXREaW1lbnNpb25zPWZ1bmN0aW9uKCl7dmFyIGk9dGhpczshMT09PWkub3B0aW9ucy52ZXJ0aWNhbD8hMD09PWkub3B0aW9ucy5jZW50ZXJNb2RlJiZpLiRsaXN0LmNzcyh7cGFkZGluZzpcIjBweCBcIitpLm9wdGlvbnMuY2VudGVyUGFkZGluZ30pOihpLiRsaXN0LmhlaWdodChpLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCkqaS5vcHRpb25zLnNsaWRlc1RvU2hvdyksITA9PT1pLm9wdGlvbnMuY2VudGVyTW9kZSYmaS4kbGlzdC5jc3Moe3BhZGRpbmc6aS5vcHRpb25zLmNlbnRlclBhZGRpbmcrXCIgMHB4XCJ9KSksaS5saXN0V2lkdGg9aS4kbGlzdC53aWR0aCgpLGkubGlzdEhlaWdodD1pLiRsaXN0LmhlaWdodCgpLCExPT09aS5vcHRpb25zLnZlcnRpY2FsJiYhMT09PWkub3B0aW9ucy52YXJpYWJsZVdpZHRoPyhpLnNsaWRlV2lkdGg9TWF0aC5jZWlsKGkubGlzdFdpZHRoL2kub3B0aW9ucy5zbGlkZXNUb1Nob3cpLGkuJHNsaWRlVHJhY2sud2lkdGgoTWF0aC5jZWlsKGkuc2xpZGVXaWR0aCppLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmxlbmd0aCkpKTohMD09PWkub3B0aW9ucy52YXJpYWJsZVdpZHRoP2kuJHNsaWRlVHJhY2sud2lkdGgoNWUzKmkuc2xpZGVDb3VudCk6KGkuc2xpZGVXaWR0aD1NYXRoLmNlaWwoaS5saXN0V2lkdGgpLGkuJHNsaWRlVHJhY2suaGVpZ2h0KE1hdGguY2VpbChpLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCkqaS4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5sZW5ndGgpKSk7dmFyIGU9aS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJXaWR0aCghMCktaS4kc2xpZGVzLmZpcnN0KCkud2lkdGgoKTshMT09PWkub3B0aW9ucy52YXJpYWJsZVdpZHRoJiZpLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLndpZHRoKGkuc2xpZGVXaWR0aC1lKX0sZS5wcm90b3R5cGUuc2V0RmFkZT1mdW5jdGlvbigpe3ZhciBlLHQ9dGhpczt0LiRzbGlkZXMuZWFjaChmdW5jdGlvbihvLHMpe2U9dC5zbGlkZVdpZHRoKm8qLTEsITA9PT10Lm9wdGlvbnMucnRsP2kocykuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCIscmlnaHQ6ZSx0b3A6MCx6SW5kZXg6dC5vcHRpb25zLnpJbmRleC0yLG9wYWNpdHk6MH0pOmkocykuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCIsbGVmdDplLHRvcDowLHpJbmRleDp0Lm9wdGlvbnMuekluZGV4LTIsb3BhY2l0eTowfSl9KSx0LiRzbGlkZXMuZXEodC5jdXJyZW50U2xpZGUpLmNzcyh7ekluZGV4OnQub3B0aW9ucy56SW5kZXgtMSxvcGFjaXR5OjF9KX0sZS5wcm90b3R5cGUuc2V0SGVpZ2h0PWZ1bmN0aW9uKCl7dmFyIGk9dGhpcztpZigxPT09aS5vcHRpb25zLnNsaWRlc1RvU2hvdyYmITA9PT1pLm9wdGlvbnMuYWRhcHRpdmVIZWlnaHQmJiExPT09aS5vcHRpb25zLnZlcnRpY2FsKXt2YXIgZT1pLiRzbGlkZXMuZXEoaS5jdXJyZW50U2xpZGUpLm91dGVySGVpZ2h0KCEwKTtpLiRsaXN0LmNzcyhcImhlaWdodFwiLGUpfX0sZS5wcm90b3R5cGUuc2V0T3B0aW9uPWUucHJvdG90eXBlLnNsaWNrU2V0T3B0aW9uPWZ1bmN0aW9uKCl7dmFyIGUsdCxvLHMsbixyPXRoaXMsbD0hMTtpZihcIm9iamVjdFwiPT09aS50eXBlKGFyZ3VtZW50c1swXSk/KG89YXJndW1lbnRzWzBdLGw9YXJndW1lbnRzWzFdLG49XCJtdWx0aXBsZVwiKTpcInN0cmluZ1wiPT09aS50eXBlKGFyZ3VtZW50c1swXSkmJihvPWFyZ3VtZW50c1swXSxzPWFyZ3VtZW50c1sxXSxsPWFyZ3VtZW50c1syXSxcInJlc3BvbnNpdmVcIj09PWFyZ3VtZW50c1swXSYmXCJhcnJheVwiPT09aS50eXBlKGFyZ3VtZW50c1sxXSk/bj1cInJlc3BvbnNpdmVcIjp2b2lkIDAhPT1hcmd1bWVudHNbMV0mJihuPVwic2luZ2xlXCIpKSxcInNpbmdsZVwiPT09bilyLm9wdGlvbnNbb109cztlbHNlIGlmKFwibXVsdGlwbGVcIj09PW4paS5lYWNoKG8sZnVuY3Rpb24oaSxlKXtyLm9wdGlvbnNbaV09ZX0pO2Vsc2UgaWYoXCJyZXNwb25zaXZlXCI9PT1uKWZvcih0IGluIHMpaWYoXCJhcnJheVwiIT09aS50eXBlKHIub3B0aW9ucy5yZXNwb25zaXZlKSlyLm9wdGlvbnMucmVzcG9uc2l2ZT1bc1t0XV07ZWxzZXtmb3IoZT1yLm9wdGlvbnMucmVzcG9uc2l2ZS5sZW5ndGgtMTtlPj0wOylyLm9wdGlvbnMucmVzcG9uc2l2ZVtlXS5icmVha3BvaW50PT09c1t0XS5icmVha3BvaW50JiZyLm9wdGlvbnMucmVzcG9uc2l2ZS5zcGxpY2UoZSwxKSxlLS07ci5vcHRpb25zLnJlc3BvbnNpdmUucHVzaChzW3RdKX1sJiYoci51bmxvYWQoKSxyLnJlaW5pdCgpKX0sZS5wcm90b3R5cGUuc2V0UG9zaXRpb249ZnVuY3Rpb24oKXt2YXIgaT10aGlzO2kuc2V0RGltZW5zaW9ucygpLGkuc2V0SGVpZ2h0KCksITE9PT1pLm9wdGlvbnMuZmFkZT9pLnNldENTUyhpLmdldExlZnQoaS5jdXJyZW50U2xpZGUpKTppLnNldEZhZGUoKSxpLiRzbGlkZXIudHJpZ2dlcihcInNldFBvc2l0aW9uXCIsW2ldKX0sZS5wcm90b3R5cGUuc2V0UHJvcHM9ZnVuY3Rpb24oKXt2YXIgaT10aGlzLGU9ZG9jdW1lbnQuYm9keS5zdHlsZTtpLnBvc2l0aW9uUHJvcD0hMD09PWkub3B0aW9ucy52ZXJ0aWNhbD9cInRvcFwiOlwibGVmdFwiLFwidG9wXCI9PT1pLnBvc2l0aW9uUHJvcD9pLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay12ZXJ0aWNhbFwiKTppLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay12ZXJ0aWNhbFwiKSx2b2lkIDA9PT1lLldlYmtpdFRyYW5zaXRpb24mJnZvaWQgMD09PWUuTW96VHJhbnNpdGlvbiYmdm9pZCAwPT09ZS5tc1RyYW5zaXRpb258fCEwPT09aS5vcHRpb25zLnVzZUNTUyYmKGkuY3NzVHJhbnNpdGlvbnM9ITApLGkub3B0aW9ucy5mYWRlJiYoXCJudW1iZXJcIj09dHlwZW9mIGkub3B0aW9ucy56SW5kZXg/aS5vcHRpb25zLnpJbmRleDwzJiYoaS5vcHRpb25zLnpJbmRleD0zKTppLm9wdGlvbnMuekluZGV4PWkuZGVmYXVsdHMuekluZGV4KSx2b2lkIDAhPT1lLk9UcmFuc2Zvcm0mJihpLmFuaW1UeXBlPVwiT1RyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cIi1vLXRyYW5zZm9ybVwiLGkudHJhbnNpdGlvblR5cGU9XCJPVHJhbnNpdGlvblwiLHZvaWQgMD09PWUucGVyc3BlY3RpdmVQcm9wZXJ0eSYmdm9pZCAwPT09ZS53ZWJraXRQZXJzcGVjdGl2ZSYmKGkuYW5pbVR5cGU9ITEpKSx2b2lkIDAhPT1lLk1velRyYW5zZm9ybSYmKGkuYW5pbVR5cGU9XCJNb3pUcmFuc2Zvcm1cIixpLnRyYW5zZm9ybVR5cGU9XCItbW96LXRyYW5zZm9ybVwiLGkudHJhbnNpdGlvblR5cGU9XCJNb3pUcmFuc2l0aW9uXCIsdm9pZCAwPT09ZS5wZXJzcGVjdGl2ZVByb3BlcnR5JiZ2b2lkIDA9PT1lLk1velBlcnNwZWN0aXZlJiYoaS5hbmltVHlwZT0hMSkpLHZvaWQgMCE9PWUud2Via2l0VHJhbnNmb3JtJiYoaS5hbmltVHlwZT1cIndlYmtpdFRyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cIi13ZWJraXQtdHJhbnNmb3JtXCIsaS50cmFuc2l0aW9uVHlwZT1cIndlYmtpdFRyYW5zaXRpb25cIix2b2lkIDA9PT1lLnBlcnNwZWN0aXZlUHJvcGVydHkmJnZvaWQgMD09PWUud2Via2l0UGVyc3BlY3RpdmUmJihpLmFuaW1UeXBlPSExKSksdm9pZCAwIT09ZS5tc1RyYW5zZm9ybSYmKGkuYW5pbVR5cGU9XCJtc1RyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cIi1tcy10cmFuc2Zvcm1cIixpLnRyYW5zaXRpb25UeXBlPVwibXNUcmFuc2l0aW9uXCIsdm9pZCAwPT09ZS5tc1RyYW5zZm9ybSYmKGkuYW5pbVR5cGU9ITEpKSx2b2lkIDAhPT1lLnRyYW5zZm9ybSYmITEhPT1pLmFuaW1UeXBlJiYoaS5hbmltVHlwZT1cInRyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cInRyYW5zZm9ybVwiLGkudHJhbnNpdGlvblR5cGU9XCJ0cmFuc2l0aW9uXCIpLGkudHJhbnNmb3Jtc0VuYWJsZWQ9aS5vcHRpb25zLnVzZVRyYW5zZm9ybSYmbnVsbCE9PWkuYW5pbVR5cGUmJiExIT09aS5hbmltVHlwZX0sZS5wcm90b3R5cGUuc2V0U2xpZGVDbGFzc2VzPWZ1bmN0aW9uKGkpe3ZhciBlLHQsbyxzLG49dGhpcztpZih0PW4uJHNsaWRlci5maW5kKFwiLnNsaWNrLXNsaWRlXCIpLnJlbW92ZUNsYXNzKFwic2xpY2stYWN0aXZlIHNsaWNrLWNlbnRlciBzbGljay1jdXJyZW50XCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKSxuLiRzbGlkZXMuZXEoaSkuYWRkQ2xhc3MoXCJzbGljay1jdXJyZW50XCIpLCEwPT09bi5vcHRpb25zLmNlbnRlck1vZGUpe3ZhciByPW4ub3B0aW9ucy5zbGlkZXNUb1Nob3clMj09MD8xOjA7ZT1NYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMiksITA9PT1uLm9wdGlvbnMuaW5maW5pdGUmJihpPj1lJiZpPD1uLnNsaWRlQ291bnQtMS1lP24uJHNsaWRlcy5zbGljZShpLWUrcixpK2UrMSkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKToobz1uLm9wdGlvbnMuc2xpZGVzVG9TaG93K2ksdC5zbGljZShvLWUrMStyLG8rZSsyKS5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpKSwwPT09aT90LmVxKHQubGVuZ3RoLTEtbi5vcHRpb25zLnNsaWRlc1RvU2hvdykuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIik6aT09PW4uc2xpZGVDb3VudC0xJiZ0LmVxKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLmFkZENsYXNzKFwic2xpY2stY2VudGVyXCIpKSxuLiRzbGlkZXMuZXEoaSkuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIil9ZWxzZSBpPj0wJiZpPD1uLnNsaWRlQ291bnQtbi5vcHRpb25zLnNsaWRlc1RvU2hvdz9uLiRzbGlkZXMuc2xpY2UoaSxpK24ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIik6dC5sZW5ndGg8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3c/dC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpOihzPW4uc2xpZGVDb3VudCVuLm9wdGlvbnMuc2xpZGVzVG9TaG93LG89ITA9PT1uLm9wdGlvbnMuaW5maW5pdGU/bi5vcHRpb25zLnNsaWRlc1RvU2hvdytpOmksbi5vcHRpb25zLnNsaWRlc1RvU2hvdz09bi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsJiZuLnNsaWRlQ291bnQtaTxuLm9wdGlvbnMuc2xpZGVzVG9TaG93P3Quc2xpY2Uoby0obi5vcHRpb25zLnNsaWRlc1RvU2hvdy1zKSxvK3MpLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIik6dC5zbGljZShvLG8rbi5vcHRpb25zLnNsaWRlc1RvU2hvdykuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKSk7XCJvbmRlbWFuZFwiIT09bi5vcHRpb25zLmxhenlMb2FkJiZcImFudGljaXBhdGVkXCIhPT1uLm9wdGlvbnMubGF6eUxvYWR8fG4ubGF6eUxvYWQoKX0sZS5wcm90b3R5cGUuc2V0dXBJbmZpbml0ZT1mdW5jdGlvbigpe3ZhciBlLHQsbyxzPXRoaXM7aWYoITA9PT1zLm9wdGlvbnMuZmFkZSYmKHMub3B0aW9ucy5jZW50ZXJNb2RlPSExKSwhMD09PXMub3B0aW9ucy5pbmZpbml0ZSYmITE9PT1zLm9wdGlvbnMuZmFkZSYmKHQ9bnVsbCxzLnNsaWRlQ291bnQ+cy5vcHRpb25zLnNsaWRlc1RvU2hvdykpe2ZvcihvPSEwPT09cy5vcHRpb25zLmNlbnRlck1vZGU/cy5vcHRpb25zLnNsaWRlc1RvU2hvdysxOnMub3B0aW9ucy5zbGlkZXNUb1Nob3csZT1zLnNsaWRlQ291bnQ7ZT5zLnNsaWRlQ291bnQtbztlLT0xKXQ9ZS0xLGkocy4kc2xpZGVzW3RdKS5jbG9uZSghMCkuYXR0cihcImlkXCIsXCJcIikuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIix0LXMuc2xpZGVDb3VudCkucHJlcGVuZFRvKHMuJHNsaWRlVHJhY2spLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO2ZvcihlPTA7ZTxvK3Muc2xpZGVDb3VudDtlKz0xKXQ9ZSxpKHMuJHNsaWRlc1t0XSkuY2xvbmUoITApLmF0dHIoXCJpZFwiLFwiXCIpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsdCtzLnNsaWRlQ291bnQpLmFwcGVuZFRvKHMuJHNsaWRlVHJhY2spLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO3MuJHNsaWRlVHJhY2suZmluZChcIi5zbGljay1jbG9uZWRcIikuZmluZChcIltpZF1cIikuZWFjaChmdW5jdGlvbigpe2kodGhpcykuYXR0cihcImlkXCIsXCJcIil9KX19LGUucHJvdG90eXBlLmludGVycnVwdD1mdW5jdGlvbihpKXt2YXIgZT10aGlzO2l8fGUuYXV0b1BsYXkoKSxlLmludGVycnVwdGVkPWl9LGUucHJvdG90eXBlLnNlbGVjdEhhbmRsZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxvPWkoZS50YXJnZXQpLmlzKFwiLnNsaWNrLXNsaWRlXCIpP2koZS50YXJnZXQpOmkoZS50YXJnZXQpLnBhcmVudHMoXCIuc2xpY2stc2xpZGVcIikscz1wYXJzZUludChvLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIpKTtzfHwocz0wKSx0LnNsaWRlQ291bnQ8PXQub3B0aW9ucy5zbGlkZXNUb1Nob3c/dC5zbGlkZUhhbmRsZXIocywhMSwhMCk6dC5zbGlkZUhhbmRsZXIocyl9LGUucHJvdG90eXBlLnNsaWRlSGFuZGxlcj1mdW5jdGlvbihpLGUsdCl7dmFyIG8scyxuLHIsbCxkPW51bGwsYT10aGlzO2lmKGU9ZXx8ITEsISghMD09PWEuYW5pbWF0aW5nJiYhMD09PWEub3B0aW9ucy53YWl0Rm9yQW5pbWF0ZXx8ITA9PT1hLm9wdGlvbnMuZmFkZSYmYS5jdXJyZW50U2xpZGU9PT1pKSlpZighMT09PWUmJmEuYXNOYXZGb3IoaSksbz1pLGQ9YS5nZXRMZWZ0KG8pLHI9YS5nZXRMZWZ0KGEuY3VycmVudFNsaWRlKSxhLmN1cnJlbnRMZWZ0PW51bGw9PT1hLnN3aXBlTGVmdD9yOmEuc3dpcGVMZWZ0LCExPT09YS5vcHRpb25zLmluZmluaXRlJiYhMT09PWEub3B0aW9ucy5jZW50ZXJNb2RlJiYoaTwwfHxpPmEuZ2V0RG90Q291bnQoKSphLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpKSExPT09YS5vcHRpb25zLmZhZGUmJihvPWEuY3VycmVudFNsaWRlLCEwIT09dD9hLmFuaW1hdGVTbGlkZShyLGZ1bmN0aW9uKCl7YS5wb3N0U2xpZGUobyl9KTphLnBvc3RTbGlkZShvKSk7ZWxzZSBpZighMT09PWEub3B0aW9ucy5pbmZpbml0ZSYmITA9PT1hLm9wdGlvbnMuY2VudGVyTW9kZSYmKGk8MHx8aT5hLnNsaWRlQ291bnQtYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkhMT09PWEub3B0aW9ucy5mYWRlJiYobz1hLmN1cnJlbnRTbGlkZSwhMCE9PXQ/YS5hbmltYXRlU2xpZGUocixmdW5jdGlvbigpe2EucG9zdFNsaWRlKG8pfSk6YS5wb3N0U2xpZGUobykpO2Vsc2V7aWYoYS5vcHRpb25zLmF1dG9wbGF5JiZjbGVhckludGVydmFsKGEuYXV0b1BsYXlUaW1lcikscz1vPDA/YS5zbGlkZUNvdW50JWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCE9MD9hLnNsaWRlQ291bnQtYS5zbGlkZUNvdW50JWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDphLnNsaWRlQ291bnQrbzpvPj1hLnNsaWRlQ291bnQ/YS5zbGlkZUNvdW50JWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCE9MD8wOm8tYS5zbGlkZUNvdW50Om8sYS5hbmltYXRpbmc9ITAsYS4kc2xpZGVyLnRyaWdnZXIoXCJiZWZvcmVDaGFuZ2VcIixbYSxhLmN1cnJlbnRTbGlkZSxzXSksbj1hLmN1cnJlbnRTbGlkZSxhLmN1cnJlbnRTbGlkZT1zLGEuc2V0U2xpZGVDbGFzc2VzKGEuY3VycmVudFNsaWRlKSxhLm9wdGlvbnMuYXNOYXZGb3ImJihsPShsPWEuZ2V0TmF2VGFyZ2V0KCkpLnNsaWNrKFwiZ2V0U2xpY2tcIikpLnNsaWRlQ291bnQ8PWwub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmwuc2V0U2xpZGVDbGFzc2VzKGEuY3VycmVudFNsaWRlKSxhLnVwZGF0ZURvdHMoKSxhLnVwZGF0ZUFycm93cygpLCEwPT09YS5vcHRpb25zLmZhZGUpcmV0dXJuITAhPT10PyhhLmZhZGVTbGlkZU91dChuKSxhLmZhZGVTbGlkZShzLGZ1bmN0aW9uKCl7YS5wb3N0U2xpZGUocyl9KSk6YS5wb3N0U2xpZGUocyksdm9pZCBhLmFuaW1hdGVIZWlnaHQoKTshMCE9PXQ/YS5hbmltYXRlU2xpZGUoZCxmdW5jdGlvbigpe2EucG9zdFNsaWRlKHMpfSk6YS5wb3N0U2xpZGUocyl9fSxlLnByb3RvdHlwZS5zdGFydExvYWQ9ZnVuY3Rpb24oKXt2YXIgaT10aGlzOyEwPT09aS5vcHRpb25zLmFycm93cyYmaS5zbGlkZUNvdW50Pmkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihpLiRwcmV2QXJyb3cuaGlkZSgpLGkuJG5leHRBcnJvdy5oaWRlKCkpLCEwPT09aS5vcHRpb25zLmRvdHMmJmkuc2xpZGVDb3VudD5pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiZpLiRkb3RzLmhpZGUoKSxpLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpfSxlLnByb3RvdHlwZS5zd2lwZURpcmVjdGlvbj1mdW5jdGlvbigpe3ZhciBpLGUsdCxvLHM9dGhpcztyZXR1cm4gaT1zLnRvdWNoT2JqZWN0LnN0YXJ0WC1zLnRvdWNoT2JqZWN0LmN1clgsZT1zLnRvdWNoT2JqZWN0LnN0YXJ0WS1zLnRvdWNoT2JqZWN0LmN1clksdD1NYXRoLmF0YW4yKGUsaSksKG89TWF0aC5yb3VuZCgxODAqdC9NYXRoLlBJKSk8MCYmKG89MzYwLU1hdGguYWJzKG8pKSxvPD00NSYmbz49MD8hMT09PXMub3B0aW9ucy5ydGw/XCJsZWZ0XCI6XCJyaWdodFwiOm88PTM2MCYmbz49MzE1PyExPT09cy5vcHRpb25zLnJ0bD9cImxlZnRcIjpcInJpZ2h0XCI6bz49MTM1JiZvPD0yMjU/ITE9PT1zLm9wdGlvbnMucnRsP1wicmlnaHRcIjpcImxlZnRcIjohMD09PXMub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmc/bz49MzUmJm88PTEzNT9cImRvd25cIjpcInVwXCI6XCJ2ZXJ0aWNhbFwifSxlLnByb3RvdHlwZS5zd2lwZUVuZD1mdW5jdGlvbihpKXt2YXIgZSx0LG89dGhpcztpZihvLmRyYWdnaW5nPSExLG8uc3dpcGluZz0hMSxvLnNjcm9sbGluZylyZXR1cm4gby5zY3JvbGxpbmc9ITEsITE7aWYoby5pbnRlcnJ1cHRlZD0hMSxvLnNob3VsZENsaWNrPSEoby50b3VjaE9iamVjdC5zd2lwZUxlbmd0aD4xMCksdm9pZCAwPT09by50b3VjaE9iamVjdC5jdXJYKXJldHVybiExO2lmKCEwPT09by50b3VjaE9iamVjdC5lZGdlSGl0JiZvLiRzbGlkZXIudHJpZ2dlcihcImVkZ2VcIixbbyxvLnN3aXBlRGlyZWN0aW9uKCldKSxvLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoPj1vLnRvdWNoT2JqZWN0Lm1pblN3aXBlKXtzd2l0Y2godD1vLnN3aXBlRGlyZWN0aW9uKCkpe2Nhc2VcImxlZnRcIjpjYXNlXCJkb3duXCI6ZT1vLm9wdGlvbnMuc3dpcGVUb1NsaWRlP28uY2hlY2tOYXZpZ2FibGUoby5jdXJyZW50U2xpZGUrby5nZXRTbGlkZUNvdW50KCkpOm8uY3VycmVudFNsaWRlK28uZ2V0U2xpZGVDb3VudCgpLG8uY3VycmVudERpcmVjdGlvbj0wO2JyZWFrO2Nhc2VcInJpZ2h0XCI6Y2FzZVwidXBcIjplPW8ub3B0aW9ucy5zd2lwZVRvU2xpZGU/by5jaGVja05hdmlnYWJsZShvLmN1cnJlbnRTbGlkZS1vLmdldFNsaWRlQ291bnQoKSk6by5jdXJyZW50U2xpZGUtby5nZXRTbGlkZUNvdW50KCksby5jdXJyZW50RGlyZWN0aW9uPTF9XCJ2ZXJ0aWNhbFwiIT10JiYoby5zbGlkZUhhbmRsZXIoZSksby50b3VjaE9iamVjdD17fSxvLiRzbGlkZXIudHJpZ2dlcihcInN3aXBlXCIsW28sdF0pKX1lbHNlIG8udG91Y2hPYmplY3Quc3RhcnRYIT09by50b3VjaE9iamVjdC5jdXJYJiYoby5zbGlkZUhhbmRsZXIoby5jdXJyZW50U2xpZGUpLG8udG91Y2hPYmplY3Q9e30pfSxlLnByb3RvdHlwZS5zd2lwZUhhbmRsZXI9ZnVuY3Rpb24oaSl7dmFyIGU9dGhpcztpZighKCExPT09ZS5vcHRpb25zLnN3aXBlfHxcIm9udG91Y2hlbmRcImluIGRvY3VtZW50JiYhMT09PWUub3B0aW9ucy5zd2lwZXx8ITE9PT1lLm9wdGlvbnMuZHJhZ2dhYmxlJiYtMSE9PWkudHlwZS5pbmRleE9mKFwibW91c2VcIikpKXN3aXRjaChlLnRvdWNoT2JqZWN0LmZpbmdlckNvdW50PWkub3JpZ2luYWxFdmVudCYmdm9pZCAwIT09aS5vcmlnaW5hbEV2ZW50LnRvdWNoZXM/aS5vcmlnaW5hbEV2ZW50LnRvdWNoZXMubGVuZ3RoOjEsZS50b3VjaE9iamVjdC5taW5Td2lwZT1lLmxpc3RXaWR0aC9lLm9wdGlvbnMudG91Y2hUaHJlc2hvbGQsITA9PT1lLm9wdGlvbnMudmVydGljYWxTd2lwaW5nJiYoZS50b3VjaE9iamVjdC5taW5Td2lwZT1lLmxpc3RIZWlnaHQvZS5vcHRpb25zLnRvdWNoVGhyZXNob2xkKSxpLmRhdGEuYWN0aW9uKXtjYXNlXCJzdGFydFwiOmUuc3dpcGVTdGFydChpKTticmVhaztjYXNlXCJtb3ZlXCI6ZS5zd2lwZU1vdmUoaSk7YnJlYWs7Y2FzZVwiZW5kXCI6ZS5zd2lwZUVuZChpKX19LGUucHJvdG90eXBlLnN3aXBlTW92ZT1mdW5jdGlvbihpKXt2YXIgZSx0LG8scyxuLHIsbD10aGlzO3JldHVybiBuPXZvaWQgMCE9PWkub3JpZ2luYWxFdmVudD9pLm9yaWdpbmFsRXZlbnQudG91Y2hlczpudWxsLCEoIWwuZHJhZ2dpbmd8fGwuc2Nyb2xsaW5nfHxuJiYxIT09bi5sZW5ndGgpJiYoZT1sLmdldExlZnQobC5jdXJyZW50U2xpZGUpLGwudG91Y2hPYmplY3QuY3VyWD12b2lkIDAhPT1uP25bMF0ucGFnZVg6aS5jbGllbnRYLGwudG91Y2hPYmplY3QuY3VyWT12b2lkIDAhPT1uP25bMF0ucGFnZVk6aS5jbGllbnRZLGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGg9TWF0aC5yb3VuZChNYXRoLnNxcnQoTWF0aC5wb3cobC50b3VjaE9iamVjdC5jdXJYLWwudG91Y2hPYmplY3Quc3RhcnRYLDIpKSkscj1NYXRoLnJvdW5kKE1hdGguc3FydChNYXRoLnBvdyhsLnRvdWNoT2JqZWN0LmN1clktbC50b3VjaE9iamVjdC5zdGFydFksMikpKSwhbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyYmIWwuc3dpcGluZyYmcj40PyhsLnNjcm9sbGluZz0hMCwhMSk6KCEwPT09bC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyYmKGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGg9ciksdD1sLnN3aXBlRGlyZWN0aW9uKCksdm9pZCAwIT09aS5vcmlnaW5hbEV2ZW50JiZsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoPjQmJihsLnN3aXBpbmc9ITAsaS5wcmV2ZW50RGVmYXVsdCgpKSxzPSghMT09PWwub3B0aW9ucy5ydGw/MTotMSkqKGwudG91Y2hPYmplY3QuY3VyWD5sLnRvdWNoT2JqZWN0LnN0YXJ0WD8xOi0xKSwhMD09PWwub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcmJihzPWwudG91Y2hPYmplY3QuY3VyWT5sLnRvdWNoT2JqZWN0LnN0YXJ0WT8xOi0xKSxvPWwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGgsbC50b3VjaE9iamVjdC5lZGdlSGl0PSExLCExPT09bC5vcHRpb25zLmluZmluaXRlJiYoMD09PWwuY3VycmVudFNsaWRlJiZcInJpZ2h0XCI9PT10fHxsLmN1cnJlbnRTbGlkZT49bC5nZXREb3RDb3VudCgpJiZcImxlZnRcIj09PXQpJiYobz1sLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoKmwub3B0aW9ucy5lZGdlRnJpY3Rpb24sbC50b3VjaE9iamVjdC5lZGdlSGl0PSEwKSwhMT09PWwub3B0aW9ucy52ZXJ0aWNhbD9sLnN3aXBlTGVmdD1lK28qczpsLnN3aXBlTGVmdD1lK28qKGwuJGxpc3QuaGVpZ2h0KCkvbC5saXN0V2lkdGgpKnMsITA9PT1sLm9wdGlvbnMudmVydGljYWxTd2lwaW5nJiYobC5zd2lwZUxlZnQ9ZStvKnMpLCEwIT09bC5vcHRpb25zLmZhZGUmJiExIT09bC5vcHRpb25zLnRvdWNoTW92ZSYmKCEwPT09bC5hbmltYXRpbmc/KGwuc3dpcGVMZWZ0PW51bGwsITEpOnZvaWQgbC5zZXRDU1MobC5zd2lwZUxlZnQpKSkpfSxlLnByb3RvdHlwZS5zd2lwZVN0YXJ0PWZ1bmN0aW9uKGkpe3ZhciBlLHQ9dGhpcztpZih0LmludGVycnVwdGVkPSEwLDEhPT10LnRvdWNoT2JqZWN0LmZpbmdlckNvdW50fHx0LnNsaWRlQ291bnQ8PXQub3B0aW9ucy5zbGlkZXNUb1Nob3cpcmV0dXJuIHQudG91Y2hPYmplY3Q9e30sITE7dm9pZCAwIT09aS5vcmlnaW5hbEV2ZW50JiZ2b2lkIDAhPT1pLm9yaWdpbmFsRXZlbnQudG91Y2hlcyYmKGU9aS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0pLHQudG91Y2hPYmplY3Quc3RhcnRYPXQudG91Y2hPYmplY3QuY3VyWD12b2lkIDAhPT1lP2UucGFnZVg6aS5jbGllbnRYLHQudG91Y2hPYmplY3Quc3RhcnRZPXQudG91Y2hPYmplY3QuY3VyWT12b2lkIDAhPT1lP2UucGFnZVk6aS5jbGllbnRZLHQuZHJhZ2dpbmc9ITB9LGUucHJvdG90eXBlLnVuZmlsdGVyU2xpZGVzPWUucHJvdG90eXBlLnNsaWNrVW5maWx0ZXI9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO251bGwhPT1pLiRzbGlkZXNDYWNoZSYmKGkudW5sb2FkKCksaS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLGkuJHNsaWRlc0NhY2hlLmFwcGVuZFRvKGkuJHNsaWRlVHJhY2spLGkucmVpbml0KCkpfSxlLnByb3RvdHlwZS51bmxvYWQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2koXCIuc2xpY2stY2xvbmVkXCIsZS4kc2xpZGVyKS5yZW1vdmUoKSxlLiRkb3RzJiZlLiRkb3RzLnJlbW92ZSgpLGUuJHByZXZBcnJvdyYmZS5odG1sRXhwci50ZXN0KGUub3B0aW9ucy5wcmV2QXJyb3cpJiZlLiRwcmV2QXJyb3cucmVtb3ZlKCksZS4kbmV4dEFycm93JiZlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLm5leHRBcnJvdykmJmUuJG5leHRBcnJvdy5yZW1vdmUoKSxlLiRzbGlkZXMucmVtb3ZlQ2xhc3MoXCJzbGljay1zbGlkZSBzbGljay1hY3RpdmUgc2xpY2stdmlzaWJsZSBzbGljay1jdXJyZW50XCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKS5jc3MoXCJ3aWR0aFwiLFwiXCIpfSxlLnByb3RvdHlwZS51bnNsaWNrPWZ1bmN0aW9uKGkpe3ZhciBlPXRoaXM7ZS4kc2xpZGVyLnRyaWdnZXIoXCJ1bnNsaWNrXCIsW2UsaV0pLGUuZGVzdHJveSgpfSxlLnByb3RvdHlwZS51cGRhdGVBcnJvd3M9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO01hdGguZmxvb3IoaS5vcHRpb25zLnNsaWRlc1RvU2hvdy8yKSwhMD09PWkub3B0aW9ucy5hcnJvd3MmJmkuc2xpZGVDb3VudD5pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYhaS5vcHRpb25zLmluZmluaXRlJiYoaS4kcHJldkFycm93LnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcImZhbHNlXCIpLGkuJG5leHRBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJmYWxzZVwiKSwwPT09aS5jdXJyZW50U2xpZGU/KGkuJHByZXZBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpLGkuJG5leHRBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJmYWxzZVwiKSk6aS5jdXJyZW50U2xpZGU+PWkuc2xpZGVDb3VudC1pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYhMT09PWkub3B0aW9ucy5jZW50ZXJNb2RlPyhpLiRuZXh0QXJyb3cuYWRkQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKSxpLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwiZmFsc2VcIikpOmkuY3VycmVudFNsaWRlPj1pLnNsaWRlQ291bnQtMSYmITA9PT1pLm9wdGlvbnMuY2VudGVyTW9kZSYmKGkuJG5leHRBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpLGkuJHByZXZBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJmYWxzZVwiKSkpfSxlLnByb3RvdHlwZS51cGRhdGVEb3RzPWZ1bmN0aW9uKCl7dmFyIGk9dGhpcztudWxsIT09aS4kZG90cyYmKGkuJGRvdHMuZmluZChcImxpXCIpLnJlbW92ZUNsYXNzKFwic2xpY2stYWN0aXZlXCIpLmVuZCgpLGkuJGRvdHMuZmluZChcImxpXCIpLmVxKE1hdGguZmxvb3IoaS5jdXJyZW50U2xpZGUvaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikpfSxlLnByb3RvdHlwZS52aXNpYmlsaXR5PWZ1bmN0aW9uKCl7dmFyIGk9dGhpcztpLm9wdGlvbnMuYXV0b3BsYXkmJihkb2N1bWVudFtpLmhpZGRlbl0/aS5pbnRlcnJ1cHRlZD0hMDppLmludGVycnVwdGVkPSExKX0saS5mbi5zbGljaz1mdW5jdGlvbigpe3ZhciBpLHQsbz10aGlzLHM9YXJndW1lbnRzWzBdLG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLHI9by5sZW5ndGg7Zm9yKGk9MDtpPHI7aSsrKWlmKFwib2JqZWN0XCI9PXR5cGVvZiBzfHx2b2lkIDA9PT1zP29baV0uc2xpY2s9bmV3IGUob1tpXSxzKTp0PW9baV0uc2xpY2tbc10uYXBwbHkob1tpXS5zbGljayxuKSx2b2lkIDAhPT10KXJldHVybiB0O3JldHVybiBvfX0pO1xuIiwiLyoqIVxuICogTWl4SXRVcCB2My4zLjFcbiAqIEEgaGlnaC1wZXJmb3JtYW5jZSwgZGVwZW5kZW5jeS1mcmVlIGxpYnJhcnkgZm9yIGFuaW1hdGVkIGZpbHRlcmluZywgc29ydGluZyBhbmQgbW9yZVxuICogQnVpbGQgOTRlMGZiZjYtY2QwYi00OTg3LWIzYzAtMTRiNTliNjdiOGEwXG4gKlxuICogQGNvcHlyaWdodCBDb3B5cmlnaHQgMjAxNC0yMDE4IEt1bmthTGFicyBMaW1pdGVkLlxuICogQGF1dGhvciAgICBLdW5rYUxhYnMgTGltaXRlZC5cbiAqIEBsaW5rICAgICAgaHR0cHM6Ly93d3cua3Vua2FsYWJzLmNvbS9taXhpdHVwL1xuICpcbiAqIEBsaWNlbnNlICAgQ29tbWVyY2lhbCB1c2UgcmVxdWlyZXMgYSBjb21tZXJjaWFsIGxpY2Vuc2UuXG4gKiAgICAgICAgICAgIGh0dHBzOi8vd3d3Lmt1bmthbGFicy5jb20vbWl4aXR1cC9saWNlbnNlcy9cbiAqXG4gKiAgICAgICAgICAgIE5vbi1jb21tZXJjaWFsIHVzZSBwZXJtaXR0ZWQgdW5kZXIgc2FtZSB0ZXJtcyBhcyBDQyBCWS1OQyAzLjAgbGljZW5zZS5cbiAqICAgICAgICAgICAgaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvMy4wL1xuICovXG4hZnVuY3Rpb24odCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9bnVsbCxuPW51bGw7IWZ1bmN0aW9uKCl7dmFyIGU9W1wid2Via2l0XCIsXCJtb3pcIixcIm9cIixcIm1zXCJdLG49dC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGE9LTE7Zm9yKGE9MDthPGUubGVuZ3RoJiYhdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU7YSsrKXQucmVxdWVzdEFuaW1hdGlvbkZyYW1lPXRbZVthXStcIlJlcXVlc3RBbmltYXRpb25GcmFtZVwiXTtcInVuZGVmaW5lZFwiPT10eXBlb2Ygbi5uZXh0RWxlbWVudFNpYmxpbmcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LkVsZW1lbnQucHJvdG90eXBlLFwibmV4dEVsZW1lbnRTaWJsaW5nXCIse2dldDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLm5leHRTaWJsaW5nO3Q7KXtpZigxPT09dC5ub2RlVHlwZSlyZXR1cm4gdDt0PXQubmV4dFNpYmxpbmd9cmV0dXJuIG51bGx9fSksZnVuY3Rpb24odCl7dC5tYXRjaGVzPXQubWF0Y2hlc3x8dC5tYWNoZXNTZWxlY3Rvcnx8dC5tb3pNYXRjaGVzU2VsZWN0b3J8fHQubXNNYXRjaGVzU2VsZWN0b3J8fHQub01hdGNoZXNTZWxlY3Rvcnx8dC53ZWJraXRNYXRjaGVzU2VsZWN0b3J8fGZ1bmN0aW9uKHQpe3JldHVybiBBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHRoaXMucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHQpLHRoaXMpPi0xfX0odC5FbGVtZW50LnByb3RvdHlwZSksT2JqZWN0LmtleXN8fChPYmplY3Qua2V5cz1mdW5jdGlvbigpe3ZhciB0PU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksZT0hMSxuPVtdLGE9LTE7cmV0dXJuIGU9IXt0b1N0cmluZzpudWxsfS5wcm9wZXJ0eUlzRW51bWVyYWJsZShcInRvU3RyaW5nXCIpLG49W1widG9TdHJpbmdcIixcInRvTG9jYWxlU3RyaW5nXCIsXCJ2YWx1ZU9mXCIsXCJoYXNPd25Qcm9wZXJ0eVwiLFwiaXNQcm90b3R5cGVPZlwiLFwicHJvcGVydHlJc0VudW1lcmFibGVcIixcImNvbnN0cnVjdG9yXCJdLGE9bi5sZW5ndGgsZnVuY3Rpb24oaSl7dmFyIG89W10scj1cIlwiLHM9LTE7aWYoXCJvYmplY3RcIiE9dHlwZW9mIGkmJihcImZ1bmN0aW9uXCIhPXR5cGVvZiBpfHxudWxsPT09aSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIk9iamVjdC5rZXlzIGNhbGxlZCBvbiBub24tb2JqZWN0XCIpO2ZvcihyIGluIGkpdC5jYWxsKGkscikmJm8ucHVzaChyKTtpZihlKWZvcihzPTA7czxhO3MrKyl0LmNhbGwoaSxuW3NdKSYmby5wdXNoKG5bc10pO3JldHVybiBvfX0oKSksQXJyYXkuaXNBcnJheXx8KEFycmF5LmlzQXJyYXk9ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IEFycmF5XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfSksXCJmdW5jdGlvblwiIT10eXBlb2YgT2JqZWN0LmNyZWF0ZSYmKE9iamVjdC5jcmVhdGU9ZnVuY3Rpb24odCl7dmFyIGU9ZnVuY3Rpb24oKXt9O3JldHVybiBmdW5jdGlvbihuLGEpe2lmKG4hPT1PYmplY3QobikmJm51bGwhPT1uKXRocm93IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3QgYmUgYW4gb2JqZWN0LCBvciBudWxsXCIpO2UucHJvdG90eXBlPW58fHt9O3ZhciBpPW5ldyBlO3JldHVybiBlLnByb3RvdHlwZT1udWxsLGEhPT10JiZPYmplY3QuZGVmaW5lUHJvcGVydGllcyhpLGEpLG51bGw9PT1uJiYoaS5fX3Byb3RvX189bnVsbCksaX19KCkpLFN0cmluZy5wcm90b3R5cGUudHJpbXx8KFN0cmluZy5wcm90b3R5cGUudHJpbT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJlcGxhY2UoL15bXFxzXFx1RkVGRlxceEEwXSt8W1xcc1xcdUZFRkZcXHhBMF0rJC9nLFwiXCIpfSksQXJyYXkucHJvdG90eXBlLmluZGV4T2Z8fChBcnJheS5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbih0KXt2YXIgZSxuLGEsaTtpZihudWxsPT09dGhpcyl0aHJvdyBuZXcgVHlwZUVycm9yO2lmKGE9T2JqZWN0KHRoaXMpLGk9YS5sZW5ndGg+Pj4wLDA9PT1pKXJldHVybi0xO2lmKGU9MCxhcmd1bWVudHMubGVuZ3RoPjEmJihlPU51bWJlcihhcmd1bWVudHNbMV0pLGUhPT1lP2U9MDowIT09ZSYmZSE9PTEvMCYmZSE9PS0oMS8wKSYmKGU9KGU+MHx8LTEpKk1hdGguZmxvb3IoTWF0aC5hYnMoZSkpKSksZT49aSlyZXR1cm4tMTtmb3Iobj1lPj0wP2U6TWF0aC5tYXgoaS1NYXRoLmFicyhlKSwwKTtuPGk7bisrKWlmKG4gaW4gYSYmYVtuXT09PXQpcmV0dXJuIG47cmV0dXJuLTF9KSxGdW5jdGlvbi5wcm90b3R5cGUuYmluZHx8KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKHQpe3ZhciBlLG4sYSxpO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXMpdGhyb3cgbmV3IFR5cGVFcnJvcjtyZXR1cm4gZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSksbj10aGlzLGE9ZnVuY3Rpb24oKXt9LGk9ZnVuY3Rpb24oKXtyZXR1cm4gbi5hcHBseSh0aGlzIGluc3RhbmNlb2YgYT90aGlzOnQsZS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSkpfSx0aGlzLnByb3RvdHlwZSYmKGEucHJvdG90eXBlPXRoaXMucHJvdG90eXBlKSxpLnByb3RvdHlwZT1uZXcgYSxpfSksdC5FbGVtZW50LnByb3RvdHlwZS5kaXNwYXRjaEV2ZW50fHwodC5FbGVtZW50LnByb3RvdHlwZS5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4gdGhpcy5maXJlRXZlbnQoXCJvblwiK3QudHlwZSx0KX1jYXRjaChlKXt9fSl9KCksZT1mdW5jdGlvbihhLGksbyl7dmFyIHI9bnVsbCxzPSExLGw9bnVsbCxjPW51bGwsdT1udWxsLGY9bnVsbCxoPVtdLGQ9XCJcIixtPVtdLGc9LTE7aWYodT1vfHx0LmRvY3VtZW50LChzPWFyZ3VtZW50c1szXSkmJihzPVwiYm9vbGVhblwiPT10eXBlb2YgcyksXCJzdHJpbmdcIj09dHlwZW9mIGEpbT11LnF1ZXJ5U2VsZWN0b3JBbGwoYSk7ZWxzZSBpZihhJiZcIm9iamVjdFwiPT10eXBlb2YgYSYmbi5pc0VsZW1lbnQoYSx1KSltPVthXTtlbHNle2lmKCFhfHxcIm9iamVjdFwiIT10eXBlb2YgYXx8IWEubGVuZ3RoKXRocm93IG5ldyBFcnJvcihlLm1lc3NhZ2VzLmVycm9yRmFjdG9yeUludmFsaWRDb250YWluZXIoKSk7bT1hfWlmKG0ubGVuZ3RoPDEpdGhyb3cgbmV3IEVycm9yKGUubWVzc2FnZXMuZXJyb3JGYWN0b3J5Q29udGFpbmVyTm90Rm91bmQoKSk7Zm9yKGc9MDsocj1tW2ddKSYmKCEoZz4wKXx8cyk7ZysrKXIuaWQ/ZD1yLmlkOihkPVwiTWl4SXRVcFwiK24ucmFuZG9tSGV4KCksci5pZD1kKSxlLmluc3RhbmNlc1tkXWluc3RhbmNlb2YgZS5NaXhlcj8obD1lLmluc3RhbmNlc1tkXSwoIWl8fGkmJmkuZGVidWcmJmkuZGVidWcuc2hvd1dhcm5pbmdzIT09ITEpJiZjb25zb2xlLndhcm4oZS5tZXNzYWdlcy53YXJuaW5nRmFjdG9yeVByZWV4aXN0aW5nSW5zdGFuY2UoKSkpOihsPW5ldyBlLk1peGVyLGwuYXR0YWNoKHIsdSxkLGkpLGUuaW5zdGFuY2VzW2RdPWwpLGM9bmV3IGUuRmFjYWRlKGwpLGkmJmkuZGVidWcmJmkuZGVidWcuZW5hYmxlP2gucHVzaChsKTpoLnB1c2goYyk7cmV0dXJuIGY9cz9uZXcgZS5Db2xsZWN0aW9uKGgpOmhbMF19LGUudXNlPWZ1bmN0aW9uKHQpe2UuQmFzZS5wcm90b3R5cGUuY2FsbEFjdGlvbnMuY2FsbChlLFwiYmVmb3JlVXNlXCIsYXJndW1lbnRzKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiZcIm1peGl0dXAtZXh0ZW5zaW9uXCI9PT10LlRZUEU/XCJ1bmRlZmluZWRcIj09dHlwZW9mIGUuZXh0ZW5zaW9uc1t0Lk5BTUVdJiYodChlKSxlLmV4dGVuc2lvbnNbdC5OQU1FXT10KTp0LmZuJiZ0LmZuLmpxdWVyeSYmKGUubGlicmFyaWVzLiQ9dCksZS5CYXNlLnByb3RvdHlwZS5jYWxsQWN0aW9ucy5jYWxsKGUsXCJhZnRlclVzZVwiLGFyZ3VtZW50cyl9LGUuaW5zdGFuY2VzPXt9LGUuZXh0ZW5zaW9ucz17fSxlLmxpYnJhcmllcz17fSxuPXtoYXNDbGFzczpmdW5jdGlvbih0LGUpe3JldHVybiEhdC5jbGFzc05hbWUubWF0Y2gobmV3IFJlZ0V4cChcIihcXFxcc3xeKVwiK2UrXCIoXFxcXHN8JClcIikpfSxhZGRDbGFzczpmdW5jdGlvbih0LGUpe3RoaXMuaGFzQ2xhc3ModCxlKXx8KHQuY2xhc3NOYW1lKz10LmNsYXNzTmFtZT9cIiBcIitlOmUpfSxyZW1vdmVDbGFzczpmdW5jdGlvbih0LGUpe2lmKHRoaXMuaGFzQ2xhc3ModCxlKSl7dmFyIG49bmV3IFJlZ0V4cChcIihcXFxcc3xeKVwiK2UrXCIoXFxcXHN8JClcIik7dC5jbGFzc05hbWU9dC5jbGFzc05hbWUucmVwbGFjZShuLFwiIFwiKS50cmltKCl9fSxleHRlbmQ6ZnVuY3Rpb24odCxlLG4sYSl7dmFyIGk9W10sbz1cIlwiLHI9LTE7bj1ufHwhMSxhPWF8fCExO3RyeXtpZihBcnJheS5pc0FycmF5KGUpKWZvcihyPTA7cjxlLmxlbmd0aDtyKyspaS5wdXNoKHIpO2Vsc2UgZSYmKGk9T2JqZWN0LmtleXMoZSkpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbz1pW3JdLCFufHxcIm9iamVjdFwiIT10eXBlb2YgZVtvXXx8dGhpcy5pc0VsZW1lbnQoZVtvXSk/dFtvXT1lW29dOkFycmF5LmlzQXJyYXkoZVtvXSk/KHRbb118fCh0W29dPVtdKSx0aGlzLmV4dGVuZCh0W29dLGVbb10sbixhKSk6KHRbb118fCh0W29dPXt9KSx0aGlzLmV4dGVuZCh0W29dLGVbb10sbixhKSl9Y2F0Y2gocyl7aWYoIWEpdGhyb3cgczt0aGlzLmhhbmRsZUV4dGVuZEVycm9yKHMsdCl9cmV0dXJuIHR9LGhhbmRsZUV4dGVuZEVycm9yOmZ1bmN0aW9uKHQsbil7dmFyIGE9L3Byb3BlcnR5IFwiPyhcXHcqKVwiP1ssOl0gb2JqZWN0L2ksaT1udWxsLG89XCJcIixyPVwiXCIscz1cIlwiLGw9XCJcIixjPVwiXCIsdT0tMSxmPS0xO2lmKHQgaW5zdGFuY2VvZiBUeXBlRXJyb3ImJihpPWEuZXhlYyh0Lm1lc3NhZ2UpKSl7bz1pWzFdO2ZvcihjIGluIG4pe2ZvcihmPTA7ZjxvLmxlbmd0aCYmby5jaGFyQXQoZik9PT1jLmNoYXJBdChmKTspZisrO2Y+dSYmKHU9ZixsPWMpfXRocm93IHU+MSYmKHM9ZS5tZXNzYWdlcy5lcnJvckNvbmZpZ0ludmFsaWRQcm9wZXJ0eVN1Z2dlc3Rpb24oe3Byb2JhYmxlTWF0Y2g6bH0pKSxyPWUubWVzc2FnZXMuZXJyb3JDb25maWdJbnZhbGlkUHJvcGVydHkoe2Vycm9uZW91czpvLHN1Z2dlc3Rpb246c30pLG5ldyBUeXBlRXJyb3Iocil9dGhyb3cgdH0sdGVtcGxhdGU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPS9cXCR7KFtcXHddKil9L2csbj17fSxhPW51bGw7YT1lLmV4ZWModCk7KW5bYVsxXV09bmV3IFJlZ0V4cChcIlxcXFwke1wiK2FbMV0rXCJ9XCIsXCJnXCIpO3JldHVybiBmdW5jdGlvbihlKXt2YXIgYT1cIlwiLGk9dDtlPWV8fHt9O2ZvcihhIGluIG4paT1pLnJlcGxhY2UoblthXSxcInVuZGVmaW5lZFwiIT10eXBlb2YgZVthXT9lW2FdOlwiXCIpO3JldHVybiBpfX0sb246ZnVuY3Rpb24oZSxuLGEsaSl7ZSYmKGUuYWRkRXZlbnRMaXN0ZW5lcj9lLmFkZEV2ZW50TGlzdGVuZXIobixhLGkpOmUuYXR0YWNoRXZlbnQmJihlW1wiZVwiK24rYV09YSxlW24rYV09ZnVuY3Rpb24oKXtlW1wiZVwiK24rYV0odC5ldmVudCl9LGUuYXR0YWNoRXZlbnQoXCJvblwiK24sZVtuK2FdKSkpfSxvZmY6ZnVuY3Rpb24odCxlLG4pe3QmJih0LnJlbW92ZUV2ZW50TGlzdGVuZXI/dC5yZW1vdmVFdmVudExpc3RlbmVyKGUsbiwhMSk6dC5kZXRhY2hFdmVudCYmKHQuZGV0YWNoRXZlbnQoXCJvblwiK2UsdFtlK25dKSx0W2Urbl09bnVsbCkpfSxnZXRDdXN0b21FdmVudDpmdW5jdGlvbihlLG4sYSl7dmFyIGk9bnVsbDtyZXR1cm4gYT1hfHx0LmRvY3VtZW50LFwiZnVuY3Rpb25cIj09dHlwZW9mIHQuQ3VzdG9tRXZlbnQ/aT1uZXcgdC5DdXN0b21FdmVudChlLHtkZXRhaWw6bixidWJibGVzOiEwLGNhbmNlbGFibGU6ITB9KTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNyZWF0ZUV2ZW50PyhpPWEuY3JlYXRlRXZlbnQoXCJDdXN0b21FdmVudFwiKSxpLmluaXRDdXN0b21FdmVudChlLCEwLCEwLG4pKTooaT1hLmNyZWF0ZUV2ZW50T2JqZWN0KCksaS50eXBlPWUsaS5yZXR1cm5WYWx1ZT0hMSxpLmNhbmNlbEJ1YmJsZT0hMSxpLmRldGFpbD1uKSxpfSxnZXRPcmlnaW5hbEV2ZW50OmZ1bmN0aW9uKHQpe3JldHVybiB0LnRvdWNoZXMmJnQudG91Y2hlcy5sZW5ndGg/dC50b3VjaGVzWzBdOnQuY2hhbmdlZFRvdWNoZXMmJnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoP3QuY2hhbmdlZFRvdWNoZXNbMF06dH0saW5kZXg6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MDtudWxsIT09KHQ9dC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKTspZSYmIXQubWF0Y2hlcyhlKXx8KytuO3JldHVybiBufSxjYW1lbENhc2U6ZnVuY3Rpb24odCl7cmV0dXJuIHQudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8oW18tXVthLXpdKS9nLGZ1bmN0aW9uKHQpe3JldHVybiB0LnRvVXBwZXJDYXNlKCkucmVwbGFjZSgvW18tXS8sXCJcIil9KX0scGFzY2FsQ2FzZTpmdW5jdGlvbih0KXtyZXR1cm4odD10aGlzLmNhbWVsQ2FzZSh0KSkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKX0sZGFzaENhc2U6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvKFtBLVpdKS9nLFwiLSQxXCIpLnJlcGxhY2UoL14tLyxcIlwiKS50b0xvd2VyQ2FzZSgpfSxpc0VsZW1lbnQ6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gbj1ufHx0LmRvY3VtZW50LCEhKHQuSFRNTEVsZW1lbnQmJmUgaW5zdGFuY2VvZiB0LkhUTUxFbGVtZW50KXx8KCEhKG4uZGVmYXVsdFZpZXcmJm4uZGVmYXVsdFZpZXcuSFRNTEVsZW1lbnQmJmUgaW5zdGFuY2VvZiBuLmRlZmF1bHRWaWV3LkhUTUxFbGVtZW50KXx8bnVsbCE9PWUmJjE9PT1lLm5vZGVUeXBlJiZcInN0cmluZ1wiPT10eXBlb2YgZS5ub2RlTmFtZSl9LGNyZWF0ZUVsZW1lbnQ6ZnVuY3Rpb24oZSxuKXt2YXIgYT1udWxsLGk9bnVsbDtmb3Iobj1ufHx0LmRvY3VtZW50LGE9bi5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksaT1uLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksaS5pbm5lckhUTUw9ZS50cmltKCk7aS5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGkuZmlyc3RDaGlsZCk7cmV0dXJuIGF9LHJlbW92ZVdoaXRlc3BhY2U6ZnVuY3Rpb24odCl7Zm9yKHZhciBlO3QmJlwiI3RleHRcIj09PXQubm9kZU5hbWU7KWU9dCx0PXQucHJldmlvdXNTaWJsaW5nLGUucGFyZW50RWxlbWVudCYmZS5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKGUpfSxpc0VxdWFsQXJyYXk6ZnVuY3Rpb24odCxlKXt2YXIgbj10Lmxlbmd0aDtpZihuIT09ZS5sZW5ndGgpcmV0dXJuITE7Zm9yKDtuLS07KWlmKHRbbl0hPT1lW25dKXJldHVybiExO3JldHVybiEwfSxkZWVwRXF1YWxzOmZ1bmN0aW9uKHQsZSl7dmFyIG47aWYoXCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlKXtpZihPYmplY3Qua2V5cyh0KS5sZW5ndGghPT1PYmplY3Qua2V5cyhlKS5sZW5ndGgpcmV0dXJuITE7Zm9yKG4gaW4gdClpZighZS5oYXNPd25Qcm9wZXJ0eShuKXx8IXRoaXMuZGVlcEVxdWFscyh0W25dLGVbbl0pKXJldHVybiExfWVsc2UgaWYodCE9PWUpcmV0dXJuITE7cmV0dXJuITB9LGFycmF5U2h1ZmZsZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC5zbGljZSgpLG49ZS5sZW5ndGgsYT1uLGk9LTEsbz1bXTthLS07KWk9fn4oTWF0aC5yYW5kb20oKSpuKSxvPWVbYV0sZVthXT1lW2ldLGVbaV09bztyZXR1cm4gZX0sYXJyYXlGcm9tTGlzdDpmdW5jdGlvbih0KXt2YXIgZSxuO3RyeXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCl9Y2F0Y2goYSl7Zm9yKGU9W10sbj0wO248dC5sZW5ndGg7bisrKWUucHVzaCh0W25dKTtyZXR1cm4gZX19LGRlYm91bmNlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgYTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgaT10aGlzLG89YXJndW1lbnRzLHI9biYmIWEscz1udWxsO3M9ZnVuY3Rpb24oKXthPW51bGwsbnx8dC5hcHBseShpLG8pfSxjbGVhclRpbWVvdXQoYSksYT1zZXRUaW1lb3V0KHMsZSksciYmdC5hcHBseShpLG8pfX0scG9zaXRpb246ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj0wLGE9dDt0OyllLT10LnNjcm9sbExlZnQsbi09dC5zY3JvbGxUb3AsdD09PWEmJihlKz10Lm9mZnNldExlZnQsbis9dC5vZmZzZXRUb3AsYT10Lm9mZnNldFBhcmVudCksdD10LnBhcmVudEVsZW1lbnQ7cmV0dXJue3g6ZSx5Om59fSxnZXRIeXBvdGVudXNlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC54LWUueCxhPXQueS1lLnk7cmV0dXJuIG49bjwwP24qLTE6bixhPWE8MD9hKi0xOmEsTWF0aC5zcXJ0KE1hdGgucG93KG4sMikrTWF0aC5wb3coYSwyKSl9LGdldEludGVyc2VjdGlvblJhdGlvOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC53aWR0aCp0LmhlaWdodCxhPS0xLGk9LTEsbz0tMSxyPS0xO3JldHVybiBhPU1hdGgubWF4KDAsTWF0aC5taW4odC5sZWZ0K3Qud2lkdGgsZS5sZWZ0K2Uud2lkdGgpLU1hdGgubWF4KHQubGVmdCxlLmxlZnQpKSxpPU1hdGgubWF4KDAsTWF0aC5taW4odC50b3ArdC5oZWlnaHQsZS50b3ArZS5oZWlnaHQpLU1hdGgubWF4KHQudG9wLGUudG9wKSksbz1pKmEscj1vL259LGNsb3Nlc3RQYXJlbnQ6ZnVuY3Rpb24oZSxuLGEsaSl7dmFyIG89ZS5wYXJlbnROb2RlO2lmKGk9aXx8dC5kb2N1bWVudCxhJiZlLm1hdGNoZXMobikpcmV0dXJuIGU7Zm9yKDtvJiZvIT1pLmJvZHk7KXtpZihvLm1hdGNoZXMmJm8ubWF0Y2hlcyhuKSlyZXR1cm4gbztpZighby5wYXJlbnROb2RlKXJldHVybiBudWxsO289by5wYXJlbnROb2RlfXJldHVybiBudWxsfSxjaGlsZHJlbjpmdW5jdGlvbihlLG4sYSl7dmFyIGk9W10sbz1cIlwiO3JldHVybiBhPWF8fHQuZG9jLGUmJihlLmlkfHwobz1cIlRlbXBcIit0aGlzLnJhbmRvbUhleEtleSgpLGUuaWQ9byksaT1hLnF1ZXJ5U2VsZWN0b3JBbGwoXCIjXCIrZS5pZCtcIiA+IFwiK24pLG8mJmUucmVtb3ZlQXR0cmlidXRlKFwiaWRcIikpLGl9LGNsZWFuOmZ1bmN0aW9uKHQpe3ZhciBlPVtdLG49LTE7Zm9yKG49MDtuPHQubGVuZ3RoO24rKylcIlwiIT09dFtuXSYmZS5wdXNoKHRbbl0pO3JldHVybiBlfSxkZWZlcjpmdW5jdGlvbihuKXt2YXIgYT1udWxsLGk9bnVsbCxvPW51bGw7cmV0dXJuIGk9bmV3IHRoaXMuRGVmZXJyZWQsZS5mZWF0dXJlcy5oYXMucHJvbWlzZXM/aS5wcm9taXNlPW5ldyBQcm9taXNlKGZ1bmN0aW9uKHQsZSl7aS5yZXNvbHZlPXQsaS5yZWplY3Q9ZX0pOihvPXQualF1ZXJ5fHxuLiQpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvLkRlZmVycmVkPyhhPW8uRGVmZXJyZWQoKSxpLnByb21pc2U9YS5wcm9taXNlKCksaS5yZXNvbHZlPWEucmVzb2x2ZSxpLnJlamVjdD1hLnJlamVjdCk6dC5jb25zb2xlJiZjb25zb2xlLndhcm4oZS5tZXNzYWdlcy53YXJuaW5nTm9Qcm9taXNlSW1wbGVtZW50YXRpb24oKSksaX0sYWxsOmZ1bmN0aW9uKG4sYSl7dmFyIGk9bnVsbDtyZXR1cm4gZS5mZWF0dXJlcy5oYXMucHJvbWlzZXM/UHJvbWlzZS5hbGwobik6KGk9dC5qUXVlcnl8fGEuJCkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGkud2hlbj9pLndoZW4uYXBwbHkoaSxuKS5kb25lKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30pOih0LmNvbnNvbGUmJmNvbnNvbGUud2FybihlLm1lc3NhZ2VzLndhcm5pbmdOb1Byb21pc2VJbXBsZW1lbnRhdGlvbigpKSxbXSl9LGdldFByZWZpeDpmdW5jdGlvbih0LGUsYSl7dmFyIGk9LTEsbz1cIlwiO2lmKG4uZGFzaENhc2UoZSlpbiB0LnN0eWxlKXJldHVyblwiXCI7Zm9yKGk9MDtvPWFbaV07aSsrKWlmKG8rZSBpbiB0LnN0eWxlKXJldHVybiBvLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJ1bnN1cHBvcnRlZFwifSxyYW5kb21IZXg6ZnVuY3Rpb24oKXtyZXR1cm4oXCIwMDAwMFwiKygxNjc3NzIxNipNYXRoLnJhbmRvbSgpPDwwKS50b1N0cmluZygxNikpLnN1YnN0cigtNikudG9VcHBlckNhc2UoKX0sZ2V0RG9jdW1lbnRTdGF0ZTpmdW5jdGlvbihlKXtyZXR1cm4gZT1cIm9iamVjdFwiPT10eXBlb2YgZS5ib2R5P2U6dC5kb2N1bWVudCx7c2Nyb2xsVG9wOnQucGFnZVlPZmZzZXQsc2Nyb2xsTGVmdDp0LnBhZ2VYT2Zmc2V0LGRvY0hlaWdodDplLmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQsZG9jV2lkdGg6ZS5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsV2lkdGgsdmlld3BvcnRIZWlnaHQ6ZS5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LHZpZXdwb3J0V2lkdGg6ZS5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGh9fSxiaW5kOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX0saXNWaXNpYmxlOmZ1bmN0aW9uKGUpe3ZhciBuPW51bGw7cmV0dXJuISFlLm9mZnNldFBhcmVudHx8KG49dC5nZXRDb21wdXRlZFN0eWxlKGUpLFwiZml4ZWRcIj09PW4ucG9zaXRpb24mJlwiaGlkZGVuXCIhPT1uLnZpc2liaWxpdHkmJlwiMFwiIT09bi5vcGFjaXR5KX0sc2VhbDpmdW5jdGlvbih0KXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3Quc2VhbCYmT2JqZWN0LnNlYWwodCl9LGZyZWV6ZTpmdW5jdGlvbih0KXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3QuZnJlZXplJiZPYmplY3QuZnJlZXplKHQpfSxjb21wYXJlVmVyc2lvbnM6ZnVuY3Rpb24odCxlKXt2YXIgbj10LnNwbGl0KFwiLlwiKSxhPWUuc3BsaXQoXCIuXCIpLGk9LTEsbz0tMSxyPS0xO2ZvcihyPTA7cjxuLmxlbmd0aDtyKyspe2lmKGk9cGFyc2VJbnQobltyXS5yZXBsYWNlKC9bXlxcZC5dL2csXCJcIikpLG89cGFyc2VJbnQoYVtyXS5yZXBsYWNlKC9bXlxcZC5dL2csXCJcIil8fDApLG88aSlyZXR1cm4hMTtpZihvPmkpcmV0dXJuITB9cmV0dXJuITB9LERlZmVycmVkOmZ1bmN0aW9uKCl7dGhpcy5wcm9taXNlPW51bGwsdGhpcy5yZXNvbHZlPW51bGwsdGhpcy5yZWplY3Q9bnVsbCx0aGlzLmlkPW4ucmFuZG9tSGV4KCl9LGlzRW1wdHlPYmplY3Q6ZnVuY3Rpb24odCl7dmFyIGU9XCJcIjtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3Qua2V5cylyZXR1cm4gMD09PU9iamVjdC5rZXlzKHQpLmxlbmd0aDtmb3IoZSBpbiB0KWlmKHQuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuITE7cmV0dXJuITB9LGdldENsYXNzbmFtZTpmdW5jdGlvbih0LGUsbil7dmFyIGE9XCJcIjtyZXR1cm4gYSs9dC5ibG9jayxhLmxlbmd0aCYmKGErPXQuZGVsaW5lYXRvckVsZW1lbnQpLGErPXRbXCJlbGVtZW50XCIrdGhpcy5wYXNjYWxDYXNlKGUpXSxuPyhhLmxlbmd0aCYmKGErPXQuZGVsaW5lYXRvck1vZGlmaWVyKSxhKz1uKTphfSxnZXRQcm9wZXJ0eTpmdW5jdGlvbih0LGUpe3ZhciBuPWUuc3BsaXQoXCIuXCIpLGE9bnVsbCxpPVwiXCIsbz0wO2lmKCFlKXJldHVybiB0O2ZvcihhPWZ1bmN0aW9uKHQpe3JldHVybiB0P3RbaV06bnVsbH07bzxuLmxlbmd0aDspaT1uW29dLHQ9YSh0KSxvKys7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHQ/dDpudWxsfX0sZS5oPW4sZS5CYXNlPWZ1bmN0aW9uKCl7fSxlLkJhc2UucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjplLkJhc2UsY2FsbEFjdGlvbnM6ZnVuY3Rpb24odCxlKXt2YXIgYT10aGlzLGk9YS5jb25zdHJ1Y3Rvci5hY3Rpb25zW3RdLG89XCJcIjtpZihpJiYhbi5pc0VtcHR5T2JqZWN0KGkpKWZvcihvIGluIGkpaVtvXS5hcHBseShhLGUpfSxjYWxsRmlsdGVyczpmdW5jdGlvbih0LGUsYSl7dmFyIGk9dGhpcyxvPWkuY29uc3RydWN0b3IuZmlsdGVyc1t0XSxyPWUscz1cIlwiO2lmKCFvfHxuLmlzRW1wdHlPYmplY3QobykpcmV0dXJuIHI7YT1hfHxbXTtmb3IocyBpbiBvKWE9bi5hcnJheUZyb21MaXN0KGEpLGEudW5zaGlmdChyKSxyPW9bc10uYXBwbHkoaSxhKTtyZXR1cm4gcn19LGUuQmFzZVN0YXRpYz1mdW5jdGlvbigpe3RoaXMuYWN0aW9ucz17fSx0aGlzLmZpbHRlcnM9e30sdGhpcy5leHRlbmQ9ZnVuY3Rpb24odCl7bi5leHRlbmQodGhpcy5wcm90b3R5cGUsdCl9LHRoaXMucmVnaXN0ZXJBY3Rpb249ZnVuY3Rpb24odCxlLG4peyh0aGlzLmFjdGlvbnNbdF09dGhpcy5hY3Rpb25zW3RdfHx7fSlbZV09bn0sdGhpcy5yZWdpc3RlckZpbHRlcj1mdW5jdGlvbih0LGUsbil7KHRoaXMuZmlsdGVyc1t0XT10aGlzLmZpbHRlcnNbdF18fHt9KVtlXT1ufX0sZS5GZWF0dXJlcz1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5ib3hTaXppbmdQcmVmaXg9XCJcIix0aGlzLnRyYW5zZm9ybVByZWZpeD1cIlwiLHRoaXMudHJhbnNpdGlvblByZWZpeD1cIlwiLHRoaXMuYm94U2l6aW5nUHJlZml4PVwiXCIsdGhpcy50cmFuc2Zvcm1Qcm9wPVwiXCIsdGhpcy50cmFuc2Zvcm1SdWxlPVwiXCIsdGhpcy50cmFuc2l0aW9uUHJvcD1cIlwiLHRoaXMucGVyc3BlY3RpdmVQcm9wPVwiXCIsdGhpcy5wZXJzcGVjdGl2ZU9yaWdpblByb3A9XCJcIix0aGlzLmhhcz1uZXcgZS5IYXMsdGhpcy5jYW5hcnk9bnVsbCx0aGlzLkJPWF9TSVpJTkdfUFJPUD1cImJveFNpemluZ1wiLHRoaXMuVFJBTlNJVElPTl9QUk9QPVwidHJhbnNpdGlvblwiLHRoaXMuVFJBTlNGT1JNX1BST1A9XCJ0cmFuc2Zvcm1cIix0aGlzLlBFUlNQRUNUSVZFX1BST1A9XCJwZXJzcGVjdGl2ZVwiLHRoaXMuUEVSU1BFQ1RJVkVfT1JJR0lOX1BST1A9XCJwZXJzcGVjdGl2ZU9yaWdpblwiLHRoaXMuVkVORE9SUz1bXCJXZWJraXRcIixcIm1velwiLFwiT1wiLFwibXNcIl0sdGhpcy5UV0VFTkFCTEU9W1wib3BhY2l0eVwiLFwid2lkdGhcIixcImhlaWdodFwiLFwibWFyZ2luUmlnaHRcIixcIm1hcmdpbkJvdHRvbVwiLFwieFwiLFwieVwiLFwic2NhbGVcIixcInRyYW5zbGF0ZVhcIixcInRyYW5zbGF0ZVlcIixcInRyYW5zbGF0ZVpcIixcInJvdGF0ZVhcIixcInJvdGF0ZVlcIixcInJvdGF0ZVpcIl0sdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpfSxlLkJhc2VTdGF0aWMuY2FsbChlLkZlYXR1cmVzKSxlLkZlYXR1cmVzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLG4uZXh0ZW5kKGUuRmVhdHVyZXMucHJvdG90eXBlLHtjb25zdHJ1Y3RvcjplLkZlYXR1cmVzLGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuY2FsbEFjdGlvbnMoXCJiZWZvcmVJbml0XCIsYXJndW1lbnRzKSx0LmNhbmFyeT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHQuc2V0UHJlZml4ZXMoKSx0LnJ1blRlc3RzKCksdC5jYWxsQWN0aW9ucyhcImJlZm9yZUluaXRcIixhcmd1bWVudHMpfSxydW5UZXN0czpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5jYWxsQWN0aW9ucyhcImJlZm9yZVJ1blRlc3RzXCIsYXJndW1lbnRzKSxlLmhhcy5wcm9taXNlcz1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0LlByb21pc2UsZS5oYXMudHJhbnNpdGlvbnM9XCJ1bnN1cHBvcnRlZFwiIT09ZS50cmFuc2l0aW9uUHJlZml4LGUuY2FsbEFjdGlvbnMoXCJhZnRlclJ1blRlc3RzXCIsYXJndW1lbnRzKSxuLmZyZWV6ZShlLmhhcyl9LHNldFByZWZpeGVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LmNhbGxBY3Rpb25zKFwiYmVmb3JlU2V0UHJlZml4ZXNcIixhcmd1bWVudHMpLHQudHJhbnNpdGlvblByZWZpeD1uLmdldFByZWZpeCh0LmNhbmFyeSxcIlRyYW5zaXRpb25cIix0LlZFTkRPUlMpLHQudHJhbnNmb3JtUHJlZml4PW4uZ2V0UHJlZml4KHQuY2FuYXJ5LFwiVHJhbnNmb3JtXCIsdC5WRU5ET1JTKSx0LmJveFNpemluZ1ByZWZpeD1uLmdldFByZWZpeCh0LmNhbmFyeSxcIkJveFNpemluZ1wiLHQuVkVORE9SUyksdC5ib3hTaXppbmdQcm9wPXQuYm94U2l6aW5nUHJlZml4P3QuYm94U2l6aW5nUHJlZml4K24ucGFzY2FsQ2FzZSh0LkJPWF9TSVpJTkdfUFJPUCk6dC5CT1hfU0laSU5HX1BST1AsdC50cmFuc2l0aW9uUHJvcD10LnRyYW5zaXRpb25QcmVmaXg/dC50cmFuc2l0aW9uUHJlZml4K24ucGFzY2FsQ2FzZSh0LlRSQU5TSVRJT05fUFJPUCk6dC5UUkFOU0lUSU9OX1BST1AsdC50cmFuc2Zvcm1Qcm9wPXQudHJhbnNmb3JtUHJlZml4P3QudHJhbnNmb3JtUHJlZml4K24ucGFzY2FsQ2FzZSh0LlRSQU5TRk9STV9QUk9QKTp0LlRSQU5TRk9STV9QUk9QLHQudHJhbnNmb3JtUnVsZT10LnRyYW5zZm9ybVByZWZpeD9cIi1cIit0LnRyYW5zZm9ybVByZWZpeCtcIi1cIit0LlRSQU5TRk9STV9QUk9QOnQuVFJBTlNGT1JNX1BST1AsdC5wZXJzcGVjdGl2ZVByb3A9dC50cmFuc2Zvcm1QcmVmaXg/dC50cmFuc2Zvcm1QcmVmaXgrbi5wYXNjYWxDYXNlKHQuUEVSU1BFQ1RJVkVfUFJPUCk6dC5QRVJTUEVDVElWRV9QUk9QLHQucGVyc3BlY3RpdmVPcmlnaW5Qcm9wPXQudHJhbnNmb3JtUHJlZml4P3QudHJhbnNmb3JtUHJlZml4K24ucGFzY2FsQ2FzZSh0LlBFUlNQRUNUSVZFX09SSUdJTl9QUk9QKTp0LlBFUlNQRUNUSVZFX09SSUdJTl9QUk9QLHQuY2FsbEFjdGlvbnMoXCJhZnRlclNldFByZWZpeGVzXCIsYXJndW1lbnRzKX19KSxlLkhhcz1mdW5jdGlvbigpe3RoaXMudHJhbnNpdGlvbnM9ITEsdGhpcy5wcm9taXNlcz0hMSxuLnNlYWwodGhpcyl9LGUuZmVhdHVyZXM9bmV3IGUuRmVhdHVyZXMsZS5mZWF0dXJlcy5pbml0KCksZS5Db25maWdBbmltYXRpb249ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMuZW5hYmxlPSEwLHRoaXMuZWZmZWN0cz1cImZhZGUgc2NhbGVcIix0aGlzLmVmZmVjdHNJbj1cIlwiLHRoaXMuZWZmZWN0c091dD1cIlwiLHRoaXMuZHVyYXRpb249NjAwLHRoaXMuZWFzaW5nPVwiZWFzZVwiLHRoaXMuYXBwbHlQZXJzcGVjdGl2ZT0hMCx0aGlzLnBlcnNwZWN0aXZlRGlzdGFuY2U9XCIzMDAwcHhcIix0aGlzLnBlcnNwZWN0aXZlT3JpZ2luPVwiNTAlIDUwJVwiLHRoaXMucXVldWU9ITAsdGhpcy5xdWV1ZUxpbWl0PTMsdGhpcy5hbmltYXRlUmVzaXplQ29udGFpbmVyPSEwLHRoaXMuYW5pbWF0ZVJlc2l6ZVRhcmdldHM9ITEsdGhpcy5zdGFnZ2VyU2VxdWVuY2U9bnVsbCx0aGlzLnJldmVyc2VPdXQ9ITEsdGhpcy5udWRnZT0hMCx0aGlzLmNsYW1wSGVpZ2h0PSEwLHRoaXMuY2xhbXBXaWR0aD0hMCx0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksbi5zZWFsKHRoaXMpfSxlLkJhc2VTdGF0aWMuY2FsbChlLkNvbmZpZ0FuaW1hdGlvbiksZS5Db25maWdBbmltYXRpb24ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5Db25maWdBbmltYXRpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUuQ29uZmlnQW5pbWF0aW9uLGUuQ29uZmlnQmVoYXZpb3I9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMubGl2ZVNvcnQ9ITEsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db25maWdCZWhhdmlvciksZS5Db25maWdCZWhhdmlvci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbmZpZ0JlaGF2aW9yLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbmZpZ0JlaGF2aW9yLGUuQ29uZmlnQ2FsbGJhY2tzPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLm9uTWl4U3RhcnQ9bnVsbCx0aGlzLm9uTWl4QnVzeT1udWxsLHRoaXMub25NaXhFbmQ9bnVsbCx0aGlzLm9uTWl4RmFpbD1udWxsLHRoaXMub25NaXhDbGljaz1udWxsLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29uZmlnQ2FsbGJhY2tzKSxlLkNvbmZpZ0NhbGxiYWNrcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbmZpZ0NhbGxiYWNrcy5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db25maWdDYWxsYmFja3MsZS5Db25maWdDb250cm9scz1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5lbmFibGU9ITAsdGhpcy5saXZlPSExLHRoaXMuc2NvcGU9XCJnbG9iYWxcIix0aGlzLnRvZ2dsZUxvZ2ljPVwib3JcIix0aGlzLnRvZ2dsZURlZmF1bHQ9XCJhbGxcIix0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksbi5zZWFsKHRoaXMpfSxlLkJhc2VTdGF0aWMuY2FsbChlLkNvbmZpZ0NvbnRyb2xzKSxlLkNvbmZpZ0NvbnRyb2xzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuQ29uZmlnQ29udHJvbHMucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUuQ29uZmlnQ29udHJvbHMsZS5Db25maWdDbGFzc05hbWVzPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLmJsb2NrPVwibWl4aXR1cFwiLHRoaXMuZWxlbWVudENvbnRhaW5lcj1cImNvbnRhaW5lclwiLHRoaXMuZWxlbWVudEZpbHRlcj1cImNvbnRyb2xcIix0aGlzLmVsZW1lbnRTb3J0PVwiY29udHJvbFwiLHRoaXMuZWxlbWVudE11bHRpbWl4PVwiY29udHJvbFwiLHRoaXMuZWxlbWVudFRvZ2dsZT1cImNvbnRyb2xcIix0aGlzLm1vZGlmaWVyQWN0aXZlPVwiYWN0aXZlXCIsdGhpcy5tb2RpZmllckRpc2FibGVkPVwiZGlzYWJsZWRcIix0aGlzLm1vZGlmaWVyRmFpbGVkPVwiZmFpbGVkXCIsdGhpcy5kZWxpbmVhdG9yRWxlbWVudD1cIi1cIix0aGlzLmRlbGluZWF0b3JNb2RpZmllcj1cIi1cIix0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksbi5zZWFsKHRoaXMpfSxlLkJhc2VTdGF0aWMuY2FsbChlLkNvbmZpZ0NsYXNzTmFtZXMpLGUuQ29uZmlnQ2xhc3NOYW1lcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbmZpZ0NsYXNzTmFtZXMucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUuQ29uZmlnQ2xhc3NOYW1lcyxlLkNvbmZpZ0RhdGE9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMudWlkS2V5PVwiXCIsdGhpcy5kaXJ0eUNoZWNrPSExLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29uZmlnRGF0YSksZS5Db25maWdEYXRhLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuQ29uZmlnRGF0YS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db25maWdEYXRhLGUuQ29uZmlnRGVidWc9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMuZW5hYmxlPSExLHRoaXMuc2hvd1dhcm5pbmdzPSEwLHRoaXMuZmF1eEFzeW5jPSExLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29uZmlnRGVidWcpLGUuQ29uZmlnRGVidWcucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5Db25maWdEZWJ1Zy5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db25maWdEZWJ1ZyxlLkNvbmZpZ0xheW91dD1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5hbGxvd05lc3RlZFRhcmdldHM9ITAsdGhpcy5jb250YWluZXJDbGFzc05hbWU9XCJcIix0aGlzLnNpYmxpbmdCZWZvcmU9bnVsbCx0aGlzLnNpYmxpbmdBZnRlcj1udWxsLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29uZmlnTGF5b3V0KSxlLkNvbmZpZ0xheW91dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbmZpZ0xheW91dC5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db25maWdMYXlvdXQsZS5Db25maWdMb2FkPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLmZpbHRlcj1cImFsbFwiLHRoaXMuc29ydD1cImRlZmF1bHQ6YXNjXCIsdGhpcy5kYXRhc2V0PW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db25maWdMb2FkKSxlLkNvbmZpZ0xvYWQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5Db25maWdMb2FkLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbmZpZ0xvYWQsZS5Db25maWdTZWxlY3RvcnM9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMudGFyZ2V0PVwiLm1peFwiLHRoaXMuY29udHJvbD1cIlwiLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29uZmlnU2VsZWN0b3JzKSxlLkNvbmZpZ1NlbGVjdG9ycy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbmZpZ1NlbGVjdG9ycy5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db25maWdTZWxlY3RvcnMsZS5Db25maWdSZW5kZXI9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMudGFyZ2V0PW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db25maWdSZW5kZXIpLGUuQ29uZmlnUmVuZGVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuQ29uZmlnUmVuZGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbmZpZ1JlbmRlcixlLkNvbmZpZ1RlbXBsYXRlcz1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db25maWdUZW1wbGF0ZXMpLGUuQ29uZmlnVGVtcGxhdGVzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuQ29uZmlnVGVtcGxhdGVzLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbmZpZ1RlbXBsYXRlcyxlLkNvbmZpZz1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5hbmltYXRpb249bmV3IGUuQ29uZmlnQW5pbWF0aW9uLHRoaXMuYmVoYXZpb3I9bmV3IGUuQ29uZmlnQmVoYXZpb3IsdGhpcy5jYWxsYmFja3M9bmV3IGUuQ29uZmlnQ2FsbGJhY2tzLHRoaXMuY29udHJvbHM9bmV3IGUuQ29uZmlnQ29udHJvbHMsdGhpcy5jbGFzc05hbWVzPW5ldyBlLkNvbmZpZ0NsYXNzTmFtZXMsdGhpcy5kYXRhPW5ldyBlLkNvbmZpZ0RhdGEsdGhpcy5kZWJ1Zz1uZXcgZS5Db25maWdEZWJ1Zyx0aGlzLmxheW91dD1uZXcgZS5Db25maWdMYXlvdXQsdGhpcy5sb2FkPW5ldyBlLkNvbmZpZ0xvYWQsdGhpcy5zZWxlY3RvcnM9bmV3IGUuQ29uZmlnU2VsZWN0b3JzLHRoaXMucmVuZGVyPW5ldyBlLkNvbmZpZ1JlbmRlcix0aGlzLnRlbXBsYXRlcz1uZXcgZS5Db25maWdUZW1wbGF0ZXMsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db25maWcpLGUuQ29uZmlnLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuQ29uZmlnLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbmZpZyxlLk1peGVyRG9tPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLmRvY3VtZW50PW51bGwsdGhpcy5ib2R5PW51bGwsdGhpcy5jb250YWluZXI9bnVsbCx0aGlzLnBhcmVudD1udWxsLHRoaXMudGFyZ2V0cz1bXSx0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksbi5zZWFsKHRoaXMpfSxlLkJhc2VTdGF0aWMuY2FsbChlLk1peGVyRG9tKSxlLk1peGVyRG9tLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuTWl4ZXJEb20ucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUuTWl4ZXJEb20sZS5VaUNsYXNzTmFtZXM9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMuYmFzZT1cIlwiLHRoaXMuYWN0aXZlPVwiXCIsdGhpcy5kaXNhYmxlZD1cIlwiLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuVWlDbGFzc05hbWVzKSxlLlVpQ2xhc3NOYW1lcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLlVpQ2xhc3NOYW1lcy5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5VaUNsYXNzTmFtZXMsZS5Db21tYW5kRGF0YXNldD1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5kYXRhc2V0PW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db21tYW5kRGF0YXNldCksZS5Db21tYW5kRGF0YXNldC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbW1hbmREYXRhc2V0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbW1hbmREYXRhc2V0LGUuQ29tbWFuZE11bHRpbWl4PWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLmZpbHRlcj1udWxsLHRoaXMuc29ydD1udWxsLHRoaXMuaW5zZXJ0PW51bGwsdGhpcy5yZW1vdmU9bnVsbCx0aGlzLmNoYW5nZUxheW91dD1udWxsLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29tbWFuZE11bHRpbWl4KSxlLkNvbW1hbmRNdWx0aW1peC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbW1hbmRNdWx0aW1peC5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db21tYW5kTXVsdGltaXgsZS5Db21tYW5kRmlsdGVyPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLnNlbGVjdG9yPVwiXCIsdGhpcy5jb2xsZWN0aW9uPW51bGwsdGhpcy5hY3Rpb249XCJzaG93XCIsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db21tYW5kRmlsdGVyKSxlLkNvbW1hbmRGaWx0ZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5Db21tYW5kRmlsdGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbW1hbmRGaWx0ZXIsZS5Db21tYW5kU29ydD1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5zb3J0U3RyaW5nPVwiXCIsdGhpcy5hdHRyaWJ1dGU9XCJcIix0aGlzLm9yZGVyPVwiYXNjXCIsdGhpcy5jb2xsZWN0aW9uPW51bGwsdGhpcy5uZXh0PW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db21tYW5kU29ydCksZS5Db21tYW5kU29ydC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbW1hbmRTb3J0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbW1hbmRTb3J0LGUuQ29tbWFuZEluc2VydD1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5pbmRleD0wLHRoaXMuY29sbGVjdGlvbj1bXSx0aGlzLnBvc2l0aW9uPVwiYmVmb3JlXCIsdGhpcy5zaWJsaW5nPW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db21tYW5kSW5zZXJ0KSxlLkNvbW1hbmRJbnNlcnQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5Db21tYW5kSW5zZXJ0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLkNvbW1hbmRJbnNlcnQsZS5Db21tYW5kUmVtb3ZlPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLnRhcmdldHM9W10sdGhpcy5jb2xsZWN0aW9uPVtdLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29tbWFuZFJlbW92ZSksZS5Db21tYW5kUmVtb3ZlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuQ29tbWFuZFJlbW92ZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db21tYW5kUmVtb3ZlLGUuQ29tbWFuZENoYW5nZUxheW91dD1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5jb250YWluZXJDbGFzc05hbWU9XCJcIix0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksbi5zZWFsKHRoaXMpfSxlLkJhc2VTdGF0aWMuY2FsbChlLkNvbW1hbmRDaGFuZ2VMYXlvdXQpLGUuQ29tbWFuZENoYW5nZUxheW91dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkNvbW1hbmRDaGFuZ2VMYXlvdXQucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUuQ29tbWFuZENoYW5nZUxheW91dCxlLkNvbnRyb2xEZWZpbml0aW9uPWZ1bmN0aW9uKHQsYSxpLG8pe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy50eXBlPXQsdGhpcy5zZWxlY3Rvcj1hLHRoaXMubGl2ZT1pfHwhMSx0aGlzLnBhcmVudD1vfHxcIlwiLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLmZyZWV6ZSh0aGlzKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29udHJvbERlZmluaXRpb24pLGUuQ29udHJvbERlZmluaXRpb24ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5Db250cm9sRGVmaW5pdGlvbi5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5Db250cm9sRGVmaW5pdGlvbixlLmNvbnRyb2xEZWZpbml0aW9ucz1bXSxlLmNvbnRyb2xEZWZpbml0aW9ucy5wdXNoKG5ldyBlLkNvbnRyb2xEZWZpbml0aW9uKFwibXVsdGltaXhcIixcIltkYXRhLWZpbHRlcl1bZGF0YS1zb3J0XVwiKSksZS5jb250cm9sRGVmaW5pdGlvbnMucHVzaChuZXcgZS5Db250cm9sRGVmaW5pdGlvbihcImZpbHRlclwiLFwiW2RhdGEtZmlsdGVyXVwiKSksZS5jb250cm9sRGVmaW5pdGlvbnMucHVzaChuZXcgZS5Db250cm9sRGVmaW5pdGlvbihcInNvcnRcIixcIltkYXRhLXNvcnRdXCIpKSxlLmNvbnRyb2xEZWZpbml0aW9ucy5wdXNoKG5ldyBlLkNvbnRyb2xEZWZpbml0aW9uKFwidG9nZ2xlXCIsXCJbZGF0YS10b2dnbGVdXCIpKSxlLkNvbnRyb2w9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMuZWw9bnVsbCx0aGlzLnNlbGVjdG9yPVwiXCIsdGhpcy5ib3VuZD1bXSx0aGlzLnBlbmRpbmc9LTEsdGhpcy50eXBlPVwiXCIsdGhpcy5zdGF0dXM9XCJpbmFjdGl2ZVwiLHRoaXMuZmlsdGVyPVwiXCIsdGhpcy5zb3J0PVwiXCIsdGhpcy5jYW5EaXNhYmxlPSExLHRoaXMuaGFuZGxlcj1udWxsLHRoaXMuY2xhc3NOYW1lcz1uZXcgZS5VaUNsYXNzTmFtZXMsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Db250cm9sKSxlLkNvbnRyb2wucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksbi5leHRlbmQoZS5Db250cm9sLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6ZS5Db250cm9sLGluaXQ6ZnVuY3Rpb24odCxuLGEpe3ZhciBpPXRoaXM7aWYodGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUluaXRcIixhcmd1bWVudHMpLGkuZWw9dCxpLnR5cGU9bixpLnNlbGVjdG9yPWEsaS5zZWxlY3RvcilpLnN0YXR1cz1cImxpdmVcIjtlbHNlIHN3aXRjaChpLmNhbkRpc2FibGU9XCJib29sZWFuXCI9PXR5cGVvZiBpLmVsLmRpc2FibGUsaS50eXBlKXtjYXNlXCJmaWx0ZXJcIjppLmZpbHRlcj1pLmVsLmdldEF0dHJpYnV0ZShcImRhdGEtZmlsdGVyXCIpO2JyZWFrO2Nhc2VcInRvZ2dsZVwiOmkuZmlsdGVyPWkuZWwuZ2V0QXR0cmlidXRlKFwiZGF0YS10b2dnbGVcIik7YnJlYWs7Y2FzZVwic29ydFwiOmkuc29ydD1pLmVsLmdldEF0dHJpYnV0ZShcImRhdGEtc29ydFwiKTticmVhaztjYXNlXCJtdWx0aW1peFwiOmkuZmlsdGVyPWkuZWwuZ2V0QXR0cmlidXRlKFwiZGF0YS1maWx0ZXJcIiksaS5zb3J0PWkuZWwuZ2V0QXR0cmlidXRlKFwiZGF0YS1zb3J0XCIpfWkuYmluZENsaWNrKCksZS5jb250cm9scy5wdXNoKGkpLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckluaXRcIixhcmd1bWVudHMpfSxpc0JvdW5kOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj0hMTtyZXR1cm4gdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUlzQm91bmRcIixhcmd1bWVudHMpLG49ZS5ib3VuZC5pbmRleE9mKHQpPi0xLGUuY2FsbEZpbHRlcnMoXCJhZnRlcklzQm91bmRcIixuLGFyZ3VtZW50cyl9LGFkZEJpbmRpbmc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQWRkQmluZGluZ1wiLGFyZ3VtZW50cyksZS5pc0JvdW5kKCl8fGUuYm91bmQucHVzaCh0KSx0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJBZGRCaW5kaW5nXCIsYXJndW1lbnRzKX0scmVtb3ZlQmluZGluZzpmdW5jdGlvbih0KXt2YXIgbj10aGlzLGE9LTE7dGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZVJlbW92ZUJpbmRpbmdcIixhcmd1bWVudHMpLChhPW4uYm91bmQuaW5kZXhPZih0KSk+LTEmJm4uYm91bmQuc3BsaWNlKGEsMSksbi5ib3VuZC5sZW5ndGg8MSYmKG4udW5iaW5kQ2xpY2soKSxhPWUuY29udHJvbHMuaW5kZXhPZihuKSxlLmNvbnRyb2xzLnNwbGljZShhLDEpLFwiYWN0aXZlXCI9PT1uLnN0YXR1cyYmbi5yZW5kZXJTdGF0dXMobi5lbCxcImluYWN0aXZlXCIpKSx0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJSZW1vdmVCaW5kaW5nXCIsYXJndW1lbnRzKX0sYmluZENsaWNrOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQmluZENsaWNrXCIsYXJndW1lbnRzKSx0LmhhbmRsZXI9ZnVuY3Rpb24oZSl7dC5oYW5kbGVDbGljayhlKX0sbi5vbih0LmVsLFwiY2xpY2tcIix0LmhhbmRsZXIpLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckJpbmRDbGlja1wiLGFyZ3VtZW50cyl9LHVuYmluZENsaWNrOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlVW5iaW5kQ2xpY2tcIixhcmd1bWVudHMpLG4ub2ZmKHQuZWwsXCJjbGlja1wiLHQuaGFuZGxlciksdC5oYW5kbGVyPW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyVW5iaW5kQ2xpY2tcIixhcmd1bWVudHMpfSxoYW5kbGVDbGljazpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9bnVsbCxvPW51bGwscj0hMSxzPXZvaWQgMCxsPXt9LGM9bnVsbCx1PVtdLGY9LTE7aWYodGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUhhbmRsZUNsaWNrXCIsYXJndW1lbnRzKSx0aGlzLnBlbmRpbmc9MCxvPWEuYm91bmRbMF0saT1hLnNlbGVjdG9yP24uY2xvc2VzdFBhcmVudCh0LnRhcmdldCxvLmNvbmZpZy5zZWxlY3RvcnMuY29udHJvbCthLnNlbGVjdG9yLCEwLG8uZG9tLmRvY3VtZW50KTphLmVsLCFpKXJldHVybiB2b2lkIGEuY2FsbEFjdGlvbnMoXCJhZnRlckhhbmRsZUNsaWNrXCIsYXJndW1lbnRzKTtzd2l0Y2goYS50eXBlKXtjYXNlXCJmaWx0ZXJcIjpsLmZpbHRlcj1hLmZpbHRlcnx8aS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWZpbHRlclwiKTticmVhaztjYXNlXCJzb3J0XCI6bC5zb3J0PWEuc29ydHx8aS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNvcnRcIik7YnJlYWs7Y2FzZVwibXVsdGltaXhcIjpsLmZpbHRlcj1hLmZpbHRlcnx8aS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWZpbHRlclwiKSxsLnNvcnQ9YS5zb3J0fHxpLmdldEF0dHJpYnV0ZShcImRhdGEtc29ydFwiKTticmVhaztjYXNlXCJ0b2dnbGVcIjpsLmZpbHRlcj1hLmZpbHRlcnx8aS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXRvZ2dsZVwiKSxyPVwibGl2ZVwiPT09YS5zdGF0dXM/bi5oYXNDbGFzcyhpLGEuY2xhc3NOYW1lcy5hY3RpdmUpOlwiYWN0aXZlXCI9PT1hLnN0YXR1c31mb3IoZj0wO2Y8YS5ib3VuZC5sZW5ndGg7ZisrKWM9bmV3IGUuQ29tbWFuZE11bHRpbWl4LG4uZXh0ZW5kKGMsbCksdS5wdXNoKGMpO2Zvcih1PWEuY2FsbEZpbHRlcnMoXCJjb21tYW5kc0hhbmRsZUNsaWNrXCIsdSxhcmd1bWVudHMpLGEucGVuZGluZz1hLmJvdW5kLmxlbmd0aCxmPTA7bz1hLmJvdW5kW2ZdO2YrKylsPXVbZl0sbCYmKG8ubGFzdENsaWNrZWR8fChvLmxhc3RDbGlja2VkPWkpLGUuZXZlbnRzLmZpcmUoXCJtaXhDbGlja1wiLG8uZG9tLmNvbnRhaW5lcix7c3RhdGU6by5zdGF0ZSxpbnN0YW5jZTpvLG9yaWdpbmFsRXZlbnQ6dCxjb250cm9sOm8ubGFzdENsaWNrZWR9LG8uZG9tLmRvY3VtZW50KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvLmNvbmZpZy5jYWxsYmFja3Mub25NaXhDbGljayYmKHM9by5jb25maWcuY2FsbGJhY2tzLm9uTWl4Q2xpY2suY2FsbChvLmxhc3RDbGlja2VkLG8uc3RhdGUsdCxvKSxzPT09ITEpfHwoXCJ0b2dnbGVcIj09PWEudHlwZT9yP28udG9nZ2xlT2ZmKGwuZmlsdGVyKTpvLnRvZ2dsZU9uKGwuZmlsdGVyKTpvLm11bHRpbWl4KGwpKSk7dGhpcy5jYWxsQWN0aW9ucyhcImFmdGVySGFuZGxlQ2xpY2tcIixhcmd1bWVudHMpfSx1cGRhdGU6ZnVuY3Rpb24odCxuKXt2YXIgYT10aGlzLGk9bmV3IGUuQ29tbWFuZE11bHRpbWl4O2EuY2FsbEFjdGlvbnMoXCJiZWZvcmVVcGRhdGVcIixhcmd1bWVudHMpLGEucGVuZGluZy0tLGEucGVuZGluZz1NYXRoLm1heCgwLGEucGVuZGluZyksYS5wZW5kaW5nPjB8fChcImxpdmVcIj09PWEuc3RhdHVzP2EudXBkYXRlTGl2ZSh0LG4pOihpLnNvcnQ9YS5zb3J0LGkuZmlsdGVyPWEuZmlsdGVyLGEuY2FsbEZpbHRlcnMoXCJhY3Rpb25zVXBkYXRlXCIsaSxhcmd1bWVudHMpLGEucGFyc2VTdGF0dXNDaGFuZ2UoYS5lbCx0LGksbikpLGEuY2FsbEFjdGlvbnMoXCJhZnRlclVwZGF0ZVwiLGFyZ3VtZW50cykpfSx1cGRhdGVMaXZlOmZ1bmN0aW9uKHQsbil7dmFyIGE9dGhpcyxpPW51bGwsbz1udWxsLHI9bnVsbCxzPS0xO2lmKGEuY2FsbEFjdGlvbnMoXCJiZWZvcmVVcGRhdGVMaXZlXCIsYXJndW1lbnRzKSxhLmVsKXtmb3IoaT1hLmVsLnF1ZXJ5U2VsZWN0b3JBbGwoYS5zZWxlY3Rvcikscz0wO3I9aVtzXTtzKyspe3N3aXRjaChvPW5ldyBlLkNvbW1hbmRNdWx0aW1peCxhLnR5cGUpe2Nhc2VcImZpbHRlclwiOm8uZmlsdGVyPXIuZ2V0QXR0cmlidXRlKFwiZGF0YS1maWx0ZXJcIik7YnJlYWs7Y2FzZVwic29ydFwiOm8uc29ydD1yLmdldEF0dHJpYnV0ZShcImRhdGEtc29ydFwiKTticmVhaztjYXNlXCJtdWx0aW1peFwiOm8uZmlsdGVyPXIuZ2V0QXR0cmlidXRlKFwiZGF0YS1maWx0ZXJcIiksby5zb3J0PXIuZ2V0QXR0cmlidXRlKFwiZGF0YS1zb3J0XCIpO2JyZWFrO2Nhc2VcInRvZ2dsZVwiOm8uZmlsdGVyPXIuZ2V0QXR0cmlidXRlKFwiZGF0YS10b2dnbGVcIil9bz1hLmNhbGxGaWx0ZXJzKFwiYWN0aW9uc1VwZGF0ZUxpdmVcIixvLGFyZ3VtZW50cyksYS5wYXJzZVN0YXR1c0NoYW5nZShyLHQsbyxuKX1hLmNhbGxBY3Rpb25zKFwiYWZ0ZXJVcGRhdGVMaXZlXCIsYXJndW1lbnRzKX19LHBhcnNlU3RhdHVzQ2hhbmdlOmZ1bmN0aW9uKHQsZSxuLGEpe3ZhciBpPXRoaXMsbz1cIlwiLHI9XCJcIixzPS0xO3N3aXRjaChpLmNhbGxBY3Rpb25zKFwiYmVmb3JlUGFyc2VTdGF0dXNDaGFuZ2VcIixhcmd1bWVudHMpLGkudHlwZSl7Y2FzZVwiZmlsdGVyXCI6ZS5maWx0ZXI9PT1uLmZpbHRlcj9pLnJlbmRlclN0YXR1cyh0LFwiYWN0aXZlXCIpOmkucmVuZGVyU3RhdHVzKHQsXCJpbmFjdGl2ZVwiKTticmVhaztjYXNlXCJtdWx0aW1peFwiOmUuc29ydD09PW4uc29ydCYmZS5maWx0ZXI9PT1uLmZpbHRlcj9pLnJlbmRlclN0YXR1cyh0LFwiYWN0aXZlXCIpOmkucmVuZGVyU3RhdHVzKHQsXCJpbmFjdGl2ZVwiKTticmVhaztjYXNlXCJzb3J0XCI6ZS5zb3J0Lm1hdGNoKC86YXNjL2cpJiYobz1lLnNvcnQucmVwbGFjZSgvOmFzYy9nLFwiXCIpKSxlLnNvcnQ9PT1uLnNvcnR8fG89PT1uLnNvcnQ/aS5yZW5kZXJTdGF0dXModCxcImFjdGl2ZVwiKTppLnJlbmRlclN0YXR1cyh0LFwiaW5hY3RpdmVcIik7YnJlYWs7Y2FzZVwidG9nZ2xlXCI6Zm9yKGEubGVuZ3RoPDEmJmkucmVuZGVyU3RhdHVzKHQsXCJpbmFjdGl2ZVwiKSxlLmZpbHRlcj09PW4uZmlsdGVyJiZpLnJlbmRlclN0YXR1cyh0LFwiYWN0aXZlXCIpLHM9MDtzPGEubGVuZ3RoO3MrKyl7aWYocj1hW3NdLHI9PT1uLmZpbHRlcil7aS5yZW5kZXJTdGF0dXModCxcImFjdGl2ZVwiKTticmVha31pLnJlbmRlclN0YXR1cyh0LFwiaW5hY3RpdmVcIil9fWkuY2FsbEFjdGlvbnMoXCJhZnRlclBhcnNlU3RhdHVzQ2hhbmdlXCIsYXJndW1lbnRzKX0scmVuZGVyU3RhdHVzOmZ1bmN0aW9uKHQsZSl7dmFyIGE9dGhpcztzd2l0Y2goYS5jYWxsQWN0aW9ucyhcImJlZm9yZVJlbmRlclN0YXR1c1wiLGFyZ3VtZW50cyksZSl7Y2FzZVwiYWN0aXZlXCI6bi5hZGRDbGFzcyh0LGEuY2xhc3NOYW1lcy5hY3RpdmUpLG4ucmVtb3ZlQ2xhc3ModCxhLmNsYXNzTmFtZXMuZGlzYWJsZWQpLGEuY2FuRGlzYWJsZSYmKGEuZWwuZGlzYWJsZWQ9ITEpO2JyZWFrO2Nhc2VcImluYWN0aXZlXCI6bi5yZW1vdmVDbGFzcyh0LGEuY2xhc3NOYW1lcy5hY3RpdmUpLG4ucmVtb3ZlQ2xhc3ModCxhLmNsYXNzTmFtZXMuZGlzYWJsZWQpLGEuY2FuRGlzYWJsZSYmKGEuZWwuZGlzYWJsZWQ9ITEpO2JyZWFrO2Nhc2VcImRpc2FibGVkXCI6YS5jYW5EaXNhYmxlJiYoYS5lbC5kaXNhYmxlZD0hMCksbi5hZGRDbGFzcyh0LGEuY2xhc3NOYW1lcy5kaXNhYmxlZCksbi5yZW1vdmVDbGFzcyh0LGEuY2xhc3NOYW1lcy5hY3RpdmUpfVwibGl2ZVwiIT09YS5zdGF0dXMmJihhLnN0YXR1cz1lKSxhLmNhbGxBY3Rpb25zKFwiYWZ0ZXJSZW5kZXJTdGF0dXNcIixhcmd1bWVudHMpfX0pLGUuY29udHJvbHM9W10sZS5TdHlsZURhdGE9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMueD0wLHRoaXMueT0wLHRoaXMudG9wPTAsdGhpcy5yaWdodD0wLHRoaXMuYm90dG9tPTAsdGhpcy5sZWZ0PTAsdGhpcy53aWR0aD0wLHRoaXMuaGVpZ2h0PTAsdGhpcy5tYXJnaW5SaWdodD0wLHRoaXMubWFyZ2luQm90dG9tPTAsdGhpcy5vcGFjaXR5PTAsdGhpcy5zY2FsZT1uZXcgZS5UcmFuc2Zvcm1EYXRhLHRoaXMudHJhbnNsYXRlWD1uZXcgZS5UcmFuc2Zvcm1EYXRhLHRoaXMudHJhbnNsYXRlWT1uZXcgZS5UcmFuc2Zvcm1EYXRhLHRoaXMudHJhbnNsYXRlWj1uZXcgZS5UcmFuc2Zvcm1EYXRhLHRoaXMucm90YXRlWD1uZXcgZS5UcmFuc2Zvcm1EYXRhLHRoaXMucm90YXRlWT1uZXcgZS5UcmFuc2Zvcm1EYXRhLHRoaXMucm90YXRlWj1uZXcgZS5UcmFuc2Zvcm1EYXRhLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuU3R5bGVEYXRhKSxlLlN0eWxlRGF0YS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLlN0eWxlRGF0YS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5TdHlsZURhdGEsZS5UcmFuc2Zvcm1EYXRhPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLnZhbHVlPTAsdGhpcy51bml0PVwiXCIsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5UcmFuc2Zvcm1EYXRhKSxlLlRyYW5zZm9ybURhdGEucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5UcmFuc2Zvcm1EYXRhLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLlRyYW5zZm9ybURhdGEsZS5UcmFuc2Zvcm1EZWZhdWx0cz1mdW5jdGlvbigpe2UuU3R5bGVEYXRhLmFwcGx5KHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5zY2FsZS52YWx1ZT0uMDEsdGhpcy5zY2FsZS51bml0PVwiXCIsdGhpcy50cmFuc2xhdGVYLnZhbHVlPTIwLHRoaXMudHJhbnNsYXRlWC51bml0PVwicHhcIix0aGlzLnRyYW5zbGF0ZVkudmFsdWU9MjAsdGhpcy50cmFuc2xhdGVZLnVuaXQ9XCJweFwiLHRoaXMudHJhbnNsYXRlWi52YWx1ZT0yMCx0aGlzLnRyYW5zbGF0ZVoudW5pdD1cInB4XCIsdGhpcy5yb3RhdGVYLnZhbHVlPTkwLHRoaXMucm90YXRlWC51bml0PVwiZGVnXCIsdGhpcy5yb3RhdGVZLnZhbHVlPTkwLHRoaXMucm90YXRlWS51bml0PVwiZGVnXCIsdGhpcy5yb3RhdGVYLnZhbHVlPTkwLHRoaXMucm90YXRlWC51bml0PVwiZGVnXCIsdGhpcy5yb3RhdGVaLnZhbHVlPTE4MCx0aGlzLnJvdGF0ZVoudW5pdD1cImRlZ1wiLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuVHJhbnNmb3JtRGVmYXVsdHMpLGUuVHJhbnNmb3JtRGVmYXVsdHMucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5TdHlsZURhdGEucHJvdG90eXBlKSxlLlRyYW5zZm9ybURlZmF1bHRzLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLlRyYW5zZm9ybURlZmF1bHRzLGUudHJhbnNmb3JtRGVmYXVsdHM9bmV3IGUuVHJhbnNmb3JtRGVmYXVsdHMsZS5FdmVudERldGFpbD1mdW5jdGlvbigpe3RoaXMuc3RhdGU9bnVsbCx0aGlzLmZ1dHVyZVN0YXRlPW51bGwsdGhpcy5pbnN0YW5jZT1udWxsLHRoaXMub3JpZ2luYWxFdmVudD1udWxsfSxlLkV2ZW50cz1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5taXhTdGFydD1udWxsLHRoaXMubWl4QnVzeT1udWxsLHRoaXMubWl4RW5kPW51bGwsdGhpcy5taXhGYWlsPW51bGwsdGhpcy5taXhDbGljaz1udWxsLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuRXZlbnRzKSxlLkV2ZW50cy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkV2ZW50cy5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5FdmVudHMsZS5FdmVudHMucHJvdG90eXBlLmZpcmU9ZnVuY3Rpb24odCxhLGksbyl7dmFyIHI9dGhpcyxzPW51bGwsbD1uZXcgZS5FdmVudERldGFpbDtpZihyLmNhbGxBY3Rpb25zKFwiYmVmb3JlRmlyZVwiLGFyZ3VtZW50cyksXCJ1bmRlZmluZWRcIj09dHlwZW9mIHJbdF0pdGhyb3cgbmV3IEVycm9yKCdFdmVudCB0eXBlIFwiJyt0KydcIiBub3QgZm91bmQuJyk7bC5zdGF0ZT1uZXcgZS5TdGF0ZSxuLmV4dGVuZChsLnN0YXRlLGkuc3RhdGUpLGkuZnV0dXJlU3RhdGUmJihsLmZ1dHVyZVN0YXRlPW5ldyBlLlN0YXRlLG4uZXh0ZW5kKGwuZnV0dXJlU3RhdGUsaS5mdXR1cmVTdGF0ZSkpLGwuaW5zdGFuY2U9aS5pbnN0YW5jZSxpLm9yaWdpbmFsRXZlbnQmJihsLm9yaWdpbmFsRXZlbnQ9aS5vcmlnaW5hbEV2ZW50KSxzPW4uZ2V0Q3VzdG9tRXZlbnQodCxsLG8pLHIuY2FsbEZpbHRlcnMoXCJldmVudEZpcmVcIixzLGFyZ3VtZW50cyksYS5kaXNwYXRjaEV2ZW50KHMpfSxlLmV2ZW50cz1uZXcgZS5FdmVudHMsZS5RdWV1ZUl0ZW09ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMuYXJncz1bXSx0aGlzLmluc3RydWN0aW9uPW51bGwsdGhpcy50cmlnZ2VyRWxlbWVudD1udWxsLHRoaXMuZGVmZXJyZWQ9bnVsbCx0aGlzLmlzVG9nZ2xpbmc9ITEsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5RdWV1ZUl0ZW0pLGUuUXVldWVJdGVtLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuUXVldWVJdGVtLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLlF1ZXVlSXRlbSxlLk1peGVyPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLmNvbmZpZz1uZXcgZS5Db25maWcsdGhpcy5pZD1cIlwiLHRoaXMuaXNCdXN5PSExLHRoaXMuaXNUb2dnbGluZz0hMSx0aGlzLmluY1BhZGRpbmc9ITAsdGhpcy5jb250cm9scz1bXSx0aGlzLnRhcmdldHM9W10sdGhpcy5vcmlnT3JkZXI9W10sdGhpcy5jYWNoZT17fSx0aGlzLnRvZ2dsZUFycmF5PVtdLHRoaXMudGFyZ2V0c01vdmVkPTAsdGhpcy50YXJnZXRzSW1tb3ZhYmxlPTAsdGhpcy50YXJnZXRzQm91bmQ9MCx0aGlzLnRhcmdldHNEb25lPTAsdGhpcy5zdGFnZ2VyRHVyYXRpb249MCx0aGlzLmVmZmVjdHNJbj1udWxsLHRoaXMuZWZmZWN0c091dD1udWxsLHRoaXMudHJhbnNmb3JtSW49W10sdGhpcy50cmFuc2Zvcm1PdXQ9W10sdGhpcy5xdWV1ZT1bXSx0aGlzLnN0YXRlPW51bGwsdGhpcy5sYXN0T3BlcmF0aW9uPW51bGwsXG50aGlzLmxhc3RDbGlja2VkPW51bGwsdGhpcy51c2VyQ2FsbGJhY2s9bnVsbCx0aGlzLnVzZXJEZWZlcnJlZD1udWxsLHRoaXMuZG9tPW5ldyBlLk1peGVyRG9tLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuTWl4ZXIpLGUuTWl4ZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksbi5leHRlbmQoZS5NaXhlci5wcm90b3R5cGUse2NvbnN0cnVjdG9yOmUuTWl4ZXIsYXR0YWNoOmZ1bmN0aW9uKGEsaSxvLHIpe3ZhciBzPXRoaXMsbD1udWxsLGM9LTE7Zm9yKHMuY2FsbEFjdGlvbnMoXCJiZWZvcmVBdHRhY2hcIixhcmd1bWVudHMpLHMuaWQ9byxyJiZuLmV4dGVuZChzLmNvbmZpZyxyLCEwLCEwKSxzLnNhbml0aXplQ29uZmlnKCkscy5jYWNoZURvbShhLGkpLHMuY29uZmlnLmxheW91dC5jb250YWluZXJDbGFzc05hbWUmJm4uYWRkQ2xhc3Mocy5kb20uY29udGFpbmVyLHMuY29uZmlnLmxheW91dC5jb250YWluZXJDbGFzc05hbWUpLGUuZmVhdHVyZXMuaGFzLnRyYW5zaXRpb25zfHwocy5jb25maWcuYW5pbWF0aW9uLmVuYWJsZT0hMSksXCJ1bmRlZmluZWRcIj09dHlwZW9mIHQuY29uc29sZSYmKHMuY29uZmlnLmRlYnVnLnNob3dXYXJuaW5ncz0hMSkscy5jb25maWcuZGF0YS51aWRLZXkmJihzLmNvbmZpZy5jb250cm9scy5lbmFibGU9ITEpLHMuaW5kZXhUYXJnZXRzKCkscy5zdGF0ZT1zLmdldEluaXRpYWxTdGF0ZSgpLGM9MDtsPXMubGFzdE9wZXJhdGlvbi50b0hpZGVbY107YysrKWwuaGlkZSgpO3MuY29uZmlnLmNvbnRyb2xzLmVuYWJsZSYmKHMuaW5pdENvbnRyb2xzKCkscy5idWlsZFRvZ2dsZUFycmF5KG51bGwscy5zdGF0ZSkscy51cGRhdGVDb250cm9scyh7ZmlsdGVyOnMuc3RhdGUuYWN0aXZlRmlsdGVyLHNvcnQ6cy5zdGF0ZS5hY3RpdmVTb3J0fSkpLHMucGFyc2VFZmZlY3RzKCkscy5jYWxsQWN0aW9ucyhcImFmdGVyQXR0YWNoXCIsYXJndW1lbnRzKX0sc2FuaXRpemVDb25maWc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuY2FsbEFjdGlvbnMoXCJiZWZvcmVTYW5pdGl6ZUNvbmZpZ1wiLGFyZ3VtZW50cyksdC5jb25maWcuY29udHJvbHMuc2NvcGU9dC5jb25maWcuY29udHJvbHMuc2NvcGUudG9Mb3dlckNhc2UoKS50cmltKCksdC5jb25maWcuY29udHJvbHMudG9nZ2xlTG9naWM9dC5jb25maWcuY29udHJvbHMudG9nZ2xlTG9naWMudG9Mb3dlckNhc2UoKS50cmltKCksdC5jb25maWcuY29udHJvbHMudG9nZ2xlRGVmYXVsdD10LmNvbmZpZy5jb250cm9scy50b2dnbGVEZWZhdWx0LnRvTG93ZXJDYXNlKCkudHJpbSgpLHQuY29uZmlnLmFuaW1hdGlvbi5lZmZlY3RzPXQuY29uZmlnLmFuaW1hdGlvbi5lZmZlY3RzLnRyaW0oKSx0LmNhbGxBY3Rpb25zKFwiYWZ0ZXJTYW5pdGl6ZUNvbmZpZ1wiLGFyZ3VtZW50cyl9LGdldEluaXRpYWxTdGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsbj1uZXcgZS5TdGF0ZSxhPW5ldyBlLk9wZXJhdGlvbjtpZih0LmNhbGxBY3Rpb25zKFwiYmVmb3JlR2V0SW5pdGlhbFN0YXRlXCIsYXJndW1lbnRzKSxuLmFjdGl2ZUNvbnRhaW5lckNsYXNzTmFtZT10LmNvbmZpZy5sYXlvdXQuY29udGFpbmVyQ2xhc3NOYW1lLHQuY29uZmlnLmxvYWQuZGF0YXNldCl7aWYoIXQuY29uZmlnLmRhdGEudWlkS2V5fHxcInN0cmluZ1wiIT10eXBlb2YgdC5jb25maWcuZGF0YS51aWRLZXkpdGhyb3cgbmV3IFR5cGVFcnJvcihlLm1lc3NhZ2VzLmVycm9yQ29uZmlnRGF0YVVpZEtleU5vdFNldCgpKTthLnN0YXJ0RGF0YXNldD1hLm5ld0RhdGFzZXQ9bi5hY3RpdmVEYXRhc2V0PXQuY29uZmlnLmxvYWQuZGF0YXNldC5zbGljZSgpLGEuc3RhcnRDb250YWluZXJDbGFzc05hbWU9YS5uZXdDb250YWluZXJDbGFzc05hbWU9bi5hY3RpdmVDb250YWluZXJDbGFzc05hbWUsYS5zaG93PXQudGFyZ2V0cy5zbGljZSgpLG49dC5jYWxsRmlsdGVycyhcInN0YXRlR2V0SW5pdGlhbFN0YXRlXCIsbixhcmd1bWVudHMpfWVsc2Ugbi5hY3RpdmVGaWx0ZXI9dC5wYXJzZUZpbHRlckFyZ3MoW3QuY29uZmlnLmxvYWQuZmlsdGVyXSkuY29tbWFuZCxuLmFjdGl2ZVNvcnQ9dC5wYXJzZVNvcnRBcmdzKFt0LmNvbmZpZy5sb2FkLnNvcnRdKS5jb21tYW5kLG4udG90YWxUYXJnZXRzPXQudGFyZ2V0cy5sZW5ndGgsbj10LmNhbGxGaWx0ZXJzKFwic3RhdGVHZXRJbml0aWFsU3RhdGVcIixuLGFyZ3VtZW50cyksbi5hY3RpdmVTb3J0LmNvbGxlY3Rpb258fG4uYWN0aXZlU29ydC5hdHRyaWJ1dGV8fFwicmFuZG9tXCI9PT1uLmFjdGl2ZVNvcnQub3JkZXJ8fFwiZGVzY1wiPT09bi5hY3RpdmVTb3J0Lm9yZGVyPyhhLm5ld1NvcnQ9bi5hY3RpdmVTb3J0LHQuc29ydE9wZXJhdGlvbihhKSx0LnByaW50U29ydCghMSxhKSx0LnRhcmdldHM9YS5uZXdPcmRlcik6YS5zdGFydE9yZGVyPWEubmV3T3JkZXI9dC50YXJnZXRzLGEuc3RhcnRGaWx0ZXI9YS5uZXdGaWx0ZXI9bi5hY3RpdmVGaWx0ZXIsYS5zdGFydFNvcnQ9YS5uZXdTb3J0PW4uYWN0aXZlU29ydCxhLnN0YXJ0Q29udGFpbmVyQ2xhc3NOYW1lPWEubmV3Q29udGFpbmVyQ2xhc3NOYW1lPW4uYWN0aXZlQ29udGFpbmVyQ2xhc3NOYW1lLFwiYWxsXCI9PT1hLm5ld0ZpbHRlci5zZWxlY3Rvcj9hLm5ld0ZpbHRlci5zZWxlY3Rvcj10LmNvbmZpZy5zZWxlY3RvcnMudGFyZ2V0Olwibm9uZVwiPT09YS5uZXdGaWx0ZXIuc2VsZWN0b3ImJihhLm5ld0ZpbHRlci5zZWxlY3Rvcj1cIlwiKTtyZXR1cm4gYT10LmNhbGxGaWx0ZXJzKFwib3BlcmF0aW9uR2V0SW5pdGlhbFN0YXRlXCIsYSxbbl0pLHQubGFzdE9wZXJhdGlvbj1hLGEubmV3RmlsdGVyJiZ0LmZpbHRlck9wZXJhdGlvbihhKSxuPXQuYnVpbGRTdGF0ZShhKX0sY2FjaGVEb206ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO24uY2FsbEFjdGlvbnMoXCJiZWZvcmVDYWNoZURvbVwiLGFyZ3VtZW50cyksbi5kb20uZG9jdW1lbnQ9ZSxuLmRvbS5ib2R5PW4uZG9tLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpLG4uZG9tLmNvbnRhaW5lcj10LG4uZG9tLnBhcmVudD10LG4uY2FsbEFjdGlvbnMoXCJhZnRlckNhY2hlRG9tXCIsYXJndW1lbnRzKX0saW5kZXhUYXJnZXRzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxhPW51bGwsaT1udWxsLG89bnVsbCxyPS0xO2lmKHQuY2FsbEFjdGlvbnMoXCJiZWZvcmVJbmRleFRhcmdldHNcIixhcmd1bWVudHMpLHQuZG9tLnRhcmdldHM9dC5jb25maWcubGF5b3V0LmFsbG93TmVzdGVkVGFyZ2V0cz90LmRvbS5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCh0LmNvbmZpZy5zZWxlY3RvcnMudGFyZ2V0KTpuLmNoaWxkcmVuKHQuZG9tLmNvbnRhaW5lcix0LmNvbmZpZy5zZWxlY3RvcnMudGFyZ2V0LHQuZG9tLmRvY3VtZW50KSx0LmRvbS50YXJnZXRzPW4uYXJyYXlGcm9tTGlzdCh0LmRvbS50YXJnZXRzKSx0LnRhcmdldHM9W10sKG89dC5jb25maWcubG9hZC5kYXRhc2V0KSYmby5sZW5ndGghPT10LmRvbS50YXJnZXRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoZS5tZXNzYWdlcy5lcnJvckRhdGFzZXRQcmVyZW5kZXJlZE1pc21hdGNoKCkpO2lmKHQuZG9tLnRhcmdldHMubGVuZ3RoKXtmb3Iocj0wO2k9dC5kb20udGFyZ2V0c1tyXTtyKyspYT1uZXcgZS5UYXJnZXQsYS5pbml0KGksdCxvP29bcl06dm9pZCAwKSxhLmlzSW5Eb209ITAsdC50YXJnZXRzLnB1c2goYSk7dC5kb20ucGFyZW50PXQuZG9tLnRhcmdldHNbMF0ucGFyZW50RWxlbWVudD09PXQuZG9tLmNvbnRhaW5lcj90LmRvbS5jb250YWluZXI6dC5kb20udGFyZ2V0c1swXS5wYXJlbnRFbGVtZW50fXQub3JpZ09yZGVyPXQudGFyZ2V0cyx0LmNhbGxBY3Rpb25zKFwiYWZ0ZXJJbmRleFRhcmdldHNcIixhcmd1bWVudHMpfSxpbml0Q29udHJvbHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLG49XCJcIixhPW51bGwsaT1udWxsLG89bnVsbCxyPW51bGwscz1udWxsLGw9LTEsYz0tMTtzd2l0Y2godC5jYWxsQWN0aW9ucyhcImJlZm9yZUluaXRDb250cm9sc1wiLGFyZ3VtZW50cyksdC5jb25maWcuY29udHJvbHMuc2NvcGUpe2Nhc2VcImxvY2FsXCI6bz10LmRvbS5jb250YWluZXI7YnJlYWs7Y2FzZVwiZ2xvYmFsXCI6bz10LmRvbS5kb2N1bWVudDticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihlLm1lc3NhZ2VzLmVycm9yQ29uZmlnSW52YWxpZENvbnRyb2xzU2NvcGUoKSl9Zm9yKGw9MDtuPWUuY29udHJvbERlZmluaXRpb25zW2xdO2wrKylpZih0LmNvbmZpZy5jb250cm9scy5saXZlfHxuLmxpdmUpe2lmKG4ucGFyZW50KXtpZihyPXQuZG9tW24ucGFyZW50XSwhcnx8ci5sZW5ndGg8MCljb250aW51ZTtcIm51bWJlclwiIT10eXBlb2Ygci5sZW5ndGgmJihyPVtyXSl9ZWxzZSByPVtvXTtmb3IoYz0wO2k9cltjXTtjKyspcz10LmdldENvbnRyb2woaSxuLnR5cGUsbi5zZWxlY3RvciksdC5jb250cm9scy5wdXNoKHMpfWVsc2UgZm9yKGE9by5xdWVyeVNlbGVjdG9yQWxsKHQuY29uZmlnLnNlbGVjdG9ycy5jb250cm9sK24uc2VsZWN0b3IpLGM9MDtpPWFbY107YysrKXM9dC5nZXRDb250cm9sKGksbi50eXBlLFwiXCIpLHMmJnQuY29udHJvbHMucHVzaChzKTt0LmNhbGxBY3Rpb25zKFwiYWZ0ZXJJbml0Q29udHJvbHNcIixhcmd1bWVudHMpfSxnZXRDb250cm9sOmZ1bmN0aW9uKHQsYSxpKXt2YXIgbz10aGlzLHI9bnVsbCxzPS0xO2lmKG8uY2FsbEFjdGlvbnMoXCJiZWZvcmVHZXRDb250cm9sXCIsYXJndW1lbnRzKSwhaSlmb3Iocz0wO3I9ZS5jb250cm9sc1tzXTtzKyspe2lmKHIuZWw9PT10JiZyLmlzQm91bmQobykpcmV0dXJuIG8uY2FsbEZpbHRlcnMoXCJjb250cm9sR2V0Q29udHJvbFwiLG51bGwsYXJndW1lbnRzKTtpZihyLmVsPT09dCYmci50eXBlPT09YSYmci5zZWxlY3Rvcj09PWkpcmV0dXJuIHIuYWRkQmluZGluZyhvKSxvLmNhbGxGaWx0ZXJzKFwiY29udHJvbEdldENvbnRyb2xcIixyLGFyZ3VtZW50cyl9cmV0dXJuIHI9bmV3IGUuQ29udHJvbCxyLmluaXQodCxhLGkpLHIuY2xhc3NOYW1lcy5iYXNlPW4uZ2V0Q2xhc3NuYW1lKG8uY29uZmlnLmNsYXNzTmFtZXMsYSksci5jbGFzc05hbWVzLmFjdGl2ZT1uLmdldENsYXNzbmFtZShvLmNvbmZpZy5jbGFzc05hbWVzLGEsby5jb25maWcuY2xhc3NOYW1lcy5tb2RpZmllckFjdGl2ZSksci5jbGFzc05hbWVzLmRpc2FibGVkPW4uZ2V0Q2xhc3NuYW1lKG8uY29uZmlnLmNsYXNzTmFtZXMsYSxvLmNvbmZpZy5jbGFzc05hbWVzLm1vZGlmaWVyRGlzYWJsZWQpLHIuYWRkQmluZGluZyhvKSxvLmNhbGxGaWx0ZXJzKFwiY29udHJvbEdldENvbnRyb2xcIixyLGFyZ3VtZW50cyl9LGdldFRvZ2dsZVNlbGVjdG9yOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPVwib3JcIj09PXQuY29uZmlnLmNvbnRyb2xzLnRvZ2dsZUxvZ2ljP1wiLCBcIjpcIlwiLGE9XCJcIjtyZXR1cm4gdC5jYWxsQWN0aW9ucyhcImJlZm9yZUdldFRvZ2dsZVNlbGVjdG9yXCIsYXJndW1lbnRzKSx0LnRvZ2dsZUFycmF5PW4uY2xlYW4odC50b2dnbGVBcnJheSksYT10LnRvZ2dsZUFycmF5LmpvaW4oZSksXCJcIj09PWEmJihhPXQuY29uZmlnLmNvbnRyb2xzLnRvZ2dsZURlZmF1bHQpLHQuY2FsbEZpbHRlcnMoXCJzZWxlY3RvckdldFRvZ2dsZVNlbGVjdG9yXCIsYSxhcmd1bWVudHMpfSxidWlsZFRvZ2dsZUFycmF5OmZ1bmN0aW9uKHQsZSl7dmFyIGE9dGhpcyxpPVwiXCI7aWYoYS5jYWxsQWN0aW9ucyhcImJlZm9yZUJ1aWxkVG9nZ2xlQXJyYXlcIixhcmd1bWVudHMpLHQmJnQuZmlsdGVyKWk9dC5maWx0ZXIuc2VsZWN0b3IucmVwbGFjZSgvXFxzL2csXCJcIik7ZWxzZXtpZighZSlyZXR1cm47aT1lLmFjdGl2ZUZpbHRlci5zZWxlY3Rvci5yZXBsYWNlKC9cXHMvZyxcIlwiKX1pIT09YS5jb25maWcuc2VsZWN0b3JzLnRhcmdldCYmXCJhbGxcIiE9PWl8fChpPVwiXCIpLFwib3JcIj09PWEuY29uZmlnLmNvbnRyb2xzLnRvZ2dsZUxvZ2ljP2EudG9nZ2xlQXJyYXk9aS5zcGxpdChcIixcIik6YS50b2dnbGVBcnJheT1hLnNwbGl0Q29tcG91bmRTZWxlY3RvcihpKSxhLnRvZ2dsZUFycmF5PW4uY2xlYW4oYS50b2dnbGVBcnJheSksYS5jYWxsQWN0aW9ucyhcImFmdGVyQnVpbGRUb2dnbGVBcnJheVwiLGFyZ3VtZW50cyl9LHNwbGl0Q29tcG91bmRTZWxlY3RvcjpmdW5jdGlvbih0KXt2YXIgZT10LnNwbGl0KC8oW1xcLlxcW10pL2cpLG49W10sYT1cIlwiLGk9LTE7Zm9yKFwiXCI9PT1lWzBdJiZlLnNoaWZ0KCksaT0wO2k8ZS5sZW5ndGg7aSsrKWklMj09PTAmJihhPVwiXCIpLGErPWVbaV0saSUyIT09MCYmbi5wdXNoKGEpO3JldHVybiBufSx1cGRhdGVDb250cm9sczpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9bnVsbCxvPW5ldyBlLkNvbW1hbmRNdWx0aW1peCxyPS0xO2ZvcihhLmNhbGxBY3Rpb25zKFwiYmVmb3JlVXBkYXRlQ29udHJvbHNcIixhcmd1bWVudHMpLHQuZmlsdGVyP28uZmlsdGVyPXQuZmlsdGVyLnNlbGVjdG9yOm8uZmlsdGVyPWEuc3RhdGUuYWN0aXZlRmlsdGVyLnNlbGVjdG9yLHQuc29ydD9vLnNvcnQ9YS5idWlsZFNvcnRTdHJpbmcodC5zb3J0KTpvLnNvcnQ9YS5idWlsZFNvcnRTdHJpbmcoYS5zdGF0ZS5hY3RpdmVTb3J0KSxvLmZpbHRlcj09PWEuY29uZmlnLnNlbGVjdG9ycy50YXJnZXQmJihvLmZpbHRlcj1cImFsbFwiKSxcIlwiPT09by5maWx0ZXImJihvLmZpbHRlcj1cIm5vbmVcIiksbi5mcmVlemUobykscj0wO2k9YS5jb250cm9sc1tyXTtyKyspaS51cGRhdGUobyxhLnRvZ2dsZUFycmF5KTthLmNhbGxBY3Rpb25zKFwiYWZ0ZXJVcGRhdGVDb250cm9sc1wiLGFyZ3VtZW50cyl9LGJ1aWxkU29ydFN0cmluZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49XCJcIjtyZXR1cm4gbis9dC5zb3J0U3RyaW5nLHQubmV4dCYmKG4rPVwiIFwiK2UuYnVpbGRTb3J0U3RyaW5nKHQubmV4dCkpLG59LGluc2VydFRhcmdldHM6ZnVuY3Rpb24odCxhKXt2YXIgaT10aGlzLG89bnVsbCxyPS0xLHM9bnVsbCxsPW51bGwsYz1udWxsLHU9LTE7aWYoaS5jYWxsQWN0aW9ucyhcImJlZm9yZUluc2VydFRhcmdldHNcIixhcmd1bWVudHMpLFwidW5kZWZpbmVkXCI9PXR5cGVvZiB0LmluZGV4JiYodC5pbmRleD0wKSxvPWkuZ2V0TmV4dFNpYmxpbmcodC5pbmRleCx0LnNpYmxpbmcsdC5wb3NpdGlvbikscz1pLmRvbS5kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkscj1vP24uaW5kZXgobyxpLmNvbmZpZy5zZWxlY3RvcnMudGFyZ2V0KTppLnRhcmdldHMubGVuZ3RoLHQuY29sbGVjdGlvbil7Zm9yKHU9MDtjPXQuY29sbGVjdGlvblt1XTt1Kyspe2lmKGkuZG9tLnRhcmdldHMuaW5kZXhPZihjKT4tMSl0aHJvdyBuZXcgRXJyb3IoZS5tZXNzYWdlcy5lcnJvckluc2VydFByZWV4aXN0aW5nRWxlbWVudCgpKTtjLnN0eWxlLmRpc3BsYXk9XCJub25lXCIscy5hcHBlbmRDaGlsZChjKSxzLmFwcGVuZENoaWxkKGkuZG9tLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiIFwiKSksbi5pc0VsZW1lbnQoYyxpLmRvbS5kb2N1bWVudCkmJmMubWF0Y2hlcyhpLmNvbmZpZy5zZWxlY3RvcnMudGFyZ2V0KSYmKGw9bmV3IGUuVGFyZ2V0LGwuaW5pdChjLGkpLGwuaXNJbkRvbT0hMCxpLnRhcmdldHMuc3BsaWNlKHIsMCxsKSxyKyspfWkuZG9tLnBhcmVudC5pbnNlcnRCZWZvcmUocyxvKX1hLnN0YXJ0T3JkZXI9aS5vcmlnT3JkZXI9aS50YXJnZXRzLGkuY2FsbEFjdGlvbnMoXCJhZnRlckluc2VydFRhcmdldHNcIixhcmd1bWVudHMpfSxnZXROZXh0U2libGluZzpmdW5jdGlvbih0LGUsbil7dmFyIGE9dGhpcyxpPW51bGw7cmV0dXJuIHQ9TWF0aC5tYXgodCwwKSxlJiZcImJlZm9yZVwiPT09bj9pPWU6ZSYmXCJhZnRlclwiPT09bj9pPWUubmV4dEVsZW1lbnRTaWJsaW5nfHxudWxsOmEudGFyZ2V0cy5sZW5ndGg+MCYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHQ/aT10PGEudGFyZ2V0cy5sZW5ndGh8fCFhLnRhcmdldHMubGVuZ3RoP2EudGFyZ2V0c1t0XS5kb20uZWw6YS50YXJnZXRzW2EudGFyZ2V0cy5sZW5ndGgtMV0uZG9tLmVsLm5leHRFbGVtZW50U2libGluZzowPT09YS50YXJnZXRzLmxlbmd0aCYmYS5kb20ucGFyZW50LmNoaWxkcmVuLmxlbmd0aD4wJiYoYS5jb25maWcubGF5b3V0LnNpYmxpbmdBZnRlcj9pPWEuY29uZmlnLmxheW91dC5zaWJsaW5nQWZ0ZXI6YS5jb25maWcubGF5b3V0LnNpYmxpbmdCZWZvcmU/aT1hLmNvbmZpZy5sYXlvdXQuc2libGluZ0JlZm9yZS5uZXh0RWxlbWVudFNpYmxpbmc6YS5kb20ucGFyZW50LmNoaWxkcmVuWzBdKSxhLmNhbGxGaWx0ZXJzKFwiZWxlbWVudEdldE5leHRTaWJsaW5nXCIsaSxhcmd1bWVudHMpfSxmaWx0ZXJPcGVyYXRpb246ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPSExLGE9LTEsaT1cIlwiLG89bnVsbCxyPS0xO2ZvcihlLmNhbGxBY3Rpb25zKFwiYmVmb3JlRmlsdGVyT3BlcmF0aW9uXCIsYXJndW1lbnRzKSxpPXQubmV3RmlsdGVyLmFjdGlvbixyPTA7bz10Lm5ld09yZGVyW3JdO3IrKyluPXQubmV3RmlsdGVyLmNvbGxlY3Rpb24/dC5uZXdGaWx0ZXIuY29sbGVjdGlvbi5pbmRleE9mKG8uZG9tLmVsKT4tMTpcIlwiIT09dC5uZXdGaWx0ZXIuc2VsZWN0b3ImJm8uZG9tLmVsLm1hdGNoZXModC5uZXdGaWx0ZXIuc2VsZWN0b3IpLGUuZXZhbHVhdGVIaWRlU2hvdyhuLG8saSx0KTtpZih0LnRvUmVtb3ZlLmxlbmd0aClmb3Iocj0wO289dC5zaG93W3JdO3IrKyl0LnRvUmVtb3ZlLmluZGV4T2Yobyk+LTEmJih0LnNob3cuc3BsaWNlKHIsMSksKGE9dC50b1Nob3cuaW5kZXhPZihvKSk+LTEmJnQudG9TaG93LnNwbGljZShhLDEpLHQudG9IaWRlLnB1c2gobyksdC5oaWRlLnB1c2gobyksci0tKTt0Lm1hdGNoaW5nPXQuc2hvdy5zbGljZSgpLDA9PT10LnNob3cubGVuZ3RoJiZcIlwiIT09dC5uZXdGaWx0ZXIuc2VsZWN0b3ImJjAhPT1lLnRhcmdldHMubGVuZ3RoJiYodC5oYXNGYWlsZWQ9ITApLGUuY2FsbEFjdGlvbnMoXCJhZnRlckZpbHRlck9wZXJhdGlvblwiLGFyZ3VtZW50cyl9LGV2YWx1YXRlSGlkZVNob3c6ZnVuY3Rpb24odCxlLG4sYSl7dmFyIGk9dGhpcyxvPSExLHI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO289aS5jYWxsRmlsdGVycyhcInRlc3RSZXN1bHRFdmFsdWF0ZUhpZGVTaG93XCIsdCxyKSxpLmNhbGxBY3Rpb25zKFwiYmVmb3JlRXZhbHVhdGVIaWRlU2hvd1wiLGFyZ3VtZW50cyksbz09PSEwJiZcInNob3dcIj09PW58fG89PT0hMSYmXCJoaWRlXCI9PT1uPyhhLnNob3cucHVzaChlKSwhZS5pc1Nob3duJiZhLnRvU2hvdy5wdXNoKGUpKTooYS5oaWRlLnB1c2goZSksZS5pc1Nob3duJiZhLnRvSGlkZS5wdXNoKGUpKSxpLmNhbGxBY3Rpb25zKFwiYWZ0ZXJFdmFsdWF0ZUhpZGVTaG93XCIsYXJndW1lbnRzKX0sc29ydE9wZXJhdGlvbjpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9W10sbz1udWxsLHI9bnVsbCxzPS0xO2lmKGEuY2FsbEFjdGlvbnMoXCJiZWZvcmVTb3J0T3BlcmF0aW9uXCIsYXJndW1lbnRzKSx0LnN0YXJ0T3JkZXI9YS50YXJnZXRzLHQubmV3U29ydC5jb2xsZWN0aW9uKXtmb3IoaT1bXSxzPTA7cj10Lm5ld1NvcnQuY29sbGVjdGlvbltzXTtzKyspe2lmKGEuZG9tLnRhcmdldHMuaW5kZXhPZihyKTwwKXRocm93IG5ldyBFcnJvcihlLm1lc3NhZ2VzLmVycm9yU29ydE5vbkV4aXN0ZW50RWxlbWVudCgpKTtvPW5ldyBlLlRhcmdldCxvLmluaXQocixhKSxvLmlzSW5Eb209ITAsaS5wdXNoKG8pfXQubmV3T3JkZXI9aX1lbHNlXCJyYW5kb21cIj09PXQubmV3U29ydC5vcmRlcj90Lm5ld09yZGVyPW4uYXJyYXlTaHVmZmxlKHQuc3RhcnRPcmRlcik6XCJcIj09PXQubmV3U29ydC5hdHRyaWJ1dGU/KHQubmV3T3JkZXI9YS5vcmlnT3JkZXIuc2xpY2UoKSxcImRlc2NcIj09PXQubmV3U29ydC5vcmRlciYmdC5uZXdPcmRlci5yZXZlcnNlKCkpOih0Lm5ld09yZGVyPXQuc3RhcnRPcmRlci5zbGljZSgpLHQubmV3T3JkZXIuc29ydChmdW5jdGlvbihlLG4pe3JldHVybiBhLmNvbXBhcmUoZSxuLHQubmV3U29ydCl9KSk7bi5pc0VxdWFsQXJyYXkodC5uZXdPcmRlcix0LnN0YXJ0T3JkZXIpJiYodC53aWxsU29ydD0hMSksYS5jYWxsQWN0aW9ucyhcImFmdGVyU29ydE9wZXJhdGlvblwiLGFyZ3VtZW50cyl9LGNvbXBhcmU6ZnVuY3Rpb24odCxlLG4pe3ZhciBhPXRoaXMsaT1uLm9yZGVyLG89YS5nZXRBdHRyaWJ1dGVWYWx1ZSh0LG4uYXR0cmlidXRlKSxyPWEuZ2V0QXR0cmlidXRlVmFsdWUoZSxuLmF0dHJpYnV0ZSk7cmV0dXJuIGlzTmFOKDEqbyl8fGlzTmFOKDEqcik/KG89by50b0xvd2VyQ2FzZSgpLHI9ci50b0xvd2VyQ2FzZSgpKToobz0xKm8scj0xKnIpLG88cj9cImFzY1wiPT09aT8tMToxOm8+cj9cImFzY1wiPT09aT8xOi0xOm89PT1yJiZuLm5leHQ/YS5jb21wYXJlKHQsZSxuLm5leHQpOjB9LGdldEF0dHJpYnV0ZVZhbHVlOmZ1bmN0aW9uKHQsbil7dmFyIGE9dGhpcyxpPVwiXCI7cmV0dXJuIGk9dC5kb20uZWwuZ2V0QXR0cmlidXRlKFwiZGF0YS1cIituKSxudWxsPT09aSYmYS5jb25maWcuZGVidWcuc2hvd1dhcm5pbmdzJiZjb25zb2xlLndhcm4oZS5tZXNzYWdlcy53YXJuaW5nSW5jb25zaXN0ZW50U29ydGluZ0F0dHJpYnV0ZXMoe2F0dHJpYnV0ZTpcImRhdGEtXCIrbn0pKSxhLmNhbGxGaWx0ZXJzKFwidmFsdWVHZXRBdHRyaWJ1dGVWYWx1ZVwiLGl8fDAsYXJndW1lbnRzKX0scHJpbnRTb3J0OmZ1bmN0aW9uKGUsYSl7dmFyIGk9dGhpcyxvPWU/YS5uZXdPcmRlcjphLnN0YXJ0T3JkZXIscj1lP2Euc3RhcnRPcmRlcjphLm5ld09yZGVyLHM9by5sZW5ndGg/b1tvLmxlbmd0aC0xXS5kb20uZWwubmV4dEVsZW1lbnRTaWJsaW5nOm51bGwsbD10LmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxjPW51bGwsdT1udWxsLGY9bnVsbCxoPS0xO2ZvcihpLmNhbGxBY3Rpb25zKFwiYmVmb3JlUHJpbnRTb3J0XCIsYXJndW1lbnRzKSxoPTA7dT1vW2hdO2grKylmPXUuZG9tLmVsLFwiYWJzb2x1dGVcIiE9PWYuc3R5bGUucG9zaXRpb24mJihuLnJlbW92ZVdoaXRlc3BhY2UoZi5wcmV2aW91c1NpYmxpbmcpLGYucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChmKSk7Zm9yKGM9cz9zLnByZXZpb3VzU2libGluZzppLmRvbS5wYXJlbnQubGFzdENoaWxkLGMmJlwiI3RleHRcIj09PWMubm9kZU5hbWUmJm4ucmVtb3ZlV2hpdGVzcGFjZShjKSxoPTA7dT1yW2hdO2grKylmPXUuZG9tLmVsLG4uaXNFbGVtZW50KGwubGFzdENoaWxkKSYmbC5hcHBlbmRDaGlsZCh0LmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiIFwiKSksbC5hcHBlbmRDaGlsZChmKTtpLmRvbS5wYXJlbnQuZmlyc3RDaGlsZCYmaS5kb20ucGFyZW50LmZpcnN0Q2hpbGQhPT1zJiZsLmluc2VydEJlZm9yZSh0LmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiIFwiKSxsLmNoaWxkTm9kZXNbMF0pLHM/KGwuYXBwZW5kQ2hpbGQodC5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIiBcIikpLGkuZG9tLnBhcmVudC5pbnNlcnRCZWZvcmUobCxzKSk6aS5kb20ucGFyZW50LmFwcGVuZENoaWxkKGwpLGkuY2FsbEFjdGlvbnMoXCJhZnRlclByaW50U29ydFwiLGFyZ3VtZW50cyl9LHBhcnNlU29ydFN0cmluZzpmdW5jdGlvbih0LGEpe3ZhciBpPXRoaXMsbz10LnNwbGl0KFwiIFwiKSxyPWEscz1bXSxsPS0xO2ZvcihsPTA7bDxvLmxlbmd0aDtsKyspe3N3aXRjaChzPW9bbF0uc3BsaXQoXCI6XCIpLHIuc29ydFN0cmluZz1vW2xdLHIuYXR0cmlidXRlPW4uZGFzaENhc2Uoc1swXSksci5vcmRlcj1zWzFdfHxcImFzY1wiLHIuYXR0cmlidXRlKXtjYXNlXCJkZWZhdWx0XCI6ci5hdHRyaWJ1dGU9XCJcIjticmVhaztjYXNlXCJyYW5kb21cIjpyLmF0dHJpYnV0ZT1cIlwiLHIub3JkZXI9XCJyYW5kb21cIn1pZighci5hdHRyaWJ1dGV8fFwicmFuZG9tXCI9PT1yLm9yZGVyKWJyZWFrO2w8by5sZW5ndGgtMSYmKHIubmV4dD1uZXcgZS5Db21tYW5kU29ydCxuLmZyZWV6ZShyKSxyPXIubmV4dCl9cmV0dXJuIGkuY2FsbEZpbHRlcnMoXCJjb21tYW5kc1BhcnNlU29ydFwiLGEsYXJndW1lbnRzKX0scGFyc2VFZmZlY3RzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxuPVwiXCIsYT10LmNvbmZpZy5hbmltYXRpb24uZWZmZWN0c0lufHx0LmNvbmZpZy5hbmltYXRpb24uZWZmZWN0cyxpPXQuY29uZmlnLmFuaW1hdGlvbi5lZmZlY3RzT3V0fHx0LmNvbmZpZy5hbmltYXRpb24uZWZmZWN0czt0LmNhbGxBY3Rpb25zKFwiYmVmb3JlUGFyc2VFZmZlY3RzXCIsYXJndW1lbnRzKSx0LmVmZmVjdHNJbj1uZXcgZS5TdHlsZURhdGEsdC5lZmZlY3RzT3V0PW5ldyBlLlN0eWxlRGF0YSx0LnRyYW5zZm9ybUluPVtdLHQudHJhbnNmb3JtT3V0PVtdLHQuZWZmZWN0c0luLm9wYWNpdHk9dC5lZmZlY3RzT3V0Lm9wYWNpdHk9MSx0LnBhcnNlRWZmZWN0KFwiZmFkZVwiLGEsdC5lZmZlY3RzSW4sdC50cmFuc2Zvcm1JbiksdC5wYXJzZUVmZmVjdChcImZhZGVcIixpLHQuZWZmZWN0c091dCx0LnRyYW5zZm9ybU91dCwhMCk7Zm9yKG4gaW4gZS50cmFuc2Zvcm1EZWZhdWx0cyllLnRyYW5zZm9ybURlZmF1bHRzW25daW5zdGFuY2VvZiBlLlRyYW5zZm9ybURhdGEmJih0LnBhcnNlRWZmZWN0KG4sYSx0LmVmZmVjdHNJbix0LnRyYW5zZm9ybUluKSx0LnBhcnNlRWZmZWN0KG4saSx0LmVmZmVjdHNPdXQsdC50cmFuc2Zvcm1PdXQsITApKTt0LnBhcnNlRWZmZWN0KFwic3RhZ2dlclwiLGEsdC5lZmZlY3RzSW4sdC50cmFuc2Zvcm1JbiksdC5wYXJzZUVmZmVjdChcInN0YWdnZXJcIixpLHQuZWZmZWN0c091dCx0LnRyYW5zZm9ybU91dCwhMCksdC5jYWxsQWN0aW9ucyhcImFmdGVyUGFyc2VFZmZlY3RzXCIsYXJndW1lbnRzKX0scGFyc2VFZmZlY3Q6ZnVuY3Rpb24odCxuLGEsaSxvKXt2YXIgcj10aGlzLHM9L1xcKChbXildKylcXCkvLGw9LTEsYz1cIlwiLHU9W10sZj1cIlwiLGg9W1wiJVwiLFwicHhcIixcImVtXCIsXCJyZW1cIixcInZoXCIsXCJ2d1wiLFwiZGVnXCJdLGQ9XCJcIixtPS0xO2lmKHIuY2FsbEFjdGlvbnMoXCJiZWZvcmVQYXJzZUVmZmVjdFwiLGFyZ3VtZW50cyksXCJzdHJpbmdcIiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcihlLm1lc3NhZ2VzLmVycm9yQ29uZmlnSW52YWxpZEFuaW1hdGlvbkVmZmVjdHMoKSk7aWYobi5pbmRleE9mKHQpPDApcmV0dXJuIHZvaWQoXCJzdGFnZ2VyXCI9PT10JiYoci5zdGFnZ2VyRHVyYXRpb249MCkpO3N3aXRjaChsPW4uaW5kZXhPZih0K1wiKFwiKSxsPi0xJiYoYz1uLnN1YnN0cmluZyhsKSx1PXMuZXhlYyhjKSxmPXVbMV0pLHQpe2Nhc2VcImZhZGVcIjphLm9wYWNpdHk9Zj9wYXJzZUZsb2F0KGYpOjA7YnJlYWs7Y2FzZVwic3RhZ2dlclwiOnIuc3RhZ2dlckR1cmF0aW9uPWY/cGFyc2VGbG9hdChmKToxMDA7YnJlYWs7ZGVmYXVsdDppZihvJiZyLmNvbmZpZy5hbmltYXRpb24ucmV2ZXJzZU91dCYmXCJzY2FsZVwiIT09dD9hW3RdLnZhbHVlPShmP3BhcnNlRmxvYXQoZik6ZS50cmFuc2Zvcm1EZWZhdWx0c1t0XS52YWx1ZSkqLTE6YVt0XS52YWx1ZT1mP3BhcnNlRmxvYXQoZik6ZS50cmFuc2Zvcm1EZWZhdWx0c1t0XS52YWx1ZSxmKXtmb3IobT0wO2Q9aFttXTttKyspaWYoZi5pbmRleE9mKGQpPi0xKXthW3RdLnVuaXQ9ZDticmVha319ZWxzZSBhW3RdLnVuaXQ9ZS50cmFuc2Zvcm1EZWZhdWx0c1t0XS51bml0O2kucHVzaCh0K1wiKFwiK2FbdF0udmFsdWUrYVt0XS51bml0K1wiKVwiKX1yLmNhbGxBY3Rpb25zKFwiYWZ0ZXJQYXJzZUVmZmVjdFwiLGFyZ3VtZW50cyl9LGJ1aWxkU3RhdGU6ZnVuY3Rpb24odCl7dmFyIG49dGhpcyxhPW5ldyBlLlN0YXRlLGk9bnVsbCxvPS0xO2ZvcihuLmNhbGxBY3Rpb25zKFwiYmVmb3JlQnVpbGRTdGF0ZVwiLGFyZ3VtZW50cyksbz0wO2k9bi50YXJnZXRzW29dO28rKykoIXQudG9SZW1vdmUubGVuZ3RofHx0LnRvUmVtb3ZlLmluZGV4T2YoaSk8MCkmJmEudGFyZ2V0cy5wdXNoKGkuZG9tLmVsKTtmb3Iobz0wO2k9dC5tYXRjaGluZ1tvXTtvKyspYS5tYXRjaGluZy5wdXNoKGkuZG9tLmVsKTtmb3Iobz0wO2k9dC5zaG93W29dO28rKylhLnNob3cucHVzaChpLmRvbS5lbCk7Zm9yKG89MDtpPXQuaGlkZVtvXTtvKyspKCF0LnRvUmVtb3ZlLmxlbmd0aHx8dC50b1JlbW92ZS5pbmRleE9mKGkpPDApJiZhLmhpZGUucHVzaChpLmRvbS5lbCk7cmV0dXJuIGEuaWQ9bi5pZCxhLmNvbnRhaW5lcj1uLmRvbS5jb250YWluZXIsYS5hY3RpdmVGaWx0ZXI9dC5uZXdGaWx0ZXIsYS5hY3RpdmVTb3J0PXQubmV3U29ydCxhLmFjdGl2ZURhdGFzZXQ9dC5uZXdEYXRhc2V0LGEuYWN0aXZlQ29udGFpbmVyQ2xhc3NOYW1lPXQubmV3Q29udGFpbmVyQ2xhc3NOYW1lLGEuaGFzRmFpbGVkPXQuaGFzRmFpbGVkLGEudG90YWxUYXJnZXRzPW4udGFyZ2V0cy5sZW5ndGgsYS50b3RhbFNob3c9dC5zaG93Lmxlbmd0aCxhLnRvdGFsSGlkZT10LmhpZGUubGVuZ3RoLGEudG90YWxNYXRjaGluZz10Lm1hdGNoaW5nLmxlbmd0aCxhLnRyaWdnZXJFbGVtZW50PXQudHJpZ2dlckVsZW1lbnQsbi5jYWxsRmlsdGVycyhcInN0YXRlQnVpbGRTdGF0ZVwiLGEsYXJndW1lbnRzKX0sZ29NaXg6ZnVuY3Rpb24oYSxpKXt2YXIgbz10aGlzLHI9bnVsbDtyZXR1cm4gby5jYWxsQWN0aW9ucyhcImJlZm9yZUdvTWl4XCIsYXJndW1lbnRzKSxvLmNvbmZpZy5hbmltYXRpb24uZHVyYXRpb24mJm8uY29uZmlnLmFuaW1hdGlvbi5lZmZlY3RzJiZuLmlzVmlzaWJsZShvLmRvbS5jb250YWluZXIpfHwoYT0hMSksaS50b1Nob3cubGVuZ3RofHxpLnRvSGlkZS5sZW5ndGh8fGkud2lsbFNvcnR8fGkud2lsbENoYW5nZUxheW91dHx8KGE9ITEpLGkuc3RhcnRTdGF0ZS5zaG93Lmxlbmd0aHx8aS5zaG93Lmxlbmd0aHx8KGE9ITEpLGUuZXZlbnRzLmZpcmUoXCJtaXhTdGFydFwiLG8uZG9tLmNvbnRhaW5lcix7c3RhdGU6aS5zdGFydFN0YXRlLGZ1dHVyZVN0YXRlOmkubmV3U3RhdGUsaW5zdGFuY2U6b30sby5kb20uZG9jdW1lbnQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG8uY29uZmlnLmNhbGxiYWNrcy5vbk1peFN0YXJ0JiZvLmNvbmZpZy5jYWxsYmFja3Mub25NaXhTdGFydC5jYWxsKG8uZG9tLmNvbnRhaW5lcixpLnN0YXJ0U3RhdGUsaS5uZXdTdGF0ZSxvKSxuLnJlbW92ZUNsYXNzKG8uZG9tLmNvbnRhaW5lcixuLmdldENsYXNzbmFtZShvLmNvbmZpZy5jbGFzc05hbWVzLFwiY29udGFpbmVyXCIsby5jb25maWcuY2xhc3NOYW1lcy5tb2RpZmllckZhaWxlZCkpLHI9by51c2VyRGVmZXJyZWQ/by51c2VyRGVmZXJyZWQ6by51c2VyRGVmZXJyZWQ9bi5kZWZlcihlLmxpYnJhcmllcyksby5pc0J1c3k9ITAsYSYmZS5mZWF0dXJlcy5oYXMudHJhbnNpdGlvbnM/KHQucGFnZVlPZmZzZXQhPT1pLmRvY1N0YXRlLnNjcm9sbFRvcCYmdC5zY3JvbGxUbyhpLmRvY1N0YXRlLnNjcm9sbExlZnQsaS5kb2NTdGF0ZS5zY3JvbGxUb3ApLG8uY29uZmlnLmFuaW1hdGlvbi5hcHBseVBlcnNwZWN0aXZlJiYoby5kb20ucGFyZW50LnN0eWxlW2UuZmVhdHVyZXMucGVyc3BlY3RpdmVQcm9wXT1vLmNvbmZpZy5hbmltYXRpb24ucGVyc3BlY3RpdmVEaXN0YW5jZSxvLmRvbS5wYXJlbnQuc3R5bGVbZS5mZWF0dXJlcy5wZXJzcGVjdGl2ZU9yaWdpblByb3BdPW8uY29uZmlnLmFuaW1hdGlvbi5wZXJzcGVjdGl2ZU9yaWdpbiksby5jb25maWcuYW5pbWF0aW9uLmFuaW1hdGVSZXNpemVDb250YWluZXImJmkuc3RhcnRIZWlnaHQhPT1pLm5ld0hlaWdodCYmaS52aWV3cG9ydERlbHRhWSE9PWkuc3RhcnRIZWlnaHQtaS5uZXdIZWlnaHQmJihvLmRvbS5wYXJlbnQuc3R5bGUuaGVpZ2h0PWkuc3RhcnRIZWlnaHQrXCJweFwiKSxvLmNvbmZpZy5hbmltYXRpb24uYW5pbWF0ZVJlc2l6ZUNvbnRhaW5lciYmaS5zdGFydFdpZHRoIT09aS5uZXdXaWR0aCYmaS52aWV3cG9ydERlbHRhWCE9PWkuc3RhcnRXaWR0aC1pLm5ld1dpZHRoJiYoby5kb20ucGFyZW50LnN0eWxlLndpZHRoPWkuc3RhcnRXaWR0aCtcInB4XCIpLGkuc3RhcnRIZWlnaHQ9PT1pLm5ld0hlaWdodCYmKG8uZG9tLnBhcmVudC5zdHlsZS5oZWlnaHQ9aS5zdGFydEhlaWdodCtcInB4XCIpLGkuc3RhcnRXaWR0aD09PWkubmV3V2lkdGgmJihvLmRvbS5wYXJlbnQuc3R5bGUud2lkdGg9aS5zdGFydFdpZHRoK1wicHhcIiksaS5zdGFydEhlaWdodD09PWkubmV3SGVpZ2h0JiZpLnN0YXJ0V2lkdGg9PT1pLm5ld1dpZHRoJiYoby5kb20ucGFyZW50LnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIpLHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe28ubW92ZVRhcmdldHMoaSl9KSxvLmNhbGxGaWx0ZXJzKFwicHJvbWlzZUdvTWl4XCIsci5wcm9taXNlLGFyZ3VtZW50cykpOihvLmNvbmZpZy5kZWJ1Zy5mYXV4QXN5bmM/c2V0VGltZW91dChmdW5jdGlvbigpe28uY2xlYW5VcChpKX0sby5jb25maWcuYW5pbWF0aW9uLmR1cmF0aW9uKTpvLmNsZWFuVXAoaSksby5jYWxsRmlsdGVycyhcInByb21pc2VHb01peFwiLHIucHJvbWlzZSxhcmd1bWVudHMpKX0sZ2V0U3RhcnRNaXhEYXRhOmZ1bmN0aW9uKG4pe3ZhciBhPXRoaXMsaT10LmdldENvbXB1dGVkU3R5bGUoYS5kb20ucGFyZW50KSxvPWEuZG9tLnBhcmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxyPW51bGwscz17fSxsPS0xLGM9aVtlLmZlYXR1cmVzLmJveFNpemluZ1Byb3BdO2ZvcihhLmluY1BhZGRpbmc9XCJib3JkZXItYm94XCI9PT1jLGEuY2FsbEFjdGlvbnMoXCJiZWZvcmVHZXRTdGFydE1peERhdGFcIixhcmd1bWVudHMpLGw9MDtyPW4uc2hvd1tsXTtsKyspcz1yLmdldFBvc0RhdGEoKSxuLnNob3dQb3NEYXRhW2xdPXtzdGFydFBvc0RhdGE6c307Zm9yKGw9MDtyPW4udG9IaWRlW2xdO2wrKylzPXIuZ2V0UG9zRGF0YSgpLG4udG9IaWRlUG9zRGF0YVtsXT17c3RhcnRQb3NEYXRhOnN9O24uc3RhcnRYPW8ubGVmdCxuLnN0YXJ0WT1vLnRvcCxuLnN0YXJ0SGVpZ2h0PWEuaW5jUGFkZGluZz9vLmhlaWdodDpvLmhlaWdodC1wYXJzZUZsb2F0KGkucGFkZGluZ1RvcCktcGFyc2VGbG9hdChpLnBhZGRpbmdCb3R0b20pLXBhcnNlRmxvYXQoaS5ib3JkZXJUb3ApLXBhcnNlRmxvYXQoaS5ib3JkZXJCb3R0b20pLG4uc3RhcnRXaWR0aD1hLmluY1BhZGRpbmc/by53aWR0aDpvLndpZHRoLXBhcnNlRmxvYXQoaS5wYWRkaW5nTGVmdCktcGFyc2VGbG9hdChpLnBhZGRpbmdSaWdodCktcGFyc2VGbG9hdChpLmJvcmRlckxlZnQpLXBhcnNlRmxvYXQoaS5ib3JkZXJSaWdodCksYS5jYWxsQWN0aW9ucyhcImFmdGVyR2V0U3RhcnRNaXhEYXRhXCIsYXJndW1lbnRzKX0sc2V0SW50ZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxhPW51bGwsaT0tMTtmb3IoZS5jYWxsQWN0aW9ucyhcImJlZm9yZVNldEludGVyXCIsYXJndW1lbnRzKSxlLmNvbmZpZy5hbmltYXRpb24uY2xhbXBIZWlnaHQmJihlLmRvbS5wYXJlbnQuc3R5bGUuaGVpZ2h0PXQuc3RhcnRIZWlnaHQrXCJweFwiLGUuZG9tLnBhcmVudC5zdHlsZS5vdmVyZmxvdz1cImhpZGRlblwiKSxlLmNvbmZpZy5hbmltYXRpb24uY2xhbXBXaWR0aCYmKGUuZG9tLnBhcmVudC5zdHlsZS53aWR0aD10LnN0YXJ0V2lkdGgrXCJweFwiLGUuZG9tLnBhcmVudC5zdHlsZS5vdmVyZmxvdz1cImhpZGRlblwiKSxpPTA7YT10LnRvU2hvd1tpXTtpKyspYS5zaG93KCk7dC53aWxsQ2hhbmdlTGF5b3V0JiYobi5yZW1vdmVDbGFzcyhlLmRvbS5jb250YWluZXIsdC5zdGFydENvbnRhaW5lckNsYXNzTmFtZSksbi5hZGRDbGFzcyhlLmRvbS5jb250YWluZXIsdC5uZXdDb250YWluZXJDbGFzc05hbWUpKSxlLmNhbGxBY3Rpb25zKFwiYWZ0ZXJTZXRJbnRlclwiLGFyZ3VtZW50cyl9LGdldEludGVyTWl4RGF0YTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49bnVsbCxhPS0xO2ZvcihlLmNhbGxBY3Rpb25zKFwiYmVmb3JlR2V0SW50ZXJNaXhEYXRhXCIsYXJndW1lbnRzKSxhPTA7bj10LnNob3dbYV07YSsrKXQuc2hvd1Bvc0RhdGFbYV0uaW50ZXJQb3NEYXRhPW4uZ2V0UG9zRGF0YSgpO2ZvcihhPTA7bj10LnRvSGlkZVthXTthKyspdC50b0hpZGVQb3NEYXRhW2FdLmludGVyUG9zRGF0YT1uLmdldFBvc0RhdGEoKTtlLmNhbGxBY3Rpb25zKFwiYWZ0ZXJHZXRJbnRlck1peERhdGFcIixhcmd1bWVudHMpfSxzZXRGaW5hbDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49bnVsbCxhPS0xO2ZvcihlLmNhbGxBY3Rpb25zKFwiYmVmb3JlU2V0RmluYWxcIixhcmd1bWVudHMpLHQud2lsbFNvcnQmJmUucHJpbnRTb3J0KCExLHQpLGE9MDtuPXQudG9IaWRlW2FdO2ErKyluLmhpZGUoKTtlLmNhbGxBY3Rpb25zKFwiYWZ0ZXJTZXRGaW5hbFwiLGFyZ3VtZW50cyl9LGdldEZpbmFsTWl4RGF0YTpmdW5jdGlvbihlKXt2YXIgYT10aGlzLGk9bnVsbCxvPW51bGwscj1udWxsLHM9LTE7Zm9yKGEuY2FsbEFjdGlvbnMoXCJiZWZvcmVHZXRGaW5hbE1peERhdGFcIixhcmd1bWVudHMpLHM9MDtyPWUuc2hvd1tzXTtzKyspZS5zaG93UG9zRGF0YVtzXS5maW5hbFBvc0RhdGE9ci5nZXRQb3NEYXRhKCk7Zm9yKHM9MDtyPWUudG9IaWRlW3NdO3MrKyllLnRvSGlkZVBvc0RhdGFbc10uZmluYWxQb3NEYXRhPXIuZ2V0UG9zRGF0YSgpO2ZvcigoYS5jb25maWcuYW5pbWF0aW9uLmNsYW1wSGVpZ2h0fHxhLmNvbmZpZy5hbmltYXRpb24uY2xhbXBXaWR0aCkmJihhLmRvbS5wYXJlbnQuc3R5bGUuaGVpZ2h0PWEuZG9tLnBhcmVudC5zdHlsZS53aWR0aD1hLmRvbS5wYXJlbnQuc3R5bGUub3ZlcmZsb3c9XCJcIiksYS5pbmNQYWRkaW5nfHwoaT10LmdldENvbXB1dGVkU3R5bGUoYS5kb20ucGFyZW50KSksbz1hLmRvbS5wYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksZS5uZXdYPW8ubGVmdCxlLm5ld1k9by50b3AsZS5uZXdIZWlnaHQ9YS5pbmNQYWRkaW5nP28uaGVpZ2h0Om8uaGVpZ2h0LXBhcnNlRmxvYXQoaS5wYWRkaW5nVG9wKS1wYXJzZUZsb2F0KGkucGFkZGluZ0JvdHRvbSktcGFyc2VGbG9hdChpLmJvcmRlclRvcCktcGFyc2VGbG9hdChpLmJvcmRlckJvdHRvbSksZS5uZXdXaWR0aD1hLmluY1BhZGRpbmc/by53aWR0aDpvLndpZHRoLXBhcnNlRmxvYXQoaS5wYWRkaW5nTGVmdCktcGFyc2VGbG9hdChpLnBhZGRpbmdSaWdodCktcGFyc2VGbG9hdChpLmJvcmRlckxlZnQpLXBhcnNlRmxvYXQoaS5ib3JkZXJSaWdodCksZS52aWV3cG9ydERlbHRhWD1lLmRvY1N0YXRlLnZpZXdwb3J0V2lkdGgtdGhpcy5kb20uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLGUudmlld3BvcnREZWx0YVk9ZS5kb2NTdGF0ZS52aWV3cG9ydEhlaWdodC10aGlzLmRvbS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LGUud2lsbFNvcnQmJmEucHJpbnRTb3J0KCEwLGUpLHM9MDtyPWUudG9TaG93W3NdO3MrKylyLmhpZGUoKTtmb3Iocz0wO3I9ZS50b0hpZGVbc107cysrKXIuc2hvdygpO2Uud2lsbENoYW5nZUxheW91dCYmKG4ucmVtb3ZlQ2xhc3MoYS5kb20uY29udGFpbmVyLGUubmV3Q29udGFpbmVyQ2xhc3NOYW1lKSxuLmFkZENsYXNzKGEuZG9tLmNvbnRhaW5lcixhLmNvbmZpZy5sYXlvdXQuY29udGFpbmVyQ2xhc3NOYW1lKSksYS5jYWxsQWN0aW9ucyhcImFmdGVyR2V0RmluYWxNaXhEYXRhXCIsYXJndW1lbnRzKX0sZ2V0VHdlZW5EYXRhOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMsYT1udWxsLGk9bnVsbCxvPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG4uZWZmZWN0c0luKSxyPVwiXCIscz1udWxsLGw9LTEsYz0tMSx1PS0xLGY9LTE7Zm9yKG4uY2FsbEFjdGlvbnMoXCJiZWZvcmVHZXRUd2VlbkRhdGFcIixhcmd1bWVudHMpLHU9MDthPXQuc2hvd1t1XTt1KyspZm9yKGk9dC5zaG93UG9zRGF0YVt1XSxpLnBvc0luPW5ldyBlLlN0eWxlRGF0YSxpLnBvc091dD1uZXcgZS5TdHlsZURhdGEsaS50d2VlbkRhdGE9bmV3IGUuU3R5bGVEYXRhLGEuaXNTaG93bj8oaS5wb3NJbi54PWkuc3RhcnRQb3NEYXRhLngtaS5pbnRlclBvc0RhdGEueCxpLnBvc0luLnk9aS5zdGFydFBvc0RhdGEueS1pLmludGVyUG9zRGF0YS55KTppLnBvc0luLng9aS5wb3NJbi55PTAsaS5wb3NPdXQueD1pLmZpbmFsUG9zRGF0YS54LWkuaW50ZXJQb3NEYXRhLngsaS5wb3NPdXQueT1pLmZpbmFsUG9zRGF0YS55LWkuaW50ZXJQb3NEYXRhLnksaS5wb3NJbi5vcGFjaXR5PWEuaXNTaG93bj8xOm4uZWZmZWN0c0luLm9wYWNpdHksaS5wb3NPdXQub3BhY2l0eT0xLGkudHdlZW5EYXRhLm9wYWNpdHk9aS5wb3NPdXQub3BhY2l0eS1pLnBvc0luLm9wYWNpdHksYS5pc1Nob3dufHxuLmNvbmZpZy5hbmltYXRpb24ubnVkZ2V8fChpLnBvc0luLng9aS5wb3NPdXQueCxpLnBvc0luLnk9aS5wb3NPdXQueSksaS50d2VlbkRhdGEueD1pLnBvc091dC54LWkucG9zSW4ueCxpLnR3ZWVuRGF0YS55PWkucG9zT3V0LnktaS5wb3NJbi55LG4uY29uZmlnLmFuaW1hdGlvbi5hbmltYXRlUmVzaXplVGFyZ2V0cyYmKGkucG9zSW4ud2lkdGg9aS5zdGFydFBvc0RhdGEud2lkdGgsaS5wb3NJbi5oZWlnaHQ9aS5zdGFydFBvc0RhdGEuaGVpZ2h0LGw9KGkuc3RhcnRQb3NEYXRhLndpZHRofHxpLmZpbmFsUG9zRGF0YS53aWR0aCktaS5pbnRlclBvc0RhdGEud2lkdGgsaS5wb3NJbi5tYXJnaW5SaWdodD1pLnN0YXJ0UG9zRGF0YS5tYXJnaW5SaWdodC1sLGM9KGkuc3RhcnRQb3NEYXRhLmhlaWdodHx8aS5maW5hbFBvc0RhdGEuaGVpZ2h0KS1pLmludGVyUG9zRGF0YS5oZWlnaHQsaS5wb3NJbi5tYXJnaW5Cb3R0b209aS5zdGFydFBvc0RhdGEubWFyZ2luQm90dG9tLWMsaS5wb3NPdXQud2lkdGg9aS5maW5hbFBvc0RhdGEud2lkdGgsaS5wb3NPdXQuaGVpZ2h0PWkuZmluYWxQb3NEYXRhLmhlaWdodCxsPShpLmZpbmFsUG9zRGF0YS53aWR0aHx8aS5zdGFydFBvc0RhdGEud2lkdGgpLWkuaW50ZXJQb3NEYXRhLndpZHRoLGkucG9zT3V0Lm1hcmdpblJpZ2h0PWkuZmluYWxQb3NEYXRhLm1hcmdpblJpZ2h0LWwsYz0oaS5maW5hbFBvc0RhdGEuaGVpZ2h0fHxpLnN0YXJ0UG9zRGF0YS5oZWlnaHQpLWkuaW50ZXJQb3NEYXRhLmhlaWdodCxpLnBvc091dC5tYXJnaW5Cb3R0b209aS5maW5hbFBvc0RhdGEubWFyZ2luQm90dG9tLWMsaS50d2VlbkRhdGEud2lkdGg9aS5wb3NPdXQud2lkdGgtaS5wb3NJbi53aWR0aCxpLnR3ZWVuRGF0YS5oZWlnaHQ9aS5wb3NPdXQuaGVpZ2h0LWkucG9zSW4uaGVpZ2h0LGkudHdlZW5EYXRhLm1hcmdpblJpZ2h0PWkucG9zT3V0Lm1hcmdpblJpZ2h0LWkucG9zSW4ubWFyZ2luUmlnaHQsaS50d2VlbkRhdGEubWFyZ2luQm90dG9tPWkucG9zT3V0Lm1hcmdpbkJvdHRvbS1pLnBvc0luLm1hcmdpbkJvdHRvbSksZj0wO3I9b1tmXTtmKyspcz1uLmVmZmVjdHNJbltyXSxzIGluc3RhbmNlb2YgZS5UcmFuc2Zvcm1EYXRhJiZzLnZhbHVlJiYoaS5wb3NJbltyXS52YWx1ZT1zLnZhbHVlLGkucG9zT3V0W3JdLnZhbHVlPTAsaS50d2VlbkRhdGFbcl0udmFsdWU9aS5wb3NPdXRbcl0udmFsdWUtaS5wb3NJbltyXS52YWx1ZSxpLnBvc0luW3JdLnVuaXQ9aS5wb3NPdXRbcl0udW5pdD1pLnR3ZWVuRGF0YVtyXS51bml0PXMudW5pdCk7Zm9yKHU9MDthPXQudG9IaWRlW3VdO3UrKylmb3IoaT10LnRvSGlkZVBvc0RhdGFbdV0saS5wb3NJbj1uZXcgZS5TdHlsZURhdGEsaS5wb3NPdXQ9bmV3IGUuU3R5bGVEYXRhLGkudHdlZW5EYXRhPW5ldyBlLlN0eWxlRGF0YSxpLnBvc0luLng9YS5pc1Nob3duP2kuc3RhcnRQb3NEYXRhLngtaS5pbnRlclBvc0RhdGEueDowLGkucG9zSW4ueT1hLmlzU2hvd24/aS5zdGFydFBvc0RhdGEueS1pLmludGVyUG9zRGF0YS55OjAsaS5wb3NPdXQueD1uLmNvbmZpZy5hbmltYXRpb24ubnVkZ2U/MDppLnBvc0luLngsaS5wb3NPdXQueT1uLmNvbmZpZy5hbmltYXRpb24ubnVkZ2U/MDppLnBvc0luLnksaS50d2VlbkRhdGEueD1pLnBvc091dC54LWkucG9zSW4ueCxpLnR3ZWVuRGF0YS55PWkucG9zT3V0LnktaS5wb3NJbi55LG4uY29uZmlnLmFuaW1hdGlvbi5hbmltYXRlUmVzaXplVGFyZ2V0cyYmKGkucG9zSW4ud2lkdGg9aS5zdGFydFBvc0RhdGEud2lkdGgsaS5wb3NJbi5oZWlnaHQ9aS5zdGFydFBvc0RhdGEuaGVpZ2h0LGw9aS5zdGFydFBvc0RhdGEud2lkdGgtaS5pbnRlclBvc0RhdGEud2lkdGgsaS5wb3NJbi5tYXJnaW5SaWdodD1pLnN0YXJ0UG9zRGF0YS5tYXJnaW5SaWdodC1sLGM9aS5zdGFydFBvc0RhdGEuaGVpZ2h0LWkuaW50ZXJQb3NEYXRhLmhlaWdodCxpLnBvc0luLm1hcmdpbkJvdHRvbT1pLnN0YXJ0UG9zRGF0YS5tYXJnaW5Cb3R0b20tYyksaS5wb3NJbi5vcGFjaXR5PTEsaS5wb3NPdXQub3BhY2l0eT1uLmVmZmVjdHNPdXQub3BhY2l0eSxpLnR3ZWVuRGF0YS5vcGFjaXR5PWkucG9zT3V0Lm9wYWNpdHktaS5wb3NJbi5vcGFjaXR5LGY9MDtyPW9bZl07ZisrKXM9bi5lZmZlY3RzT3V0W3JdLHMgaW5zdGFuY2VvZiBlLlRyYW5zZm9ybURhdGEmJnMudmFsdWUmJihpLnBvc0luW3JdLnZhbHVlPTAsaS5wb3NPdXRbcl0udmFsdWU9cy52YWx1ZSxpLnR3ZWVuRGF0YVtyXS52YWx1ZT1pLnBvc091dFtyXS52YWx1ZS1pLnBvc0luW3JdLnZhbHVlLGkucG9zSW5bcl0udW5pdD1pLnBvc091dFtyXS51bml0PWkudHdlZW5EYXRhW3JdLnVuaXQ9cy51bml0KTtuLmNhbGxBY3Rpb25zKFwiYWZ0ZXJHZXRUd2VlbkRhdGFcIixhcmd1bWVudHMpfSxtb3ZlVGFyZ2V0czpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9bnVsbCxvPW51bGwscj1udWxsLHM9XCJcIixsPSExLGM9LTEsdT0tMSxmPWEuY2hlY2tQcm9ncmVzcy5iaW5kKGEpO2ZvcihhLmNhbGxBY3Rpb25zKFwiYmVmb3JlTW92ZVRhcmdldHNcIixhcmd1bWVudHMpLHU9MDtpPXQuc2hvd1t1XTt1Kyspbz1uZXcgZS5JTW92ZURhdGEscj10LnNob3dQb3NEYXRhW3VdLHM9aS5pc1Nob3duP1wibm9uZVwiOlwic2hvd1wiLGw9YS53aWxsVHJhbnNpdGlvbihzLHQuaGFzRWZmZWN0LHIucG9zSW4sci5wb3NPdXQpLGwmJmMrKyxpLnNob3coKSxvLnBvc0luPXIucG9zSW4sby5wb3NPdXQ9ci5wb3NPdXQsby5zdGF0dXNDaGFuZ2U9cyxvLnN0YWdnZXJJbmRleD1jLG8ub3BlcmF0aW9uPXQsby5jYWxsYmFjaz1sP2Y6bnVsbCxpLm1vdmUobyk7Zm9yKHU9MDtpPXQudG9IaWRlW3VdO3UrKylyPXQudG9IaWRlUG9zRGF0YVt1XSxvPW5ldyBlLklNb3ZlRGF0YSxzPVwiaGlkZVwiLGw9YS53aWxsVHJhbnNpdGlvbihzLHIucG9zSW4sci5wb3NPdXQpLG8ucG9zSW49ci5wb3NJbixvLnBvc091dD1yLnBvc091dCxvLnN0YXR1c0NoYW5nZT1zLG8uc3RhZ2dlckluZGV4PXUsby5vcGVyYXRpb249dCxvLmNhbGxiYWNrPWw/ZjpudWxsLGkubW92ZShvKTthLmNvbmZpZy5hbmltYXRpb24uYW5pbWF0ZVJlc2l6ZUNvbnRhaW5lciYmKGEuZG9tLnBhcmVudC5zdHlsZVtlLmZlYXR1cmVzLnRyYW5zaXRpb25Qcm9wXT1cImhlaWdodCBcIithLmNvbmZpZy5hbmltYXRpb24uZHVyYXRpb24rXCJtcyBlYXNlLCB3aWR0aCBcIithLmNvbmZpZy5hbmltYXRpb24uZHVyYXRpb24rXCJtcyBlYXNlIFwiLHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpe3Quc3RhcnRIZWlnaHQhPT10Lm5ld0hlaWdodCYmdC52aWV3cG9ydERlbHRhWSE9PXQuc3RhcnRIZWlnaHQtdC5uZXdIZWlnaHQmJihhLmRvbS5wYXJlbnQuc3R5bGUuaGVpZ2h0PXQubmV3SGVpZ2h0K1wicHhcIiksdC5zdGFydFdpZHRoIT09dC5uZXdXaWR0aCYmdC52aWV3cG9ydERlbHRhWCE9PXQuc3RhcnRXaWR0aC10Lm5ld1dpZHRoJiYoYS5kb20ucGFyZW50LnN0eWxlLndpZHRoPXQubmV3V2lkdGgrXCJweFwiKX0pKSx0LndpbGxDaGFuZ2VMYXlvdXQmJihuLnJlbW92ZUNsYXNzKGEuZG9tLmNvbnRhaW5lcixhLmNvbmZpZy5sYXlvdXQuQ29udGFpbmVyQ2xhc3NOYW1lKSxuLmFkZENsYXNzKGEuZG9tLmNvbnRhaW5lcix0Lm5ld0NvbnRhaW5lckNsYXNzTmFtZSkpLGEuY2FsbEFjdGlvbnMoXCJhZnRlck1vdmVUYXJnZXRzXCIsYXJndW1lbnRzKX0saGFzRWZmZWN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPVtcInNjYWxlXCIsXCJ0cmFuc2xhdGVYXCIsXCJ0cmFuc2xhdGVZXCIsXCJ0cmFuc2xhdGVaXCIsXCJyb3RhdGVYXCIsXCJyb3RhdGVZXCIsXCJyb3RhdGVaXCJdLG49XCJcIixhPW51bGwsaT0hMSxvPS0xLHI9LTE7aWYoMSE9PXQuZWZmZWN0c0luLm9wYWNpdHkpcmV0dXJuIHQuY2FsbEZpbHRlcnMoXCJyZXN1bHRIYXNFZmZlY3RcIiwhMCxhcmd1bWVudHMpO2ZvcihyPTA7bj1lW3JdO3IrKylpZihhPXQuZWZmZWN0c0luW25dLG89XCJ1bmRlZmluZWRcIiE9PWEudmFsdWU/YS52YWx1ZTphLDAhPT1vKXtpPSEwO2JyZWFrfXJldHVybiB0LmNhbGxGaWx0ZXJzKFwicmVzdWx0SGFzRWZmZWN0XCIsaSxhcmd1bWVudHMpfSx3aWxsVHJhbnNpdGlvbjpmdW5jdGlvbih0LGUsYSxpKXt2YXIgbz10aGlzLHI9ITE7cmV0dXJuIHI9ISFuLmlzVmlzaWJsZShvLmRvbS5jb250YWluZXIpJiYoISEoXCJub25lXCIhPT10JiZlfHxhLnghPT1pLnh8fGEueSE9PWkueSl8fCEhby5jb25maWcuYW5pbWF0aW9uLmFuaW1hdGVSZXNpemVUYXJnZXRzJiYoYS53aWR0aCE9PWkud2lkdGh8fGEuaGVpZ2h0IT09aS5oZWlnaHR8fGEubWFyZ2luUmlnaHQhPT1pLm1hcmdpblJpZ2h0fHxhLm1hcmdpblRvcCE9PWkubWFyZ2luVG9wKSksby5jYWxsRmlsdGVycyhcInJlc3VsdFdpbGxUcmFuc2l0aW9uXCIscixhcmd1bWVudHMpfSxjaGVja1Byb2dyZXNzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS50YXJnZXRzRG9uZSsrLGUudGFyZ2V0c0JvdW5kPT09ZS50YXJnZXRzRG9uZSYmZS5jbGVhblVwKHQpfSxjbGVhblVwOmZ1bmN0aW9uKHQpe3ZhciBhPXRoaXMsaT1udWxsLG89bnVsbCxyPW51bGwscz1udWxsLGw9LTE7Zm9yKGEuY2FsbEFjdGlvbnMoXCJiZWZvcmVDbGVhblVwXCIsYXJndW1lbnRzKSxhLnRhcmdldHNNb3ZlZD1hLnRhcmdldHNJbW1vdmFibGU9YS50YXJnZXRzQm91bmQ9YS50YXJnZXRzRG9uZT0wLGw9MDtpPXQuc2hvd1tsXTtsKyspaS5jbGVhblVwKCksaS5zaG93KCk7Zm9yKGw9MDtpPXQudG9IaWRlW2xdO2wrKylpLmNsZWFuVXAoKSxpLmhpZGUoKTtpZih0LndpbGxTb3J0JiZhLnByaW50U29ydCghMSx0KSxhLmRvbS5wYXJlbnQuc3R5bGVbZS5mZWF0dXJlcy50cmFuc2l0aW9uUHJvcF09YS5kb20ucGFyZW50LnN0eWxlLmhlaWdodD1hLmRvbS5wYXJlbnQuc3R5bGUud2lkdGg9YS5kb20ucGFyZW50LnN0eWxlLm92ZXJmbG93PWEuZG9tLnBhcmVudC5zdHlsZVtlLmZlYXR1cmVzLnBlcnNwZWN0aXZlUHJvcF09YS5kb20ucGFyZW50LnN0eWxlW2UuZmVhdHVyZXMucGVyc3BlY3RpdmVPcmlnaW5Qcm9wXT1cIlwiLHQud2lsbENoYW5nZUxheW91dCYmKG4ucmVtb3ZlQ2xhc3MoYS5kb20uY29udGFpbmVyLHQuc3RhcnRDb250YWluZXJDbGFzc05hbWUpLG4uYWRkQ2xhc3MoYS5kb20uY29udGFpbmVyLHQubmV3Q29udGFpbmVyQ2xhc3NOYW1lKSksdC50b1JlbW92ZS5sZW5ndGgpe2ZvcihsPTA7aT1hLnRhcmdldHNbbF07bCsrKXQudG9SZW1vdmUuaW5kZXhPZihpKT4tMSYmKChvPWkuZG9tLmVsLnByZXZpb3VzU2libGluZykmJlwiI3RleHRcIj09PW8ubm9kZU5hbWUmJihyPWkuZG9tLmVsLm5leHRTaWJsaW5nKSYmXCIjdGV4dFwiPT09ci5ub2RlTmFtZSYmbi5yZW1vdmVXaGl0ZXNwYWNlKG8pLHQud2lsbFNvcnR8fGEuZG9tLnBhcmVudC5yZW1vdmVDaGlsZChpLmRvbS5lbCksYS50YXJnZXRzLnNwbGljZShsLDEpLGkuaXNJbkRvbT0hMSxsLS0pO2Eub3JpZ09yZGVyPWEudGFyZ2V0c310LndpbGxTb3J0JiYoYS50YXJnZXRzPXQubmV3T3JkZXIpLGEuc3RhdGU9dC5uZXdTdGF0ZSxhLmxhc3RPcGVyYXRpb249dCxhLmRvbS50YXJnZXRzPWEuc3RhdGUudGFyZ2V0cyxlLmV2ZW50cy5maXJlKFwibWl4RW5kXCIsYS5kb20uY29udGFpbmVyLHtzdGF0ZTphLnN0YXRlLGluc3RhbmNlOmF9LGEuZG9tLmRvY3VtZW50KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLmNvbmZpZy5jYWxsYmFja3Mub25NaXhFbmQmJmEuY29uZmlnLmNhbGxiYWNrcy5vbk1peEVuZC5jYWxsKGEuZG9tLmNvbnRhaW5lcixhLnN0YXRlLGEpLHQuaGFzRmFpbGVkJiYoZS5ldmVudHMuZmlyZShcIm1peEZhaWxcIixhLmRvbS5jb250YWluZXIse3N0YXRlOmEuc3RhdGUsaW5zdGFuY2U6YX0sYS5kb20uZG9jdW1lbnQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGEuY29uZmlnLmNhbGxiYWNrcy5vbk1peEZhaWwmJmEuY29uZmlnLmNhbGxiYWNrcy5vbk1peEZhaWwuY2FsbChhLmRvbS5jb250YWluZXIsYS5zdGF0ZSxhKSxuLmFkZENsYXNzKGEuZG9tLmNvbnRhaW5lcixuLmdldENsYXNzbmFtZShhLmNvbmZpZy5jbGFzc05hbWVzLFwiY29udGFpbmVyXCIsYS5jb25maWcuY2xhc3NOYW1lcy5tb2RpZmllckZhaWxlZCkpKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLnVzZXJDYWxsYmFjayYmYS51c2VyQ2FsbGJhY2suY2FsbChhLmRvbS5jb250YWluZXIsYS5zdGF0ZSxhKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLnVzZXJEZWZlcnJlZC5yZXNvbHZlJiZhLnVzZXJEZWZlcnJlZC5yZXNvbHZlKGEuc3RhdGUpLGEudXNlckNhbGxiYWNrPW51bGwsYS51c2VyRGVmZXJyZWQ9bnVsbCxhLmxhc3RDbGlja2VkPW51bGwsYS5pc1RvZ2dsaW5nPSExLGEuaXNCdXN5PSExLGEucXVldWUubGVuZ3RoJiYoYS5jYWxsQWN0aW9ucyhcImJlZm9yZVJlYWRRdWV1ZUNsZWFuVXBcIixhcmd1bWVudHMpLHM9YS5xdWV1ZS5zaGlmdCgpLGEudXNlckRlZmVycmVkPXMuZGVmZXJyZWQsYS5pc1RvZ2dsaW5nPXMuaXNUb2dnbGluZyxhLmxhc3RDbGlja2VkPXMudHJpZ2dlckVsZW1lbnQscy5pbnN0cnVjdGlvbi5jb21tYW5kIGluc3RhbmNlb2YgZS5Db21tYW5kTXVsdGltaXg/YS5tdWx0aW1peC5hcHBseShhLHMuYXJncyk6YS5kYXRhc2V0LmFwcGx5KGEscy5hcmdzKSksYS5jYWxsQWN0aW9ucyhcImFmdGVyQ2xlYW5VcFwiLGFyZ3VtZW50cyl9LHBhcnNlTXVsdGltaXhBcmdzOmZ1bmN0aW9uKHQpe3ZhciBhPXRoaXMsaT1uZXcgZS5Vc2VySW5zdHJ1Y3Rpb24sbz1udWxsLHI9LTE7Zm9yKGkuYW5pbWF0ZT1hLmNvbmZpZy5hbmltYXRpb24uZW5hYmxlLGkuY29tbWFuZD1uZXcgZS5Db21tYW5kTXVsdGltaXgscj0wO3I8dC5sZW5ndGg7cisrKW89dFtyXSxudWxsIT09byYmKFwib2JqZWN0XCI9PXR5cGVvZiBvP24uZXh0ZW5kKGkuY29tbWFuZCxvKTpcImJvb2xlYW5cIj09dHlwZW9mIG8/aS5hbmltYXRlPW86XCJmdW5jdGlvblwiPT10eXBlb2YgbyYmKGkuY2FsbGJhY2s9bykpO3JldHVybiFpLmNvbW1hbmQuaW5zZXJ0fHxpLmNvbW1hbmQuaW5zZXJ0IGluc3RhbmNlb2YgZS5Db21tYW5kSW5zZXJ0fHwoaS5jb21tYW5kLmluc2VydD1hLnBhcnNlSW5zZXJ0QXJncyhbaS5jb21tYW5kLmluc2VydF0pLmNvbW1hbmQpLCFpLmNvbW1hbmQucmVtb3ZlfHxpLmNvbW1hbmQucmVtb3ZlIGluc3RhbmNlb2YgZS5Db21tYW5kUmVtb3ZlfHwoaS5jb21tYW5kLnJlbW92ZT1hLnBhcnNlUmVtb3ZlQXJncyhbaS5jb21tYW5kLnJlbW92ZV0pLmNvbW1hbmQpLCFpLmNvbW1hbmQuZmlsdGVyfHxpLmNvbW1hbmQuZmlsdGVyIGluc3RhbmNlb2YgZS5Db21tYW5kRmlsdGVyfHwoaS5jb21tYW5kLmZpbHRlcj1hLnBhcnNlRmlsdGVyQXJncyhbaS5jb21tYW5kLmZpbHRlcl0pLmNvbW1hbmQpLCFpLmNvbW1hbmQuc29ydHx8aS5jb21tYW5kLnNvcnQgaW5zdGFuY2VvZiBlLkNvbW1hbmRTb3J0fHwoaS5jb21tYW5kLnNvcnQ9YS5wYXJzZVNvcnRBcmdzKFtpLmNvbW1hbmQuc29ydF0pLmNvbW1hbmQpLCFpLmNvbW1hbmQuY2hhbmdlTGF5b3V0fHxpLmNvbW1hbmQuY2hhbmdlTGF5b3V0IGluc3RhbmNlb2YgZS5Db21tYW5kQ2hhbmdlTGF5b3V0fHwoaS5jb21tYW5kLmNoYW5nZUxheW91dD1hLnBhcnNlQ2hhbmdlTGF5b3V0QXJncyhbaS5jb21tYW5kLmNoYW5nZUxheW91dF0pLmNvbW1hbmQpLGk9YS5jYWxsRmlsdGVycyhcImluc3RydWN0aW9uUGFyc2VNdWx0aW1peEFyZ3NcIixpLGFyZ3VtZW50cyksbi5mcmVlemUoaSksaX0scGFyc2VGaWx0ZXJBcmdzOmZ1bmN0aW9uKHQpe3ZhciBhPXRoaXMsaT1uZXcgZS5Vc2VySW5zdHJ1Y3Rpb24sbz1udWxsLHI9LTE7Zm9yKGkuYW5pbWF0ZT1hLmNvbmZpZy5hbmltYXRpb24uZW5hYmxlLGkuY29tbWFuZD1uZXcgZS5Db21tYW5kRmlsdGVyLHI9MDtyPHQubGVuZ3RoO3IrKylvPXRbcl0sXCJzdHJpbmdcIj09dHlwZW9mIG8/aS5jb21tYW5kLnNlbGVjdG9yPW86bnVsbD09PW8/aS5jb21tYW5kLmNvbGxlY3Rpb249W106XCJvYmplY3RcIj09dHlwZW9mIG8mJm4uaXNFbGVtZW50KG8sYS5kb20uZG9jdW1lbnQpP2kuY29tbWFuZC5jb2xsZWN0aW9uPVtvXTpcIm9iamVjdFwiPT10eXBlb2YgbyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG8ubGVuZ3RoP2kuY29tbWFuZC5jb2xsZWN0aW9uPW4uYXJyYXlGcm9tTGlzdChvKTpcIm9iamVjdFwiPT10eXBlb2Ygbz9uLmV4dGVuZChpLmNvbW1hbmQsbyk6XCJib29sZWFuXCI9PXR5cGVvZiBvP2kuYW5pbWF0ZT1vOlwiZnVuY3Rpb25cIj09dHlwZW9mIG8mJihpLmNhbGxiYWNrPW8pO2lmKGkuY29tbWFuZC5zZWxlY3RvciYmaS5jb21tYW5kLmNvbGxlY3Rpb24pdGhyb3cgbmV3IEVycm9yKGUubWVzc2FnZXMuZXJyb3JGaWx0ZXJJbnZhbGlkQXJndW1lbnRzKCkpO3JldHVybiBpPWEuY2FsbEZpbHRlcnMoXCJpbnN0cnVjdGlvblBhcnNlRmlsdGVyQXJnc1wiLGksYXJndW1lbnRzKSxuLmZyZWV6ZShpKSxpfSxwYXJzZVNvcnRBcmdzOmZ1bmN0aW9uKHQpe3ZhciBhPXRoaXMsaT1uZXcgZS5Vc2VySW5zdHJ1Y3Rpb24sbz1udWxsLHI9XCJcIixzPS0xO2ZvcihpLmFuaW1hdGU9YS5jb25maWcuYW5pbWF0aW9uLmVuYWJsZSxpLmNvbW1hbmQ9bmV3IGUuQ29tbWFuZFNvcnQscz0wO3M8dC5sZW5ndGg7cysrKWlmKG89dFtzXSxudWxsIT09bylzd2l0Y2godHlwZW9mIG8pe2Nhc2VcInN0cmluZ1wiOnI9bzticmVhaztjYXNlXCJvYmplY3RcIjpvLmxlbmd0aCYmKGkuY29tbWFuZC5jb2xsZWN0aW9uPW4uYXJyYXlGcm9tTGlzdChvKSk7YnJlYWs7Y2FzZVwiYm9vbGVhblwiOmkuYW5pbWF0ZT1vO2JyZWFrO2Nhc2VcImZ1bmN0aW9uXCI6aS5jYWxsYmFjaz1vfXJldHVybiByJiYoaS5jb21tYW5kPWEucGFyc2VTb3J0U3RyaW5nKHIsaS5jb21tYW5kKSksaT1hLmNhbGxGaWx0ZXJzKFwiaW5zdHJ1Y3Rpb25QYXJzZVNvcnRBcmdzXCIsaSxhcmd1bWVudHMpLG4uZnJlZXplKGkpLGl9LHBhcnNlSW5zZXJ0QXJnczpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9bmV3IGUuVXNlckluc3RydWN0aW9uLG89bnVsbCxyPS0xO2ZvcihpLmFuaW1hdGU9YS5jb25maWcuYW5pbWF0aW9uLmVuYWJsZSxpLmNvbW1hbmQ9bmV3IGUuQ29tbWFuZEluc2VydCxyPTA7cjx0Lmxlbmd0aDtyKyspbz10W3JdLG51bGwhPT1vJiYoXCJudW1iZXJcIj09dHlwZW9mIG8/aS5jb21tYW5kLmluZGV4PW86XCJzdHJpbmdcIj09dHlwZW9mIG8mJltcImJlZm9yZVwiLFwiYWZ0ZXJcIl0uaW5kZXhPZihvKT4tMT9pLmNvbW1hbmQucG9zaXRpb249bzpcInN0cmluZ1wiPT10eXBlb2Ygbz9pLmNvbW1hbmQuY29sbGVjdGlvbj1uLmFycmF5RnJvbUxpc3Qobi5jcmVhdGVFbGVtZW50KG8pLmNoaWxkTm9kZXMpOlwib2JqZWN0XCI9PXR5cGVvZiBvJiZuLmlzRWxlbWVudChvLGEuZG9tLmRvY3VtZW50KT9pLmNvbW1hbmQuY29sbGVjdGlvbi5sZW5ndGg/aS5jb21tYW5kLnNpYmxpbmc9bzppLmNvbW1hbmQuY29sbGVjdGlvbj1bb106XCJvYmplY3RcIj09dHlwZW9mIG8mJm8ubGVuZ3RoP2kuY29tbWFuZC5jb2xsZWN0aW9uLmxlbmd0aD9pLmNvbW1hbmQuc2libGluZz1vWzBdOmkuY29tbWFuZC5jb2xsZWN0aW9uPW86XCJvYmplY3RcIj09dHlwZW9mIG8mJm8uY2hpbGROb2RlcyYmby5jaGlsZE5vZGVzLmxlbmd0aD9pLmNvbW1hbmQuY29sbGVjdGlvbi5sZW5ndGg/aS5jb21tYW5kLnNpYmxpbmc9by5jaGlsZE5vZGVzWzBdOmkuY29tbWFuZC5jb2xsZWN0aW9uPW4uYXJyYXlGcm9tTGlzdChvLmNoaWxkTm9kZXMpOlwib2JqZWN0XCI9PXR5cGVvZiBvP24uZXh0ZW5kKGkuY29tbWFuZCxvKTpcImJvb2xlYW5cIj09dHlwZW9mIG8/aS5hbmltYXRlPW86XCJmdW5jdGlvblwiPT10eXBlb2YgbyYmKGkuY2FsbGJhY2s9bykpO2lmKGkuY29tbWFuZC5pbmRleCYmaS5jb21tYW5kLnNpYmxpbmcpdGhyb3cgbmV3IEVycm9yKGUubWVzc2FnZXMuZXJyb3JJbnNlcnRJbnZhbGlkQXJndW1lbnRzKCkpO3JldHVybiFpLmNvbW1hbmQuY29sbGVjdGlvbi5sZW5ndGgmJmEuY29uZmlnLmRlYnVnLnNob3dXYXJuaW5ncyYmY29uc29sZS53YXJuKGUubWVzc2FnZXMud2FybmluZ0luc2VydE5vRWxlbWVudHMoKSksaT1hLmNhbGxGaWx0ZXJzKFwiaW5zdHJ1Y3Rpb25QYXJzZUluc2VydEFyZ3NcIixpLGFyZ3VtZW50cyksbi5mcmVlemUoaSksaX0scGFyc2VSZW1vdmVBcmdzOmZ1bmN0aW9uKHQpe3ZhciBhPXRoaXMsaT1uZXcgZS5Vc2VySW5zdHJ1Y3Rpb24sbz1udWxsLHI9bnVsbCxzPS0xO2ZvcihpLmFuaW1hdGU9YS5jb25maWcuYW5pbWF0aW9uLmVuYWJsZSxpLmNvbW1hbmQ9bmV3IGUuQ29tbWFuZFJlbW92ZSxzPTA7czx0Lmxlbmd0aDtzKyspaWYocj10W3NdLG51bGwhPT1yKXN3aXRjaCh0eXBlb2Ygcil7Y2FzZVwibnVtYmVyXCI6YS50YXJnZXRzW3JdJiYoaS5jb21tYW5kLnRhcmdldHNbMF09YS50YXJnZXRzW3JdKTticmVhaztjYXNlXCJzdHJpbmdcIjppLmNvbW1hbmQuY29sbGVjdGlvbj1uLmFycmF5RnJvbUxpc3QoYS5kb20ucGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwocikpO2JyZWFrO2Nhc2VcIm9iamVjdFwiOnImJnIubGVuZ3RoP2kuY29tbWFuZC5jb2xsZWN0aW9uPXI6bi5pc0VsZW1lbnQocixhLmRvbS5kb2N1bWVudCk/aS5jb21tYW5kLmNvbGxlY3Rpb249W3JdOm4uZXh0ZW5kKGkuY29tbWFuZCxyKTticmVhaztjYXNlXCJib29sZWFuXCI6aS5hbmltYXRlPXI7YnJlYWs7Y2FzZVwiZnVuY3Rpb25cIjppLmNhbGxiYWNrPXJ9aWYoaS5jb21tYW5kLmNvbGxlY3Rpb24ubGVuZ3RoKWZvcihzPTA7bz1hLnRhcmdldHNbc107cysrKWkuY29tbWFuZC5jb2xsZWN0aW9uLmluZGV4T2Yoby5kb20uZWwpPi0xJiZpLmNvbW1hbmQudGFyZ2V0cy5wdXNoKG8pO3JldHVybiFpLmNvbW1hbmQudGFyZ2V0cy5sZW5ndGgmJmEuY29uZmlnLmRlYnVnLnNob3dXYXJuaW5ncyYmY29uc29sZS53YXJuKGUubWVzc2FnZXMud2FybmluZ1JlbW92ZU5vRWxlbWVudHMoKSksbi5mcmVlemUoaSksaX0scGFyc2VEYXRhc2V0QXJnczpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9bmV3IGUuVXNlckluc3RydWN0aW9uLG89bnVsbCxyPS0xO2ZvcihpLmFuaW1hdGU9YS5jb25maWcuYW5pbWF0aW9uLmVuYWJsZSxpLmNvbW1hbmQ9bmV3IGUuQ29tbWFuZERhdGFzZXQscj0wO3I8dC5sZW5ndGg7cisrKWlmKG89dFtyXSxudWxsIT09bylzd2l0Y2godHlwZW9mIG8pe2Nhc2VcIm9iamVjdFwiOkFycmF5LmlzQXJyYXkobyl8fFwibnVtYmVyXCI9PXR5cGVvZiBvLmxlbmd0aD9pLmNvbW1hbmQuZGF0YXNldD1vOm4uZXh0ZW5kKGkuY29tbWFuZCxvKTticmVhaztjYXNlXCJib29sZWFuXCI6aS5hbmltYXRlPW87YnJlYWs7Y2FzZVwiZnVuY3Rpb25cIjppLmNhbGxiYWNrPW99cmV0dXJuIG4uZnJlZXplKGkpLGl9LHBhcnNlQ2hhbmdlTGF5b3V0QXJnczpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9bmV3IGUuVXNlckluc3RydWN0aW9uLG89bnVsbCxyPS0xO2ZvcihpLmFuaW1hdGU9YS5jb25maWcuYW5pbWF0aW9uLmVuYWJsZSxpLmNvbW1hbmQ9bmV3IGUuQ29tbWFuZENoYW5nZUxheW91dCxyPTA7cjx0Lmxlbmd0aDtyKyspaWYobz10W3JdLG51bGwhPT1vKXN3aXRjaCh0eXBlb2Ygbyl7Y2FzZVwic3RyaW5nXCI6aS5jb21tYW5kLmNvbnRhaW5lckNsYXNzTmFtZT1vO2JyZWFrO2Nhc2VcIm9iamVjdFwiOm4uZXh0ZW5kKGkuY29tbWFuZCxvKTticmVhaztjYXNlXCJib29sZWFuXCI6aS5hbmltYXRlPW87YnJlYWs7Y2FzZVwiZnVuY3Rpb25cIjppLmNhbGxiYWNrPW99cmV0dXJuIG4uZnJlZXplKGkpLGl9LHF1ZXVlTWl4OmZ1bmN0aW9uKHQpe3ZhciBhPXRoaXMsaT1udWxsLG89XCJcIjtyZXR1cm4gYS5jYWxsQWN0aW9ucyhcImJlZm9yZVF1ZXVlTWl4XCIsYXJndW1lbnRzKSxpPW4uZGVmZXIoZS5saWJyYXJpZXMpLGEuY29uZmlnLmFuaW1hdGlvbi5xdWV1ZSYmYS5xdWV1ZS5sZW5ndGg8YS5jb25maWcuYW5pbWF0aW9uLnF1ZXVlTGltaXQ/KHQuZGVmZXJyZWQ9aSxhLnF1ZXVlLnB1c2godCksYS5jb25maWcuY29udHJvbHMuZW5hYmxlJiYoYS5pc1RvZ2dsaW5nPyhhLmJ1aWxkVG9nZ2xlQXJyYXkodC5pbnN0cnVjdGlvbi5jb21tYW5kKSxvPWEuZ2V0VG9nZ2xlU2VsZWN0b3IoKSxhLnVwZGF0ZUNvbnRyb2xzKHtmaWx0ZXI6e3NlbGVjdG9yOm99fSkpOmEudXBkYXRlQ29udHJvbHModC5pbnN0cnVjdGlvbi5jb21tYW5kKSkpOihhLmNvbmZpZy5kZWJ1Zy5zaG93V2FybmluZ3MmJmNvbnNvbGUud2FybihlLm1lc3NhZ2VzLndhcm5pbmdNdWx0aW1peEluc3RhbmNlUXVldWVGdWxsKCkpLGkucmVzb2x2ZShhLnN0YXRlKSxlLmV2ZW50cy5maXJlKFwibWl4QnVzeVwiLGEuZG9tLmNvbnRhaW5lcix7c3RhdGU6YS5zdGF0ZSxpbnN0YW5jZTphfSxhLmRvbS5kb2N1bWVudCksXCJmdW5jdGlvblwiPT10eXBlb2YgYS5jb25maWcuY2FsbGJhY2tzLm9uTWl4QnVzeSYmYS5jb25maWcuY2FsbGJhY2tzLm9uTWl4QnVzeS5jYWxsKGEuZG9tLmNvbnRhaW5lcixhLnN0YXRlLGEpKSxcbmEuY2FsbEZpbHRlcnMoXCJwcm9taXNlUXVldWVNaXhcIixpLnByb21pc2UsYXJndW1lbnRzKX0sZ2V0RGF0YU9wZXJhdGlvbjpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9bmV3IGUuT3BlcmF0aW9uLG89W107aWYoaT1hLmNhbGxGaWx0ZXJzKFwib3BlcmF0aW9uVW5tYXBwZWRHZXREYXRhT3BlcmF0aW9uXCIsaSxhcmd1bWVudHMpLGEuZG9tLnRhcmdldHMubGVuZ3RoJiYhKG89YS5zdGF0ZS5hY3RpdmVEYXRhc2V0fHxbXSkubGVuZ3RoKXRocm93IG5ldyBFcnJvcihlLm1lc3NhZ2VzLmVycm9yRGF0YXNldE5vdFNldCgpKTtyZXR1cm4gaS5pZD1uLnJhbmRvbUhleCgpLGkuc3RhcnRTdGF0ZT1hLnN0YXRlLGkuc3RhcnREYXRhc2V0PW8saS5uZXdEYXRhc2V0PXQuc2xpY2UoKSxhLmRpZmZEYXRhc2V0cyhpKSxpLnN0YXJ0T3JkZXI9YS50YXJnZXRzLGkubmV3T3JkZXI9aS5zaG93LGEuY29uZmlnLmFuaW1hdGlvbi5lbmFibGUmJihhLmdldFN0YXJ0TWl4RGF0YShpKSxhLnNldEludGVyKGkpLGkuZG9jU3RhdGU9bi5nZXREb2N1bWVudFN0YXRlKGEuZG9tLmRvY3VtZW50KSxhLmdldEludGVyTWl4RGF0YShpKSxhLnNldEZpbmFsKGkpLGEuZ2V0RmluYWxNaXhEYXRhKGkpLGEucGFyc2VFZmZlY3RzKCksaS5oYXNFZmZlY3Q9YS5oYXNFZmZlY3QoKSxhLmdldFR3ZWVuRGF0YShpKSksYS50YXJnZXRzPWkuc2hvdy5zbGljZSgpLGkubmV3U3RhdGU9YS5idWlsZFN0YXRlKGkpLEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGEudGFyZ2V0cyxpLnRvUmVtb3ZlKSxpPWEuY2FsbEZpbHRlcnMoXCJvcGVyYXRpb25NYXBwZWRHZXREYXRhT3BlcmF0aW9uXCIsaSxhcmd1bWVudHMpfSxkaWZmRGF0YXNldHM6ZnVuY3Rpb24odCl7dmFyIGE9dGhpcyxpPVtdLG89W10scj1bXSxzPW51bGwsbD1udWxsLGM9bnVsbCx1PW51bGwsZj1udWxsLGg9e30sZD1cIlwiLG09LTE7Zm9yKGEuY2FsbEFjdGlvbnMoXCJiZWZvcmVEaWZmRGF0YXNldHNcIixhcmd1bWVudHMpLG09MDtzPXQubmV3RGF0YXNldFttXTttKyspe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZihkPXNbYS5jb25maWcuZGF0YS51aWRLZXldKXx8ZC50b1N0cmluZygpLmxlbmd0aDwxKXRocm93IG5ldyBUeXBlRXJyb3IoZS5tZXNzYWdlcy5lcnJvckRhdGFzZXRJbnZhbGlkVWlkS2V5KHt1aWRLZXk6YS5jb25maWcuZGF0YS51aWRLZXl9KSk7aWYoaFtkXSl0aHJvdyBuZXcgRXJyb3IoZS5tZXNzYWdlcy5lcnJvckRhdGFzZXREdXBsaWNhdGVVaWQoe3VpZDpkfSkpO2hbZF09ITAsKGw9YS5jYWNoZVtkXSlpbnN0YW5jZW9mIGUuVGFyZ2V0PyhhLmNvbmZpZy5kYXRhLmRpcnR5Q2hlY2smJiFuLmRlZXBFcXVhbHMocyxsLmRhdGEpJiYoYz1sLnJlbmRlcihzKSxsLmRhdGE9cyxjIT09bC5kb20uZWwmJihsLmlzSW5Eb20mJihsLnVuYmluZEV2ZW50cygpLGEuZG9tLnBhcmVudC5yZXBsYWNlQ2hpbGQoYyxsLmRvbS5lbCkpLGwuaXNTaG93bnx8KGMuc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksbC5kb20uZWw9YyxsLmlzSW5Eb20mJmwuYmluZEV2ZW50cygpKSksYz1sLmRvbS5lbCk6KGw9bmV3IGUuVGFyZ2V0LGwuaW5pdChudWxsLGEscyksbC5oaWRlKCkpLGwuaXNJbkRvbT8oZj1sLmRvbS5lbC5uZXh0RWxlbWVudFNpYmxpbmcsby5wdXNoKGQpLHUmJih1Lmxhc3RFbGVtZW50Q2hpbGQmJnUuYXBwZW5kQ2hpbGQoYS5kb20uZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCIgXCIpKSxhLmluc2VydERhdGFzZXRGcmFnKHUsbC5kb20uZWwsciksdT1udWxsKSk6KHV8fCh1PWEuZG9tLmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSksdS5sYXN0RWxlbWVudENoaWxkJiZ1LmFwcGVuZENoaWxkKGEuZG9tLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiIFwiKSksdS5hcHBlbmRDaGlsZChsLmRvbS5lbCksbC5pc0luRG9tPSEwLGwudW5iaW5kRXZlbnRzKCksbC5iaW5kRXZlbnRzKCksbC5oaWRlKCksdC50b1Nob3cucHVzaChsKSxyLnB1c2gobCkpLHQuc2hvdy5wdXNoKGwpfWZvcih1JiYoZj1mfHxhLmNvbmZpZy5sYXlvdXQuc2libGluZ0FmdGVyLGYmJnUuYXBwZW5kQ2hpbGQoYS5kb20uZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCIgXCIpKSxhLmluc2VydERhdGFzZXRGcmFnKHUsZixyKSksbT0wO3M9dC5zdGFydERhdGFzZXRbbV07bSsrKWQ9c1thLmNvbmZpZy5kYXRhLnVpZEtleV0sbD1hLmNhY2hlW2RdLHQuc2hvdy5pbmRleE9mKGwpPDA/KHQuaGlkZS5wdXNoKGwpLHQudG9IaWRlLnB1c2gobCksdC50b1JlbW92ZS5wdXNoKGwpKTppLnB1c2goZCk7bi5pc0VxdWFsQXJyYXkoaSxvKXx8KHQud2lsbFNvcnQ9ITApLGEuY2FsbEFjdGlvbnMoXCJhZnRlckRpZmZEYXRhc2V0c1wiLGFyZ3VtZW50cyl9LGluc2VydERhdGFzZXRGcmFnOmZ1bmN0aW9uKHQsZSxhKXt2YXIgaT10aGlzLG89ZT9uLmFycmF5RnJvbUxpc3QoaS5kb20ucGFyZW50LmNoaWxkcmVuKS5pbmRleE9mKGUpOmkudGFyZ2V0cy5sZW5ndGg7Zm9yKGkuZG9tLnBhcmVudC5pbnNlcnRCZWZvcmUodCxlKTthLmxlbmd0aDspaS50YXJnZXRzLnNwbGljZShvLDAsYS5zaGlmdCgpKSxvKyt9LHdpbGxTb3J0OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxhPSExO3JldHVybiBhPSEhKG4uY29uZmlnLmJlaGF2aW9yLmxpdmVTb3J0fHxcInJhbmRvbVwiPT09dC5vcmRlcnx8dC5hdHRyaWJ1dGUhPT1lLmF0dHJpYnV0ZXx8dC5vcmRlciE9PWUub3JkZXJ8fHQuY29sbGVjdGlvbiE9PWUuY29sbGVjdGlvbnx8bnVsbD09PXQubmV4dCYmZS5uZXh0fHx0Lm5leHQmJm51bGw9PT1lLm5leHQpfHwhKCF0Lm5leHR8fCFlLm5leHQpJiZuLndpbGxTb3J0KHQubmV4dCxlLm5leHQpLG4uY2FsbEZpbHRlcnMoXCJyZXN1bHRXaWxsU29ydFwiLGEsYXJndW1lbnRzKX0sc2hvdzpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHQuZmlsdGVyKFwiYWxsXCIpfSxoaWRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gdC5maWx0ZXIoXCJub25lXCIpfSxpc01peGluZzpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHQuaXNCdXN5fSxmaWx0ZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5wYXJzZUZpbHRlckFyZ3MoYXJndW1lbnRzKTtyZXR1cm4gdC5tdWx0aW1peCh7ZmlsdGVyOmUuY29tbWFuZH0sZS5hbmltYXRlLGUuY2FsbGJhY2spfSx0b2dnbGVPbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LnBhcnNlRmlsdGVyQXJncyhhcmd1bWVudHMpLG49ZS5jb21tYW5kLnNlbGVjdG9yLGE9XCJcIjtyZXR1cm4gdC5pc1RvZ2dsaW5nPSEwLHQudG9nZ2xlQXJyYXkuaW5kZXhPZihuKTwwJiZ0LnRvZ2dsZUFycmF5LnB1c2gobiksYT10LmdldFRvZ2dsZVNlbGVjdG9yKCksdC5tdWx0aW1peCh7ZmlsdGVyOmF9LGUuYW5pbWF0ZSxlLmNhbGxiYWNrKX0sdG9nZ2xlT2ZmOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQucGFyc2VGaWx0ZXJBcmdzKGFyZ3VtZW50cyksbj1lLmNvbW1hbmQuc2VsZWN0b3IsYT10LnRvZ2dsZUFycmF5LmluZGV4T2YobiksaT1cIlwiO3JldHVybiB0LmlzVG9nZ2xpbmc9ITAsYT4tMSYmdC50b2dnbGVBcnJheS5zcGxpY2UoYSwxKSxpPXQuZ2V0VG9nZ2xlU2VsZWN0b3IoKSx0Lm11bHRpbWl4KHtmaWx0ZXI6aX0sZS5hbmltYXRlLGUuY2FsbGJhY2spfSxzb3J0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQucGFyc2VTb3J0QXJncyhhcmd1bWVudHMpO3JldHVybiB0Lm11bHRpbWl4KHtzb3J0OmUuY29tbWFuZH0sZS5hbmltYXRlLGUuY2FsbGJhY2spfSxjaGFuZ2VMYXlvdXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5wYXJzZUNoYW5nZUxheW91dEFyZ3MoYXJndW1lbnRzKTtyZXR1cm4gdC5tdWx0aW1peCh7Y2hhbmdlTGF5b3V0OmUuY29tbWFuZH0sZS5hbmltYXRlLGUuY2FsbGJhY2spfSxkYXRhc2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxuPXQucGFyc2VEYXRhc2V0QXJncyhhcmd1bWVudHMpLGE9bnVsbCxpPW51bGwsbz0hMTtyZXR1cm4gdC5jYWxsQWN0aW9ucyhcImJlZm9yZURhdGFzZXRcIixhcmd1bWVudHMpLHQuaXNCdXN5PyhpPW5ldyBlLlF1ZXVlSXRlbSxpLmFyZ3M9YXJndW1lbnRzLGkuaW5zdHJ1Y3Rpb249bix0LnF1ZXVlTWl4KGkpKToobi5jYWxsYmFjayYmKHQudXNlckNhbGxiYWNrPW4uY2FsbGJhY2spLG89bi5hbmltYXRlXnQuY29uZmlnLmFuaW1hdGlvbi5lbmFibGU/bi5hbmltYXRlOnQuY29uZmlnLmFuaW1hdGlvbi5lbmFibGUsYT10LmdldERhdGFPcGVyYXRpb24obi5jb21tYW5kLmRhdGFzZXQpLHQuZ29NaXgobyxhKSl9LG11bHRpbWl4OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxuPW51bGwsYT0hMSxpPW51bGwsbz10LnBhcnNlTXVsdGltaXhBcmdzKGFyZ3VtZW50cyk7cmV0dXJuIHQuY2FsbEFjdGlvbnMoXCJiZWZvcmVNdWx0aW1peFwiLGFyZ3VtZW50cyksdC5pc0J1c3k/KGk9bmV3IGUuUXVldWVJdGVtLGkuYXJncz1hcmd1bWVudHMsaS5pbnN0cnVjdGlvbj1vLGkudHJpZ2dlckVsZW1lbnQ9dC5sYXN0Q2xpY2tlZCxpLmlzVG9nZ2xpbmc9dC5pc1RvZ2dsaW5nLHQucXVldWVNaXgoaSkpOihuPXQuZ2V0T3BlcmF0aW9uKG8uY29tbWFuZCksdC5jb25maWcuY29udHJvbHMuZW5hYmxlJiYoby5jb21tYW5kLmZpbHRlciYmIXQuaXNUb2dnbGluZyYmKHQudG9nZ2xlQXJyYXkubGVuZ3RoPTAsdC5idWlsZFRvZ2dsZUFycmF5KG4uY29tbWFuZCkpLHQucXVldWUubGVuZ3RoPDEmJnQudXBkYXRlQ29udHJvbHMobi5jb21tYW5kKSksby5jYWxsYmFjayYmKHQudXNlckNhbGxiYWNrPW8uY2FsbGJhY2spLGE9by5hbmltYXRlXnQuY29uZmlnLmFuaW1hdGlvbi5lbmFibGU/by5hbmltYXRlOnQuY29uZmlnLmFuaW1hdGlvbi5lbmFibGUsdC5jYWxsRmlsdGVycyhcIm9wZXJhdGlvbk11bHRpbWl4XCIsbixhcmd1bWVudHMpLHQuZ29NaXgoYSxuKSl9LGdldE9wZXJhdGlvbjpmdW5jdGlvbih0KXt2YXIgYT10aGlzLGk9dC5zb3J0LG89dC5maWx0ZXIscj10LmNoYW5nZUxheW91dCxzPXQucmVtb3ZlLGw9dC5pbnNlcnQsYz1uZXcgZS5PcGVyYXRpb247cmV0dXJuIGM9YS5jYWxsRmlsdGVycyhcIm9wZXJhdGlvblVubWFwcGVkR2V0T3BlcmF0aW9uXCIsYyxhcmd1bWVudHMpLGMuaWQ9bi5yYW5kb21IZXgoKSxjLmNvbW1hbmQ9dCxjLnN0YXJ0U3RhdGU9YS5zdGF0ZSxjLnRyaWdnZXJFbGVtZW50PWEubGFzdENsaWNrZWQsYS5pc0J1c3k/KGEuY29uZmlnLmRlYnVnLnNob3dXYXJuaW5ncyYmY29uc29sZS53YXJuKGUubWVzc2FnZXMud2FybmluZ0dldE9wZXJhdGlvbkluc3RhbmNlQnVzeSgpKSxudWxsKToobCYmYS5pbnNlcnRUYXJnZXRzKGwsYykscyYmKGMudG9SZW1vdmU9cy50YXJnZXRzKSxjLnN0YXJ0U29ydD1jLm5ld1NvcnQ9Yy5zdGFydFN0YXRlLmFjdGl2ZVNvcnQsYy5zdGFydE9yZGVyPWMubmV3T3JkZXI9YS50YXJnZXRzLGkmJihjLnN0YXJ0U29ydD1jLnN0YXJ0U3RhdGUuYWN0aXZlU29ydCxjLm5ld1NvcnQ9aSxjLndpbGxTb3J0PWEud2lsbFNvcnQoaSxjLnN0YXJ0U3RhdGUuYWN0aXZlU29ydCksYy53aWxsU29ydCYmYS5zb3J0T3BlcmF0aW9uKGMpKSxjLnN0YXJ0RmlsdGVyPWMuc3RhcnRTdGF0ZS5hY3RpdmVGaWx0ZXIsbz9jLm5ld0ZpbHRlcj1vOmMubmV3RmlsdGVyPW4uZXh0ZW5kKG5ldyBlLkNvbW1hbmRGaWx0ZXIsYy5zdGFydEZpbHRlciksXCJhbGxcIj09PWMubmV3RmlsdGVyLnNlbGVjdG9yP2MubmV3RmlsdGVyLnNlbGVjdG9yPWEuY29uZmlnLnNlbGVjdG9ycy50YXJnZXQ6XCJub25lXCI9PT1jLm5ld0ZpbHRlci5zZWxlY3RvciYmKGMubmV3RmlsdGVyLnNlbGVjdG9yPVwiXCIpLGEuZmlsdGVyT3BlcmF0aW9uKGMpLGMuc3RhcnRDb250YWluZXJDbGFzc05hbWU9Yy5zdGFydFN0YXRlLmFjdGl2ZUNvbnRhaW5lckNsYXNzTmFtZSxyPyhjLm5ld0NvbnRhaW5lckNsYXNzTmFtZT1yLmNvbnRhaW5lckNsYXNzTmFtZSxjLm5ld0NvbnRhaW5lckNsYXNzTmFtZSE9PWMuc3RhcnRDb250YWluZXJDbGFzc05hbWUmJihjLndpbGxDaGFuZ2VMYXlvdXQ9ITApKTpjLm5ld0NvbnRhaW5lckNsYXNzTmFtZT1jLnN0YXJ0Q29udGFpbmVyQ2xhc3NOYW1lLGEuY29uZmlnLmFuaW1hdGlvbi5lbmFibGUmJihhLmdldFN0YXJ0TWl4RGF0YShjKSxhLnNldEludGVyKGMpLGMuZG9jU3RhdGU9bi5nZXREb2N1bWVudFN0YXRlKGEuZG9tLmRvY3VtZW50KSxhLmdldEludGVyTWl4RGF0YShjKSxhLnNldEZpbmFsKGMpLGEuZ2V0RmluYWxNaXhEYXRhKGMpLGEucGFyc2VFZmZlY3RzKCksYy5oYXNFZmZlY3Q9YS5oYXNFZmZlY3QoKSxhLmdldFR3ZWVuRGF0YShjKSksYy53aWxsU29ydCYmKGEudGFyZ2V0cz1jLm5ld09yZGVyKSxjLm5ld1N0YXRlPWEuYnVpbGRTdGF0ZShjKSxhLmNhbGxGaWx0ZXJzKFwib3BlcmF0aW9uTWFwcGVkR2V0T3BlcmF0aW9uXCIsYyxhcmd1bWVudHMpKX0sdHdlZW46ZnVuY3Rpb24odCxlKXt2YXIgbj1udWxsLGE9bnVsbCxpPS0xLG89LTE7Zm9yKGU9TWF0aC5taW4oZSwxKSxlPU1hdGgubWF4KGUsMCksbz0wO249dC5zaG93W29dO28rKylhPXQuc2hvd1Bvc0RhdGFbb10sbi5hcHBseVR3ZWVuKGEsZSk7Zm9yKG89MDtuPXQuaGlkZVtvXTtvKyspbi5pc1Nob3duJiZuLmhpZGUoKSwoaT10LnRvSGlkZS5pbmRleE9mKG4pKT4tMSYmKGE9dC50b0hpZGVQb3NEYXRhW2ldLG4uaXNTaG93bnx8bi5zaG93KCksbi5hcHBseVR3ZWVuKGEsZSkpfSxpbnNlcnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5wYXJzZUluc2VydEFyZ3MoYXJndW1lbnRzKTtyZXR1cm4gdC5tdWx0aW1peCh7aW5zZXJ0OmUuY29tbWFuZH0sZS5hbmltYXRlLGUuY2FsbGJhY2spfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5wYXJzZUluc2VydEFyZ3MoYXJndW1lbnRzKTtyZXR1cm4gdC5pbnNlcnQoZS5jb21tYW5kLmNvbGxlY3Rpb24sXCJiZWZvcmVcIixlLmNvbW1hbmQuc2libGluZyxlLmFuaW1hdGUsZS5jYWxsYmFjayl9LGluc2VydEFmdGVyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQucGFyc2VJbnNlcnRBcmdzKGFyZ3VtZW50cyk7cmV0dXJuIHQuaW5zZXJ0KGUuY29tbWFuZC5jb2xsZWN0aW9uLFwiYWZ0ZXJcIixlLmNvbW1hbmQuc2libGluZyxlLmFuaW1hdGUsZS5jYWxsYmFjayl9LHByZXBlbmQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5wYXJzZUluc2VydEFyZ3MoYXJndW1lbnRzKTtyZXR1cm4gdC5pbnNlcnQoMCxlLmNvbW1hbmQuY29sbGVjdGlvbixlLmFuaW1hdGUsZS5jYWxsYmFjayl9LGFwcGVuZDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LnBhcnNlSW5zZXJ0QXJncyhhcmd1bWVudHMpO3JldHVybiB0Lmluc2VydCh0LnN0YXRlLnRvdGFsVGFyZ2V0cyxlLmNvbW1hbmQuY29sbGVjdGlvbixlLmFuaW1hdGUsZS5jYWxsYmFjayl9LHJlbW92ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LnBhcnNlUmVtb3ZlQXJncyhhcmd1bWVudHMpO3JldHVybiB0Lm11bHRpbWl4KHtyZW1vdmU6ZS5jb21tYW5kfSxlLmFuaW1hdGUsZS5jYWxsYmFjayl9LGdldENvbmZpZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLGE9bnVsbDtyZXR1cm4gYT10P24uZ2V0UHJvcGVydHkoZS5jb25maWcsdCk6ZS5jb25maWcsZS5jYWxsRmlsdGVycyhcInZhbHVlR2V0Q29uZmlnXCIsYSxhcmd1bWVudHMpfSxjb25maWd1cmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uZmlndXJlXCIsYXJndW1lbnRzKSxuLmV4dGVuZChlLmNvbmZpZyx0LCEwLCEwKSxlLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25maWd1cmVcIixhcmd1bWVudHMpfSxnZXRTdGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsYT1udWxsO3JldHVybiBhPW5ldyBlLlN0YXRlLG4uZXh0ZW5kKGEsdC5zdGF0ZSksbi5mcmVlemUoYSksdC5jYWxsRmlsdGVycyhcInN0YXRlR2V0U3RhdGVcIixhLGFyZ3VtZW50cyl9LGZvcmNlUmVmcmVzaDpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dC5pbmRleFRhcmdldHMoKX0sZm9yY2VSZW5kZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9bnVsbCxuPW51bGwsYT1cIlwiO2ZvcihhIGluIHQuY2FjaGUpZT10LmNhY2hlW2FdLG49ZS5yZW5kZXIoZS5kYXRhKSxuIT09ZS5kb20uZWwmJihlLmlzSW5Eb20mJihlLnVuYmluZEV2ZW50cygpLHQuZG9tLnBhcmVudC5yZXBsYWNlQ2hpbGQobixlLmRvbS5lbCkpLGUuaXNTaG93bnx8KG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksZS5kb20uZWw9bixlLmlzSW5Eb20mJmUuYmluZEV2ZW50cygpKTt0LnN0YXRlPXQuYnVpbGRTdGF0ZSh0Lmxhc3RPcGVyYXRpb24pfSxkZXN0cm95OmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMsYT1udWxsLGk9bnVsbCxvPTA7Zm9yKG4uY2FsbEFjdGlvbnMoXCJiZWZvcmVEZXN0cm95XCIsYXJndW1lbnRzKSxvPTA7YT1uLmNvbnRyb2xzW29dO28rKylhLnJlbW92ZUJpbmRpbmcobik7Zm9yKG89MDtpPW4udGFyZ2V0c1tvXTtvKyspdCYmaS5zaG93KCksaS51bmJpbmRFdmVudHMoKTtuLmRvbS5jb250YWluZXIuaWQubWF0Y2goL15NaXhJdFVwLykmJm4uZG9tLmNvbnRhaW5lci5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKSxkZWxldGUgZS5pbnN0YW5jZXNbbi5pZF0sbi5jYWxsQWN0aW9ucyhcImFmdGVyRGVzdHJveVwiLGFyZ3VtZW50cyl9fSksZS5JTW92ZURhdGE9ZnVuY3Rpb24oKXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLHRoaXMucG9zSW49bnVsbCx0aGlzLnBvc091dD1udWxsLHRoaXMub3BlcmF0aW9uPW51bGwsdGhpcy5jYWxsYmFjaz1udWxsLHRoaXMuc3RhdHVzQ2hhbmdlPVwiXCIsdGhpcy5kdXJhdGlvbj0tMSx0aGlzLnN0YWdnZXJJbmRleD0tMSx0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksbi5zZWFsKHRoaXMpfSxlLkJhc2VTdGF0aWMuY2FsbChlLklNb3ZlRGF0YSksZS5JTW92ZURhdGEucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5JTW92ZURhdGEucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUuSU1vdmVEYXRhLGUuVGFyZ2V0RG9tPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLmVsPW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5UYXJnZXREb20pLGUuVGFyZ2V0RG9tLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuVGFyZ2V0RG9tLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLlRhcmdldERvbSxlLlRhcmdldD1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5pZD1cIlwiLHRoaXMuc29ydFN0cmluZz1cIlwiLHRoaXMubWl4ZXI9bnVsbCx0aGlzLmNhbGxiYWNrPW51bGwsdGhpcy5pc1Nob3duPSExLHRoaXMuaXNCb3VuZD0hMSx0aGlzLmlzRXhjbHVkZWQ9ITEsdGhpcy5pc0luRG9tPSExLHRoaXMuaGFuZGxlcj1udWxsLHRoaXMub3BlcmF0aW9uPW51bGwsdGhpcy5kYXRhPW51bGwsdGhpcy5kb209bmV3IGUuVGFyZ2V0RG9tLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuVGFyZ2V0KSxlLlRhcmdldC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxuLmV4dGVuZChlLlRhcmdldC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOmUuVGFyZ2V0LGluaXQ6ZnVuY3Rpb24odCxuLGEpe3ZhciBpPXRoaXMsbz1cIlwiO2lmKGkuY2FsbEFjdGlvbnMoXCJiZWZvcmVJbml0XCIsYXJndW1lbnRzKSxpLm1peGVyPW4sdHx8KHQ9aS5yZW5kZXIoYSkpLGkuY2FjaGVEb20odCksaS5iaW5kRXZlbnRzKCksXCJub25lXCIhPT1pLmRvbS5lbC5zdHlsZS5kaXNwbGF5JiYoaS5pc1Nob3duPSEwKSxhJiZuLmNvbmZpZy5kYXRhLnVpZEtleSl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mKG89YVtuLmNvbmZpZy5kYXRhLnVpZEtleV0pfHxvLnRvU3RyaW5nKCkubGVuZ3RoPDEpdGhyb3cgbmV3IFR5cGVFcnJvcihlLm1lc3NhZ2VzLmVycm9yRGF0YXNldEludmFsaWRVaWRLZXkoe3VpZEtleTpuLmNvbmZpZy5kYXRhLnVpZEtleX0pKTtpLmlkPW8saS5kYXRhPWEsbi5jYWNoZVtvXT1pfWkuY2FsbEFjdGlvbnMoXCJhZnRlckluaXRcIixhcmd1bWVudHMpfSxyZW5kZXI6ZnVuY3Rpb24odCl7dmFyIGE9dGhpcyxpPW51bGwsbz1udWxsLHI9bnVsbCxzPVwiXCI7aWYoYS5jYWxsQWN0aW9ucyhcImJlZm9yZVJlbmRlclwiLGFyZ3VtZW50cyksaT1hLmNhbGxGaWx0ZXJzKFwicmVuZGVyUmVuZGVyXCIsYS5taXhlci5jb25maWcucmVuZGVyLnRhcmdldCxhcmd1bWVudHMpLFwiZnVuY3Rpb25cIiE9dHlwZW9mIGkpdGhyb3cgbmV3IFR5cGVFcnJvcihlLm1lc3NhZ2VzLmVycm9yRGF0YXNldFJlbmRlcmVyTm90U2V0KCkpO3JldHVybiBzPWkodCkscyYmXCJvYmplY3RcIj09dHlwZW9mIHMmJm4uaXNFbGVtZW50KHMpP289czpcInN0cmluZ1wiPT10eXBlb2YgcyYmKHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxyLmlubmVySFRNTD1zLG89ci5maXJzdEVsZW1lbnRDaGlsZCksYS5jYWxsRmlsdGVycyhcImVsUmVuZGVyXCIsbyxhcmd1bWVudHMpfSxjYWNoZURvbTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuY2FsbEFjdGlvbnMoXCJiZWZvcmVDYWNoZURvbVwiLGFyZ3VtZW50cyksZS5kb20uZWw9dCxlLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDYWNoZURvbVwiLGFyZ3VtZW50cyl9LGdldFNvcnRTdHJpbmc6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZG9tLmVsLmdldEF0dHJpYnV0ZShcImRhdGEtXCIrdCl8fFwiXCI7ZS5jYWxsQWN0aW9ucyhcImJlZm9yZUdldFNvcnRTdHJpbmdcIixhcmd1bWVudHMpLG49aXNOYU4oMSpuKT9uLnRvTG93ZXJDYXNlKCk6MSpuLGUuc29ydFN0cmluZz1uLGUuY2FsbEFjdGlvbnMoXCJhZnRlckdldFNvcnRTdHJpbmdcIixhcmd1bWVudHMpfSxzaG93OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LmNhbGxBY3Rpb25zKFwiYmVmb3JlU2hvd1wiLGFyZ3VtZW50cyksdC5pc1Nob3dufHwodC5kb20uZWwuc3R5bGUuZGlzcGxheT1cIlwiLHQuaXNTaG93bj0hMCksdC5jYWxsQWN0aW9ucyhcImFmdGVyU2hvd1wiLGFyZ3VtZW50cyl9LGhpZGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuY2FsbEFjdGlvbnMoXCJiZWZvcmVIaWRlXCIsYXJndW1lbnRzKSx0LmlzU2hvd24mJih0LmRvbS5lbC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLHQuaXNTaG93bj0hMSksdC5jYWxsQWN0aW9ucyhcImFmdGVySGlkZVwiLGFyZ3VtZW50cyl9LG1vdmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLmNhbGxBY3Rpb25zKFwiYmVmb3JlTW92ZVwiLGFyZ3VtZW50cyksZS5pc0V4Y2x1ZGVkfHxlLm1peGVyLnRhcmdldHNNb3ZlZCsrLGUuYXBwbHlTdHlsZXNJbih0KSxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24oKXtlLmFwcGx5U3R5bGVzT3V0KHQpfSksZS5jYWxsQWN0aW9ucyhcImFmdGVyTW92ZVwiLGFyZ3VtZW50cyl9LGFwcGx5VHdlZW46ZnVuY3Rpb24odCxuKXt2YXIgYT10aGlzLGk9XCJcIixvPW51bGwscj10LnBvc0luLHM9W10sbD1uZXcgZS5TdHlsZURhdGEsYz0tMTtmb3IoYS5jYWxsQWN0aW9ucyhcImJlZm9yZUFwcGx5VHdlZW5cIixhcmd1bWVudHMpLGwueD1yLngsbC55PXIueSwwPT09bj9hLmhpZGUoKTphLmlzU2hvd258fGEuc2hvdygpLGM9MDtpPWUuZmVhdHVyZXMuVFdFRU5BQkxFW2NdO2MrKylpZihvPXQudHdlZW5EYXRhW2ldLFwieFwiPT09aSl7aWYoIW8pY29udGludWU7bC54PXIueCtvKm59ZWxzZSBpZihcInlcIj09PWkpe2lmKCFvKWNvbnRpbnVlO2wueT1yLnkrbypufWVsc2UgaWYobyBpbnN0YW5jZW9mIGUuVHJhbnNmb3JtRGF0YSl7aWYoIW8udmFsdWUpY29udGludWU7bFtpXS52YWx1ZT1yW2ldLnZhbHVlK28udmFsdWUqbixsW2ldLnVuaXQ9by51bml0LHMucHVzaChpK1wiKFwiK2xbaV0udmFsdWUrby51bml0K1wiKVwiKX1lbHNle2lmKCFvKWNvbnRpbnVlO2xbaV09cltpXStvKm4sYS5kb20uZWwuc3R5bGVbaV09bFtpXX0obC54fHxsLnkpJiZzLnVuc2hpZnQoXCJ0cmFuc2xhdGUoXCIrbC54K1wicHgsIFwiK2wueStcInB4KVwiKSxzLmxlbmd0aCYmKGEuZG9tLmVsLnN0eWxlW2UuZmVhdHVyZXMudHJhbnNmb3JtUHJvcF09cy5qb2luKFwiIFwiKSksYS5jYWxsQWN0aW9ucyhcImFmdGVyQXBwbHlUd2VlblwiLGFyZ3VtZW50cyl9LGFwcGx5U3R5bGVzSW46ZnVuY3Rpb24odCl7dmFyIG49dGhpcyxhPXQucG9zSW4saT0xIT09bi5taXhlci5lZmZlY3RzSW4ub3BhY2l0eSxvPVtdO24uY2FsbEFjdGlvbnMoXCJiZWZvcmVBcHBseVN0eWxlc0luXCIsYXJndW1lbnRzKSxvLnB1c2goXCJ0cmFuc2xhdGUoXCIrYS54K1wicHgsIFwiK2EueStcInB4KVwiKSxuLm1peGVyLmNvbmZpZy5hbmltYXRpb24uYW5pbWF0ZVJlc2l6ZVRhcmdldHMmJihcInNob3dcIiE9PXQuc3RhdHVzQ2hhbmdlJiYobi5kb20uZWwuc3R5bGUud2lkdGg9YS53aWR0aCtcInB4XCIsbi5kb20uZWwuc3R5bGUuaGVpZ2h0PWEuaGVpZ2h0K1wicHhcIiksbi5kb20uZWwuc3R5bGUubWFyZ2luUmlnaHQ9YS5tYXJnaW5SaWdodCtcInB4XCIsbi5kb20uZWwuc3R5bGUubWFyZ2luQm90dG9tPWEubWFyZ2luQm90dG9tK1wicHhcIiksaSYmKG4uZG9tLmVsLnN0eWxlLm9wYWNpdHk9YS5vcGFjaXR5KSxcInNob3dcIj09PXQuc3RhdHVzQ2hhbmdlJiYobz1vLmNvbmNhdChuLm1peGVyLnRyYW5zZm9ybUluKSksbi5kb20uZWwuc3R5bGVbZS5mZWF0dXJlcy50cmFuc2Zvcm1Qcm9wXT1vLmpvaW4oXCIgXCIpLG4uY2FsbEFjdGlvbnMoXCJhZnRlckFwcGx5U3R5bGVzSW5cIixhcmd1bWVudHMpfSxhcHBseVN0eWxlc091dDpmdW5jdGlvbih0KXt2YXIgbj10aGlzLGE9W10saT1bXSxvPW4ubWl4ZXIuY29uZmlnLmFuaW1hdGlvbi5hbmltYXRlUmVzaXplVGFyZ2V0cyxyPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBuLm1peGVyLmVmZmVjdHNJbi5vcGFjaXR5O2lmKG4uY2FsbEFjdGlvbnMoXCJiZWZvcmVBcHBseVN0eWxlc091dFwiLGFyZ3VtZW50cyksYS5wdXNoKG4ud3JpdGVUcmFuc2l0aW9uUnVsZShlLmZlYXR1cmVzLnRyYW5zZm9ybVJ1bGUsdC5zdGFnZ2VySW5kZXgpKSxcIm5vbmVcIiE9PXQuc3RhdHVzQ2hhbmdlJiZhLnB1c2gobi53cml0ZVRyYW5zaXRpb25SdWxlKFwib3BhY2l0eVwiLHQuc3RhZ2dlckluZGV4LHQuZHVyYXRpb24pKSxvJiYoYS5wdXNoKG4ud3JpdGVUcmFuc2l0aW9uUnVsZShcIndpZHRoXCIsdC5zdGFnZ2VySW5kZXgsdC5kdXJhdGlvbikpLGEucHVzaChuLndyaXRlVHJhbnNpdGlvblJ1bGUoXCJoZWlnaHRcIix0LnN0YWdnZXJJbmRleCx0LmR1cmF0aW9uKSksYS5wdXNoKG4ud3JpdGVUcmFuc2l0aW9uUnVsZShcIm1hcmdpblwiLHQuc3RhZ2dlckluZGV4LHQuZHVyYXRpb24pKSksIXQuY2FsbGJhY2spcmV0dXJuIG4ubWl4ZXIudGFyZ2V0c0ltbW92YWJsZSsrLHZvaWQobi5taXhlci50YXJnZXRzTW92ZWQ9PT1uLm1peGVyLnRhcmdldHNJbW1vdmFibGUmJm4ubWl4ZXIuY2xlYW5VcCh0Lm9wZXJhdGlvbikpO3N3aXRjaChuLm9wZXJhdGlvbj10Lm9wZXJhdGlvbixuLmNhbGxiYWNrPXQuY2FsbGJhY2ssIW4uaXNFeGNsdWRlZCYmbi5taXhlci50YXJnZXRzQm91bmQrKyxuLmlzQm91bmQ9ITAsbi5hcHBseVRyYW5zaXRpb24oYSksbyYmdC5wb3NPdXQud2lkdGg+MCYmdC5wb3NPdXQuaGVpZ2h0PjAmJihuLmRvbS5lbC5zdHlsZS53aWR0aD10LnBvc091dC53aWR0aCtcInB4XCIsbi5kb20uZWwuc3R5bGUuaGVpZ2h0PXQucG9zT3V0LmhlaWdodCtcInB4XCIsbi5kb20uZWwuc3R5bGUubWFyZ2luUmlnaHQ9dC5wb3NPdXQubWFyZ2luUmlnaHQrXCJweFwiLG4uZG9tLmVsLnN0eWxlLm1hcmdpbkJvdHRvbT10LnBvc091dC5tYXJnaW5Cb3R0b20rXCJweFwiKSxuLm1peGVyLmNvbmZpZy5hbmltYXRpb24ubnVkZ2V8fFwiaGlkZVwiIT09dC5zdGF0dXNDaGFuZ2V8fGkucHVzaChcInRyYW5zbGF0ZShcIit0LnBvc091dC54K1wicHgsIFwiK3QucG9zT3V0LnkrXCJweClcIiksdC5zdGF0dXNDaGFuZ2Upe2Nhc2VcImhpZGVcIjpyJiYobi5kb20uZWwuc3R5bGUub3BhY2l0eT1uLm1peGVyLmVmZmVjdHNPdXQub3BhY2l0eSksaT1pLmNvbmNhdChuLm1peGVyLnRyYW5zZm9ybU91dCk7YnJlYWs7Y2FzZVwic2hvd1wiOnImJihuLmRvbS5lbC5zdHlsZS5vcGFjaXR5PTEpfShuLm1peGVyLmNvbmZpZy5hbmltYXRpb24ubnVkZ2V8fCFuLm1peGVyLmNvbmZpZy5hbmltYXRpb24ubnVkZ2UmJlwiaGlkZVwiIT09dC5zdGF0dXNDaGFuZ2UpJiZpLnB1c2goXCJ0cmFuc2xhdGUoXCIrdC5wb3NPdXQueCtcInB4LCBcIit0LnBvc091dC55K1wicHgpXCIpLG4uZG9tLmVsLnN0eWxlW2UuZmVhdHVyZXMudHJhbnNmb3JtUHJvcF09aS5qb2luKFwiIFwiKSxuLmNhbGxBY3Rpb25zKFwiYWZ0ZXJBcHBseVN0eWxlc091dFwiLGFyZ3VtZW50cyl9LHdyaXRlVHJhbnNpdGlvblJ1bGU6ZnVuY3Rpb24odCxlLG4pe3ZhciBhPXRoaXMsaT1hLmdldERlbGF5KGUpLG89XCJcIjtyZXR1cm4gbz10K1wiIFwiKyhuPjA/bjphLm1peGVyLmNvbmZpZy5hbmltYXRpb24uZHVyYXRpb24pK1wibXMgXCIraStcIm1zIFwiKyhcIm9wYWNpdHlcIj09PXQ/XCJsaW5lYXJcIjphLm1peGVyLmNvbmZpZy5hbmltYXRpb24uZWFzaW5nKSxhLmNhbGxGaWx0ZXJzKFwicnVsZVdyaXRlVHJhbnNpdGlvblJ1bGVcIixvLGFyZ3VtZW50cyl9LGdldERlbGF5OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj0tMTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlLm1peGVyLmNvbmZpZy5hbmltYXRpb24uc3RhZ2dlclNlcXVlbmNlJiYodD1lLm1peGVyLmNvbmZpZy5hbmltYXRpb24uc3RhZ2dlclNlcXVlbmNlLmNhbGwoZSx0LGUuc3RhdGUpKSxuPWUubWl4ZXIuc3RhZ2dlckR1cmF0aW9uP3QqZS5taXhlci5zdGFnZ2VyRHVyYXRpb246MCxlLmNhbGxGaWx0ZXJzKFwiZGVsYXlHZXREZWxheVwiLG4sYXJndW1lbnRzKX0sYXBwbHlUcmFuc2l0aW9uOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMsYT10LmpvaW4oXCIsIFwiKTtuLmNhbGxBY3Rpb25zKFwiYmVmb3JlQXBwbHlUcmFuc2l0aW9uXCIsYXJndW1lbnRzKSxuLmRvbS5lbC5zdHlsZVtlLmZlYXR1cmVzLnRyYW5zaXRpb25Qcm9wXT1hLG4uY2FsbEFjdGlvbnMoXCJhZnRlckFwcGx5VHJhbnNpdGlvblwiLGFyZ3VtZW50cyl9LGhhbmRsZVRyYW5zaXRpb25FbmQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXQucHJvcGVydHlOYW1lLGE9ZS5taXhlci5jb25maWcuYW5pbWF0aW9uLmFuaW1hdGVSZXNpemVUYXJnZXRzO2UuY2FsbEFjdGlvbnMoXCJiZWZvcmVIYW5kbGVUcmFuc2l0aW9uRW5kXCIsYXJndW1lbnRzKSxlLmlzQm91bmQmJnQudGFyZ2V0Lm1hdGNoZXMoZS5taXhlci5jb25maWcuc2VsZWN0b3JzLnRhcmdldCkmJihuLmluZGV4T2YoXCJ0cmFuc2Zvcm1cIik+LTF8fG4uaW5kZXhPZihcIm9wYWNpdHlcIik+LTF8fGEmJm4uaW5kZXhPZihcImhlaWdodFwiKT4tMXx8YSYmbi5pbmRleE9mKFwid2lkdGhcIik+LTF8fGEmJm4uaW5kZXhPZihcIm1hcmdpblwiKT4tMSkmJihlLmNhbGxiYWNrLmNhbGwoZSxlLm9wZXJhdGlvbiksZS5pc0JvdW5kPSExLGUuY2FsbGJhY2s9bnVsbCxlLm9wZXJhdGlvbj1udWxsKSxlLmNhbGxBY3Rpb25zKFwiYWZ0ZXJIYW5kbGVUcmFuc2l0aW9uRW5kXCIsYXJndW1lbnRzKX0sZXZlbnRCdXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztzd2l0Y2goZS5jYWxsQWN0aW9ucyhcImJlZm9yZUV2ZW50QnVzXCIsYXJndW1lbnRzKSx0LnR5cGUpe2Nhc2VcIndlYmtpdFRyYW5zaXRpb25FbmRcIjpjYXNlXCJ0cmFuc2l0aW9uZW5kXCI6ZS5oYW5kbGVUcmFuc2l0aW9uRW5kKHQpfWUuY2FsbEFjdGlvbnMoXCJhZnRlckV2ZW50QnVzXCIsYXJndW1lbnRzKX0sdW5iaW5kRXZlbnRzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LmNhbGxBY3Rpb25zKFwiYmVmb3JlVW5iaW5kRXZlbnRzXCIsYXJndW1lbnRzKSxuLm9mZih0LmRvbS5lbCxcIndlYmtpdFRyYW5zaXRpb25FbmRcIix0LmhhbmRsZXIpLG4ub2ZmKHQuZG9tLmVsLFwidHJhbnNpdGlvbmVuZFwiLHQuaGFuZGxlciksdC5jYWxsQWN0aW9ucyhcImFmdGVyVW5iaW5kRXZlbnRzXCIsYXJndW1lbnRzKX0sYmluZEV2ZW50czpmdW5jdGlvbigpe3ZhciB0PXRoaXMsYT1cIlwiO3QuY2FsbEFjdGlvbnMoXCJiZWZvcmVCaW5kRXZlbnRzXCIsYXJndW1lbnRzKSxhPVwid2Via2l0XCI9PT1lLmZlYXR1cmVzLnRyYW5zaXRpb25QcmVmaXg/XCJ3ZWJraXRUcmFuc2l0aW9uRW5kXCI6XCJ0cmFuc2l0aW9uZW5kXCIsdC5oYW5kbGVyPWZ1bmN0aW9uKGUpe3JldHVybiB0LmV2ZW50QnVzKGUpfSxuLm9uKHQuZG9tLmVsLGEsdC5oYW5kbGVyKSx0LmNhbGxBY3Rpb25zKFwiYWZ0ZXJCaW5kRXZlbnRzXCIsYXJndW1lbnRzKX0sZ2V0UG9zRGF0YTpmdW5jdGlvbihuKXt2YXIgYT10aGlzLGk9e30sbz1udWxsLHI9bmV3IGUuU3R5bGVEYXRhO3JldHVybiBhLmNhbGxBY3Rpb25zKFwiYmVmb3JlR2V0UG9zRGF0YVwiLGFyZ3VtZW50cyksci54PWEuZG9tLmVsLm9mZnNldExlZnQsci55PWEuZG9tLmVsLm9mZnNldFRvcCwoYS5taXhlci5jb25maWcuYW5pbWF0aW9uLmFuaW1hdGVSZXNpemVUYXJnZXRzfHxuKSYmKG89YS5kb20uZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksci50b3A9by50b3Asci5yaWdodD1vLnJpZ2h0LHIuYm90dG9tPW8uYm90dG9tLHIubGVmdD1vLmxlZnQsci53aWR0aD1vLndpZHRoLHIuaGVpZ2h0PW8uaGVpZ2h0KSxhLm1peGVyLmNvbmZpZy5hbmltYXRpb24uYW5pbWF0ZVJlc2l6ZVRhcmdldHMmJihpPXQuZ2V0Q29tcHV0ZWRTdHlsZShhLmRvbS5lbCksci5tYXJnaW5Cb3R0b209cGFyc2VGbG9hdChpLm1hcmdpbkJvdHRvbSksci5tYXJnaW5SaWdodD1wYXJzZUZsb2F0KGkubWFyZ2luUmlnaHQpKSxhLmNhbGxGaWx0ZXJzKFwicG9zRGF0YUdldFBvc0RhdGFcIixyLGFyZ3VtZW50cyl9LGNsZWFuVXA6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuY2FsbEFjdGlvbnMoXCJiZWZvcmVDbGVhblVwXCIsYXJndW1lbnRzKSx0LmRvbS5lbC5zdHlsZVtlLmZlYXR1cmVzLnRyYW5zZm9ybVByb3BdPVwiXCIsdC5kb20uZWwuc3R5bGVbZS5mZWF0dXJlcy50cmFuc2l0aW9uUHJvcF09XCJcIix0LmRvbS5lbC5zdHlsZS5vcGFjaXR5PVwiXCIsdC5taXhlci5jb25maWcuYW5pbWF0aW9uLmFuaW1hdGVSZXNpemVUYXJnZXRzJiYodC5kb20uZWwuc3R5bGUud2lkdGg9XCJcIix0LmRvbS5lbC5zdHlsZS5oZWlnaHQ9XCJcIix0LmRvbS5lbC5zdHlsZS5tYXJnaW5SaWdodD1cIlwiLHQuZG9tLmVsLnN0eWxlLm1hcmdpbkJvdHRvbT1cIlwiKSx0LmNhbGxBY3Rpb25zKFwiYWZ0ZXJDbGVhblVwXCIsYXJndW1lbnRzKX19KSxlLkNvbGxlY3Rpb249ZnVuY3Rpb24odCl7dmFyIGU9bnVsbCxhPS0xO2Zvcih0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIpLGE9MDtlPXRbYV07YSsrKXRoaXNbYV09ZTt0aGlzLmxlbmd0aD10Lmxlbmd0aCx0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksbi5mcmVlemUodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuQ29sbGVjdGlvbiksZS5Db2xsZWN0aW9uLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLG4uZXh0ZW5kKGUuQ29sbGVjdGlvbi5wcm90b3R5cGUse2NvbnN0cnVjdG9yOmUuQ29sbGVjdGlvbixtaXhpdHVwOmZ1bmN0aW9uKHQpe3ZhciBhPXRoaXMsaT1udWxsLG89QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxyPVtdLHM9LTE7Zm9yKHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVNaXhpdHVwXCIpLG8uc2hpZnQoKSxzPTA7aT1hW3NdO3MrKylyLnB1c2goaVt0XS5hcHBseShpLG8pKTtyZXR1cm4gYS5jYWxsRmlsdGVycyhcInByb21pc2VNaXhpdHVwXCIsbi5hbGwocixlLmxpYnJhcmllcyksYXJndW1lbnRzKX19KSxlLk9wZXJhdGlvbj1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5pZD1cIlwiLHRoaXMuYXJncz1bXSx0aGlzLmNvbW1hbmQ9bnVsbCx0aGlzLnNob3dQb3NEYXRhPVtdLHRoaXMudG9IaWRlUG9zRGF0YT1bXSx0aGlzLnN0YXJ0U3RhdGU9bnVsbCx0aGlzLm5ld1N0YXRlPW51bGwsdGhpcy5kb2NTdGF0ZT1udWxsLHRoaXMud2lsbFNvcnQ9ITEsdGhpcy53aWxsQ2hhbmdlTGF5b3V0PSExLHRoaXMuaGFzRWZmZWN0PSExLHRoaXMuaGFzRmFpbGVkPSExLHRoaXMudHJpZ2dlckVsZW1lbnQ9bnVsbCx0aGlzLnNob3c9W10sdGhpcy5oaWRlPVtdLHRoaXMubWF0Y2hpbmc9W10sdGhpcy50b1Nob3c9W10sdGhpcy50b0hpZGU9W10sdGhpcy50b01vdmU9W10sdGhpcy50b1JlbW92ZT1bXSx0aGlzLnN0YXJ0T3JkZXI9W10sdGhpcy5uZXdPcmRlcj1bXSx0aGlzLnN0YXJ0U29ydD1udWxsLHRoaXMubmV3U29ydD1udWxsLHRoaXMuc3RhcnRGaWx0ZXI9bnVsbCx0aGlzLm5ld0ZpbHRlcj1udWxsLHRoaXMuc3RhcnREYXRhc2V0PW51bGwsdGhpcy5uZXdEYXRhc2V0PW51bGwsdGhpcy52aWV3cG9ydERlbHRhWD0wLHRoaXMudmlld3BvcnREZWx0YVk9MCx0aGlzLnN0YXJ0WD0wLHRoaXMuc3RhcnRZPTAsdGhpcy5zdGFydEhlaWdodD0wLHRoaXMuc3RhcnRXaWR0aD0wLHRoaXMubmV3WD0wLHRoaXMubmV3WT0wLHRoaXMubmV3SGVpZ2h0PTAsdGhpcy5uZXdXaWR0aD0wLHRoaXMuc3RhcnRDb250YWluZXJDbGFzc05hbWU9XCJcIix0aGlzLnN0YXJ0RGlzcGxheT1cIlwiLHRoaXMubmV3Q29udGFpbmVyQ2xhc3NOYW1lPVwiXCIsdGhpcy5uZXdEaXNwbGF5PVwiXCIsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5PcGVyYXRpb24pLGUuT3BlcmF0aW9uLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuT3BlcmF0aW9uLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLk9wZXJhdGlvbixlLlN0YXRlPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLmlkPVwiXCIsdGhpcy5hY3RpdmVGaWx0ZXI9bnVsbCx0aGlzLmFjdGl2ZVNvcnQ9bnVsbCx0aGlzLmFjdGl2ZUNvbnRhaW5lckNsYXNzTmFtZT1cIlwiLHRoaXMuY29udGFpbmVyPW51bGwsdGhpcy50YXJnZXRzPVtdLHRoaXMuaGlkZT1bXSx0aGlzLnNob3c9W10sdGhpcy5tYXRjaGluZz1bXSx0aGlzLnRvdGFsVGFyZ2V0cz0tMSx0aGlzLnRvdGFsU2hvdz0tMSx0aGlzLnRvdGFsSGlkZT0tMSx0aGlzLnRvdGFsTWF0Y2hpbmc9LTEsdGhpcy5oYXNGYWlsZWQ9ITEsdGhpcy50cmlnZ2VyRWxlbWVudD1udWxsLHRoaXMuYWN0aXZlRGF0YXNldD1udWxsLHRoaXMuY2FsbEFjdGlvbnMoXCJhZnRlckNvbnN0cnVjdFwiKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuU3RhdGUpLGUuU3RhdGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5CYXNlLnByb3RvdHlwZSksZS5TdGF0ZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5TdGF0ZSxlLlVzZXJJbnN0cnVjdGlvbj1mdW5jdGlvbigpe2UuQmFzZS5jYWxsKHRoaXMpLHRoaXMuY2FsbEFjdGlvbnMoXCJiZWZvcmVDb25zdHJ1Y3RcIiksdGhpcy5jb21tYW5kPXt9LHRoaXMuYW5pbWF0ZT0hMSx0aGlzLmNhbGxiYWNrPW51bGwsdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIpLG4uc2VhbCh0aGlzKX0sZS5CYXNlU3RhdGljLmNhbGwoZS5Vc2VySW5zdHJ1Y3Rpb24pLGUuVXNlckluc3RydWN0aW9uLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuVXNlckluc3RydWN0aW9uLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lLlVzZXJJbnN0cnVjdGlvbixlLk1lc3NhZ2VzPWZ1bmN0aW9uKCl7ZS5CYXNlLmNhbGwodGhpcyksdGhpcy5jYWxsQWN0aW9ucyhcImJlZm9yZUNvbnN0cnVjdFwiKSx0aGlzLkVSUk9SX0ZBQ1RPUllfSU5WQUxJRF9DT05UQUlORVI9XCJbTWl4SXRVcF0gQW4gaW52YWxpZCBzZWxlY3RvciBvciBlbGVtZW50IHJlZmVyZW5jZSB3YXMgcGFzc2VkIHRvIHRoZSBtaXhpdHVwIGZhY3RvcnkgZnVuY3Rpb25cIix0aGlzLkVSUk9SX0ZBQ1RPUllfQ09OVEFJTkVSX05PVF9GT1VORD1cIltNaXhJdFVwXSBUaGUgcHJvdmlkZWQgc2VsZWN0b3IgeWllbGRlZCBubyBjb250YWluZXIgZWxlbWVudFwiLHRoaXMuRVJST1JfQ09ORklHX0lOVkFMSURfQU5JTUFUSU9OX0VGRkVDVFM9XCJbTWl4SXRVcF0gSW52YWxpZCB2YWx1ZSBmb3IgYGFuaW1hdGlvbi5lZmZlY3RzYFwiLHRoaXMuRVJST1JfQ09ORklHX0lOVkFMSURfQ09OVFJPTFNfU0NPUEU9XCJbTWl4SXRVcF0gSW52YWxpZCB2YWx1ZSBmb3IgYGNvbnRyb2xzLnNjb3BlYFwiLHRoaXMuRVJST1JfQ09ORklHX0lOVkFMSURfUFJPUEVSVFk9J1tNaXhpdFVwXSBJbnZhbGlkIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHByb3BlcnR5IFwiJHtlcnJvbmVvdXN9XCIke3N1Z2dlc3Rpb259Jyx0aGlzLkVSUk9SX0NPTkZJR19JTlZBTElEX1BST1BFUlRZX1NVR0dFU1RJT049Jy4gRGlkIHlvdSBtZWFuIFwiJHtwcm9iYWJsZU1hdGNofVwiPycsdGhpcy5FUlJPUl9DT05GSUdfREFUQV9VSURfS0VZX05PVF9TRVQ9XCJbTWl4SXRVcF0gVG8gdXNlIHRoZSBkYXRhc2V0IEFQSSwgYSBVSUQga2V5IG11c3QgYmUgc3BlY2lmaWVkIHVzaW5nIGBkYXRhLnVpZEtleWBcIix0aGlzLkVSUk9SX0RBVEFTRVRfSU5WQUxJRF9VSURfS0VZPSdbTWl4SXRVcF0gVGhlIHNwZWNpZmllZCBVSUQga2V5IFwiJHt1aWRLZXl9XCIgaXMgbm90IHByZXNlbnQgb24gb25lIG9yIG1vcmUgZGF0YXNldCBpdGVtcycsdGhpcy5FUlJPUl9EQVRBU0VUX0RVUExJQ0FURV9VSUQ9J1tNaXhJdFVwXSBUaGUgVUlEIFwiJHt1aWR9XCIgd2FzIGZvdW5kIG9uIHR3byBvciBtb3JlIGRhdGFzZXQgaXRlbXMuIFVJRHMgbXVzdCBiZSB1bmlxdWUuJyx0aGlzLkVSUk9SX0lOU0VSVF9JTlZBTElEX0FSR1VNRU5UUz1cIltNaXhJdFVwXSBQbGVhc2UgcHJvdmlkZXIgZWl0aGVyIGFuIGluZGV4IG9yIGEgc2libGluZyBhbmQgcG9zaXRpb24gdG8gaW5zZXJ0LCBub3QgYm90aFwiLHRoaXMuRVJST1JfSU5TRVJUX1BSRUVYSVNUSU5HX0VMRU1FTlQ9XCJbTWl4SXRVcF0gQW4gZWxlbWVudCB0byBiZSBpbnNlcnRlZCBhbHJlYWR5IGV4aXN0cyBpbiB0aGUgY29udGFpbmVyXCIsdGhpcy5FUlJPUl9GSUxURVJfSU5WQUxJRF9BUkdVTUVOVFM9XCJbTWl4SXRVcF0gUGxlYXNlIHByb3ZpZGUgZWl0aGVyIGEgc2VsZWN0b3Igb3IgY29sbGVjdGlvbiBgLmZpbHRlcigpYCwgbm90IGJvdGhcIix0aGlzLkVSUk9SX0RBVEFTRVRfTk9UX1NFVD1cIltNaXhJdFVwXSBUbyB1c2UgdGhlIGRhdGFzZXQgQVBJIHdpdGggcHJlLXJlbmRlcmVkIHRhcmdldHMsIGEgc3RhcnRpbmcgZGF0YXNldCBtdXN0IGJlIHNldCB1c2luZyBgbG9hZC5kYXRhc2V0YFwiLHRoaXMuRVJST1JfREFUQVNFVF9QUkVSRU5ERVJFRF9NSVNNQVRDSD1cIltNaXhJdFVwXSBgbG9hZC5kYXRhc2V0YCBkb2VzIG5vdCBtYXRjaCBwcmUtcmVuZGVyZWQgdGFyZ2V0c1wiLHRoaXMuRVJST1JfREFUQVNFVF9SRU5ERVJFUl9OT1RfU0VUPVwiW01peEl0VXBdIFRvIGluc2VydCBhbiBlbGVtZW50IHZpYSB0aGUgZGF0YXNldCBBUEksIGEgdGFyZ2V0IHJlbmRlcmVyIGZ1bmN0aW9uIG11c3QgYmUgcHJvdmlkZWQgdG8gYHJlbmRlci50YXJnZXRgXCIsdGhpcy5FUlJPUl9TT1JUX05PTl9FWElTVEVOVF9FTEVNRU5UPVwiW01peEl0VXBdIEFuIGVsZW1lbnQgdG8gYmUgc29ydGVkIGRvZXMgbm90IGFscmVhZHkgZXhpc3QgaW4gdGhlIGNvbnRhaW5lclwiLHRoaXMuV0FSTklOR19GQUNUT1JZX1BSRUVYSVNUSU5HX0lOU1RBTkNFPVwiW01peEl0VXBdIFdBUk5JTkc6IFRoaXMgZWxlbWVudCBhbHJlYWR5IGhhcyBhbiBhY3RpdmUgTWl4SXRVcCBpbnN0YW5jZS4gVGhlIHByb3ZpZGVkIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHdpbGwgYmUgaWdub3JlZC4gSWYgeW91IHdpc2ggdG8gcGVyZm9ybSBhZGRpdGlvbmFsIG1ldGhvZHMgb24gdGhpcyBpbnN0YW5jZSwgcGxlYXNlIGNyZWF0ZSBhIHJlZmVyZW5jZS5cIix0aGlzLldBUk5JTkdfSU5TRVJUX05PX0VMRU1FTlRTPVwiW01peEl0VXBdIFdBUk5JTkc6IE5vIHZhbGlkIGVsZW1lbnRzIHdlcmUgcGFzc2VkIHRvIGAuaW5zZXJ0KClgXCIsdGhpcy5XQVJOSU5HX1JFTU9WRV9OT19FTEVNRU5UUz1cIltNaXhJdFVwXSBXQVJOSU5HOiBObyB2YWxpZCBlbGVtZW50cyB3ZXJlIHBhc3NlZCB0byBgLnJlbW92ZSgpYFwiLHRoaXMuV0FSTklOR19NVUxUSU1JWF9JTlNUQU5DRV9RVUVVRV9GVUxMPVwiW01peEl0VXBdIFdBUk5JTkc6IEFuIG9wZXJhdGlvbiB3YXMgcmVxdWVzdGVkIGJ1dCB0aGUgTWl4SXRVcCBpbnN0YW5jZSB3YXMgYnVzeS4gVGhlIG9wZXJhdGlvbiB3YXMgcmVqZWN0ZWQgYmVjYXVzZSB0aGUgcXVldWUgaXMgZnVsbCBvciBxdWV1aW5nIGlzIGRpc2FibGVkLlwiLHRoaXMuV0FSTklOR19HRVRfT1BFUkFUSU9OX0lOU1RBTkNFX0JVU1k9XCJbTWl4SXRVcF0gV0FSTklORzogT3BlcmF0aW9ucyBjYW4gYmUgYmUgY3JlYXRlZCB3aGlsZSB0aGUgTWl4SXRVcCBpbnN0YW5jZSBpcyBidXN5LlwiLHRoaXMuV0FSTklOR19OT19QUk9NSVNFX0lNUExFTUVOVEFUSU9OPVwiW01peEl0VXBdIFdBUk5JTkc6IE5vIFByb21pc2UgaW1wbGVtZW50YXRpb25zIGNvdWxkIGJlIGZvdW5kLiBJZiB5b3Ugd2lzaCB0byB1c2UgcHJvbWlzZXMgd2l0aCBNaXhJdFVwIHBsZWFzZSBpbnN0YWxsIGFuIEVTNiBQcm9taXNlIHBvbHlmaWxsLlwiLHRoaXMuV0FSTklOR19JTkNPTlNJU1RFTlRfU09SVElOR19BVFRSSUJVVEVTPSdbTWl4SXRVcF0gV0FSTklORzogVGhlIHJlcXVlc3RlZCBzb3J0aW5nIGRhdGEgYXR0cmlidXRlIFwiJHthdHRyaWJ1dGV9XCIgd2FzIG5vdCBwcmVzZW50IG9uIG9uZSBvciBtb3JlIHRhcmdldCBlbGVtZW50cyB3aGljaCBtYXkgcHJvZHVjdCB1bmV4cGVjdGVkIHNvcnQgb3V0cHV0Jyx0aGlzLmNhbGxBY3Rpb25zKFwiYWZ0ZXJDb25zdHJ1Y3RcIiksdGhpcy5jb21waWxlVGVtcGxhdGVzKCksbi5zZWFsKHRoaXMpfSxlLkJhc2VTdGF0aWMuY2FsbChlLk1lc3NhZ2VzKSxlLk1lc3NhZ2VzLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUuQmFzZS5wcm90b3R5cGUpLGUuTWVzc2FnZXMucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUuTWVzc2FnZXMsZS5NZXNzYWdlcy5wcm90b3R5cGUuY29tcGlsZVRlbXBsYXRlcz1mdW5jdGlvbigpe3ZhciB0PVwiXCIsZT1cIlwiO2Zvcih0IGluIHRoaXMpXCJzdHJpbmdcIj09dHlwZW9mKGU9dGhpc1t0XSkmJih0aGlzW24uY2FtZWxDYXNlKHQpXT1uLnRlbXBsYXRlKGUpKX0sZS5tZXNzYWdlcz1uZXcgZS5NZXNzYWdlcyxlLkZhY2FkZT1mdW5jdGlvbih0KXtlLkJhc2UuY2FsbCh0aGlzKSx0aGlzLmNhbGxBY3Rpb25zKFwiYmVmb3JlQ29uc3RydWN0XCIsYXJndW1lbnRzKSx0aGlzLmNvbmZpZ3VyZT10LmNvbmZpZ3VyZS5iaW5kKHQpLHRoaXMuc2hvdz10LnNob3cuYmluZCh0KSx0aGlzLmhpZGU9dC5oaWRlLmJpbmQodCksdGhpcy5maWx0ZXI9dC5maWx0ZXIuYmluZCh0KSx0aGlzLnRvZ2dsZU9uPXQudG9nZ2xlT24uYmluZCh0KSx0aGlzLnRvZ2dsZU9mZj10LnRvZ2dsZU9mZi5iaW5kKHQpLHRoaXMuc29ydD10LnNvcnQuYmluZCh0KSx0aGlzLmNoYW5nZUxheW91dD10LmNoYW5nZUxheW91dC5iaW5kKHQpLHRoaXMubXVsdGltaXg9dC5tdWx0aW1peC5iaW5kKHQpLHRoaXMuZGF0YXNldD10LmRhdGFzZXQuYmluZCh0KSx0aGlzLnR3ZWVuPXQudHdlZW4uYmluZCh0KSx0aGlzLmluc2VydD10Lmluc2VydC5iaW5kKHQpLHRoaXMuaW5zZXJ0QmVmb3JlPXQuaW5zZXJ0QmVmb3JlLmJpbmQodCksdGhpcy5pbnNlcnRBZnRlcj10Lmluc2VydEFmdGVyLmJpbmQodCksdGhpcy5wcmVwZW5kPXQucHJlcGVuZC5iaW5kKHQpLHRoaXMuYXBwZW5kPXQuYXBwZW5kLmJpbmQodCksdGhpcy5yZW1vdmU9dC5yZW1vdmUuYmluZCh0KSx0aGlzLmRlc3Ryb3k9dC5kZXN0cm95LmJpbmQodCksdGhpcy5mb3JjZVJlZnJlc2g9dC5mb3JjZVJlZnJlc2guYmluZCh0KSx0aGlzLmZvcmNlUmVuZGVyPXQuZm9yY2VSZW5kZXIuYmluZCh0KSx0aGlzLmlzTWl4aW5nPXQuaXNNaXhpbmcuYmluZCh0KSx0aGlzLmdldE9wZXJhdGlvbj10LmdldE9wZXJhdGlvbi5iaW5kKHQpLHRoaXMuZ2V0Q29uZmlnPXQuZ2V0Q29uZmlnLmJpbmQodCksdGhpcy5nZXRTdGF0ZT10LmdldFN0YXRlLmJpbmQodCksdGhpcy5jYWxsQWN0aW9ucyhcImFmdGVyQ29uc3RydWN0XCIsYXJndW1lbnRzKSxuLmZyZWV6ZSh0aGlzKSxuLnNlYWwodGhpcyl9LGUuQmFzZVN0YXRpYy5jYWxsKGUuRmFjYWRlKSxlLkZhY2FkZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLkJhc2UucHJvdG90eXBlKSxlLkZhY2FkZS5wcm90b3R5cGUuY29uc3RydWN0b3I9ZS5GYWNhZGUsXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGZ1bmN0aW9uKCl7cmV0dXJuIGV9KTpcInVuZGVmaW5lZFwiIT10eXBlb2YgdC5taXhpdHVwJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0Lm1peGl0dXB8fCh0Lm1peGl0dXA9ZSksZS5CYXNlU3RhdGljLmNhbGwoZS5jb25zdHJ1Y3RvciksZS5OQU1FPVwibWl4aXR1cFwiLGUuQ09SRV9WRVJTSU9OPVwiMy4zLjFcIn0od2luZG93KTsiLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gZmFuY3lCb3ggdjMuNS43XG4vL1xuLy8gTGljZW5zZWQgR1BMdjMgZm9yIG9wZW4gc291cmNlIHVzZVxuLy8gb3IgZmFuY3lCb3ggQ29tbWVyY2lhbCBMaWNlbnNlIGZvciBjb21tZXJjaWFsIHVzZVxuLy9cbi8vIGh0dHA6Ly9mYW5jeWFwcHMuY29tL2ZhbmN5Ym94L1xuLy8gQ29weXJpZ2h0IDIwMTkgZmFuY3lBcHBzXG4vL1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiFmdW5jdGlvbih0LGUsbixvKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKHQsZSl7dmFyIG8saSxhLHM9W10scj0wO3QmJnQuaXNEZWZhdWx0UHJldmVudGVkKCl8fCh0LnByZXZlbnREZWZhdWx0KCksZT1lfHx7fSx0JiZ0LmRhdGEmJihlPWgodC5kYXRhLm9wdGlvbnMsZSkpLG89ZS4kdGFyZ2V0fHxuKHQuY3VycmVudFRhcmdldCkudHJpZ2dlcihcImJsdXJcIiksKGE9bi5mYW5jeWJveC5nZXRJbnN0YW5jZSgpKSYmYS4kdHJpZ2dlciYmYS4kdHJpZ2dlci5pcyhvKXx8KGUuc2VsZWN0b3I/cz1uKGUuc2VsZWN0b3IpOihpPW8uYXR0cihcImRhdGEtZmFuY3lib3hcIil8fFwiXCIsaT8ocz10LmRhdGE/dC5kYXRhLml0ZW1zOltdLHM9cy5sZW5ndGg/cy5maWx0ZXIoJ1tkYXRhLWZhbmN5Ym94PVwiJytpKydcIl0nKTpuKCdbZGF0YS1mYW5jeWJveD1cIicraSsnXCJdJykpOnM9W29dKSxyPW4ocykuaW5kZXgobykscjwwJiYocj0wKSxhPW4uZmFuY3lib3gub3BlbihzLGUsciksYS4kdHJpZ2dlcj1vKSl9aWYodC5jb25zb2xlPXQuY29uc29sZXx8e2luZm86ZnVuY3Rpb24odCl7fX0sbil7aWYobi5mbi5mYW5jeWJveClyZXR1cm4gdm9pZCBjb25zb2xlLmluZm8oXCJmYW5jeUJveCBhbHJlYWR5IGluaXRpYWxpemVkXCIpO3ZhciBhPXtjbG9zZUV4aXN0aW5nOiExLGxvb3A6ITEsZ3V0dGVyOjUwLGtleWJvYXJkOiEwLHByZXZlbnRDYXB0aW9uT3ZlcmxhcDohMCxhcnJvd3M6ITAsaW5mb2JhcjohMCxzbWFsbEJ0bjpcImF1dG9cIix0b29sYmFyOlwiYXV0b1wiLGJ1dHRvbnM6W1wiem9vbVwiLFwic2xpZGVTaG93XCIsXCJ0aHVtYnNcIixcImNsb3NlXCJdLGlkbGVUaW1lOjMscHJvdGVjdDohMSxtb2RhbDohMSxpbWFnZTp7cHJlbG9hZDohMX0sYWpheDp7c2V0dGluZ3M6e2RhdGE6e2ZhbmN5Ym94OiEwfX19LGlmcmFtZTp7dHBsOic8aWZyYW1lIGlkPVwiZmFuY3lib3gtZnJhbWV7cm5kfVwiIG5hbWU9XCJmYW5jeWJveC1mcmFtZXtybmR9XCIgY2xhc3M9XCJmYW5jeWJveC1pZnJhbWVcIiBhbGxvd2Z1bGxzY3JlZW49XCJhbGxvd2Z1bGxzY3JlZW5cIiBhbGxvdz1cImF1dG9wbGF5OyBmdWxsc2NyZWVuXCIgc3JjPVwiXCI+PC9pZnJhbWU+JyxwcmVsb2FkOiEwLGNzczp7fSxhdHRyOntzY3JvbGxpbmc6XCJhdXRvXCJ9fSx2aWRlbzp7dHBsOic8dmlkZW8gY2xhc3M9XCJmYW5jeWJveC12aWRlb1wiIGNvbnRyb2xzIGNvbnRyb2xzTGlzdD1cIm5vZG93bmxvYWRcIiBwb3N0ZXI9XCJ7e3Bvc3Rlcn19XCI+PHNvdXJjZSBzcmM9XCJ7e3NyY319XCIgdHlwZT1cInt7Zm9ybWF0fX1cIiAvPlNvcnJ5LCB5b3VyIGJyb3dzZXIgZG9lc25cXCd0IHN1cHBvcnQgZW1iZWRkZWQgdmlkZW9zLCA8YSBocmVmPVwie3tzcmN9fVwiPmRvd25sb2FkPC9hPiBhbmQgd2F0Y2ggd2l0aCB5b3VyIGZhdm9yaXRlIHZpZGVvIHBsYXllciE8L3ZpZGVvPicsZm9ybWF0OlwiXCIsYXV0b1N0YXJ0OiEwfSxkZWZhdWx0VHlwZTpcImltYWdlXCIsYW5pbWF0aW9uRWZmZWN0Olwiem9vbVwiLGFuaW1hdGlvbkR1cmF0aW9uOjM2Nix6b29tT3BhY2l0eTpcImF1dG9cIix0cmFuc2l0aW9uRWZmZWN0OlwiZmFkZVwiLHRyYW5zaXRpb25EdXJhdGlvbjozNjYsc2xpZGVDbGFzczpcIlwiLGJhc2VDbGFzczpcIlwiLGJhc2VUcGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1jb250YWluZXJcIiByb2xlPVwiZGlhbG9nXCIgdGFiaW5kZXg9XCItMVwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1iZ1wiPjwvZGl2PjxkaXYgY2xhc3M9XCJmYW5jeWJveC1pbm5lclwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1pbmZvYmFyXCI+PHNwYW4gZGF0YS1mYW5jeWJveC1pbmRleD48L3NwYW4+Jm5ic3A7LyZuYnNwOzxzcGFuIGRhdGEtZmFuY3lib3gtY291bnQ+PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJmYW5jeWJveC10b29sYmFyXCI+e3tidXR0b25zfX08L2Rpdj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtbmF2aWdhdGlvblwiPnt7YXJyb3dzfX08L2Rpdj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtc3RhZ2VcIj48L2Rpdj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtY2FwdGlvblwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1jYXB0aW9uX19ib2R5XCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+JyxzcGlubmVyVHBsOic8ZGl2IGNsYXNzPVwiZmFuY3lib3gtbG9hZGluZ1wiPjwvZGl2PicsZXJyb3JUcGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1lcnJvclwiPjxwPnt7RVJST1J9fTwvcD48L2Rpdj4nLGJ0blRwbDp7ZG93bmxvYWQ6JzxhIGRvd25sb2FkIGRhdGEtZmFuY3lib3gtZG93bmxvYWQgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1kb3dubG9hZFwiIHRpdGxlPVwie3tET1dOTE9BRH19XCIgaHJlZj1cImphdmFzY3JpcHQ6O1wiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE4LjYyIDE3LjA5VjE5SDUuMzh2LTEuOTF6bS0yLjk3LTYuOTZMMTcgMTEuNDVsLTUgNC44Ny01LTQuODcgMS4zNi0xLjMyIDIuNjggMi42NFY1aDEuOTJ2Ny43N3pcIi8+PC9zdmc+PC9hPicsem9vbTonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXpvb20gY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS16b29tXCIgdGl0bGU9XCJ7e1pPT019fVwiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE4LjcgMTcuM2wtMy0zYTUuOSA1LjkgMCAwIDAtLjYtNy42IDUuOSA1LjkgMCAwIDAtOC40IDAgNS45IDUuOSAwIDAgMCAwIDguNCA1LjkgNS45IDAgMCAwIDcuNy43bDMgM2ExIDEgMCAwIDAgMS4zIDBjLjQtLjUuNC0xIDAtMS41ek04LjEgMTMuOGE0IDQgMCAwIDEgMC01LjcgNCA0IDAgMCAxIDUuNyAwIDQgNCAwIDAgMSAwIDUuNyA0IDQgMCAwIDEtNS43IDB6XCIvPjwvc3ZnPjwvYnV0dG9uPicsY2xvc2U6JzxidXR0b24gZGF0YS1mYW5jeWJveC1jbG9zZSBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLWNsb3NlXCIgdGl0bGU9XCJ7e0NMT1NFfX1cIj48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk0xMiAxMC42TDYuNiA1LjIgNS4yIDYuNmw1LjQgNS40LTUuNCA1LjQgMS40IDEuNCA1LjQtNS40IDUuNCA1LjQgMS40LTEuNC01LjQtNS40IDUuNC01LjQtMS40LTEuNC01LjQgNS40elwiLz48L3N2Zz48L2J1dHRvbj4nLGFycm93TGVmdDonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXByZXYgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19sZWZ0XCIgdGl0bGU9XCJ7e1BSRVZ9fVwiPjxkaXY+PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNMTEuMjggMTUuN2wtMS4zNCAxLjM3TDUgMTJsNC45NC01LjA3IDEuMzQgMS4zOC0yLjY4IDIuNzJIMTl2MS45NEg4LjZ6XCIvPjwvc3ZnPjwvZGl2PjwvYnV0dG9uPicsYXJyb3dSaWdodDonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LW5leHQgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19yaWdodFwiIHRpdGxlPVwie3tORVhUfX1cIj48ZGl2PjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE1LjQgMTIuOTdsLTIuNjggMi43MiAxLjM0IDEuMzhMMTkgMTJsLTQuOTQtNS4wNy0xLjM0IDEuMzggMi42OCAyLjcySDV2MS45NHpcIi8+PC9zdmc+PC9kaXY+PC9idXR0b24+JyxzbWFsbEJ0bjonPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgZGF0YS1mYW5jeWJveC1jbG9zZSBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1jbG9zZS1zbWFsbFwiIHRpdGxlPVwie3tDTE9TRX19XCI+PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmVyc2lvbj1cIjFcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk0xMyAxMmw1LTUtMS0xLTUgNS01LTUtMSAxIDUgNS01IDUgMSAxIDUtNSA1IDUgMS0xelwiLz48L3N2Zz48L2J1dHRvbj4nfSxwYXJlbnRFbDpcImJvZHlcIixoaWRlU2Nyb2xsYmFyOiEwLGF1dG9Gb2N1czohMCxiYWNrRm9jdXM6ITAsdHJhcEZvY3VzOiEwLGZ1bGxTY3JlZW46e2F1dG9TdGFydDohMX0sdG91Y2g6e3ZlcnRpY2FsOiEwLG1vbWVudHVtOiEwfSxoYXNoOm51bGwsbWVkaWE6e30sc2xpZGVTaG93OnthdXRvU3RhcnQ6ITEsc3BlZWQ6M2UzfSx0aHVtYnM6e2F1dG9TdGFydDohMSxoaWRlT25DbG9zZTohMCxwYXJlbnRFbDpcIi5mYW5jeWJveC1jb250YWluZXJcIixheGlzOlwieVwifSx3aGVlbDpcImF1dG9cIixvbkluaXQ6bi5ub29wLGJlZm9yZUxvYWQ6bi5ub29wLGFmdGVyTG9hZDpuLm5vb3AsYmVmb3JlU2hvdzpuLm5vb3AsYWZ0ZXJTaG93Om4ubm9vcCxiZWZvcmVDbG9zZTpuLm5vb3AsYWZ0ZXJDbG9zZTpuLm5vb3Asb25BY3RpdmF0ZTpuLm5vb3Asb25EZWFjdGl2YXRlOm4ubm9vcCxjbGlja0NvbnRlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImltYWdlXCI9PT10LnR5cGUmJlwiem9vbVwifSxjbGlja1NsaWRlOlwiY2xvc2VcIixjbGlja091dHNpZGU6XCJjbG9zZVwiLGRibGNsaWNrQ29udGVudDohMSxkYmxjbGlja1NsaWRlOiExLGRibGNsaWNrT3V0c2lkZTohMSxtb2JpbGU6e3ByZXZlbnRDYXB0aW9uT3ZlcmxhcDohMSxpZGxlVGltZTohMSxjbGlja0NvbnRlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImltYWdlXCI9PT10LnR5cGUmJlwidG9nZ2xlQ29udHJvbHNcIn0sY2xpY2tTbGlkZTpmdW5jdGlvbih0LGUpe3JldHVyblwiaW1hZ2VcIj09PXQudHlwZT9cInRvZ2dsZUNvbnRyb2xzXCI6XCJjbG9zZVwifSxkYmxjbGlja0NvbnRlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImltYWdlXCI9PT10LnR5cGUmJlwiem9vbVwifSxkYmxjbGlja1NsaWRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJpbWFnZVwiPT09dC50eXBlJiZcInpvb21cIn19LGxhbmc6XCJlblwiLGkxOG46e2VuOntDTE9TRTpcIkNsb3NlXCIsTkVYVDpcIk5leHRcIixQUkVWOlwiUHJldmlvdXNcIixFUlJPUjpcIlRoZSByZXF1ZXN0ZWQgY29udGVudCBjYW5ub3QgYmUgbG9hZGVkLiA8YnIvPiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLlwiLFBMQVlfU1RBUlQ6XCJTdGFydCBzbGlkZXNob3dcIixQTEFZX1NUT1A6XCJQYXVzZSBzbGlkZXNob3dcIixGVUxMX1NDUkVFTjpcIkZ1bGwgc2NyZWVuXCIsVEhVTUJTOlwiVGh1bWJuYWlsc1wiLERPV05MT0FEOlwiRG93bmxvYWRcIixTSEFSRTpcIlNoYXJlXCIsWk9PTTpcIlpvb21cIn0sZGU6e0NMT1NFOlwiU2NobGllJnN6bGlnO2VuXCIsTkVYVDpcIldlaXRlclwiLFBSRVY6XCJadXImdXVtbDtja1wiLEVSUk9SOlwiRGllIGFuZ2Vmb3JkZXJ0ZW4gRGF0ZW4ga29ubnRlbiBuaWNodCBnZWxhZGVuIHdlcmRlbi4gPGJyLz4gQml0dGUgdmVyc3VjaGVuIFNpZSBlcyBzcCZhdW1sO3RlciBub2NobWFsLlwiLFBMQVlfU1RBUlQ6XCJEaWFzY2hhdSBzdGFydGVuXCIsUExBWV9TVE9QOlwiRGlhc2NoYXUgYmVlbmRlblwiLEZVTExfU0NSRUVOOlwiVm9sbGJpbGRcIixUSFVNQlM6XCJWb3JzY2hhdWJpbGRlclwiLERPV05MT0FEOlwiSGVydW50ZXJsYWRlblwiLFNIQVJFOlwiVGVpbGVuXCIsWk9PTTpcIlZlcmdyJm91bWw7JnN6bGlnO2VyblwifX19LHM9bih0KSxyPW4oZSksYz0wLGw9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuaGFzT3duUHJvcGVydHkmJnQgaW5zdGFuY2VvZiBufSxkPWZ1bmN0aW9uKCl7cmV0dXJuIHQucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx0LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8dC5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHQub1JlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oZSl7cmV0dXJuIHQuc2V0VGltZW91dChlLDFlMy82MCl9fSgpLHU9ZnVuY3Rpb24oKXtyZXR1cm4gdC5jYW5jZWxBbmltYXRpb25GcmFtZXx8dC53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZXx8dC5tb3pDYW5jZWxBbmltYXRpb25GcmFtZXx8dC5vQ2FuY2VsQW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGUpe3QuY2xlYXJUaW1lb3V0KGUpfX0oKSxmPWZ1bmN0aW9uKCl7dmFyIHQsbj1lLmNyZWF0ZUVsZW1lbnQoXCJmYWtlZWxlbWVudFwiKSxvPXt0cmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwiLE9UcmFuc2l0aW9uOlwib1RyYW5zaXRpb25FbmRcIixNb3pUcmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwiLFdlYmtpdFRyYW5zaXRpb246XCJ3ZWJraXRUcmFuc2l0aW9uRW5kXCJ9O2Zvcih0IGluIG8paWYodm9pZCAwIT09bi5zdHlsZVt0XSlyZXR1cm4gb1t0XTtyZXR1cm5cInRyYW5zaXRpb25lbmRcIn0oKSxwPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Lmxlbmd0aCYmdFswXS5vZmZzZXRIZWlnaHR9LGg9ZnVuY3Rpb24odCxlKXt2YXIgbz1uLmV4dGVuZCghMCx7fSx0LGUpO3JldHVybiBuLmVhY2goZSxmdW5jdGlvbih0LGUpe24uaXNBcnJheShlKSYmKG9bdF09ZSl9KSxvfSxnPWZ1bmN0aW9uKHQpe3ZhciBvLGk7cmV0dXJuISghdHx8dC5vd25lckRvY3VtZW50IT09ZSkmJihuKFwiLmZhbmN5Ym94LWNvbnRhaW5lclwiKS5jc3MoXCJwb2ludGVyLWV2ZW50c1wiLFwibm9uZVwiKSxvPXt4OnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCt0Lm9mZnNldFdpZHRoLzIseTp0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCt0Lm9mZnNldEhlaWdodC8yfSxpPWUuZWxlbWVudEZyb21Qb2ludChvLngsby55KT09PXQsbihcIi5mYW5jeWJveC1jb250YWluZXJcIikuY3NzKFwicG9pbnRlci1ldmVudHNcIixcIlwiKSxpKX0sYj1mdW5jdGlvbih0LGUsbyl7dmFyIGk9dGhpcztpLm9wdHM9aCh7aW5kZXg6b30sbi5mYW5jeWJveC5kZWZhdWx0cyksbi5pc1BsYWluT2JqZWN0KGUpJiYoaS5vcHRzPWgoaS5vcHRzLGUpKSxuLmZhbmN5Ym94LmlzTW9iaWxlJiYoaS5vcHRzPWgoaS5vcHRzLGkub3B0cy5tb2JpbGUpKSxpLmlkPWkub3B0cy5pZHx8KytjLGkuY3VyckluZGV4PXBhcnNlSW50KGkub3B0cy5pbmRleCwxMCl8fDAsaS5wcmV2SW5kZXg9bnVsbCxpLnByZXZQb3M9bnVsbCxpLmN1cnJQb3M9MCxpLmZpcnN0UnVuPSEwLGkuZ3JvdXA9W10saS5zbGlkZXM9e30saS5hZGRDb250ZW50KHQpLGkuZ3JvdXAubGVuZ3RoJiZpLmluaXQoKX07bi5leHRlbmQoYi5wcm90b3R5cGUse2luaXQ6ZnVuY3Rpb24oKXt2YXIgbyxpLGE9dGhpcyxzPWEuZ3JvdXBbYS5jdXJySW5kZXhdLHI9cy5vcHRzO3IuY2xvc2VFeGlzdGluZyYmbi5mYW5jeWJveC5jbG9zZSghMCksbihcImJvZHlcIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1hY3RpdmVcIiksIW4uZmFuY3lib3guZ2V0SW5zdGFuY2UoKSYmITEhPT1yLmhpZGVTY3JvbGxiYXImJiFuLmZhbmN5Ym94LmlzTW9iaWxlJiZlLmJvZHkuc2Nyb2xsSGVpZ2h0PnQuaW5uZXJIZWlnaHQmJihuKFwiaGVhZFwiKS5hcHBlbmQoJzxzdHlsZSBpZD1cImZhbmN5Ym94LXN0eWxlLW5vc2Nyb2xsXCIgdHlwZT1cInRleHQvY3NzXCI+LmNvbXBlbnNhdGUtZm9yLXNjcm9sbGJhcnttYXJnaW4tcmlnaHQ6JysodC5pbm5lcldpZHRoLWUuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKStcInB4O308L3N0eWxlPlwiKSxuKFwiYm9keVwiKS5hZGRDbGFzcyhcImNvbXBlbnNhdGUtZm9yLXNjcm9sbGJhclwiKSksaT1cIlwiLG4uZWFjaChyLmJ1dHRvbnMsZnVuY3Rpb24odCxlKXtpKz1yLmJ0blRwbFtlXXx8XCJcIn0pLG89bihhLnRyYW5zbGF0ZShhLHIuYmFzZVRwbC5yZXBsYWNlKFwie3tidXR0b25zfX1cIixpKS5yZXBsYWNlKFwie3thcnJvd3N9fVwiLHIuYnRuVHBsLmFycm93TGVmdCtyLmJ0blRwbC5hcnJvd1JpZ2h0KSkpLmF0dHIoXCJpZFwiLFwiZmFuY3lib3gtY29udGFpbmVyLVwiK2EuaWQpLmFkZENsYXNzKHIuYmFzZUNsYXNzKS5kYXRhKFwiRmFuY3lCb3hcIixhKS5hcHBlbmRUbyhyLnBhcmVudEVsKSxhLiRyZWZzPXtjb250YWluZXI6b30sW1wiYmdcIixcImlubmVyXCIsXCJpbmZvYmFyXCIsXCJ0b29sYmFyXCIsXCJzdGFnZVwiLFwiY2FwdGlvblwiLFwibmF2aWdhdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2EuJHJlZnNbdF09by5maW5kKFwiLmZhbmN5Ym94LVwiK3QpfSksYS50cmlnZ2VyKFwib25Jbml0XCIpLGEuYWN0aXZhdGUoKSxhLmp1bXBUbyhhLmN1cnJJbmRleCl9LHRyYW5zbGF0ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQub3B0cy5pMThuW3Qub3B0cy5sYW5nXXx8dC5vcHRzLmkxOG4uZW47cmV0dXJuIGUucmVwbGFjZSgvXFx7XFx7KFxcdyspXFx9XFx9L2csZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09bltlXT90Om5bZV19KX0sYWRkQ29udGVudDpmdW5jdGlvbih0KXt2YXIgZSxvPXRoaXMsaT1uLm1ha2VBcnJheSh0KTtuLmVhY2goaSxmdW5jdGlvbih0LGUpe3ZhciBpLGEscyxyLGMsbD17fSxkPXt9O24uaXNQbGFpbk9iamVjdChlKT8obD1lLGQ9ZS5vcHRzfHxlKTpcIm9iamVjdFwiPT09bi50eXBlKGUpJiZuKGUpLmxlbmd0aD8oaT1uKGUpLGQ9aS5kYXRhKCl8fHt9LGQ9bi5leHRlbmQoITAse30sZCxkLm9wdGlvbnMpLGQuJG9yaWc9aSxsLnNyYz1vLm9wdHMuc3JjfHxkLnNyY3x8aS5hdHRyKFwiaHJlZlwiKSxsLnR5cGV8fGwuc3JjfHwobC50eXBlPVwiaW5saW5lXCIsbC5zcmM9ZSkpOmw9e3R5cGU6XCJodG1sXCIsc3JjOmUrXCJcIn0sbC5vcHRzPW4uZXh0ZW5kKCEwLHt9LG8ub3B0cyxkKSxuLmlzQXJyYXkoZC5idXR0b25zKSYmKGwub3B0cy5idXR0b25zPWQuYnV0dG9ucyksbi5mYW5jeWJveC5pc01vYmlsZSYmbC5vcHRzLm1vYmlsZSYmKGwub3B0cz1oKGwub3B0cyxsLm9wdHMubW9iaWxlKSksYT1sLnR5cGV8fGwub3B0cy50eXBlLHI9bC5zcmN8fFwiXCIsIWEmJnImJigocz1yLm1hdGNoKC9cXC4obXA0fG1vdnxvZ3Z8d2VibSkoKFxcP3wjKS4qKT8kL2kpKT8oYT1cInZpZGVvXCIsbC5vcHRzLnZpZGVvLmZvcm1hdHx8KGwub3B0cy52aWRlby5mb3JtYXQ9XCJ2aWRlby9cIisoXCJvZ3ZcIj09PXNbMV0/XCJvZ2dcIjpzWzFdKSkpOnIubWF0Y2goLyheZGF0YTppbWFnZVxcL1thLXowLTkrXFwvPV0qLCl8KFxcLihqcChlfGd8ZWcpfGdpZnxwbmd8Ym1wfHdlYnB8c3ZnfGljbykoKFxcP3wjKS4qKT8kKS9pKT9hPVwiaW1hZ2VcIjpyLm1hdGNoKC9cXC4ocGRmKSgoXFw/fCMpLiopPyQvaSk/KGE9XCJpZnJhbWVcIixsPW4uZXh0ZW5kKCEwLGwse2NvbnRlbnRUeXBlOlwicGRmXCIsb3B0czp7aWZyYW1lOntwcmVsb2FkOiExfX19KSk6XCIjXCI9PT1yLmNoYXJBdCgwKSYmKGE9XCJpbmxpbmVcIikpLGE/bC50eXBlPWE6by50cmlnZ2VyKFwib2JqZWN0TmVlZHNUeXBlXCIsbCksbC5jb250ZW50VHlwZXx8KGwuY29udGVudFR5cGU9bi5pbkFycmF5KGwudHlwZSxbXCJodG1sXCIsXCJpbmxpbmVcIixcImFqYXhcIl0pPi0xP1wiaHRtbFwiOmwudHlwZSksbC5pbmRleD1vLmdyb3VwLmxlbmd0aCxcImF1dG9cIj09bC5vcHRzLnNtYWxsQnRuJiYobC5vcHRzLnNtYWxsQnRuPW4uaW5BcnJheShsLnR5cGUsW1wiaHRtbFwiLFwiaW5saW5lXCIsXCJhamF4XCJdKT4tMSksXCJhdXRvXCI9PT1sLm9wdHMudG9vbGJhciYmKGwub3B0cy50b29sYmFyPSFsLm9wdHMuc21hbGxCdG4pLGwuJHRodW1iPWwub3B0cy4kdGh1bWJ8fG51bGwsbC5vcHRzLiR0cmlnZ2VyJiZsLmluZGV4PT09by5vcHRzLmluZGV4JiYobC4kdGh1bWI9bC5vcHRzLiR0cmlnZ2VyLmZpbmQoXCJpbWc6Zmlyc3RcIiksbC4kdGh1bWIubGVuZ3RoJiYobC5vcHRzLiRvcmlnPWwub3B0cy4kdHJpZ2dlcikpLGwuJHRodW1iJiZsLiR0aHVtYi5sZW5ndGh8fCFsLm9wdHMuJG9yaWd8fChsLiR0aHVtYj1sLm9wdHMuJG9yaWcuZmluZChcImltZzpmaXJzdFwiKSksbC4kdGh1bWImJiFsLiR0aHVtYi5sZW5ndGgmJihsLiR0aHVtYj1udWxsKSxsLnRodW1iPWwub3B0cy50aHVtYnx8KGwuJHRodW1iP2wuJHRodW1iWzBdLnNyYzpudWxsKSxcImZ1bmN0aW9uXCI9PT1uLnR5cGUobC5vcHRzLmNhcHRpb24pJiYobC5vcHRzLmNhcHRpb249bC5vcHRzLmNhcHRpb24uYXBwbHkoZSxbbyxsXSkpLFwiZnVuY3Rpb25cIj09PW4udHlwZShvLm9wdHMuY2FwdGlvbikmJihsLm9wdHMuY2FwdGlvbj1vLm9wdHMuY2FwdGlvbi5hcHBseShlLFtvLGxdKSksbC5vcHRzLmNhcHRpb24gaW5zdGFuY2VvZiBufHwobC5vcHRzLmNhcHRpb249dm9pZCAwPT09bC5vcHRzLmNhcHRpb24/XCJcIjpsLm9wdHMuY2FwdGlvbitcIlwiKSxcImFqYXhcIj09PWwudHlwZSYmKGM9ci5zcGxpdCgvXFxzKy8sMiksYy5sZW5ndGg+MSYmKGwuc3JjPWMuc2hpZnQoKSxsLm9wdHMuZmlsdGVyPWMuc2hpZnQoKSkpLGwub3B0cy5tb2RhbCYmKGwub3B0cz1uLmV4dGVuZCghMCxsLm9wdHMse3RyYXBGb2N1czohMCxpbmZvYmFyOjAsdG9vbGJhcjowLHNtYWxsQnRuOjAsa2V5Ym9hcmQ6MCxzbGlkZVNob3c6MCxmdWxsU2NyZWVuOjAsdGh1bWJzOjAsdG91Y2g6MCxjbGlja0NvbnRlbnQ6ITEsY2xpY2tTbGlkZTohMSxjbGlja091dHNpZGU6ITEsZGJsY2xpY2tDb250ZW50OiExLGRibGNsaWNrU2xpZGU6ITEsZGJsY2xpY2tPdXRzaWRlOiExfSkpLG8uZ3JvdXAucHVzaChsKX0pLE9iamVjdC5rZXlzKG8uc2xpZGVzKS5sZW5ndGgmJihvLnVwZGF0ZUNvbnRyb2xzKCksKGU9by5UaHVtYnMpJiZlLmlzQWN0aXZlJiYoZS5jcmVhdGUoKSxlLmZvY3VzKCkpKX0sYWRkRXZlbnRzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLnJlbW92ZUV2ZW50cygpLGUuJHJlZnMuY29udGFpbmVyLm9uKFwiY2xpY2suZmItY2xvc2VcIixcIltkYXRhLWZhbmN5Ym94LWNsb3NlXVwiLGZ1bmN0aW9uKHQpe3Quc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLGUuY2xvc2UodCl9KS5vbihcInRvdWNoc3RhcnQuZmItcHJldiBjbGljay5mYi1wcmV2XCIsXCJbZGF0YS1mYW5jeWJveC1wcmV2XVwiLGZ1bmN0aW9uKHQpe3Quc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLGUucHJldmlvdXMoKX0pLm9uKFwidG91Y2hzdGFydC5mYi1uZXh0IGNsaWNrLmZiLW5leHRcIixcIltkYXRhLWZhbmN5Ym94LW5leHRdXCIsZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksZS5uZXh0KCl9KS5vbihcImNsaWNrLmZiXCIsXCJbZGF0YS1mYW5jeWJveC16b29tXVwiLGZ1bmN0aW9uKHQpe2VbZS5pc1NjYWxlZERvd24oKT9cInNjYWxlVG9BY3R1YWxcIjpcInNjYWxlVG9GaXRcIl0oKX0pLHMub24oXCJvcmllbnRhdGlvbmNoYW5nZS5mYiByZXNpemUuZmJcIixmdW5jdGlvbih0KXt0JiZ0Lm9yaWdpbmFsRXZlbnQmJlwicmVzaXplXCI9PT10Lm9yaWdpbmFsRXZlbnQudHlwZT8oZS5yZXF1ZXN0SWQmJnUoZS5yZXF1ZXN0SWQpLGUucmVxdWVzdElkPWQoZnVuY3Rpb24oKXtlLnVwZGF0ZSh0KX0pKTooZS5jdXJyZW50JiZcImlmcmFtZVwiPT09ZS5jdXJyZW50LnR5cGUmJmUuJHJlZnMuc3RhZ2UuaGlkZSgpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLiRyZWZzLnN0YWdlLnNob3coKSxlLnVwZGF0ZSh0KX0sbi5mYW5jeWJveC5pc01vYmlsZT82MDA6MjUwKSl9KSxyLm9uKFwia2V5ZG93bi5mYlwiLGZ1bmN0aW9uKHQpe3ZhciBvPW4uZmFuY3lib3g/bi5mYW5jeWJveC5nZXRJbnN0YW5jZSgpOm51bGwsaT1vLmN1cnJlbnQsYT10LmtleUNvZGV8fHQud2hpY2g7aWYoOT09YSlyZXR1cm4gdm9pZChpLm9wdHMudHJhcEZvY3VzJiZlLmZvY3VzKHQpKTtpZighKCFpLm9wdHMua2V5Ym9hcmR8fHQuY3RybEtleXx8dC5hbHRLZXl8fHQuc2hpZnRLZXl8fG4odC50YXJnZXQpLmlzKFwiaW5wdXQsdGV4dGFyZWEsdmlkZW8sYXVkaW8sc2VsZWN0XCIpKSlyZXR1cm4gOD09PWF8fDI3PT09YT8odC5wcmV2ZW50RGVmYXVsdCgpLHZvaWQgZS5jbG9zZSh0KSk6Mzc9PT1hfHwzOD09PWE/KHQucHJldmVudERlZmF1bHQoKSx2b2lkIGUucHJldmlvdXMoKSk6Mzk9PT1hfHw0MD09PWE/KHQucHJldmVudERlZmF1bHQoKSx2b2lkIGUubmV4dCgpKTp2b2lkIGUudHJpZ2dlcihcImFmdGVyS2V5ZG93blwiLHQsYSl9KSxlLmdyb3VwW2UuY3VyckluZGV4XS5vcHRzLmlkbGVUaW1lJiYoZS5pZGxlU2Vjb25kc0NvdW50ZXI9MCxyLm9uKFwibW91c2Vtb3ZlLmZiLWlkbGUgbW91c2VsZWF2ZS5mYi1pZGxlIG1vdXNlZG93bi5mYi1pZGxlIHRvdWNoc3RhcnQuZmItaWRsZSB0b3VjaG1vdmUuZmItaWRsZSBzY3JvbGwuZmItaWRsZSBrZXlkb3duLmZiLWlkbGVcIixmdW5jdGlvbih0KXtlLmlkbGVTZWNvbmRzQ291bnRlcj0wLGUuaXNJZGxlJiZlLnNob3dDb250cm9scygpLGUuaXNJZGxlPSExfSksZS5pZGxlSW50ZXJ2YWw9dC5zZXRJbnRlcnZhbChmdW5jdGlvbigpeysrZS5pZGxlU2Vjb25kc0NvdW50ZXI+PWUuZ3JvdXBbZS5jdXJySW5kZXhdLm9wdHMuaWRsZVRpbWUmJiFlLmlzRHJhZ2dpbmcmJihlLmlzSWRsZT0hMCxlLmlkbGVTZWNvbmRzQ291bnRlcj0wLGUuaGlkZUNvbnRyb2xzKCkpfSwxZTMpKX0scmVtb3ZlRXZlbnRzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztzLm9mZihcIm9yaWVudGF0aW9uY2hhbmdlLmZiIHJlc2l6ZS5mYlwiKSxyLm9mZihcImtleWRvd24uZmIgLmZiLWlkbGVcIiksdGhpcy4kcmVmcy5jb250YWluZXIub2ZmKFwiLmZiLWNsb3NlIC5mYi1wcmV2IC5mYi1uZXh0XCIpLGUuaWRsZUludGVydmFsJiYodC5jbGVhckludGVydmFsKGUuaWRsZUludGVydmFsKSxlLmlkbGVJbnRlcnZhbD1udWxsKX0scHJldmlvdXM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuanVtcFRvKHRoaXMuY3VyclBvcy0xLHQpfSxuZXh0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmp1bXBUbyh0aGlzLmN1cnJQb3MrMSx0KX0sanVtcFRvOmZ1bmN0aW9uKHQsZSl7dmFyIG8saSxhLHMscixjLGwsZCx1LGY9dGhpcyxoPWYuZ3JvdXAubGVuZ3RoO2lmKCEoZi5pc0RyYWdnaW5nfHxmLmlzQ2xvc2luZ3x8Zi5pc0FuaW1hdGluZyYmZi5maXJzdFJ1bikpe2lmKHQ9cGFyc2VJbnQodCwxMCksIShhPWYuY3VycmVudD9mLmN1cnJlbnQub3B0cy5sb29wOmYub3B0cy5sb29wKSYmKHQ8MHx8dD49aCkpcmV0dXJuITE7aWYobz1mLmZpcnN0UnVuPSFPYmplY3Qua2V5cyhmLnNsaWRlcykubGVuZ3RoLHI9Zi5jdXJyZW50LGYucHJldkluZGV4PWYuY3VyckluZGV4LGYucHJldlBvcz1mLmN1cnJQb3Mscz1mLmNyZWF0ZVNsaWRlKHQpLGg+MSYmKChhfHxzLmluZGV4PGgtMSkmJmYuY3JlYXRlU2xpZGUodCsxKSwoYXx8cy5pbmRleD4wKSYmZi5jcmVhdGVTbGlkZSh0LTEpKSxmLmN1cnJlbnQ9cyxmLmN1cnJJbmRleD1zLmluZGV4LGYuY3VyclBvcz1zLnBvcyxmLnRyaWdnZXIoXCJiZWZvcmVTaG93XCIsbyksZi51cGRhdGVDb250cm9scygpLHMuZm9yY2VkRHVyYXRpb249dm9pZCAwLG4uaXNOdW1lcmljKGUpP3MuZm9yY2VkRHVyYXRpb249ZTplPXMub3B0c1tvP1wiYW5pbWF0aW9uRHVyYXRpb25cIjpcInRyYW5zaXRpb25EdXJhdGlvblwiXSxlPXBhcnNlSW50KGUsMTApLGk9Zi5pc01vdmVkKHMpLHMuJHNsaWRlLmFkZENsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWN1cnJlbnRcIiksbylyZXR1cm4gcy5vcHRzLmFuaW1hdGlvbkVmZmVjdCYmZSYmZi4kcmVmcy5jb250YWluZXIuY3NzKFwidHJhbnNpdGlvbi1kdXJhdGlvblwiLGUrXCJtc1wiKSxmLiRyZWZzLmNvbnRhaW5lci5hZGRDbGFzcyhcImZhbmN5Ym94LWlzLW9wZW5cIikudHJpZ2dlcihcImZvY3VzXCIpLGYubG9hZFNsaWRlKHMpLHZvaWQgZi5wcmVsb2FkKFwiaW1hZ2VcIik7Yz1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShyLiRzbGlkZSksbD1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShmLiRyZWZzLnN0YWdlKSxuLmVhY2goZi5zbGlkZXMsZnVuY3Rpb24odCxlKXtuLmZhbmN5Ym94LnN0b3AoZS4kc2xpZGUsITApfSksci5wb3MhPT1zLnBvcyYmKHIuaXNDb21wbGV0ZT0hMSksci4kc2xpZGUucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tY29tcGxldGUgZmFuY3lib3gtc2xpZGUtLWN1cnJlbnRcIiksaT8odT1jLmxlZnQtKHIucG9zKmMud2lkdGgrci5wb3Mqci5vcHRzLmd1dHRlciksbi5lYWNoKGYuc2xpZGVzLGZ1bmN0aW9uKHQsbyl7by4kc2xpZGUucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1hbmltYXRlZFwiKS5yZW1vdmVDbGFzcyhmdW5jdGlvbih0LGUpe3JldHVybihlLm1hdGNoKC8oXnxcXHMpZmFuY3lib3gtZngtXFxTKy9nKXx8W10pLmpvaW4oXCIgXCIpfSk7dmFyIGk9by5wb3MqYy53aWR0aCtvLnBvcypvLm9wdHMuZ3V0dGVyO24uZmFuY3lib3guc2V0VHJhbnNsYXRlKG8uJHNsaWRlLHt0b3A6MCxsZWZ0OmktbC5sZWZ0K3V9KSxvLnBvcyE9PXMucG9zJiZvLiRzbGlkZS5hZGRDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1cIisoby5wb3M+cy5wb3M/XCJuZXh0XCI6XCJwcmV2aW91c1wiKSkscChvLiRzbGlkZSksbi5mYW5jeWJveC5hbmltYXRlKG8uJHNsaWRlLHt0b3A6MCxsZWZ0OihvLnBvcy1zLnBvcykqYy53aWR0aCsoby5wb3Mtcy5wb3MpKm8ub3B0cy5ndXR0ZXJ9LGUsZnVuY3Rpb24oKXtvLiRzbGlkZS5jc3Moe3RyYW5zZm9ybTpcIlwiLG9wYWNpdHk6XCJcIn0pLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLW5leHQgZmFuY3lib3gtc2xpZGUtLXByZXZpb3VzXCIpLG8ucG9zPT09Zi5jdXJyUG9zJiZmLmNvbXBsZXRlKCl9KX0pKTplJiZzLm9wdHMudHJhbnNpdGlvbkVmZmVjdCYmKGQ9XCJmYW5jeWJveC1hbmltYXRlZCBmYW5jeWJveC1meC1cIitzLm9wdHMudHJhbnNpdGlvbkVmZmVjdCxyLiRzbGlkZS5hZGRDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1cIisoci5wb3M+cy5wb3M/XCJuZXh0XCI6XCJwcmV2aW91c1wiKSksbi5mYW5jeWJveC5hbmltYXRlKHIuJHNsaWRlLGQsZSxmdW5jdGlvbigpe3IuJHNsaWRlLnJlbW92ZUNsYXNzKGQpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLW5leHQgZmFuY3lib3gtc2xpZGUtLXByZXZpb3VzXCIpfSwhMSkpLHMuaXNMb2FkZWQ/Zi5yZXZlYWxDb250ZW50KHMpOmYubG9hZFNsaWRlKHMpLGYucHJlbG9hZChcImltYWdlXCIpfX0sY3JlYXRlU2xpZGU6ZnVuY3Rpb24odCl7dmFyIGUsbyxpPXRoaXM7cmV0dXJuIG89dCVpLmdyb3VwLmxlbmd0aCxvPW88MD9pLmdyb3VwLmxlbmd0aCtvOm8sIWkuc2xpZGVzW3RdJiZpLmdyb3VwW29dJiYoZT1uKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtc2xpZGVcIj48L2Rpdj4nKS5hcHBlbmRUbyhpLiRyZWZzLnN0YWdlKSxpLnNsaWRlc1t0XT1uLmV4dGVuZCghMCx7fSxpLmdyb3VwW29dLHtwb3M6dCwkc2xpZGU6ZSxpc0xvYWRlZDohMX0pLGkudXBkYXRlU2xpZGUoaS5zbGlkZXNbdF0pKSxpLnNsaWRlc1t0XX0sc2NhbGVUb0FjdHVhbDpmdW5jdGlvbih0LGUsbyl7dmFyIGksYSxzLHIsYyxsPXRoaXMsZD1sLmN1cnJlbnQsdT1kLiRjb250ZW50LGY9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoZC4kc2xpZGUpLndpZHRoLHA9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoZC4kc2xpZGUpLmhlaWdodCxoPWQud2lkdGgsZz1kLmhlaWdodDtsLmlzQW5pbWF0aW5nfHxsLmlzTW92ZWQoKXx8IXV8fFwiaW1hZ2VcIiE9ZC50eXBlfHwhZC5pc0xvYWRlZHx8ZC5oYXNFcnJvcnx8KGwuaXNBbmltYXRpbmc9ITAsbi5mYW5jeWJveC5zdG9wKHUpLHQ9dm9pZCAwPT09dD8uNSpmOnQsZT12b2lkIDA9PT1lPy41KnA6ZSxpPW4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKHUpLGkudG9wLT1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShkLiRzbGlkZSkudG9wLGkubGVmdC09bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoZC4kc2xpZGUpLmxlZnQscj1oL2kud2lkdGgsYz1nL2kuaGVpZ2h0LGE9LjUqZi0uNSpoLHM9LjUqcC0uNSpnLGg+ZiYmKGE9aS5sZWZ0KnItKHQqci10KSxhPjAmJihhPTApLGE8Zi1oJiYoYT1mLWgpKSxnPnAmJihzPWkudG9wKmMtKGUqYy1lKSxzPjAmJihzPTApLHM8cC1nJiYocz1wLWcpKSxsLnVwZGF0ZUN1cnNvcihoLGcpLG4uZmFuY3lib3guYW5pbWF0ZSh1LHt0b3A6cyxsZWZ0OmEsc2NhbGVYOnIsc2NhbGVZOmN9LG98fDM2NixmdW5jdGlvbigpe2wuaXNBbmltYXRpbmc9ITF9KSxsLlNsaWRlU2hvdyYmbC5TbGlkZVNob3cuaXNBY3RpdmUmJmwuU2xpZGVTaG93LnN0b3AoKSl9LHNjYWxlVG9GaXQ6ZnVuY3Rpb24odCl7dmFyIGUsbz10aGlzLGk9by5jdXJyZW50LGE9aS4kY29udGVudDtvLmlzQW5pbWF0aW5nfHxvLmlzTW92ZWQoKXx8IWF8fFwiaW1hZ2VcIiE9aS50eXBlfHwhaS5pc0xvYWRlZHx8aS5oYXNFcnJvcnx8KG8uaXNBbmltYXRpbmc9ITAsbi5mYW5jeWJveC5zdG9wKGEpLGU9by5nZXRGaXRQb3MoaSksby51cGRhdGVDdXJzb3IoZS53aWR0aCxlLmhlaWdodCksbi5mYW5jeWJveC5hbmltYXRlKGEse3RvcDplLnRvcCxsZWZ0OmUubGVmdCxzY2FsZVg6ZS53aWR0aC9hLndpZHRoKCksc2NhbGVZOmUuaGVpZ2h0L2EuaGVpZ2h0KCl9LHR8fDM2NixmdW5jdGlvbigpe28uaXNBbmltYXRpbmc9ITF9KSl9LGdldEZpdFBvczpmdW5jdGlvbih0KXt2YXIgZSxvLGksYSxzPXRoaXMscj10LiRjb250ZW50LGM9dC4kc2xpZGUsbD10LndpZHRofHx0Lm9wdHMud2lkdGgsZD10LmhlaWdodHx8dC5vcHRzLmhlaWdodCx1PXt9O3JldHVybiEhKHQuaXNMb2FkZWQmJnImJnIubGVuZ3RoKSYmKGU9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUocy4kcmVmcy5zdGFnZSkud2lkdGgsbz1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShzLiRyZWZzLnN0YWdlKS5oZWlnaHQsZS09cGFyc2VGbG9hdChjLmNzcyhcInBhZGRpbmdMZWZ0XCIpKStwYXJzZUZsb2F0KGMuY3NzKFwicGFkZGluZ1JpZ2h0XCIpKStwYXJzZUZsb2F0KHIuY3NzKFwibWFyZ2luTGVmdFwiKSkrcGFyc2VGbG9hdChyLmNzcyhcIm1hcmdpblJpZ2h0XCIpKSxvLT1wYXJzZUZsb2F0KGMuY3NzKFwicGFkZGluZ1RvcFwiKSkrcGFyc2VGbG9hdChjLmNzcyhcInBhZGRpbmdCb3R0b21cIikpK3BhcnNlRmxvYXQoci5jc3MoXCJtYXJnaW5Ub3BcIikpK3BhcnNlRmxvYXQoci5jc3MoXCJtYXJnaW5Cb3R0b21cIikpLGwmJmR8fChsPWUsZD1vKSxpPU1hdGgubWluKDEsZS9sLG8vZCksbCo9aSxkKj1pLGw+ZS0uNSYmKGw9ZSksZD5vLS41JiYoZD1vKSxcImltYWdlXCI9PT10LnR5cGU/KHUudG9wPU1hdGguZmxvb3IoLjUqKG8tZCkpK3BhcnNlRmxvYXQoYy5jc3MoXCJwYWRkaW5nVG9wXCIpKSx1LmxlZnQ9TWF0aC5mbG9vciguNSooZS1sKSkrcGFyc2VGbG9hdChjLmNzcyhcInBhZGRpbmdMZWZ0XCIpKSk6XCJ2aWRlb1wiPT09dC5jb250ZW50VHlwZSYmKGE9dC5vcHRzLndpZHRoJiZ0Lm9wdHMuaGVpZ2h0P2wvZDp0Lm9wdHMucmF0aW98fDE2LzksZD5sL2E/ZD1sL2E6bD5kKmEmJihsPWQqYSkpLHUud2lkdGg9bCx1LmhlaWdodD1kLHUpfSx1cGRhdGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztuLmVhY2goZS5zbGlkZXMsZnVuY3Rpb24obixvKXtlLnVwZGF0ZVNsaWRlKG8sdCl9KX0sdXBkYXRlU2xpZGU6ZnVuY3Rpb24odCxlKXt2YXIgbz10aGlzLGk9dCYmdC4kY29udGVudCxhPXQud2lkdGh8fHQub3B0cy53aWR0aCxzPXQuaGVpZ2h0fHx0Lm9wdHMuaGVpZ2h0LHI9dC4kc2xpZGU7by5hZGp1c3RDYXB0aW9uKHQpLGkmJihhfHxzfHxcInZpZGVvXCI9PT10LmNvbnRlbnRUeXBlKSYmIXQuaGFzRXJyb3ImJihuLmZhbmN5Ym94LnN0b3AoaSksbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoaSxvLmdldEZpdFBvcyh0KSksdC5wb3M9PT1vLmN1cnJQb3MmJihvLmlzQW5pbWF0aW5nPSExLG8udXBkYXRlQ3Vyc29yKCkpKSxvLmFkanVzdExheW91dCh0KSxyLmxlbmd0aCYmKHIudHJpZ2dlcihcInJlZnJlc2hcIiksdC5wb3M9PT1vLmN1cnJQb3MmJm8uJHJlZnMudG9vbGJhci5hZGQoby4kcmVmcy5uYXZpZ2F0aW9uLmZpbmQoXCIuZmFuY3lib3gtYnV0dG9uLS1hcnJvd19yaWdodFwiKSkudG9nZ2xlQ2xhc3MoXCJjb21wZW5zYXRlLWZvci1zY3JvbGxiYXJcIixyLmdldCgwKS5zY3JvbGxIZWlnaHQ+ci5nZXQoMCkuY2xpZW50SGVpZ2h0KSksby50cmlnZ2VyKFwib25VcGRhdGVcIix0LGUpfSxjZW50ZXJTbGlkZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG89ZS5jdXJyZW50LGk9by4kc2xpZGU7IWUuaXNDbG9zaW5nJiZvJiYoaS5zaWJsaW5ncygpLmNzcyh7dHJhbnNmb3JtOlwiXCIsb3BhY2l0eTpcIlwifSksaS5wYXJlbnQoKS5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLXByZXZpb3VzIGZhbmN5Ym94LXNsaWRlLS1uZXh0XCIpLG4uZmFuY3lib3guYW5pbWF0ZShpLHt0b3A6MCxsZWZ0OjAsb3BhY2l0eToxfSx2b2lkIDA9PT10PzA6dCxmdW5jdGlvbigpe2kuY3NzKHt0cmFuc2Zvcm06XCJcIixvcGFjaXR5OlwiXCJ9KSxvLmlzQ29tcGxldGV8fGUuY29tcGxldGUoKX0sITEpKX0saXNNb3ZlZDpmdW5jdGlvbih0KXt2YXIgZSxvLGk9dHx8dGhpcy5jdXJyZW50O3JldHVybiEhaSYmKG89bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUodGhpcy4kcmVmcy5zdGFnZSksZT1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShpLiRzbGlkZSksIWkuJHNsaWRlLmhhc0NsYXNzKFwiZmFuY3lib3gtYW5pbWF0ZWRcIikmJihNYXRoLmFicyhlLnRvcC1vLnRvcCk+LjV8fE1hdGguYWJzKGUubGVmdC1vLmxlZnQpPi41KSl9LHVwZGF0ZUN1cnNvcjpmdW5jdGlvbih0LGUpe3ZhciBvLGksYT10aGlzLHM9YS5jdXJyZW50LHI9YS4kcmVmcy5jb250YWluZXI7cyYmIWEuaXNDbG9zaW5nJiZhLkd1ZXN0dXJlcyYmKHIucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy16b29tYWJsZSBmYW5jeWJveC1jYW4tem9vbUluIGZhbmN5Ym94LWNhbi16b29tT3V0IGZhbmN5Ym94LWNhbi1zd2lwZSBmYW5jeWJveC1jYW4tcGFuXCIpLG89YS5jYW5QYW4odCxlKSxpPSEhb3x8YS5pc1pvb21hYmxlKCksci50b2dnbGVDbGFzcyhcImZhbmN5Ym94LWlzLXpvb21hYmxlXCIsaSksbihcIltkYXRhLWZhbmN5Ym94LXpvb21dXCIpLnByb3AoXCJkaXNhYmxlZFwiLCFpKSxvP3IuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tcGFuXCIpOmkmJihcInpvb21cIj09PXMub3B0cy5jbGlja0NvbnRlbnR8fG4uaXNGdW5jdGlvbihzLm9wdHMuY2xpY2tDb250ZW50KSYmXCJ6b29tXCI9PXMub3B0cy5jbGlja0NvbnRlbnQocykpP3IuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tem9vbUluXCIpOnMub3B0cy50b3VjaCYmKHMub3B0cy50b3VjaC52ZXJ0aWNhbHx8YS5ncm91cC5sZW5ndGg+MSkmJlwidmlkZW9cIiE9PXMuY29udGVudFR5cGUmJnIuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tc3dpcGVcIikpfSxpc1pvb21hYmxlOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS5jdXJyZW50O2lmKG4mJiFlLmlzQ2xvc2luZyYmXCJpbWFnZVwiPT09bi50eXBlJiYhbi5oYXNFcnJvcil7aWYoIW4uaXNMb2FkZWQpcmV0dXJuITA7aWYoKHQ9ZS5nZXRGaXRQb3MobikpJiYobi53aWR0aD50LndpZHRofHxuLmhlaWdodD50LmhlaWdodCkpcmV0dXJuITB9cmV0dXJuITF9LGlzU2NhbGVkRG93bjpmdW5jdGlvbih0LGUpe3ZhciBvPXRoaXMsaT0hMSxhPW8uY3VycmVudCxzPWEuJGNvbnRlbnQ7cmV0dXJuIHZvaWQgMCE9PXQmJnZvaWQgMCE9PWU/aT10PGEud2lkdGgmJmU8YS5oZWlnaHQ6cyYmKGk9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUocyksaT1pLndpZHRoPGEud2lkdGgmJmkuaGVpZ2h0PGEuaGVpZ2h0KSxpfSxjYW5QYW46ZnVuY3Rpb24odCxlKXt2YXIgbz10aGlzLGk9by5jdXJyZW50LGE9bnVsbCxzPSExO3JldHVyblwiaW1hZ2VcIj09PWkudHlwZSYmKGkuaXNDb21wbGV0ZXx8dCYmZSkmJiFpLmhhc0Vycm9yJiYocz1vLmdldEZpdFBvcyhpKSx2b2lkIDAhPT10JiZ2b2lkIDAhPT1lP2E9e3dpZHRoOnQsaGVpZ2h0OmV9OmkuaXNDb21wbGV0ZSYmKGE9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoaS4kY29udGVudCkpLGEmJnMmJihzPU1hdGguYWJzKGEud2lkdGgtcy53aWR0aCk+MS41fHxNYXRoLmFicyhhLmhlaWdodC1zLmhlaWdodCk+MS41KSksc30sbG9hZFNsaWRlOmZ1bmN0aW9uKHQpe3ZhciBlLG8saSxhPXRoaXM7aWYoIXQuaXNMb2FkaW5nJiYhdC5pc0xvYWRlZCl7aWYodC5pc0xvYWRpbmc9ITAsITE9PT1hLnRyaWdnZXIoXCJiZWZvcmVMb2FkXCIsdCkpcmV0dXJuIHQuaXNMb2FkaW5nPSExLCExO3N3aXRjaChlPXQudHlwZSxvPXQuJHNsaWRlLG8ub2ZmKFwicmVmcmVzaFwiKS50cmlnZ2VyKFwib25SZXNldFwiKS5hZGRDbGFzcyh0Lm9wdHMuc2xpZGVDbGFzcyksZSl7Y2FzZVwiaW1hZ2VcIjphLnNldEltYWdlKHQpO2JyZWFrO2Nhc2VcImlmcmFtZVwiOmEuc2V0SWZyYW1lKHQpO2JyZWFrO2Nhc2VcImh0bWxcIjphLnNldENvbnRlbnQodCx0LnNyY3x8dC5jb250ZW50KTticmVhaztjYXNlXCJ2aWRlb1wiOmEuc2V0Q29udGVudCh0LHQub3B0cy52aWRlby50cGwucmVwbGFjZSgvXFx7XFx7c3JjXFx9XFx9L2dpLHQuc3JjKS5yZXBsYWNlKFwie3tmb3JtYXR9fVwiLHQub3B0cy52aWRlb0Zvcm1hdHx8dC5vcHRzLnZpZGVvLmZvcm1hdHx8XCJcIikucmVwbGFjZShcInt7cG9zdGVyfX1cIix0LnRodW1ifHxcIlwiKSk7YnJlYWs7Y2FzZVwiaW5saW5lXCI6bih0LnNyYykubGVuZ3RoP2Euc2V0Q29udGVudCh0LG4odC5zcmMpKTphLnNldEVycm9yKHQpO2JyZWFrO2Nhc2VcImFqYXhcIjphLnNob3dMb2FkaW5nKHQpLGk9bi5hamF4KG4uZXh0ZW5kKHt9LHQub3B0cy5hamF4LnNldHRpbmdzLHt1cmw6dC5zcmMsc3VjY2VzczpmdW5jdGlvbihlLG4pe1wic3VjY2Vzc1wiPT09biYmYS5zZXRDb250ZW50KHQsZSl9LGVycm9yOmZ1bmN0aW9uKGUsbil7ZSYmXCJhYm9ydFwiIT09biYmYS5zZXRFcnJvcih0KX19KSksby5vbmUoXCJvblJlc2V0XCIsZnVuY3Rpb24oKXtpLmFib3J0KCl9KTticmVhaztkZWZhdWx0OmEuc2V0RXJyb3IodCl9cmV0dXJuITB9fSxzZXRJbWFnZTpmdW5jdGlvbih0KXt2YXIgbyxpPXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBlPXQuJGltYWdlO2kuaXNDbG9zaW5nfHwhdC5pc0xvYWRpbmd8fGUmJmUubGVuZ3RoJiZlWzBdLmNvbXBsZXRlfHx0Lmhhc0Vycm9yfHxpLnNob3dMb2FkaW5nKHQpfSw1MCksaS5jaGVja1NyY3NldCh0KSx0LiRjb250ZW50PW4oJzxkaXYgY2xhc3M9XCJmYW5jeWJveC1jb250ZW50XCI+PC9kaXY+JykuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1oaWRkZW5cIikuYXBwZW5kVG8odC4kc2xpZGUuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0taW1hZ2VcIikpLCExIT09dC5vcHRzLnByZWxvYWQmJnQub3B0cy53aWR0aCYmdC5vcHRzLmhlaWdodCYmdC50aHVtYiYmKHQud2lkdGg9dC5vcHRzLndpZHRoLHQuaGVpZ2h0PXQub3B0cy5oZWlnaHQsbz1lLmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiksby5vbmVycm9yPWZ1bmN0aW9uKCl7bih0aGlzKS5yZW1vdmUoKSx0LiRnaG9zdD1udWxsfSxvLm9ubG9hZD1mdW5jdGlvbigpe2kuYWZ0ZXJMb2FkKHQpfSx0LiRnaG9zdD1uKG8pLmFkZENsYXNzKFwiZmFuY3lib3gtaW1hZ2VcIikuYXBwZW5kVG8odC4kY29udGVudCkuYXR0cihcInNyY1wiLHQudGh1bWIpKSxpLnNldEJpZ0ltYWdlKHQpfSxjaGVja1NyY3NldDpmdW5jdGlvbihlKXt2YXIgbixvLGksYSxzPWUub3B0cy5zcmNzZXR8fGUub3B0cy5pbWFnZS5zcmNzZXQ7aWYocyl7aT10LmRldmljZVBpeGVsUmF0aW98fDEsYT10LmlubmVyV2lkdGgqaSxvPXMuc3BsaXQoXCIsXCIpLm1hcChmdW5jdGlvbih0KXt2YXIgZT17fTtyZXR1cm4gdC50cmltKCkuc3BsaXQoL1xccysvKS5mb3JFYWNoKGZ1bmN0aW9uKHQsbil7dmFyIG89cGFyc2VJbnQodC5zdWJzdHJpbmcoMCx0Lmxlbmd0aC0xKSwxMCk7aWYoMD09PW4pcmV0dXJuIGUudXJsPXQ7byYmKGUudmFsdWU9byxlLnBvc3RmaXg9dFt0Lmxlbmd0aC0xXSl9KSxlfSksby5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQudmFsdWUtZS52YWx1ZX0pO2Zvcih2YXIgcj0wO3I8by5sZW5ndGg7cisrKXt2YXIgYz1vW3JdO2lmKFwid1wiPT09Yy5wb3N0Zml4JiZjLnZhbHVlPj1hfHxcInhcIj09PWMucG9zdGZpeCYmYy52YWx1ZT49aSl7bj1jO2JyZWFrfX0hbiYmby5sZW5ndGgmJihuPW9bby5sZW5ndGgtMV0pLG4mJihlLnNyYz1uLnVybCxlLndpZHRoJiZlLmhlaWdodCYmXCJ3XCI9PW4ucG9zdGZpeCYmKGUuaGVpZ2h0PWUud2lkdGgvZS5oZWlnaHQqbi52YWx1ZSxlLndpZHRoPW4udmFsdWUpLGUub3B0cy5zcmNzZXQ9cyl9fSxzZXRCaWdJbWFnZTpmdW5jdGlvbih0KXt2YXIgbz10aGlzLGk9ZS5jcmVhdGVFbGVtZW50KFwiaW1nXCIpLGE9bihpKTt0LiRpbWFnZT1hLm9uZShcImVycm9yXCIsZnVuY3Rpb24oKXtvLnNldEVycm9yKHQpfSkub25lKFwibG9hZFwiLGZ1bmN0aW9uKCl7dmFyIGU7dC4kZ2hvc3R8fChvLnJlc29sdmVJbWFnZVNsaWRlU2l6ZSh0LHRoaXMubmF0dXJhbFdpZHRoLHRoaXMubmF0dXJhbEhlaWdodCksby5hZnRlckxvYWQodCkpLG8uaXNDbG9zaW5nfHwodC5vcHRzLnNyY3NldCYmKGU9dC5vcHRzLnNpemVzLGUmJlwiYXV0b1wiIT09ZXx8KGU9KHQud2lkdGgvdC5oZWlnaHQ+MSYmcy53aWR0aCgpL3MuaGVpZ2h0KCk+MT9cIjEwMFwiOk1hdGgucm91bmQodC53aWR0aC90LmhlaWdodCoxMDApKStcInZ3XCIpLGEuYXR0cihcInNpemVzXCIsZSkuYXR0cihcInNyY3NldFwiLHQub3B0cy5zcmNzZXQpKSx0LiRnaG9zdCYmc2V0VGltZW91dChmdW5jdGlvbigpe3QuJGdob3N0JiYhby5pc0Nsb3NpbmcmJnQuJGdob3N0LmhpZGUoKX0sTWF0aC5taW4oMzAwLE1hdGgubWF4KDFlMyx0LmhlaWdodC8xNjAwKSkpLG8uaGlkZUxvYWRpbmcodCkpfSkuYWRkQ2xhc3MoXCJmYW5jeWJveC1pbWFnZVwiKS5hdHRyKFwic3JjXCIsdC5zcmMpLmFwcGVuZFRvKHQuJGNvbnRlbnQpLChpLmNvbXBsZXRlfHxcImNvbXBsZXRlXCI9PWkucmVhZHlTdGF0ZSkmJmEubmF0dXJhbFdpZHRoJiZhLm5hdHVyYWxIZWlnaHQ/YS50cmlnZ2VyKFwibG9hZFwiKTppLmVycm9yJiZhLnRyaWdnZXIoXCJlcnJvclwiKX0scmVzb2x2ZUltYWdlU2xpZGVTaXplOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1wYXJzZUludCh0Lm9wdHMud2lkdGgsMTApLGk9cGFyc2VJbnQodC5vcHRzLmhlaWdodCwxMCk7dC53aWR0aD1lLHQuaGVpZ2h0PW4sbz4wJiYodC53aWR0aD1vLHQuaGVpZ2h0PU1hdGguZmxvb3IobypuL2UpKSxpPjAmJih0LndpZHRoPU1hdGguZmxvb3IoaSplL24pLHQuaGVpZ2h0PWkpfSxzZXRJZnJhbWU6ZnVuY3Rpb24odCl7dmFyIGUsbz10aGlzLGk9dC5vcHRzLmlmcmFtZSxhPXQuJHNsaWRlO3QuJGNvbnRlbnQ9bignPGRpdiBjbGFzcz1cImZhbmN5Ym94LWNvbnRlbnQnKyhpLnByZWxvYWQ/XCIgZmFuY3lib3gtaXMtaGlkZGVuXCI6XCJcIikrJ1wiPjwvZGl2PicpLmNzcyhpLmNzcykuYXBwZW5kVG8oYSksYS5hZGRDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1cIit0LmNvbnRlbnRUeXBlKSx0LiRpZnJhbWU9ZT1uKGkudHBsLnJlcGxhY2UoL1xce3JuZFxcfS9nLChuZXcgRGF0ZSkuZ2V0VGltZSgpKSkuYXR0cihpLmF0dHIpLmFwcGVuZFRvKHQuJGNvbnRlbnQpLGkucHJlbG9hZD8oby5zaG93TG9hZGluZyh0KSxlLm9uKFwibG9hZC5mYiBlcnJvci5mYlwiLGZ1bmN0aW9uKGUpe3RoaXMuaXNSZWFkeT0xLHQuJHNsaWRlLnRyaWdnZXIoXCJyZWZyZXNoXCIpLG8uYWZ0ZXJMb2FkKHQpfSksYS5vbihcInJlZnJlc2guZmJcIixmdW5jdGlvbigpe3ZhciBuLG8scz10LiRjb250ZW50LHI9aS5jc3Mud2lkdGgsYz1pLmNzcy5oZWlnaHQ7aWYoMT09PWVbMF0uaXNSZWFkeSl7dHJ5e249ZS5jb250ZW50cygpLG89bi5maW5kKFwiYm9keVwiKX1jYXRjaCh0KXt9byYmby5sZW5ndGgmJm8uY2hpbGRyZW4oKS5sZW5ndGgmJihhLmNzcyhcIm92ZXJmbG93XCIsXCJ2aXNpYmxlXCIpLHMuY3NzKHt3aWR0aDpcIjEwMCVcIixcIm1heC13aWR0aFwiOlwiMTAwJVwiLGhlaWdodDpcIjk5OTlweFwifSksdm9pZCAwPT09ciYmKHI9TWF0aC5jZWlsKE1hdGgubWF4KG9bMF0uY2xpZW50V2lkdGgsby5vdXRlcldpZHRoKCEwKSkpKSxzLmNzcyhcIndpZHRoXCIscnx8XCJcIikuY3NzKFwibWF4LXdpZHRoXCIsXCJcIiksdm9pZCAwPT09YyYmKGM9TWF0aC5jZWlsKE1hdGgubWF4KG9bMF0uY2xpZW50SGVpZ2h0LG8ub3V0ZXJIZWlnaHQoITApKSkpLHMuY3NzKFwiaGVpZ2h0XCIsY3x8XCJcIiksYS5jc3MoXCJvdmVyZmxvd1wiLFwiYXV0b1wiKSkscy5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLWhpZGRlblwiKX19KSk6by5hZnRlckxvYWQodCksZS5hdHRyKFwic3JjXCIsdC5zcmMpLGEub25lKFwib25SZXNldFwiLGZ1bmN0aW9uKCl7dHJ5e24odGhpcykuZmluZChcImlmcmFtZVwiKS5oaWRlKCkudW5iaW5kKCkuYXR0cihcInNyY1wiLFwiLy9hYm91dDpibGFua1wiKX1jYXRjaCh0KXt9bih0aGlzKS5vZmYoXCJyZWZyZXNoLmZiXCIpLmVtcHR5KCksdC5pc0xvYWRlZD0hMSx0LmlzUmV2ZWFsZWQ9ITF9KX0sc2V0Q29udGVudDpmdW5jdGlvbih0LGUpe3ZhciBvPXRoaXM7by5pc0Nsb3Npbmd8fChvLmhpZGVMb2FkaW5nKHQpLHQuJGNvbnRlbnQmJm4uZmFuY3lib3guc3RvcCh0LiRjb250ZW50KSx0LiRzbGlkZS5lbXB0eSgpLGwoZSkmJmUucGFyZW50KCkubGVuZ3RoPygoZS5oYXNDbGFzcyhcImZhbmN5Ym94LWNvbnRlbnRcIil8fGUucGFyZW50KCkuaGFzQ2xhc3MoXCJmYW5jeWJveC1jb250ZW50XCIpKSYmZS5wYXJlbnRzKFwiLmZhbmN5Ym94LXNsaWRlXCIpLnRyaWdnZXIoXCJvblJlc2V0XCIpLHQuJHBsYWNlaG9sZGVyPW4oXCI8ZGl2PlwiKS5oaWRlKCkuaW5zZXJ0QWZ0ZXIoZSksZS5jc3MoXCJkaXNwbGF5XCIsXCJpbmxpbmUtYmxvY2tcIikpOnQuaGFzRXJyb3J8fChcInN0cmluZ1wiPT09bi50eXBlKGUpJiYoZT1uKFwiPGRpdj5cIikuYXBwZW5kKG4udHJpbShlKSkuY29udGVudHMoKSksdC5vcHRzLmZpbHRlciYmKGU9bihcIjxkaXY+XCIpLmh0bWwoZSkuZmluZCh0Lm9wdHMuZmlsdGVyKSkpLHQuJHNsaWRlLm9uZShcIm9uUmVzZXRcIixmdW5jdGlvbigpe24odGhpcykuZmluZChcInZpZGVvLGF1ZGlvXCIpLnRyaWdnZXIoXCJwYXVzZVwiKSx0LiRwbGFjZWhvbGRlciYmKHQuJHBsYWNlaG9sZGVyLmFmdGVyKGUucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1jb250ZW50XCIpLmhpZGUoKSkucmVtb3ZlKCksdC4kcGxhY2Vob2xkZXI9bnVsbCksdC4kc21hbGxCdG4mJih0LiRzbWFsbEJ0bi5yZW1vdmUoKSx0LiRzbWFsbEJ0bj1udWxsKSx0Lmhhc0Vycm9yfHwobih0aGlzKS5lbXB0eSgpLHQuaXNMb2FkZWQ9ITEsdC5pc1JldmVhbGVkPSExKX0pLG4oZSkuYXBwZW5kVG8odC4kc2xpZGUpLG4oZSkuaXMoXCJ2aWRlbyxhdWRpb1wiKSYmKG4oZSkuYWRkQ2xhc3MoXCJmYW5jeWJveC12aWRlb1wiKSxuKGUpLndyYXAoXCI8ZGl2PjwvZGl2PlwiKSx0LmNvbnRlbnRUeXBlPVwidmlkZW9cIix0Lm9wdHMud2lkdGg9dC5vcHRzLndpZHRofHxuKGUpLmF0dHIoXCJ3aWR0aFwiKSx0Lm9wdHMuaGVpZ2h0PXQub3B0cy5oZWlnaHR8fG4oZSkuYXR0cihcImhlaWdodFwiKSksdC4kY29udGVudD10LiRzbGlkZS5jaGlsZHJlbigpLmZpbHRlcihcImRpdixmb3JtLG1haW4sdmlkZW8sYXVkaW8sYXJ0aWNsZSwuZmFuY3lib3gtY29udGVudFwiKS5maXJzdCgpLHQuJGNvbnRlbnQuc2libGluZ3MoKS5oaWRlKCksdC4kY29udGVudC5sZW5ndGh8fCh0LiRjb250ZW50PXQuJHNsaWRlLndyYXBJbm5lcihcIjxkaXY+PC9kaXY+XCIpLmNoaWxkcmVuKCkuZmlyc3QoKSksdC4kY29udGVudC5hZGRDbGFzcyhcImZhbmN5Ym94LWNvbnRlbnRcIiksdC4kc2xpZGUuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tXCIrdC5jb250ZW50VHlwZSksby5hZnRlckxvYWQodCkpfSxzZXRFcnJvcjpmdW5jdGlvbih0KXt0Lmhhc0Vycm9yPSEwLHQuJHNsaWRlLnRyaWdnZXIoXCJvblJlc2V0XCIpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLVwiK3QuY29udGVudFR5cGUpLmFkZENsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWVycm9yXCIpLHQuY29udGVudFR5cGU9XCJodG1sXCIsdGhpcy5zZXRDb250ZW50KHQsdGhpcy50cmFuc2xhdGUodCx0Lm9wdHMuZXJyb3JUcGwpKSx0LnBvcz09PXRoaXMuY3VyclBvcyYmKHRoaXMuaXNBbmltYXRpbmc9ITEpfSxzaG93TG9hZGluZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzOyh0PXR8fGUuY3VycmVudCkmJiF0LiRzcGlubmVyJiYodC4kc3Bpbm5lcj1uKGUudHJhbnNsYXRlKGUsZS5vcHRzLnNwaW5uZXJUcGwpKS5hcHBlbmRUbyh0LiRzbGlkZSkuaGlkZSgpLmZhZGVJbihcImZhc3RcIikpfSxoaWRlTG9hZGluZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzOyh0PXR8fGUuY3VycmVudCkmJnQuJHNwaW5uZXImJih0LiRzcGlubmVyLnN0b3AoKS5yZW1vdmUoKSxkZWxldGUgdC4kc3Bpbm5lcil9LGFmdGVyTG9hZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuaXNDbG9zaW5nfHwodC5pc0xvYWRpbmc9ITEsdC5pc0xvYWRlZD0hMCxlLnRyaWdnZXIoXCJhZnRlckxvYWRcIix0KSxlLmhpZGVMb2FkaW5nKHQpLCF0Lm9wdHMuc21hbGxCdG58fHQuJHNtYWxsQnRuJiZ0LiRzbWFsbEJ0bi5sZW5ndGh8fCh0LiRzbWFsbEJ0bj1uKGUudHJhbnNsYXRlKHQsdC5vcHRzLmJ0blRwbC5zbWFsbEJ0bikpLmFwcGVuZFRvKHQuJGNvbnRlbnQpKSx0Lm9wdHMucHJvdGVjdCYmdC4kY29udGVudCYmIXQuaGFzRXJyb3ImJih0LiRjb250ZW50Lm9uKFwiY29udGV4dG1lbnUuZmJcIixmdW5jdGlvbih0KXtyZXR1cm4gMj09dC5idXR0b24mJnQucHJldmVudERlZmF1bHQoKSwhMH0pLFwiaW1hZ2VcIj09PXQudHlwZSYmbignPGRpdiBjbGFzcz1cImZhbmN5Ym94LXNwYWNlYmFsbFwiPjwvZGl2PicpLmFwcGVuZFRvKHQuJGNvbnRlbnQpKSxlLmFkanVzdENhcHRpb24odCksZS5hZGp1c3RMYXlvdXQodCksdC5wb3M9PT1lLmN1cnJQb3MmJmUudXBkYXRlQ3Vyc29yKCksZS5yZXZlYWxDb250ZW50KHQpKX0sYWRqdXN0Q2FwdGlvbjpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsbz10fHxuLmN1cnJlbnQsaT1vLm9wdHMuY2FwdGlvbixhPW8ub3B0cy5wcmV2ZW50Q2FwdGlvbk92ZXJsYXAscz1uLiRyZWZzLmNhcHRpb24scj0hMTtzLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtY2FwdGlvbi0tc2VwYXJhdGVcIixhKSxhJiZpJiZpLmxlbmd0aCYmKG8ucG9zIT09bi5jdXJyUG9zPyhlPXMuY2xvbmUoKS5hcHBlbmRUbyhzLnBhcmVudCgpKSxlLmNoaWxkcmVuKCkuZXEoMCkuZW1wdHkoKS5odG1sKGkpLHI9ZS5vdXRlckhlaWdodCghMCksZS5lbXB0eSgpLnJlbW92ZSgpKTpuLiRjYXB0aW9uJiYocj1uLiRjYXB0aW9uLm91dGVySGVpZ2h0KCEwKSksby4kc2xpZGUuY3NzKFwicGFkZGluZy1ib3R0b21cIixyfHxcIlwiKSl9LGFkanVzdExheW91dDpmdW5jdGlvbih0KXt2YXIgZSxuLG8saSxhPXRoaXMscz10fHxhLmN1cnJlbnQ7cy5pc0xvYWRlZCYmITAhPT1zLm9wdHMuZGlzYWJsZUxheW91dEZpeCYmKHMuJGNvbnRlbnQuY3NzKFwibWFyZ2luLWJvdHRvbVwiLFwiXCIpLHMuJGNvbnRlbnQub3V0ZXJIZWlnaHQoKT5zLiRzbGlkZS5oZWlnaHQoKSsuNSYmKG89cy4kc2xpZGVbMF0uc3R5bGVbXCJwYWRkaW5nLWJvdHRvbVwiXSxpPXMuJHNsaWRlLmNzcyhcInBhZGRpbmctYm90dG9tXCIpLHBhcnNlRmxvYXQoaSk+MCYmKGU9cy4kc2xpZGVbMF0uc2Nyb2xsSGVpZ2h0LHMuJHNsaWRlLmNzcyhcInBhZGRpbmctYm90dG9tXCIsMCksTWF0aC5hYnMoZS1zLiRzbGlkZVswXS5zY3JvbGxIZWlnaHQpPDEmJihuPWkpLHMuJHNsaWRlLmNzcyhcInBhZGRpbmctYm90dG9tXCIsbykpKSxzLiRjb250ZW50LmNzcyhcIm1hcmdpbi1ib3R0b21cIixuKSl9LHJldmVhbENvbnRlbnQ6ZnVuY3Rpb24odCl7dmFyIGUsbyxpLGEscz10aGlzLHI9dC4kc2xpZGUsYz0hMSxsPSExLGQ9cy5pc01vdmVkKHQpLHU9dC5pc1JldmVhbGVkO3JldHVybiB0LmlzUmV2ZWFsZWQ9ITAsZT10Lm9wdHNbcy5maXJzdFJ1bj9cImFuaW1hdGlvbkVmZmVjdFwiOlwidHJhbnNpdGlvbkVmZmVjdFwiXSxpPXQub3B0c1tzLmZpcnN0UnVuP1wiYW5pbWF0aW9uRHVyYXRpb25cIjpcInRyYW5zaXRpb25EdXJhdGlvblwiXSxpPXBhcnNlSW50KHZvaWQgMD09PXQuZm9yY2VkRHVyYXRpb24/aTp0LmZvcmNlZER1cmF0aW9uLDEwKSwhZCYmdC5wb3M9PT1zLmN1cnJQb3MmJml8fChlPSExKSxcInpvb21cIj09PWUmJih0LnBvcz09PXMuY3VyclBvcyYmaSYmXCJpbWFnZVwiPT09dC50eXBlJiYhdC5oYXNFcnJvciYmKGw9cy5nZXRUaHVtYlBvcyh0KSk/Yz1zLmdldEZpdFBvcyh0KTplPVwiZmFkZVwiKSxcInpvb21cIj09PWU/KHMuaXNBbmltYXRpbmc9ITAsYy5zY2FsZVg9Yy53aWR0aC9sLndpZHRoLGMuc2NhbGVZPWMuaGVpZ2h0L2wuaGVpZ2h0LGE9dC5vcHRzLnpvb21PcGFjaXR5LFwiYXV0b1wiPT1hJiYoYT1NYXRoLmFicyh0LndpZHRoL3QuaGVpZ2h0LWwud2lkdGgvbC5oZWlnaHQpPi4xKSxhJiYobC5vcGFjaXR5PS4xLGMub3BhY2l0eT0xKSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZSh0LiRjb250ZW50LnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtaGlkZGVuXCIpLGwpLHAodC4kY29udGVudCksdm9pZCBuLmZhbmN5Ym94LmFuaW1hdGUodC4kY29udGVudCxjLGksZnVuY3Rpb24oKXtzLmlzQW5pbWF0aW5nPSExLHMuY29tcGxldGUoKX0pKToocy51cGRhdGVTbGlkZSh0KSxlPyhuLmZhbmN5Ym94LnN0b3Aociksbz1cImZhbmN5Ym94LXNsaWRlLS1cIisodC5wb3M+PXMucHJldlBvcz9cIm5leHRcIjpcInByZXZpb3VzXCIpK1wiIGZhbmN5Ym94LWFuaW1hdGVkIGZhbmN5Ym94LWZ4LVwiK2Usci5hZGRDbGFzcyhvKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1jdXJyZW50XCIpLHQuJGNvbnRlbnQucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy1oaWRkZW5cIikscChyKSxcImltYWdlXCIhPT10LnR5cGUmJnQuJGNvbnRlbnQuaGlkZSgpLnNob3coMCksdm9pZCBuLmZhbmN5Ym94LmFuaW1hdGUocixcImZhbmN5Ym94LXNsaWRlLS1jdXJyZW50XCIsaSxmdW5jdGlvbigpe3IucmVtb3ZlQ2xhc3MobykuY3NzKHt0cmFuc2Zvcm06XCJcIixvcGFjaXR5OlwiXCJ9KSx0LnBvcz09PXMuY3VyclBvcyYmcy5jb21wbGV0ZSgpfSwhMCkpOih0LiRjb250ZW50LnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtaGlkZGVuXCIpLHV8fCFkfHxcImltYWdlXCIhPT10LnR5cGV8fHQuaGFzRXJyb3J8fHQuJGNvbnRlbnQuaGlkZSgpLmZhZGVJbihcImZhc3RcIiksdm9pZCh0LnBvcz09PXMuY3VyclBvcyYmcy5jb21wbGV0ZSgpKSkpfSxnZXRUaHVtYlBvczpmdW5jdGlvbih0KXt2YXIgZSxvLGksYSxzLHI9ITEsYz10LiR0aHVtYjtyZXR1cm4hKCFjfHwhZyhjWzBdKSkmJihlPW4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKGMpLG89cGFyc2VGbG9hdChjLmNzcyhcImJvcmRlci10b3Atd2lkdGhcIil8fDApLGk9cGFyc2VGbG9hdChjLmNzcyhcImJvcmRlci1yaWdodC13aWR0aFwiKXx8MCksYT1wYXJzZUZsb2F0KGMuY3NzKFwiYm9yZGVyLWJvdHRvbS13aWR0aFwiKXx8MCkscz1wYXJzZUZsb2F0KGMuY3NzKFwiYm9yZGVyLWxlZnQtd2lkdGhcIil8fDApLHI9e3RvcDplLnRvcCtvLGxlZnQ6ZS5sZWZ0K3Msd2lkdGg6ZS53aWR0aC1pLXMsaGVpZ2h0OmUuaGVpZ2h0LW8tYSxzY2FsZVg6MSxzY2FsZVk6MX0sZS53aWR0aD4wJiZlLmhlaWdodD4wJiZyKX0sY29tcGxldGU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbz1lLmN1cnJlbnQsaT17fTshZS5pc01vdmVkKCkmJm8uaXNMb2FkZWQmJihvLmlzQ29tcGxldGV8fChvLmlzQ29tcGxldGU9ITAsby4kc2xpZGUuc2libGluZ3MoKS50cmlnZ2VyKFwib25SZXNldFwiKSxlLnByZWxvYWQoXCJpbmxpbmVcIikscChvLiRzbGlkZSksby4kc2xpZGUuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tY29tcGxldGVcIiksbi5lYWNoKGUuc2xpZGVzLGZ1bmN0aW9uKHQsbyl7by5wb3M+PWUuY3VyclBvcy0xJiZvLnBvczw9ZS5jdXJyUG9zKzE/aVtvLnBvc109bzpvJiYobi5mYW5jeWJveC5zdG9wKG8uJHNsaWRlKSxvLiRzbGlkZS5vZmYoKS5yZW1vdmUoKSl9KSxlLnNsaWRlcz1pKSxlLmlzQW5pbWF0aW5nPSExLGUudXBkYXRlQ3Vyc29yKCksZS50cmlnZ2VyKFwiYWZ0ZXJTaG93XCIpLG8ub3B0cy52aWRlby5hdXRvU3RhcnQmJm8uJHNsaWRlLmZpbmQoXCJ2aWRlbyxhdWRpb1wiKS5maWx0ZXIoXCI6dmlzaWJsZTpmaXJzdFwiKS50cmlnZ2VyKFwicGxheVwiKS5vbmUoXCJlbmRlZFwiLGZ1bmN0aW9uKCl7RG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4/RG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4oKTp0aGlzLndlYmtpdEV4aXRGdWxsc2NyZWVuJiZ0aGlzLndlYmtpdEV4aXRGdWxsc2NyZWVuKCksZS5uZXh0KCl9KSxvLm9wdHMuYXV0b0ZvY3VzJiZcImh0bWxcIj09PW8uY29udGVudFR5cGUmJih0PW8uJGNvbnRlbnQuZmluZChcImlucHV0W2F1dG9mb2N1c106ZW5hYmxlZDp2aXNpYmxlOmZpcnN0XCIpLHQubGVuZ3RoP3QudHJpZ2dlcihcImZvY3VzXCIpOmUuZm9jdXMobnVsbCwhMCkpLG8uJHNsaWRlLnNjcm9sbFRvcCgwKS5zY3JvbGxMZWZ0KDApKX0scHJlbG9hZDpmdW5jdGlvbih0KXt2YXIgZSxuLG89dGhpcztvLmdyb3VwLmxlbmd0aDwyfHwobj1vLnNsaWRlc1tvLmN1cnJQb3MrMV0sZT1vLnNsaWRlc1tvLmN1cnJQb3MtMV0sZSYmZS50eXBlPT09dCYmby5sb2FkU2xpZGUoZSksbiYmbi50eXBlPT09dCYmby5sb2FkU2xpZGUobikpfSxmb2N1czpmdW5jdGlvbih0LG8pe3ZhciBpLGEscz10aGlzLHI9W1wiYVtocmVmXVwiLFwiYXJlYVtocmVmXVwiLCdpbnB1dDpub3QoW2Rpc2FibGVkXSk6bm90KFt0eXBlPVwiaGlkZGVuXCJdKTpub3QoW2FyaWEtaGlkZGVuXSknLFwic2VsZWN0Om5vdChbZGlzYWJsZWRdKTpub3QoW2FyaWEtaGlkZGVuXSlcIixcInRleHRhcmVhOm5vdChbZGlzYWJsZWRdKTpub3QoW2FyaWEtaGlkZGVuXSlcIixcImJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6bm90KFthcmlhLWhpZGRlbl0pXCIsXCJpZnJhbWVcIixcIm9iamVjdFwiLFwiZW1iZWRcIixcInZpZGVvXCIsXCJhdWRpb1wiLFwiW2NvbnRlbnRlZGl0YWJsZV1cIiwnW3RhYmluZGV4XTpub3QoW3RhYmluZGV4Xj1cIi1cIl0pJ10uam9pbihcIixcIik7cy5pc0Nsb3Npbmd8fChpPSF0JiZzLmN1cnJlbnQmJnMuY3VycmVudC5pc0NvbXBsZXRlP3MuY3VycmVudC4kc2xpZGUuZmluZChcIio6dmlzaWJsZVwiKyhvP1wiOm5vdCguZmFuY3lib3gtY2xvc2Utc21hbGwpXCI6XCJcIikpOnMuJHJlZnMuY29udGFpbmVyLmZpbmQoXCIqOnZpc2libGVcIiksaT1pLmZpbHRlcihyKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm5cImhpZGRlblwiIT09bih0aGlzKS5jc3MoXCJ2aXNpYmlsaXR5XCIpJiYhbih0aGlzKS5oYXNDbGFzcyhcImRpc2FibGVkXCIpfSksaS5sZW5ndGg/KGE9aS5pbmRleChlLmFjdGl2ZUVsZW1lbnQpLHQmJnQuc2hpZnRLZXk/KGE8MHx8MD09YSkmJih0LnByZXZlbnREZWZhdWx0KCksaS5lcShpLmxlbmd0aC0xKS50cmlnZ2VyKFwiZm9jdXNcIikpOihhPDB8fGE9PWkubGVuZ3RoLTEpJiYodCYmdC5wcmV2ZW50RGVmYXVsdCgpLGkuZXEoMCkudHJpZ2dlcihcImZvY3VzXCIpKSk6cy4kcmVmcy5jb250YWluZXIudHJpZ2dlcihcImZvY3VzXCIpKX0sYWN0aXZhdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO24oXCIuZmFuY3lib3gtY29udGFpbmVyXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1uKHRoaXMpLmRhdGEoXCJGYW5jeUJveFwiKTtlJiZlLmlkIT09dC5pZCYmIWUuaXNDbG9zaW5nJiYoZS50cmlnZ2VyKFwib25EZWFjdGl2YXRlXCIpLGUucmVtb3ZlRXZlbnRzKCksZS5pc1Zpc2libGU9ITEpfSksdC5pc1Zpc2libGU9ITAsKHQuY3VycmVudHx8dC5pc0lkbGUpJiYodC51cGRhdGUoKSx0LnVwZGF0ZUNvbnRyb2xzKCkpLHQudHJpZ2dlcihcIm9uQWN0aXZhdGVcIiksdC5hZGRFdmVudHMoKX0sY2xvc2U6ZnVuY3Rpb24odCxlKXt2YXIgbyxpLGEscyxyLGMsbCx1PXRoaXMsZj11LmN1cnJlbnQsaD1mdW5jdGlvbigpe3UuY2xlYW5VcCh0KX07cmV0dXJuIXUuaXNDbG9zaW5nJiYodS5pc0Nsb3Npbmc9ITAsITE9PT11LnRyaWdnZXIoXCJiZWZvcmVDbG9zZVwiLHQpPyh1LmlzQ2xvc2luZz0hMSxkKGZ1bmN0aW9uKCl7dS51cGRhdGUoKX0pLCExKToodS5yZW1vdmVFdmVudHMoKSxhPWYuJGNvbnRlbnQsbz1mLm9wdHMuYW5pbWF0aW9uRWZmZWN0LGk9bi5pc051bWVyaWMoZSk/ZTpvP2Yub3B0cy5hbmltYXRpb25EdXJhdGlvbjowLGYuJHNsaWRlLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWNvbXBsZXRlIGZhbmN5Ym94LXNsaWRlLS1uZXh0IGZhbmN5Ym94LXNsaWRlLS1wcmV2aW91cyBmYW5jeWJveC1hbmltYXRlZFwiKSwhMCE9PXQ/bi5mYW5jeWJveC5zdG9wKGYuJHNsaWRlKTpvPSExLGYuJHNsaWRlLnNpYmxpbmdzKCkudHJpZ2dlcihcIm9uUmVzZXRcIikucmVtb3ZlKCksaSYmdS4kcmVmcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy1vcGVuXCIpLmFkZENsYXNzKFwiZmFuY3lib3gtaXMtY2xvc2luZ1wiKS5jc3MoXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCIsaStcIm1zXCIpLHUuaGlkZUxvYWRpbmcoZiksdS5oaWRlQ29udHJvbHMoITApLHUudXBkYXRlQ3Vyc29yKCksXCJ6b29tXCIhPT1vfHxhJiZpJiZcImltYWdlXCI9PT1mLnR5cGUmJiF1LmlzTW92ZWQoKSYmIWYuaGFzRXJyb3ImJihsPXUuZ2V0VGh1bWJQb3MoZikpfHwobz1cImZhZGVcIiksXCJ6b29tXCI9PT1vPyhuLmZhbmN5Ym94LnN0b3AoYSkscz1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShhKSxjPXt0b3A6cy50b3AsbGVmdDpzLmxlZnQsc2NhbGVYOnMud2lkdGgvbC53aWR0aCxzY2FsZVk6cy5oZWlnaHQvbC5oZWlnaHQsd2lkdGg6bC53aWR0aCxoZWlnaHQ6bC5oZWlnaHR9LHI9Zi5vcHRzLnpvb21PcGFjaXR5LFxuXCJhdXRvXCI9PXImJihyPU1hdGguYWJzKGYud2lkdGgvZi5oZWlnaHQtbC53aWR0aC9sLmhlaWdodCk+LjEpLHImJihsLm9wYWNpdHk9MCksbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoYSxjKSxwKGEpLG4uZmFuY3lib3guYW5pbWF0ZShhLGwsaSxoKSwhMCk6KG8mJmk/bi5mYW5jeWJveC5hbmltYXRlKGYuJHNsaWRlLmFkZENsYXNzKFwiZmFuY3lib3gtc2xpZGUtLXByZXZpb3VzXCIpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWN1cnJlbnRcIiksXCJmYW5jeWJveC1hbmltYXRlZCBmYW5jeWJveC1meC1cIitvLGksaCk6ITA9PT10P3NldFRpbWVvdXQoaCxpKTpoKCksITApKSl9LGNsZWFuVXA6ZnVuY3Rpb24oZSl7dmFyIG8saSxhLHM9dGhpcyxyPXMuY3VycmVudC5vcHRzLiRvcmlnO3MuY3VycmVudC4kc2xpZGUudHJpZ2dlcihcIm9uUmVzZXRcIikscy4kcmVmcy5jb250YWluZXIuZW1wdHkoKS5yZW1vdmUoKSxzLnRyaWdnZXIoXCJhZnRlckNsb3NlXCIsZSkscy5jdXJyZW50Lm9wdHMuYmFja0ZvY3VzJiYociYmci5sZW5ndGgmJnIuaXMoXCI6dmlzaWJsZVwiKXx8KHI9cy4kdHJpZ2dlciksciYmci5sZW5ndGgmJihpPXQuc2Nyb2xsWCxhPXQuc2Nyb2xsWSxyLnRyaWdnZXIoXCJmb2N1c1wiKSxuKFwiaHRtbCwgYm9keVwiKS5zY3JvbGxUb3AoYSkuc2Nyb2xsTGVmdChpKSkpLHMuY3VycmVudD1udWxsLG89bi5mYW5jeWJveC5nZXRJbnN0YW5jZSgpLG8/by5hY3RpdmF0ZSgpOihuKFwiYm9keVwiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWFjdGl2ZSBjb21wZW5zYXRlLWZvci1zY3JvbGxiYXJcIiksbihcIiNmYW5jeWJveC1zdHlsZS1ub3Njcm9sbFwiKS5yZW1vdmUoKSl9LHRyaWdnZXI6ZnVuY3Rpb24odCxlKXt2YXIgbyxpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxhPXRoaXMscz1lJiZlLm9wdHM/ZTphLmN1cnJlbnQ7aWYocz9pLnVuc2hpZnQocyk6cz1hLGkudW5zaGlmdChhKSxuLmlzRnVuY3Rpb24ocy5vcHRzW3RdKSYmKG89cy5vcHRzW3RdLmFwcGx5KHMsaSkpLCExPT09bylyZXR1cm4gbztcImFmdGVyQ2xvc2VcIiE9PXQmJmEuJHJlZnM/YS4kcmVmcy5jb250YWluZXIudHJpZ2dlcih0K1wiLmZiXCIsaSk6ci50cmlnZ2VyKHQrXCIuZmJcIixpKX0sdXBkYXRlQ29udHJvbHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLG89dC5jdXJyZW50LGk9by5pbmRleCxhPXQuJHJlZnMuY29udGFpbmVyLHM9dC4kcmVmcy5jYXB0aW9uLHI9by5vcHRzLmNhcHRpb247by4kc2xpZGUudHJpZ2dlcihcInJlZnJlc2hcIiksciYmci5sZW5ndGg/KHQuJGNhcHRpb249cyxzLmNoaWxkcmVuKCkuZXEoMCkuaHRtbChyKSk6dC4kY2FwdGlvbj1udWxsLHQuaGFzSGlkZGVuQ29udHJvbHN8fHQuaXNJZGxlfHx0LnNob3dDb250cm9scygpLGEuZmluZChcIltkYXRhLWZhbmN5Ym94LWNvdW50XVwiKS5odG1sKHQuZ3JvdXAubGVuZ3RoKSxhLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1pbmRleF1cIikuaHRtbChpKzEpLGEuZmluZChcIltkYXRhLWZhbmN5Ym94LXByZXZdXCIpLnByb3AoXCJkaXNhYmxlZFwiLCFvLm9wdHMubG9vcCYmaTw9MCksYS5maW5kKFwiW2RhdGEtZmFuY3lib3gtbmV4dF1cIikucHJvcChcImRpc2FibGVkXCIsIW8ub3B0cy5sb29wJiZpPj10Lmdyb3VwLmxlbmd0aC0xKSxcImltYWdlXCI9PT1vLnR5cGU/YS5maW5kKFwiW2RhdGEtZmFuY3lib3gtem9vbV1cIikuc2hvdygpLmVuZCgpLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1kb3dubG9hZF1cIikuYXR0cihcImhyZWZcIixvLm9wdHMuaW1hZ2Uuc3JjfHxvLnNyYykuc2hvdygpOm8ub3B0cy50b29sYmFyJiZhLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1kb3dubG9hZF0sW2RhdGEtZmFuY3lib3gtem9vbV1cIikuaGlkZSgpLG4oZS5hY3RpdmVFbGVtZW50KS5pcyhcIjpoaWRkZW4sW2Rpc2FibGVkXVwiKSYmdC4kcmVmcy5jb250YWluZXIudHJpZ2dlcihcImZvY3VzXCIpfSxoaWRlQ29udHJvbHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPVtcImluZm9iYXJcIixcInRvb2xiYXJcIixcIm5hdlwiXTshdCYmZS5jdXJyZW50Lm9wdHMucHJldmVudENhcHRpb25PdmVybGFwfHxuLnB1c2goXCJjYXB0aW9uXCIpLHRoaXMuJHJlZnMuY29udGFpbmVyLnJlbW92ZUNsYXNzKG4ubWFwKGZ1bmN0aW9uKHQpe3JldHVyblwiZmFuY3lib3gtc2hvdy1cIit0fSkuam9pbihcIiBcIikpLHRoaXMuaGFzSGlkZGVuQ29udHJvbHM9ITB9LHNob3dDb250cm9sczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmN1cnJlbnQ/dC5jdXJyZW50Lm9wdHM6dC5vcHRzLG49dC4kcmVmcy5jb250YWluZXI7dC5oYXNIaWRkZW5Db250cm9scz0hMSx0LmlkbGVTZWNvbmRzQ291bnRlcj0wLG4udG9nZ2xlQ2xhc3MoXCJmYW5jeWJveC1zaG93LXRvb2xiYXJcIiwhKCFlLnRvb2xiYXJ8fCFlLmJ1dHRvbnMpKS50b2dnbGVDbGFzcyhcImZhbmN5Ym94LXNob3ctaW5mb2JhclwiLCEhKGUuaW5mb2JhciYmdC5ncm91cC5sZW5ndGg+MSkpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtc2hvdy1jYXB0aW9uXCIsISF0LiRjYXB0aW9uKS50b2dnbGVDbGFzcyhcImZhbmN5Ym94LXNob3ctbmF2XCIsISEoZS5hcnJvd3MmJnQuZ3JvdXAubGVuZ3RoPjEpKS50b2dnbGVDbGFzcyhcImZhbmN5Ym94LWlzLW1vZGFsXCIsISFlLm1vZGFsKX0sdG9nZ2xlQ29udHJvbHM6ZnVuY3Rpb24oKXt0aGlzLmhhc0hpZGRlbkNvbnRyb2xzP3RoaXMuc2hvd0NvbnRyb2xzKCk6dGhpcy5oaWRlQ29udHJvbHMoKX19KSxuLmZhbmN5Ym94PXt2ZXJzaW9uOlwiMy41LjdcIixkZWZhdWx0czphLGdldEluc3RhbmNlOmZ1bmN0aW9uKHQpe3ZhciBlPW4oJy5mYW5jeWJveC1jb250YWluZXI6bm90KFwiLmZhbmN5Ym94LWlzLWNsb3NpbmdcIik6bGFzdCcpLmRhdGEoXCJGYW5jeUJveFwiKSxvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtyZXR1cm4gZSBpbnN0YW5jZW9mIGImJihcInN0cmluZ1wiPT09bi50eXBlKHQpP2VbdF0uYXBwbHkoZSxvKTpcImZ1bmN0aW9uXCI9PT1uLnR5cGUodCkmJnQuYXBwbHkoZSxvKSxlKX0sb3BlbjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBiKHQsZSxuKX0sY2xvc2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRJbnN0YW5jZSgpO2UmJihlLmNsb3NlKCksITA9PT10JiZ0aGlzLmNsb3NlKHQpKX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuY2xvc2UoITApLHIuYWRkKFwiYm9keVwiKS5vZmYoXCJjbGljay5mYi1zdGFydFwiLFwiKipcIil9LGlzTW9iaWxlOi9BbmRyb2lkfHdlYk9TfGlQaG9uZXxpUGFkfGlQb2R8QmxhY2tCZXJyeXxJRU1vYmlsZXxPcGVyYSBNaW5pL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSx1c2UzZDpmdW5jdGlvbigpe3ZhciBuPWUuY3JlYXRlRWxlbWVudChcImRpdlwiKTtyZXR1cm4gdC5nZXRDb21wdXRlZFN0eWxlJiZ0LmdldENvbXB1dGVkU3R5bGUobikmJnQuZ2V0Q29tcHV0ZWRTdHlsZShuKS5nZXRQcm9wZXJ0eVZhbHVlKFwidHJhbnNmb3JtXCIpJiYhKGUuZG9jdW1lbnRNb2RlJiZlLmRvY3VtZW50TW9kZTwxMSl9KCksZ2V0VHJhbnNsYXRlOmZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiEoIXR8fCF0Lmxlbmd0aCkmJihlPXRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkse3RvcDplLnRvcHx8MCxsZWZ0OmUubGVmdHx8MCx3aWR0aDplLndpZHRoLGhlaWdodDplLmhlaWdodCxvcGFjaXR5OnBhcnNlRmxvYXQodC5jc3MoXCJvcGFjaXR5XCIpKX0pfSxzZXRUcmFuc2xhdGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1cIlwiLG89e307aWYodCYmZSlyZXR1cm4gdm9pZCAwPT09ZS5sZWZ0JiZ2b2lkIDA9PT1lLnRvcHx8KG49KHZvaWQgMD09PWUubGVmdD90LnBvc2l0aW9uKCkubGVmdDplLmxlZnQpK1wicHgsIFwiKyh2b2lkIDA9PT1lLnRvcD90LnBvc2l0aW9uKCkudG9wOmUudG9wKStcInB4XCIsbj10aGlzLnVzZTNkP1widHJhbnNsYXRlM2QoXCIrbitcIiwgMHB4KVwiOlwidHJhbnNsYXRlKFwiK24rXCIpXCIpLHZvaWQgMCE9PWUuc2NhbGVYJiZ2b2lkIDAhPT1lLnNjYWxlWT9uKz1cIiBzY2FsZShcIitlLnNjYWxlWCtcIiwgXCIrZS5zY2FsZVkrXCIpXCI6dm9pZCAwIT09ZS5zY2FsZVgmJihuKz1cIiBzY2FsZVgoXCIrZS5zY2FsZVgrXCIpXCIpLG4ubGVuZ3RoJiYoby50cmFuc2Zvcm09biksdm9pZCAwIT09ZS5vcGFjaXR5JiYoby5vcGFjaXR5PWUub3BhY2l0eSksdm9pZCAwIT09ZS53aWR0aCYmKG8ud2lkdGg9ZS53aWR0aCksdm9pZCAwIT09ZS5oZWlnaHQmJihvLmhlaWdodD1lLmhlaWdodCksdC5jc3Mobyl9LGFuaW1hdGU6ZnVuY3Rpb24odCxlLG8saSxhKXt2YXIgcyxyPXRoaXM7bi5pc0Z1bmN0aW9uKG8pJiYoaT1vLG89bnVsbCksci5zdG9wKHQpLHM9ci5nZXRUcmFuc2xhdGUodCksdC5vbihmLGZ1bmN0aW9uKGMpeyghY3x8IWMub3JpZ2luYWxFdmVudHx8dC5pcyhjLm9yaWdpbmFsRXZlbnQudGFyZ2V0KSYmXCJ6LWluZGV4XCIhPWMub3JpZ2luYWxFdmVudC5wcm9wZXJ0eU5hbWUpJiYoci5zdG9wKHQpLG4uaXNOdW1lcmljKG8pJiZ0LmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixcIlwiKSxuLmlzUGxhaW5PYmplY3QoZSk/dm9pZCAwIT09ZS5zY2FsZVgmJnZvaWQgMCE9PWUuc2NhbGVZJiZyLnNldFRyYW5zbGF0ZSh0LHt0b3A6ZS50b3AsbGVmdDplLmxlZnQsd2lkdGg6cy53aWR0aCplLnNjYWxlWCxoZWlnaHQ6cy5oZWlnaHQqZS5zY2FsZVksc2NhbGVYOjEsc2NhbGVZOjF9KTohMCE9PWEmJnQucmVtb3ZlQ2xhc3MoZSksbi5pc0Z1bmN0aW9uKGkpJiZpKGMpKX0pLG4uaXNOdW1lcmljKG8pJiZ0LmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixvK1wibXNcIiksbi5pc1BsYWluT2JqZWN0KGUpPyh2b2lkIDAhPT1lLnNjYWxlWCYmdm9pZCAwIT09ZS5zY2FsZVkmJihkZWxldGUgZS53aWR0aCxkZWxldGUgZS5oZWlnaHQsdC5wYXJlbnQoKS5oYXNDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1pbWFnZVwiKSYmdC5wYXJlbnQoKS5hZGRDbGFzcyhcImZhbmN5Ym94LWlzLXNjYWxpbmdcIikpLG4uZmFuY3lib3guc2V0VHJhbnNsYXRlKHQsZSkpOnQuYWRkQ2xhc3MoZSksdC5kYXRhKFwidGltZXJcIixzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC50cmlnZ2VyKGYpfSxvKzMzKSl9LHN0b3A6ZnVuY3Rpb24odCxlKXt0JiZ0Lmxlbmd0aCYmKGNsZWFyVGltZW91dCh0LmRhdGEoXCJ0aW1lclwiKSksZSYmdC50cmlnZ2VyKGYpLHQub2ZmKGYpLmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixcIlwiKSx0LnBhcmVudCgpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtc2NhbGluZ1wiKSl9fSxuLmZuLmZhbmN5Ym94PWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiB0PXR8fHt9LGU9dC5zZWxlY3Rvcnx8ITEsZT9uKFwiYm9keVwiKS5vZmYoXCJjbGljay5mYi1zdGFydFwiLGUpLm9uKFwiY2xpY2suZmItc3RhcnRcIixlLHtvcHRpb25zOnR9LGkpOnRoaXMub2ZmKFwiY2xpY2suZmItc3RhcnRcIikub24oXCJjbGljay5mYi1zdGFydFwiLHtpdGVtczp0aGlzLG9wdGlvbnM6dH0saSksdGhpc30sci5vbihcImNsaWNrLmZiLXN0YXJ0XCIsXCJbZGF0YS1mYW5jeWJveF1cIixpKSxyLm9uKFwiY2xpY2suZmItc3RhcnRcIixcIltkYXRhLWZhbmN5Ym94LXRyaWdnZXJdXCIsZnVuY3Rpb24odCl7bignW2RhdGEtZmFuY3lib3g9XCInK24odGhpcykuYXR0cihcImRhdGEtZmFuY3lib3gtdHJpZ2dlclwiKSsnXCJdJykuZXEobih0aGlzKS5hdHRyKFwiZGF0YS1mYW5jeWJveC1pbmRleFwiKXx8MCkudHJpZ2dlcihcImNsaWNrLmZiLXN0YXJ0XCIseyR0cmlnZ2VyOm4odGhpcyl9KX0pLGZ1bmN0aW9uKCl7dmFyIHQ9bnVsbDtyLm9uKFwibW91c2Vkb3duIG1vdXNldXAgZm9jdXMgYmx1clwiLFwiLmZhbmN5Ym94LWJ1dHRvblwiLGZ1bmN0aW9uKGUpe3N3aXRjaChlLnR5cGUpe2Nhc2VcIm1vdXNlZG93blwiOnQ9bih0aGlzKTticmVhaztjYXNlXCJtb3VzZXVwXCI6dD1udWxsO2JyZWFrO2Nhc2VcImZvY3VzaW5cIjpuKFwiLmZhbmN5Ym94LWJ1dHRvblwiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWZvY3VzXCIpLG4odGhpcykuaXModCl8fG4odGhpcykuaXMoXCJbZGlzYWJsZWRdXCIpfHxuKHRoaXMpLmFkZENsYXNzKFwiZmFuY3lib3gtZm9jdXNcIik7YnJlYWs7Y2FzZVwiZm9jdXNvdXRcIjpuKFwiLmZhbmN5Ym94LWJ1dHRvblwiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWZvY3VzXCIpfX0pfSgpfX0od2luZG93LGRvY3VtZW50LGpRdWVyeSksZnVuY3Rpb24odCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9e3lvdXR1YmU6e21hdGNoZXI6Lyh5b3V0dWJlXFwuY29tfHlvdXR1XFwuYmV8eW91dHViZVxcLW5vY29va2llXFwuY29tKVxcLyh3YXRjaFxcPyguKiYpP3Y9fHZcXC98dVxcL3xlbWJlZFxcLz8pPyh2aWRlb3Nlcmllc1xcP2xpc3Q9KC4qKXxbXFx3LV17MTF9fFxcP2xpc3RUeXBlPSguKikmbGlzdD0oLiopKSguKikvaSxwYXJhbXM6e2F1dG9wbGF5OjEsYXV0b2hpZGU6MSxmczoxLHJlbDowLGhkOjEsd21vZGU6XCJ0cmFuc3BhcmVudFwiLGVuYWJsZWpzYXBpOjEsaHRtbDU6MX0scGFyYW1QbGFjZTo4LHR5cGU6XCJpZnJhbWVcIix1cmw6XCJodHRwczovL3d3dy55b3V0dWJlLW5vY29va2llLmNvbS9lbWJlZC8kNFwiLHRodW1iOlwiaHR0cHM6Ly9pbWcueW91dHViZS5jb20vdmkvJDQvaHFkZWZhdWx0LmpwZ1wifSx2aW1lbzp7bWF0Y2hlcjovXi4rdmltZW8uY29tXFwvKC4qXFwvKT8oW1xcZF0rKSguKik/LyxwYXJhbXM6e2F1dG9wbGF5OjEsaGQ6MSxzaG93X3RpdGxlOjEsc2hvd19ieWxpbmU6MSxzaG93X3BvcnRyYWl0OjAsZnVsbHNjcmVlbjoxfSxwYXJhbVBsYWNlOjMsdHlwZTpcImlmcmFtZVwiLHVybDpcIi8vcGxheWVyLnZpbWVvLmNvbS92aWRlby8kMlwifSxpbnN0YWdyYW06e21hdGNoZXI6LyhpbnN0YWdyXFwuYW18aW5zdGFncmFtXFwuY29tKVxcL3BcXC8oW2EtekEtWjAtOV9cXC1dKylcXC8/L2ksdHlwZTpcImltYWdlXCIsdXJsOlwiLy8kMS9wLyQyL21lZGlhLz9zaXplPWxcIn0sZ21hcF9wbGFjZTp7bWF0Y2hlcjovKG1hcHNcXC4pP2dvb2dsZVxcLihbYS16XXsyLDN9KFxcLlthLXpdezJ9KT8pXFwvKCgobWFwc1xcLyhwbGFjZVxcLyguKilcXC8pP1xcQCguKiksKFxcZCsuP1xcZCs/KXopKXwoXFw/bGw9KSkoLiopPy9pLHR5cGU6XCJpZnJhbWVcIix1cmw6ZnVuY3Rpb24odCl7cmV0dXJuXCIvL21hcHMuZ29vZ2xlLlwiK3RbMl0rXCIvP2xsPVwiKyh0WzldP3RbOV0rXCImej1cIitNYXRoLmZsb29yKHRbMTBdKSsodFsxMl0/dFsxMl0ucmVwbGFjZSgvXlxcLy8sXCImXCIpOlwiXCIpOnRbMTJdK1wiXCIpLnJlcGxhY2UoL1xcPy8sXCImXCIpK1wiJm91dHB1dD1cIisodFsxMl0mJnRbMTJdLmluZGV4T2YoXCJsYXllcj1jXCIpPjA/XCJzdmVtYmVkXCI6XCJlbWJlZFwiKX19LGdtYXBfc2VhcmNoOnttYXRjaGVyOi8obWFwc1xcLik/Z29vZ2xlXFwuKFthLXpdezIsM30oXFwuW2Etel17Mn0pPylcXC8obWFwc1xcL3NlYXJjaFxcLykoLiopL2ksdHlwZTpcImlmcmFtZVwiLHVybDpmdW5jdGlvbih0KXtyZXR1cm5cIi8vbWFwcy5nb29nbGUuXCIrdFsyXStcIi9tYXBzP3E9XCIrdFs1XS5yZXBsYWNlKFwicXVlcnk9XCIsXCJxPVwiKS5yZXBsYWNlKFwiYXBpPTFcIixcIlwiKStcIiZvdXRwdXQ9ZW1iZWRcIn19fSxuPWZ1bmN0aW9uKGUsbixvKXtpZihlKXJldHVybiBvPW98fFwiXCIsXCJvYmplY3RcIj09PXQudHlwZShvKSYmKG89dC5wYXJhbShvLCEwKSksdC5lYWNoKG4sZnVuY3Rpb24odCxuKXtlPWUucmVwbGFjZShcIiRcIit0LG58fFwiXCIpfSksby5sZW5ndGgmJihlKz0oZS5pbmRleE9mKFwiP1wiKT4wP1wiJlwiOlwiP1wiKStvKSxlfTt0KGRvY3VtZW50KS5vbihcIm9iamVjdE5lZWRzVHlwZS5mYlwiLGZ1bmN0aW9uKG8saSxhKXt2YXIgcyxyLGMsbCxkLHUsZixwPWEuc3JjfHxcIlwiLGg9ITE7cz10LmV4dGVuZCghMCx7fSxlLGEub3B0cy5tZWRpYSksdC5lYWNoKHMsZnVuY3Rpb24oZSxvKXtpZihjPXAubWF0Y2goby5tYXRjaGVyKSl7aWYoaD1vLnR5cGUsZj1lLHU9e30sby5wYXJhbVBsYWNlJiZjW28ucGFyYW1QbGFjZV0pe2Q9Y1tvLnBhcmFtUGxhY2VdLFwiP1wiPT1kWzBdJiYoZD1kLnN1YnN0cmluZygxKSksZD1kLnNwbGl0KFwiJlwiKTtmb3IodmFyIGk9MDtpPGQubGVuZ3RoOysraSl7dmFyIHM9ZFtpXS5zcGxpdChcIj1cIiwyKTsyPT1zLmxlbmd0aCYmKHVbc1swXV09ZGVjb2RlVVJJQ29tcG9uZW50KHNbMV0ucmVwbGFjZSgvXFwrL2csXCIgXCIpKSl9fXJldHVybiBsPXQuZXh0ZW5kKCEwLHt9LG8ucGFyYW1zLGEub3B0c1tlXSx1KSxwPVwiZnVuY3Rpb25cIj09PXQudHlwZShvLnVybCk/by51cmwuY2FsbCh0aGlzLGMsbCxhKTpuKG8udXJsLGMsbCkscj1cImZ1bmN0aW9uXCI9PT10LnR5cGUoby50aHVtYik/by50aHVtYi5jYWxsKHRoaXMsYyxsLGEpOm4oby50aHVtYixjKSxcInlvdXR1YmVcIj09PWU/cD1wLnJlcGxhY2UoLyZ0PSgoXFxkKyltKT8oXFxkKylzLyxmdW5jdGlvbih0LGUsbixvKXtyZXR1cm5cIiZzdGFydD1cIisoKG4/NjAqcGFyc2VJbnQobiwxMCk6MCkrcGFyc2VJbnQobywxMCkpfSk6XCJ2aW1lb1wiPT09ZSYmKHA9cC5yZXBsYWNlKFwiJiUyM1wiLFwiI1wiKSksITF9fSksaD8oYS5vcHRzLnRodW1ifHxhLm9wdHMuJHRodW1iJiZhLm9wdHMuJHRodW1iLmxlbmd0aHx8KGEub3B0cy50aHVtYj1yKSxcImlmcmFtZVwiPT09aCYmKGEub3B0cz10LmV4dGVuZCghMCxhLm9wdHMse2lmcmFtZTp7cHJlbG9hZDohMSxhdHRyOntzY3JvbGxpbmc6XCJub1wifX19KSksdC5leHRlbmQoYSx7dHlwZTpoLHNyYzpwLG9yaWdTcmM6YS5zcmMsY29udGVudFNvdXJjZTpmLGNvbnRlbnRUeXBlOlwiaW1hZ2VcIj09PWg/XCJpbWFnZVwiOlwiZ21hcF9wbGFjZVwiPT1mfHxcImdtYXBfc2VhcmNoXCI9PWY/XCJtYXBcIjpcInZpZGVvXCJ9KSk6cCYmKGEudHlwZT1hLm9wdHMuZGVmYXVsdFR5cGUpfSk7dmFyIG89e3lvdXR1YmU6e3NyYzpcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2lmcmFtZV9hcGlcIixjbGFzczpcIllUXCIsbG9hZGluZzohMSxsb2FkZWQ6ITF9LHZpbWVvOntzcmM6XCJodHRwczovL3BsYXllci52aW1lby5jb20vYXBpL3BsYXllci5qc1wiLGNsYXNzOlwiVmltZW9cIixsb2FkaW5nOiExLGxvYWRlZDohMX0sbG9hZDpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXM7aWYodGhpc1t0XS5sb2FkZWQpcmV0dXJuIHZvaWQgc2V0VGltZW91dChmdW5jdGlvbigpe24uZG9uZSh0KX0pO3RoaXNbdF0ubG9hZGluZ3x8KHRoaXNbdF0ubG9hZGluZz0hMCxlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiksZS50eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIsZS5zcmM9dGhpc1t0XS5zcmMsXCJ5b3V0dWJlXCI9PT10P3dpbmRvdy5vbllvdVR1YmVJZnJhbWVBUElSZWFkeT1mdW5jdGlvbigpe25bdF0ubG9hZGVkPSEwLG4uZG9uZSh0KX06ZS5vbmxvYWQ9ZnVuY3Rpb24oKXtuW3RdLmxvYWRlZD0hMCxuLmRvbmUodCl9LGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZSkpfSxkb25lOmZ1bmN0aW9uKGUpe3ZhciBuLG8saTtcInlvdXR1YmVcIj09PWUmJmRlbGV0ZSB3aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHksKG49dC5mYW5jeWJveC5nZXRJbnN0YW5jZSgpKSYmKG89bi5jdXJyZW50LiRjb250ZW50LmZpbmQoXCJpZnJhbWVcIiksXCJ5b3V0dWJlXCI9PT1lJiZ2b2lkIDAhPT1ZVCYmWVQ/aT1uZXcgWVQuUGxheWVyKG8uYXR0cihcImlkXCIpLHtldmVudHM6e29uU3RhdGVDaGFuZ2U6ZnVuY3Rpb24odCl7MD09dC5kYXRhJiZuLm5leHQoKX19fSk6XCJ2aW1lb1wiPT09ZSYmdm9pZCAwIT09VmltZW8mJlZpbWVvJiYoaT1uZXcgVmltZW8uUGxheWVyKG8pLGkub24oXCJlbmRlZFwiLGZ1bmN0aW9uKCl7bi5uZXh0KCl9KSkpfX07dChkb2N1bWVudCkub24oe1wiYWZ0ZXJTaG93LmZiXCI6ZnVuY3Rpb24odCxlLG4pe2UuZ3JvdXAubGVuZ3RoPjEmJihcInlvdXR1YmVcIj09PW4uY29udGVudFNvdXJjZXx8XCJ2aW1lb1wiPT09bi5jb250ZW50U291cmNlKSYmby5sb2FkKG4uY29udGVudFNvdXJjZSl9fSl9KGpRdWVyeSksZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBvPWZ1bmN0aW9uKCl7cmV0dXJuIHQucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx0LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8dC5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHQub1JlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oZSl7cmV0dXJuIHQuc2V0VGltZW91dChlLDFlMy82MCl9fSgpLGk9ZnVuY3Rpb24oKXtyZXR1cm4gdC5jYW5jZWxBbmltYXRpb25GcmFtZXx8dC53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZXx8dC5tb3pDYW5jZWxBbmltYXRpb25GcmFtZXx8dC5vQ2FuY2VsQW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGUpe3QuY2xlYXJUaW1lb3V0KGUpfX0oKSxhPWZ1bmN0aW9uKGUpe3ZhciBuPVtdO2U9ZS5vcmlnaW5hbEV2ZW50fHxlfHx0LmUsZT1lLnRvdWNoZXMmJmUudG91Y2hlcy5sZW5ndGg/ZS50b3VjaGVzOmUuY2hhbmdlZFRvdWNoZXMmJmUuY2hhbmdlZFRvdWNoZXMubGVuZ3RoP2UuY2hhbmdlZFRvdWNoZXM6W2VdO2Zvcih2YXIgbyBpbiBlKWVbb10ucGFnZVg/bi5wdXNoKHt4OmVbb10ucGFnZVgseTplW29dLnBhZ2VZfSk6ZVtvXS5jbGllbnRYJiZuLnB1c2goe3g6ZVtvXS5jbGllbnRYLHk6ZVtvXS5jbGllbnRZfSk7cmV0dXJuIG59LHM9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBlJiZ0P1wieFwiPT09bj90LngtZS54OlwieVwiPT09bj90LnktZS55Ok1hdGguc3FydChNYXRoLnBvdyh0LngtZS54LDIpK01hdGgucG93KHQueS1lLnksMikpOjB9LHI9ZnVuY3Rpb24odCl7aWYodC5pcygnYSxhcmVhLGJ1dHRvbixbcm9sZT1cImJ1dHRvblwiXSxpbnB1dCxsYWJlbCxzZWxlY3Qsc3VtbWFyeSx0ZXh0YXJlYSx2aWRlbyxhdWRpbyxpZnJhbWUnKXx8bi5pc0Z1bmN0aW9uKHQuZ2V0KDApLm9uY2xpY2spfHx0LmRhdGEoXCJzZWxlY3RhYmxlXCIpKXJldHVybiEwO2Zvcih2YXIgZT0wLG89dFswXS5hdHRyaWJ1dGVzLGk9by5sZW5ndGg7ZTxpO2UrKylpZihcImRhdGEtZmFuY3lib3gtXCI9PT1vW2VdLm5vZGVOYW1lLnN1YnN0cigwLDE0KSlyZXR1cm4hMDtyZXR1cm4hMX0sYz1mdW5jdGlvbihlKXt2YXIgbj10LmdldENvbXB1dGVkU3R5bGUoZSlbXCJvdmVyZmxvdy15XCJdLG89dC5nZXRDb21wdXRlZFN0eWxlKGUpW1wib3ZlcmZsb3cteFwiXSxpPShcInNjcm9sbFwiPT09bnx8XCJhdXRvXCI9PT1uKSYmZS5zY3JvbGxIZWlnaHQ+ZS5jbGllbnRIZWlnaHQsYT0oXCJzY3JvbGxcIj09PW98fFwiYXV0b1wiPT09bykmJmUuc2Nyb2xsV2lkdGg+ZS5jbGllbnRXaWR0aDtyZXR1cm4gaXx8YX0sbD1mdW5jdGlvbih0KXtmb3IodmFyIGU9ITE7Oyl7aWYoZT1jKHQuZ2V0KDApKSlicmVhaztpZih0PXQucGFyZW50KCksIXQubGVuZ3RofHx0Lmhhc0NsYXNzKFwiZmFuY3lib3gtc3RhZ2VcIil8fHQuaXMoXCJib2R5XCIpKWJyZWFrfXJldHVybiBlfSxkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5pbnN0YW5jZT10LGUuJGJnPXQuJHJlZnMuYmcsZS4kc3RhZ2U9dC4kcmVmcy5zdGFnZSxlLiRjb250YWluZXI9dC4kcmVmcy5jb250YWluZXIsZS5kZXN0cm95KCksZS4kY29udGFpbmVyLm9uKFwidG91Y2hzdGFydC5mYi50b3VjaCBtb3VzZWRvd24uZmIudG91Y2hcIixuLnByb3h5KGUsXCJvbnRvdWNoc3RhcnRcIikpfTtkLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LiRjb250YWluZXIub2ZmKFwiLmZiLnRvdWNoXCIpLG4oZSkub2ZmKFwiLmZiLnRvdWNoXCIpLHQucmVxdWVzdElkJiYoaSh0LnJlcXVlc3RJZCksdC5yZXF1ZXN0SWQ9bnVsbCksdC50YXBwZWQmJihjbGVhclRpbWVvdXQodC50YXBwZWQpLHQudGFwcGVkPW51bGwpfSxkLnByb3RvdHlwZS5vbnRvdWNoc3RhcnQ9ZnVuY3Rpb24obyl7dmFyIGk9dGhpcyxjPW4oby50YXJnZXQpLGQ9aS5pbnN0YW5jZSx1PWQuY3VycmVudCxmPXUuJHNsaWRlLHA9dS4kY29udGVudCxoPVwidG91Y2hzdGFydFwiPT1vLnR5cGU7aWYoaCYmaS4kY29udGFpbmVyLm9mZihcIm1vdXNlZG93bi5mYi50b3VjaFwiKSwoIW8ub3JpZ2luYWxFdmVudHx8MiE9by5vcmlnaW5hbEV2ZW50LmJ1dHRvbikmJmYubGVuZ3RoJiZjLmxlbmd0aCYmIXIoYykmJiFyKGMucGFyZW50KCkpJiYoYy5pcyhcImltZ1wiKXx8IShvLm9yaWdpbmFsRXZlbnQuY2xpZW50WD5jWzBdLmNsaWVudFdpZHRoK2Mub2Zmc2V0KCkubGVmdCkpKXtpZighdXx8ZC5pc0FuaW1hdGluZ3x8dS4kc2xpZGUuaGFzQ2xhc3MoXCJmYW5jeWJveC1hbmltYXRlZFwiKSlyZXR1cm4gby5zdG9wUHJvcGFnYXRpb24oKSx2b2lkIG8ucHJldmVudERlZmF1bHQoKTtpLnJlYWxQb2ludHM9aS5zdGFydFBvaW50cz1hKG8pLGkuc3RhcnRQb2ludHMubGVuZ3RoJiYodS50b3VjaCYmby5zdG9wUHJvcGFnYXRpb24oKSxpLnN0YXJ0RXZlbnQ9byxpLmNhblRhcD0hMCxpLiR0YXJnZXQ9YyxpLiRjb250ZW50PXAsaS5vcHRzPXUub3B0cy50b3VjaCxpLmlzUGFubmluZz0hMSxpLmlzU3dpcGluZz0hMSxpLmlzWm9vbWluZz0hMSxpLmlzU2Nyb2xsaW5nPSExLGkuY2FuUGFuPWQuY2FuUGFuKCksaS5zdGFydFRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksaS5kaXN0YW5jZVg9aS5kaXN0YW5jZVk9aS5kaXN0YW5jZT0wLGkuY2FudmFzV2lkdGg9TWF0aC5yb3VuZChmWzBdLmNsaWVudFdpZHRoKSxpLmNhbnZhc0hlaWdodD1NYXRoLnJvdW5kKGZbMF0uY2xpZW50SGVpZ2h0KSxpLmNvbnRlbnRMYXN0UG9zPW51bGwsaS5jb250ZW50U3RhcnRQb3M9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoaS4kY29udGVudCl8fHt0b3A6MCxsZWZ0OjB9LGkuc2xpZGVyU3RhcnRQb3M9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoZiksaS5zdGFnZVBvcz1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShkLiRyZWZzLnN0YWdlKSxpLnNsaWRlclN0YXJ0UG9zLnRvcC09aS5zdGFnZVBvcy50b3AsaS5zbGlkZXJTdGFydFBvcy5sZWZ0LT1pLnN0YWdlUG9zLmxlZnQsaS5jb250ZW50U3RhcnRQb3MudG9wLT1pLnN0YWdlUG9zLnRvcCxpLmNvbnRlbnRTdGFydFBvcy5sZWZ0LT1pLnN0YWdlUG9zLmxlZnQsbihlKS5vZmYoXCIuZmIudG91Y2hcIikub24oaD9cInRvdWNoZW5kLmZiLnRvdWNoIHRvdWNoY2FuY2VsLmZiLnRvdWNoXCI6XCJtb3VzZXVwLmZiLnRvdWNoIG1vdXNlbGVhdmUuZmIudG91Y2hcIixuLnByb3h5KGksXCJvbnRvdWNoZW5kXCIpKS5vbihoP1widG91Y2htb3ZlLmZiLnRvdWNoXCI6XCJtb3VzZW1vdmUuZmIudG91Y2hcIixuLnByb3h5KGksXCJvbnRvdWNobW92ZVwiKSksbi5mYW5jeWJveC5pc01vYmlsZSYmZS5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsaS5vbnNjcm9sbCwhMCksKChpLm9wdHN8fGkuY2FuUGFuKSYmKGMuaXMoaS4kc3RhZ2UpfHxpLiRzdGFnZS5maW5kKGMpLmxlbmd0aCl8fChjLmlzKFwiLmZhbmN5Ym94LWltYWdlXCIpJiZvLnByZXZlbnREZWZhdWx0KCksbi5mYW5jeWJveC5pc01vYmlsZSYmYy5wYXJlbnRzKFwiLmZhbmN5Ym94LWNhcHRpb25cIikubGVuZ3RoKSkmJihpLmlzU2Nyb2xsYWJsZT1sKGMpfHxsKGMucGFyZW50KCkpLG4uZmFuY3lib3guaXNNb2JpbGUmJmkuaXNTY3JvbGxhYmxlfHxvLnByZXZlbnREZWZhdWx0KCksKDE9PT1pLnN0YXJ0UG9pbnRzLmxlbmd0aHx8dS5oYXNFcnJvcikmJihpLmNhblBhbj8obi5mYW5jeWJveC5zdG9wKGkuJGNvbnRlbnQpLGkuaXNQYW5uaW5nPSEwKTppLmlzU3dpcGluZz0hMCxpLiRjb250YWluZXIuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1ncmFiYmluZ1wiKSksMj09PWkuc3RhcnRQb2ludHMubGVuZ3RoJiZcImltYWdlXCI9PT11LnR5cGUmJih1LmlzTG9hZGVkfHx1LiRnaG9zdCkmJihpLmNhblRhcD0hMSxpLmlzU3dpcGluZz0hMSxpLmlzUGFubmluZz0hMSxpLmlzWm9vbWluZz0hMCxuLmZhbmN5Ym94LnN0b3AoaS4kY29udGVudCksaS5jZW50ZXJQb2ludFN0YXJ0WD0uNSooaS5zdGFydFBvaW50c1swXS54K2kuc3RhcnRQb2ludHNbMV0ueCktbih0KS5zY3JvbGxMZWZ0KCksaS5jZW50ZXJQb2ludFN0YXJ0WT0uNSooaS5zdGFydFBvaW50c1swXS55K2kuc3RhcnRQb2ludHNbMV0ueSktbih0KS5zY3JvbGxUb3AoKSxpLnBlcmNlbnRhZ2VPZkltYWdlQXRQaW5jaFBvaW50WD0oaS5jZW50ZXJQb2ludFN0YXJ0WC1pLmNvbnRlbnRTdGFydFBvcy5sZWZ0KS9pLmNvbnRlbnRTdGFydFBvcy53aWR0aCxpLnBlcmNlbnRhZ2VPZkltYWdlQXRQaW5jaFBvaW50WT0oaS5jZW50ZXJQb2ludFN0YXJ0WS1pLmNvbnRlbnRTdGFydFBvcy50b3ApL2kuY29udGVudFN0YXJ0UG9zLmhlaWdodCxpLnN0YXJ0RGlzdGFuY2VCZXR3ZWVuRmluZ2Vycz1zKGkuc3RhcnRQb2ludHNbMF0saS5zdGFydFBvaW50c1sxXSkpKSl9fSxkLnByb3RvdHlwZS5vbnNjcm9sbD1mdW5jdGlvbih0KXt2YXIgbj10aGlzO24uaXNTY3JvbGxpbmc9ITAsZS5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsbi5vbnNjcm9sbCwhMCl9LGQucHJvdG90eXBlLm9udG91Y2htb3ZlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHZvaWQgMCE9PXQub3JpZ2luYWxFdmVudC5idXR0b25zJiYwPT09dC5vcmlnaW5hbEV2ZW50LmJ1dHRvbnM/dm9pZCBlLm9udG91Y2hlbmQodCk6ZS5pc1Njcm9sbGluZz92b2lkKGUuY2FuVGFwPSExKTooZS5uZXdQb2ludHM9YSh0KSx2b2lkKChlLm9wdHN8fGUuY2FuUGFuKSYmZS5uZXdQb2ludHMubGVuZ3RoJiZlLm5ld1BvaW50cy5sZW5ndGgmJihlLmlzU3dpcGluZyYmITA9PT1lLmlzU3dpcGluZ3x8dC5wcmV2ZW50RGVmYXVsdCgpLGUuZGlzdGFuY2VYPXMoZS5uZXdQb2ludHNbMF0sZS5zdGFydFBvaW50c1swXSxcInhcIiksZS5kaXN0YW5jZVk9cyhlLm5ld1BvaW50c1swXSxlLnN0YXJ0UG9pbnRzWzBdLFwieVwiKSxlLmRpc3RhbmNlPXMoZS5uZXdQb2ludHNbMF0sZS5zdGFydFBvaW50c1swXSksZS5kaXN0YW5jZT4wJiYoZS5pc1N3aXBpbmc/ZS5vblN3aXBlKHQpOmUuaXNQYW5uaW5nP2Uub25QYW4oKTplLmlzWm9vbWluZyYmZS5vblpvb20oKSkpKSl9LGQucHJvdG90eXBlLm9uU3dpcGU9ZnVuY3Rpb24oZSl7dmFyIGEscz10aGlzLHI9cy5pbnN0YW5jZSxjPXMuaXNTd2lwaW5nLGw9cy5zbGlkZXJTdGFydFBvcy5sZWZ0fHwwO2lmKCEwIT09YylcInhcIj09YyYmKHMuZGlzdGFuY2VYPjAmJihzLmluc3RhbmNlLmdyb3VwLmxlbmd0aDwyfHwwPT09cy5pbnN0YW5jZS5jdXJyZW50LmluZGV4JiYhcy5pbnN0YW5jZS5jdXJyZW50Lm9wdHMubG9vcCk/bCs9TWF0aC5wb3cocy5kaXN0YW5jZVgsLjgpOnMuZGlzdGFuY2VYPDAmJihzLmluc3RhbmNlLmdyb3VwLmxlbmd0aDwyfHxzLmluc3RhbmNlLmN1cnJlbnQuaW5kZXg9PT1zLmluc3RhbmNlLmdyb3VwLmxlbmd0aC0xJiYhcy5pbnN0YW5jZS5jdXJyZW50Lm9wdHMubG9vcCk/bC09TWF0aC5wb3coLXMuZGlzdGFuY2VYLC44KTpsKz1zLmRpc3RhbmNlWCkscy5zbGlkZXJMYXN0UG9zPXt0b3A6XCJ4XCI9PWM/MDpzLnNsaWRlclN0YXJ0UG9zLnRvcCtzLmRpc3RhbmNlWSxsZWZ0Omx9LHMucmVxdWVzdElkJiYoaShzLnJlcXVlc3RJZCkscy5yZXF1ZXN0SWQ9bnVsbCkscy5yZXF1ZXN0SWQ9byhmdW5jdGlvbigpe3Muc2xpZGVyTGFzdFBvcyYmKG4uZWFjaChzLmluc3RhbmNlLnNsaWRlcyxmdW5jdGlvbih0LGUpe3ZhciBvPWUucG9zLXMuaW5zdGFuY2UuY3VyclBvcztuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZShlLiRzbGlkZSx7dG9wOnMuc2xpZGVyTGFzdFBvcy50b3AsbGVmdDpzLnNsaWRlckxhc3RQb3MubGVmdCtvKnMuY2FudmFzV2lkdGgrbyplLm9wdHMuZ3V0dGVyfSl9KSxzLiRjb250YWluZXIuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1zbGlkaW5nXCIpKX0pO2Vsc2UgaWYoTWF0aC5hYnMocy5kaXN0YW5jZSk+MTApe2lmKHMuY2FuVGFwPSExLHIuZ3JvdXAubGVuZ3RoPDImJnMub3B0cy52ZXJ0aWNhbD9zLmlzU3dpcGluZz1cInlcIjpyLmlzRHJhZ2dpbmd8fCExPT09cy5vcHRzLnZlcnRpY2FsfHxcImF1dG9cIj09PXMub3B0cy52ZXJ0aWNhbCYmbih0KS53aWR0aCgpPjgwMD9zLmlzU3dpcGluZz1cInhcIjooYT1NYXRoLmFicygxODAqTWF0aC5hdGFuMihzLmRpc3RhbmNlWSxzLmRpc3RhbmNlWCkvTWF0aC5QSSkscy5pc1N3aXBpbmc9YT40NSYmYTwxMzU/XCJ5XCI6XCJ4XCIpLFwieVwiPT09cy5pc1N3aXBpbmcmJm4uZmFuY3lib3guaXNNb2JpbGUmJnMuaXNTY3JvbGxhYmxlKXJldHVybiB2b2lkKHMuaXNTY3JvbGxpbmc9ITApO3IuaXNEcmFnZ2luZz1zLmlzU3dpcGluZyxzLnN0YXJ0UG9pbnRzPXMubmV3UG9pbnRzLG4uZWFjaChyLnNsaWRlcyxmdW5jdGlvbih0LGUpe3ZhciBvLGk7bi5mYW5jeWJveC5zdG9wKGUuJHNsaWRlKSxvPW4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKGUuJHNsaWRlKSxpPW4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKHIuJHJlZnMuc3RhZ2UpLGUuJHNsaWRlLmNzcyh7dHJhbnNmb3JtOlwiXCIsb3BhY2l0eTpcIlwiLFwidHJhbnNpdGlvbi1kdXJhdGlvblwiOlwiXCJ9KS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWFuaW1hdGVkXCIpLnJlbW92ZUNsYXNzKGZ1bmN0aW9uKHQsZSl7cmV0dXJuKGUubWF0Y2goLyhefFxccylmYW5jeWJveC1meC1cXFMrL2cpfHxbXSkuam9pbihcIiBcIil9KSxlLnBvcz09PXIuY3VycmVudC5wb3MmJihzLnNsaWRlclN0YXJ0UG9zLnRvcD1vLnRvcC1pLnRvcCxzLnNsaWRlclN0YXJ0UG9zLmxlZnQ9by5sZWZ0LWkubGVmdCksbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoZS4kc2xpZGUse3RvcDpvLnRvcC1pLnRvcCxsZWZ0Om8ubGVmdC1pLmxlZnR9KX0pLHIuU2xpZGVTaG93JiZyLlNsaWRlU2hvdy5pc0FjdGl2ZSYmci5TbGlkZVNob3cuc3RvcCgpfX0sZC5wcm90b3R5cGUub25QYW49ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHModC5uZXdQb2ludHNbMF0sdC5yZWFsUG9pbnRzWzBdKTwobi5mYW5jeWJveC5pc01vYmlsZT8xMDo1KSlyZXR1cm4gdm9pZCh0LnN0YXJ0UG9pbnRzPXQubmV3UG9pbnRzKTt0LmNhblRhcD0hMSx0LmNvbnRlbnRMYXN0UG9zPXQubGltaXRNb3ZlbWVudCgpLHQucmVxdWVzdElkJiZpKHQucmVxdWVzdElkKSx0LnJlcXVlc3RJZD1vKGZ1bmN0aW9uKCl7bi5mYW5jeWJveC5zZXRUcmFuc2xhdGUodC4kY29udGVudCx0LmNvbnRlbnRMYXN0UG9zKX0pfSxkLnByb3RvdHlwZS5saW1pdE1vdmVtZW50PWZ1bmN0aW9uKCl7dmFyIHQsZSxuLG8saSxhLHM9dGhpcyxyPXMuY2FudmFzV2lkdGgsYz1zLmNhbnZhc0hlaWdodCxsPXMuZGlzdGFuY2VYLGQ9cy5kaXN0YW5jZVksdT1zLmNvbnRlbnRTdGFydFBvcyxmPXUubGVmdCxwPXUudG9wLGg9dS53aWR0aCxnPXUuaGVpZ2h0O3JldHVybiBpPWg+cj9mK2w6ZixhPXArZCx0PU1hdGgubWF4KDAsLjUqci0uNSpoKSxlPU1hdGgubWF4KDAsLjUqYy0uNSpnKSxuPU1hdGgubWluKHItaCwuNSpyLS41KmgpLG89TWF0aC5taW4oYy1nLC41KmMtLjUqZyksbD4wJiZpPnQmJihpPXQtMStNYXRoLnBvdygtdCtmK2wsLjgpfHwwKSxsPDAmJmk8biYmKGk9bisxLU1hdGgucG93KG4tZi1sLC44KXx8MCksZD4wJiZhPmUmJihhPWUtMStNYXRoLnBvdygtZStwK2QsLjgpfHwwKSxkPDAmJmE8byYmKGE9bysxLU1hdGgucG93KG8tcC1kLC44KXx8MCkse3RvcDphLGxlZnQ6aX19LGQucHJvdG90eXBlLmxpbWl0UG9zaXRpb249ZnVuY3Rpb24odCxlLG4sbyl7dmFyIGk9dGhpcyxhPWkuY2FudmFzV2lkdGgscz1pLmNhbnZhc0hlaWdodDtyZXR1cm4gbj5hPyh0PXQ+MD8wOnQsdD10PGEtbj9hLW46dCk6dD1NYXRoLm1heCgwLGEvMi1uLzIpLG8+cz8oZT1lPjA/MDplLGU9ZTxzLW8/cy1vOmUpOmU9TWF0aC5tYXgoMCxzLzItby8yKSx7dG9wOmUsbGVmdDp0fX0sZC5wcm90b3R5cGUub25ab29tPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxhPWUuY29udGVudFN0YXJ0UG9zLHI9YS53aWR0aCxjPWEuaGVpZ2h0LGw9YS5sZWZ0LGQ9YS50b3AsdT1zKGUubmV3UG9pbnRzWzBdLGUubmV3UG9pbnRzWzFdKSxmPXUvZS5zdGFydERpc3RhbmNlQmV0d2VlbkZpbmdlcnMscD1NYXRoLmZsb29yKHIqZiksaD1NYXRoLmZsb29yKGMqZiksZz0oci1wKSplLnBlcmNlbnRhZ2VPZkltYWdlQXRQaW5jaFBvaW50WCxiPShjLWgpKmUucGVyY2VudGFnZU9mSW1hZ2VBdFBpbmNoUG9pbnRZLG09KGUubmV3UG9pbnRzWzBdLngrZS5uZXdQb2ludHNbMV0ueCkvMi1uKHQpLnNjcm9sbExlZnQoKSx2PShlLm5ld1BvaW50c1swXS55K2UubmV3UG9pbnRzWzFdLnkpLzItbih0KS5zY3JvbGxUb3AoKSx5PW0tZS5jZW50ZXJQb2ludFN0YXJ0WCx4PXYtZS5jZW50ZXJQb2ludFN0YXJ0WSx3PWwrKGcreSksJD1kKyhiK3gpLFM9e3RvcDokLGxlZnQ6dyxzY2FsZVg6ZixzY2FsZVk6Zn07ZS5jYW5UYXA9ITEsZS5uZXdXaWR0aD1wLGUubmV3SGVpZ2h0PWgsZS5jb250ZW50TGFzdFBvcz1TLGUucmVxdWVzdElkJiZpKGUucmVxdWVzdElkKSxlLnJlcXVlc3RJZD1vKGZ1bmN0aW9uKCl7bi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoZS4kY29udGVudCxlLmNvbnRlbnRMYXN0UG9zKX0pfSxkLnByb3RvdHlwZS5vbnRvdWNoZW5kPWZ1bmN0aW9uKHQpe3ZhciBvPXRoaXMscz1vLmlzU3dpcGluZyxyPW8uaXNQYW5uaW5nLGM9by5pc1pvb21pbmcsbD1vLmlzU2Nyb2xsaW5nO2lmKG8uZW5kUG9pbnRzPWEodCksby5kTXM9TWF0aC5tYXgoKG5ldyBEYXRlKS5nZXRUaW1lKCktby5zdGFydFRpbWUsMSksby4kY29udGFpbmVyLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtZ3JhYmJpbmdcIiksbihlKS5vZmYoXCIuZmIudG91Y2hcIiksZS5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsby5vbnNjcm9sbCwhMCksby5yZXF1ZXN0SWQmJihpKG8ucmVxdWVzdElkKSxvLnJlcXVlc3RJZD1udWxsKSxvLmlzU3dpcGluZz0hMSxvLmlzUGFubmluZz0hMSxvLmlzWm9vbWluZz0hMSxvLmlzU2Nyb2xsaW5nPSExLG8uaW5zdGFuY2UuaXNEcmFnZ2luZz0hMSxvLmNhblRhcClyZXR1cm4gby5vblRhcCh0KTtvLnNwZWVkPTEwMCxvLnZlbG9jaXR5WD1vLmRpc3RhbmNlWC9vLmRNcyouNSxvLnZlbG9jaXR5WT1vLmRpc3RhbmNlWS9vLmRNcyouNSxyP28uZW5kUGFubmluZygpOmM/by5lbmRab29taW5nKCk6by5lbmRTd2lwaW5nKHMsbCl9LGQucHJvdG90eXBlLmVuZFN3aXBpbmc9ZnVuY3Rpb24odCxlKXt2YXIgbz10aGlzLGk9ITEsYT1vLmluc3RhbmNlLmdyb3VwLmxlbmd0aCxzPU1hdGguYWJzKG8uZGlzdGFuY2VYKSxyPVwieFwiPT10JiZhPjEmJihvLmRNcz4xMzAmJnM+MTB8fHM+NTApO28uc2xpZGVyTGFzdFBvcz1udWxsLFwieVwiPT10JiYhZSYmTWF0aC5hYnMoby5kaXN0YW5jZVkpPjUwPyhuLmZhbmN5Ym94LmFuaW1hdGUoby5pbnN0YW5jZS5jdXJyZW50LiRzbGlkZSx7dG9wOm8uc2xpZGVyU3RhcnRQb3MudG9wK28uZGlzdGFuY2VZKzE1MCpvLnZlbG9jaXR5WSxvcGFjaXR5OjB9LDIwMCksaT1vLmluc3RhbmNlLmNsb3NlKCEwLDI1MCkpOnImJm8uZGlzdGFuY2VYPjA/aT1vLmluc3RhbmNlLnByZXZpb3VzKDMwMCk6ciYmby5kaXN0YW5jZVg8MCYmKGk9by5pbnN0YW5jZS5uZXh0KDMwMCkpLCExIT09aXx8XCJ4XCIhPXQmJlwieVwiIT10fHxvLmluc3RhbmNlLmNlbnRlclNsaWRlKDIwMCksby4kY29udGFpbmVyLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtc2xpZGluZ1wiKX0sZC5wcm90b3R5cGUuZW5kUGFubmluZz1mdW5jdGlvbigpe3ZhciB0LGUsbyxpPXRoaXM7aS5jb250ZW50TGFzdFBvcyYmKCExPT09aS5vcHRzLm1vbWVudHVtfHxpLmRNcz4zNTA/KHQ9aS5jb250ZW50TGFzdFBvcy5sZWZ0LGU9aS5jb250ZW50TGFzdFBvcy50b3ApOih0PWkuY29udGVudExhc3RQb3MubGVmdCs1MDAqaS52ZWxvY2l0eVgsZT1pLmNvbnRlbnRMYXN0UG9zLnRvcCs1MDAqaS52ZWxvY2l0eVkpLG89aS5saW1pdFBvc2l0aW9uKHQsZSxpLmNvbnRlbnRTdGFydFBvcy53aWR0aCxpLmNvbnRlbnRTdGFydFBvcy5oZWlnaHQpLG8ud2lkdGg9aS5jb250ZW50U3RhcnRQb3Mud2lkdGgsby5oZWlnaHQ9aS5jb250ZW50U3RhcnRQb3MuaGVpZ2h0LG4uZmFuY3lib3guYW5pbWF0ZShpLiRjb250ZW50LG8sMzY2KSl9LGQucHJvdG90eXBlLmVuZFpvb21pbmc9ZnVuY3Rpb24oKXt2YXIgdCxlLG8saSxhPXRoaXMscz1hLmluc3RhbmNlLmN1cnJlbnQscj1hLm5ld1dpZHRoLGM9YS5uZXdIZWlnaHQ7YS5jb250ZW50TGFzdFBvcyYmKHQ9YS5jb250ZW50TGFzdFBvcy5sZWZ0LGU9YS5jb250ZW50TGFzdFBvcy50b3AsaT17dG9wOmUsbGVmdDp0LHdpZHRoOnIsaGVpZ2h0OmMsc2NhbGVYOjEsc2NhbGVZOjF9LG4uZmFuY3lib3guc2V0VHJhbnNsYXRlKGEuJGNvbnRlbnQsaSkscjxhLmNhbnZhc1dpZHRoJiZjPGEuY2FudmFzSGVpZ2h0P2EuaW5zdGFuY2Uuc2NhbGVUb0ZpdCgxNTApOnI+cy53aWR0aHx8Yz5zLmhlaWdodD9hLmluc3RhbmNlLnNjYWxlVG9BY3R1YWwoYS5jZW50ZXJQb2ludFN0YXJ0WCxhLmNlbnRlclBvaW50U3RhcnRZLDE1MCk6KG89YS5saW1pdFBvc2l0aW9uKHQsZSxyLGMpLG4uZmFuY3lib3guYW5pbWF0ZShhLiRjb250ZW50LG8sMTUwKSkpfSxkLnByb3RvdHlwZS5vblRhcD1mdW5jdGlvbihlKXt2YXIgbyxpPXRoaXMscz1uKGUudGFyZ2V0KSxyPWkuaW5zdGFuY2UsYz1yLmN1cnJlbnQsbD1lJiZhKGUpfHxpLnN0YXJ0UG9pbnRzLGQ9bFswXT9sWzBdLngtbih0KS5zY3JvbGxMZWZ0KCktaS5zdGFnZVBvcy5sZWZ0OjAsdT1sWzBdP2xbMF0ueS1uKHQpLnNjcm9sbFRvcCgpLWkuc3RhZ2VQb3MudG9wOjAsZj1mdW5jdGlvbih0KXt2YXIgbz1jLm9wdHNbdF07aWYobi5pc0Z1bmN0aW9uKG8pJiYobz1vLmFwcGx5KHIsW2MsZV0pKSxvKXN3aXRjaChvKXtjYXNlXCJjbG9zZVwiOnIuY2xvc2UoaS5zdGFydEV2ZW50KTticmVhaztjYXNlXCJ0b2dnbGVDb250cm9sc1wiOnIudG9nZ2xlQ29udHJvbHMoKTticmVhaztjYXNlXCJuZXh0XCI6ci5uZXh0KCk7YnJlYWs7Y2FzZVwibmV4dE9yQ2xvc2VcIjpyLmdyb3VwLmxlbmd0aD4xP3IubmV4dCgpOnIuY2xvc2UoaS5zdGFydEV2ZW50KTticmVhaztjYXNlXCJ6b29tXCI6XCJpbWFnZVwiPT1jLnR5cGUmJihjLmlzTG9hZGVkfHxjLiRnaG9zdCkmJihyLmNhblBhbigpP3Iuc2NhbGVUb0ZpdCgpOnIuaXNTY2FsZWREb3duKCk/ci5zY2FsZVRvQWN0dWFsKGQsdSk6ci5ncm91cC5sZW5ndGg8MiYmci5jbG9zZShpLnN0YXJ0RXZlbnQpKX19O2lmKCghZS5vcmlnaW5hbEV2ZW50fHwyIT1lLm9yaWdpbmFsRXZlbnQuYnV0dG9uKSYmKHMuaXMoXCJpbWdcIil8fCEoZD5zWzBdLmNsaWVudFdpZHRoK3Mub2Zmc2V0KCkubGVmdCkpKXtpZihzLmlzKFwiLmZhbmN5Ym94LWJnLC5mYW5jeWJveC1pbm5lciwuZmFuY3lib3gtb3V0ZXIsLmZhbmN5Ym94LWNvbnRhaW5lclwiKSlvPVwiT3V0c2lkZVwiO2Vsc2UgaWYocy5pcyhcIi5mYW5jeWJveC1zbGlkZVwiKSlvPVwiU2xpZGVcIjtlbHNle2lmKCFyLmN1cnJlbnQuJGNvbnRlbnR8fCFyLmN1cnJlbnQuJGNvbnRlbnQuZmluZChzKS5hZGRCYWNrKCkuZmlsdGVyKHMpLmxlbmd0aClyZXR1cm47bz1cIkNvbnRlbnRcIn1pZihpLnRhcHBlZCl7aWYoY2xlYXJUaW1lb3V0KGkudGFwcGVkKSxpLnRhcHBlZD1udWxsLE1hdGguYWJzKGQtaS50YXBYKT41MHx8TWF0aC5hYnModS1pLnRhcFkpPjUwKXJldHVybiB0aGlzO2YoXCJkYmxjbGlja1wiK28pfWVsc2UgaS50YXBYPWQsaS50YXBZPXUsYy5vcHRzW1wiZGJsY2xpY2tcIitvXSYmYy5vcHRzW1wiZGJsY2xpY2tcIitvXSE9PWMub3B0c1tcImNsaWNrXCIrb10/aS50YXBwZWQ9c2V0VGltZW91dChmdW5jdGlvbigpe2kudGFwcGVkPW51bGwsci5pc0FuaW1hdGluZ3x8ZihcImNsaWNrXCIrbyl9LDUwMCk6ZihcImNsaWNrXCIrbyk7cmV0dXJuIHRoaXN9fSxuKGUpLm9uKFwib25BY3RpdmF0ZS5mYlwiLGZ1bmN0aW9uKHQsZSl7ZSYmIWUuR3Vlc3R1cmVzJiYoZS5HdWVzdHVyZXM9bmV3IGQoZSkpfSkub24oXCJiZWZvcmVDbG9zZS5mYlwiLGZ1bmN0aW9uKHQsZSl7ZSYmZS5HdWVzdHVyZXMmJmUuR3Vlc3R1cmVzLmRlc3Ryb3koKX0pfSh3aW5kb3csZG9jdW1lbnQsalF1ZXJ5KSxmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2UuZXh0ZW5kKCEwLGUuZmFuY3lib3guZGVmYXVsdHMse2J0blRwbDp7c2xpZGVTaG93Oic8YnV0dG9uIGRhdGEtZmFuY3lib3gtcGxheSBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLXBsYXlcIiB0aXRsZT1cInt7UExBWV9TVEFSVH19XCI+PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNNi41IDUuNHYxMy4ybDExLTYuNnpcIi8+PC9zdmc+PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNOC4zMyA1Ljc1aDIuMnYxMi41aC0yLjJWNS43NXptNS4xNSAwaDIuMnYxMi41aC0yLjJWNS43NXpcIi8+PC9zdmc+PC9idXR0b24+J30sc2xpZGVTaG93OnthdXRvU3RhcnQ6ITEsc3BlZWQ6M2UzLHByb2dyZXNzOiEwfX0pO3ZhciBuPWZ1bmN0aW9uKHQpe3RoaXMuaW5zdGFuY2U9dCx0aGlzLmluaXQoKX07ZS5leHRlbmQobi5wcm90b3R5cGUse3RpbWVyOm51bGwsaXNBY3RpdmU6ITEsJGJ1dHRvbjpudWxsLGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLG49dC5pbnN0YW5jZSxvPW4uZ3JvdXBbbi5jdXJySW5kZXhdLm9wdHMuc2xpZGVTaG93O3QuJGJ1dHRvbj1uLiRyZWZzLnRvb2xiYXIuZmluZChcIltkYXRhLWZhbmN5Ym94LXBsYXldXCIpLm9uKFwiY2xpY2tcIixmdW5jdGlvbigpe3QudG9nZ2xlKCl9KSxuLmdyb3VwLmxlbmd0aDwyfHwhbz90LiRidXR0b24uaGlkZSgpOm8ucHJvZ3Jlc3MmJih0LiRwcm9ncmVzcz1lKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtcHJvZ3Jlc3NcIj48L2Rpdj4nKS5hcHBlbmRUbyhuLiRyZWZzLmlubmVyKSl9LHNldDpmdW5jdGlvbih0KXt2YXIgbj10aGlzLG89bi5pbnN0YW5jZSxpPW8uY3VycmVudDtpJiYoITA9PT10fHxpLm9wdHMubG9vcHx8by5jdXJySW5kZXg8by5ncm91cC5sZW5ndGgtMSk/bi5pc0FjdGl2ZSYmXCJ2aWRlb1wiIT09aS5jb250ZW50VHlwZSYmKG4uJHByb2dyZXNzJiZlLmZhbmN5Ym94LmFuaW1hdGUobi4kcHJvZ3Jlc3Muc2hvdygpLHtzY2FsZVg6MX0saS5vcHRzLnNsaWRlU2hvdy5zcGVlZCksbi50aW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7by5jdXJyZW50Lm9wdHMubG9vcHx8by5jdXJyZW50LmluZGV4IT1vLmdyb3VwLmxlbmd0aC0xP28ubmV4dCgpOm8uanVtcFRvKDApfSxpLm9wdHMuc2xpZGVTaG93LnNwZWVkKSk6KG4uc3RvcCgpLG8uaWRsZVNlY29uZHNDb3VudGVyPTAsby5zaG93Q29udHJvbHMoKSl9LGNsZWFyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztjbGVhclRpbWVvdXQodC50aW1lciksdC50aW1lcj1udWxsLHQuJHByb2dyZXNzJiZ0LiRwcm9ncmVzcy5yZW1vdmVBdHRyKFwic3R5bGVcIikuaGlkZSgpfSxzdGFydDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Lmluc3RhbmNlLmN1cnJlbnQ7ZSYmKHQuJGJ1dHRvbi5hdHRyKFwidGl0bGVcIiwoZS5vcHRzLmkxOG5bZS5vcHRzLmxhbmddfHxlLm9wdHMuaTE4bi5lbikuUExBWV9TVE9QKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWJ1dHRvbi0tcGxheVwiKS5hZGRDbGFzcyhcImZhbmN5Ym94LWJ1dHRvbi0tcGF1c2VcIiksdC5pc0FjdGl2ZT0hMCxlLmlzQ29tcGxldGUmJnQuc2V0KCEwKSx0Lmluc3RhbmNlLnRyaWdnZXIoXCJvblNsaWRlU2hvd0NoYW5nZVwiLCEwKSl9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5pbnN0YW5jZS5jdXJyZW50O3QuY2xlYXIoKSx0LiRidXR0b24uYXR0cihcInRpdGxlXCIsKGUub3B0cy5pMThuW2Uub3B0cy5sYW5nXXx8ZS5vcHRzLmkxOG4uZW4pLlBMQVlfU1RBUlQpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtYnV0dG9uLS1wYXVzZVwiKS5hZGRDbGFzcyhcImZhbmN5Ym94LWJ1dHRvbi0tcGxheVwiKSx0LmlzQWN0aXZlPSExLHQuaW5zdGFuY2UudHJpZ2dlcihcIm9uU2xpZGVTaG93Q2hhbmdlXCIsITEpLHQuJHByb2dyZXNzJiZ0LiRwcm9ncmVzcy5yZW1vdmVBdHRyKFwic3R5bGVcIikuaGlkZSgpfSx0b2dnbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuaXNBY3RpdmU/dC5zdG9wKCk6dC5zdGFydCgpfX0pLGUodCkub24oe1wib25Jbml0LmZiXCI6ZnVuY3Rpb24odCxlKXtlJiYhZS5TbGlkZVNob3cmJihlLlNsaWRlU2hvdz1uZXcgbihlKSl9LFwiYmVmb3JlU2hvdy5mYlwiOmZ1bmN0aW9uKHQsZSxuLG8pe3ZhciBpPWUmJmUuU2xpZGVTaG93O28/aSYmbi5vcHRzLnNsaWRlU2hvdy5hdXRvU3RhcnQmJmkuc3RhcnQoKTppJiZpLmlzQWN0aXZlJiZpLmNsZWFyKCl9LFwiYWZ0ZXJTaG93LmZiXCI6ZnVuY3Rpb24odCxlLG4pe3ZhciBvPWUmJmUuU2xpZGVTaG93O28mJm8uaXNBY3RpdmUmJm8uc2V0KCl9LFwiYWZ0ZXJLZXlkb3duLmZiXCI6ZnVuY3Rpb24obixvLGksYSxzKXt2YXIgcj1vJiZvLlNsaWRlU2hvdzshcnx8IWkub3B0cy5zbGlkZVNob3d8fDgwIT09cyYmMzIhPT1zfHxlKHQuYWN0aXZlRWxlbWVudCkuaXMoXCJidXR0b24sYSxpbnB1dFwiKXx8KGEucHJldmVudERlZmF1bHQoKSxyLnRvZ2dsZSgpKX0sXCJiZWZvcmVDbG9zZS5mYiBvbkRlYWN0aXZhdGUuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuPWUmJmUuU2xpZGVTaG93O24mJm4uc3RvcCgpfX0pLGUodCkub24oXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsZnVuY3Rpb24oKXt2YXIgbj1lLmZhbmN5Ym94LmdldEluc3RhbmNlKCksbz1uJiZuLlNsaWRlU2hvdztvJiZvLmlzQWN0aXZlJiYodC5oaWRkZW4/by5jbGVhcigpOm8uc2V0KCkpfSl9KGRvY3VtZW50LGpRdWVyeSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1mdW5jdGlvbigpe2Zvcih2YXIgZT1bW1wicmVxdWVzdEZ1bGxzY3JlZW5cIixcImV4aXRGdWxsc2NyZWVuXCIsXCJmdWxsc2NyZWVuRWxlbWVudFwiLFwiZnVsbHNjcmVlbkVuYWJsZWRcIixcImZ1bGxzY3JlZW5jaGFuZ2VcIixcImZ1bGxzY3JlZW5lcnJvclwiXSxbXCJ3ZWJraXRSZXF1ZXN0RnVsbHNjcmVlblwiLFwid2Via2l0RXhpdEZ1bGxzY3JlZW5cIixcIndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50XCIsXCJ3ZWJraXRGdWxsc2NyZWVuRW5hYmxlZFwiLFwid2Via2l0ZnVsbHNjcmVlbmNoYW5nZVwiLFwid2Via2l0ZnVsbHNjcmVlbmVycm9yXCJdLFtcIndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuXCIsXCJ3ZWJraXRDYW5jZWxGdWxsU2NyZWVuXCIsXCJ3ZWJraXRDdXJyZW50RnVsbFNjcmVlbkVsZW1lbnRcIixcIndlYmtpdENhbmNlbEZ1bGxTY3JlZW5cIixcIndlYmtpdGZ1bGxzY3JlZW5jaGFuZ2VcIixcIndlYmtpdGZ1bGxzY3JlZW5lcnJvclwiXSxbXCJtb3pSZXF1ZXN0RnVsbFNjcmVlblwiLFwibW96Q2FuY2VsRnVsbFNjcmVlblwiLFwibW96RnVsbFNjcmVlbkVsZW1lbnRcIixcIm1vekZ1bGxTY3JlZW5FbmFibGVkXCIsXCJtb3pmdWxsc2NyZWVuY2hhbmdlXCIsXCJtb3pmdWxsc2NyZWVuZXJyb3JcIl0sW1wibXNSZXF1ZXN0RnVsbHNjcmVlblwiLFwibXNFeGl0RnVsbHNjcmVlblwiLFwibXNGdWxsc2NyZWVuRWxlbWVudFwiLFwibXNGdWxsc2NyZWVuRW5hYmxlZFwiLFwiTVNGdWxsc2NyZWVuQ2hhbmdlXCIsXCJNU0Z1bGxzY3JlZW5FcnJvclwiXV0sbj17fSxvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBpPWVbb107aWYoaSYmaVsxXWluIHQpe2Zvcih2YXIgYT0wO2E8aS5sZW5ndGg7YSsrKW5bZVswXVthXV09aVthXTtyZXR1cm4gbn19cmV0dXJuITF9KCk7aWYobil7dmFyIG89e3JlcXVlc3Q6ZnVuY3Rpb24oZSl7ZT1lfHx0LmRvY3VtZW50RWxlbWVudCxlW24ucmVxdWVzdEZ1bGxzY3JlZW5dKGUuQUxMT1dfS0VZQk9BUkRfSU5QVVQpfSxleGl0OmZ1bmN0aW9uKCl7dFtuLmV4aXRGdWxsc2NyZWVuXSgpfSx0b2dnbGU6ZnVuY3Rpb24oZSl7ZT1lfHx0LmRvY3VtZW50RWxlbWVudCx0aGlzLmlzRnVsbHNjcmVlbigpP3RoaXMuZXhpdCgpOnRoaXMucmVxdWVzdChlKX0saXNGdWxsc2NyZWVuOmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4odFtuLmZ1bGxzY3JlZW5FbGVtZW50XSl9LGVuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gQm9vbGVhbih0W24uZnVsbHNjcmVlbkVuYWJsZWRdKX19O2UuZXh0ZW5kKCEwLGUuZmFuY3lib3guZGVmYXVsdHMse2J0blRwbDp7ZnVsbFNjcmVlbjonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LWZ1bGxzY3JlZW4gY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1mc2VudGVyXCIgdGl0bGU9XCJ7e0ZVTExfU0NSRUVOfX1cIj48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk03IDE0SDV2NWg1di0ySDd2LTN6bS0yLTRoMlY3aDNWNUg1djV6bTEyIDdoLTN2Mmg1di01aC0ydjN6TTE0IDV2MmgzdjNoMlY1aC01elwiLz48L3N2Zz48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk01IDE2aDN2M2gydi01SDV6bTMtOEg1djJoNVY1SDh6bTYgMTFoMnYtM2gzdi0yaC01em0yLTExVjVoLTJ2NWg1Vjh6XCIvPjwvc3ZnPjwvYnV0dG9uPid9LGZ1bGxTY3JlZW46e2F1dG9TdGFydDohMX19KSxlKHQpLm9uKG4uZnVsbHNjcmVlbmNoYW5nZSxmdW5jdGlvbigpe3ZhciB0PW8uaXNGdWxsc2NyZWVuKCksbj1lLmZhbmN5Ym94LmdldEluc3RhbmNlKCk7biYmKG4uY3VycmVudCYmXCJpbWFnZVwiPT09bi5jdXJyZW50LnR5cGUmJm4uaXNBbmltYXRpbmcmJihuLmlzQW5pbWF0aW5nPSExLG4udXBkYXRlKCEwLCEwLDApLG4uaXNDb21wbGV0ZXx8bi5jb21wbGV0ZSgpKSxuLnRyaWdnZXIoXCJvbkZ1bGxzY3JlZW5DaGFuZ2VcIix0KSxuLiRyZWZzLmNvbnRhaW5lci50b2dnbGVDbGFzcyhcImZhbmN5Ym94LWlzLWZ1bGxzY3JlZW5cIix0KSxuLiRyZWZzLnRvb2xiYXIuZmluZChcIltkYXRhLWZhbmN5Ym94LWZ1bGxzY3JlZW5dXCIpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtYnV0dG9uLS1mc2VudGVyXCIsIXQpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtYnV0dG9uLS1mc2V4aXRcIix0KSl9KX1lKHQpLm9uKHtcIm9uSW5pdC5mYlwiOmZ1bmN0aW9uKHQsZSl7dmFyIGk7aWYoIW4pcmV0dXJuIHZvaWQgZS4kcmVmcy50b29sYmFyLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1mdWxsc2NyZWVuXVwiKS5yZW1vdmUoKTtlJiZlLmdyb3VwW2UuY3VyckluZGV4XS5vcHRzLmZ1bGxTY3JlZW4/KGk9ZS4kcmVmcy5jb250YWluZXIsaS5vbihcImNsaWNrLmZiLWZ1bGxzY3JlZW5cIixcIltkYXRhLWZhbmN5Ym94LWZ1bGxzY3JlZW5dXCIsZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksby50b2dnbGUoKX0pLGUub3B0cy5mdWxsU2NyZWVuJiYhMD09PWUub3B0cy5mdWxsU2NyZWVuLmF1dG9TdGFydCYmby5yZXF1ZXN0KCksZS5GdWxsU2NyZWVuPW8pOmUmJmUuJHJlZnMudG9vbGJhci5maW5kKFwiW2RhdGEtZmFuY3lib3gtZnVsbHNjcmVlbl1cIikuaGlkZSgpfSxcImFmdGVyS2V5ZG93bi5mYlwiOmZ1bmN0aW9uKHQsZSxuLG8saSl7ZSYmZS5GdWxsU2NyZWVuJiY3MD09PWkmJihvLnByZXZlbnREZWZhdWx0KCksZS5GdWxsU2NyZWVuLnRvZ2dsZSgpKX0sXCJiZWZvcmVDbG9zZS5mYlwiOmZ1bmN0aW9uKHQsZSl7ZSYmZS5GdWxsU2NyZWVuJiZlLiRyZWZzLmNvbnRhaW5lci5oYXNDbGFzcyhcImZhbmN5Ym94LWlzLWZ1bGxzY3JlZW5cIikmJm8uZXhpdCgpfX0pfShkb2N1bWVudCxqUXVlcnkpLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49XCJmYW5jeWJveC10aHVtYnNcIjtlLmZhbmN5Ym94LmRlZmF1bHRzPWUuZXh0ZW5kKCEwLHtidG5UcGw6e3RodW1iczonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXRodW1icyBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLXRodW1ic1wiIHRpdGxlPVwie3tUSFVNQlN9fVwiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE0LjU5IDE0LjU5aDMuNzZ2My43NmgtMy43NnYtMy43NnptLTQuNDcgMGgzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjV2LTMuNzZ6bTguOTQtNC40N2gzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2di0zLjc2em0tNC40NyAwaDMuNzZ2My43Nkg1LjY1di0zLjc2em04Ljk0LTQuNDdoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjVWNS42NXpcIi8+PC9zdmc+PC9idXR0b24+J30sdGh1bWJzOnthdXRvU3RhcnQ6ITEsaGlkZU9uQ2xvc2U6ITAscGFyZW50RWw6XCIuZmFuY3lib3gtY29udGFpbmVyXCIsYXhpczpcInlcIn19LGUuZmFuY3lib3guZGVmYXVsdHMpO3ZhciBvPWZ1bmN0aW9uKHQpe3RoaXMuaW5pdCh0KX07ZS5leHRlbmQoby5wcm90b3R5cGUseyRidXR0b246bnVsbCwkZ3JpZDpudWxsLCRsaXN0Om51bGwsaXNWaXNpYmxlOiExLGlzQWN0aXZlOiExLGluaXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXQuZ3JvdXAsbz0wO2UuaW5zdGFuY2U9dCxlLm9wdHM9blt0LmN1cnJJbmRleF0ub3B0cy50aHVtYnMsdC5UaHVtYnM9ZSxlLiRidXR0b249dC4kcmVmcy50b29sYmFyLmZpbmQoXCJbZGF0YS1mYW5jeWJveC10aHVtYnNdXCIpO2Zvcih2YXIgaT0wLGE9bi5sZW5ndGg7aTxhJiYobltpXS50aHVtYiYmbysrLCEobz4xKSk7aSsrKTtvPjEmJmUub3B0cz8oZS4kYnV0dG9uLnJlbW92ZUF0dHIoXCJzdHlsZVwiKS5vbihcImNsaWNrXCIsZnVuY3Rpb24oKXtlLnRvZ2dsZSgpfSksZS5pc0FjdGl2ZT0hMCk6ZS4kYnV0dG9uLmhpZGUoKX0sY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIHQsbz10aGlzLGk9by5pbnN0YW5jZSxhPW8ub3B0cy5wYXJlbnRFbCxzPVtdO28uJGdyaWR8fChvLiRncmlkPWUoJzxkaXYgY2xhc3M9XCInK24rXCIgXCIrbitcIi1cIitvLm9wdHMuYXhpcysnXCI+PC9kaXY+JykuYXBwZW5kVG8oaS4kcmVmcy5jb250YWluZXIuZmluZChhKS5hZGRCYWNrKCkuZmlsdGVyKGEpKSxvLiRncmlkLm9uKFwiY2xpY2tcIixcImFcIixmdW5jdGlvbigpe2kuanVtcFRvKGUodGhpcykuYXR0cihcImRhdGEtaW5kZXhcIikpfSkpLG8uJGxpc3R8fChvLiRsaXN0PWUoJzxkaXYgY2xhc3M9XCInK24rJ19fbGlzdFwiPicpLmFwcGVuZFRvKG8uJGdyaWQpKSxlLmVhY2goaS5ncm91cCxmdW5jdGlvbihlLG4pe3Q9bi50aHVtYix0fHxcImltYWdlXCIhPT1uLnR5cGV8fCh0PW4uc3JjKSxzLnB1c2goJzxhIGhyZWY9XCJqYXZhc2NyaXB0OjtcIiB0YWJpbmRleD1cIjBcIiBkYXRhLWluZGV4PVwiJytlKydcIicrKHQmJnQubGVuZ3RoPycgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOnVybCgnK3QrJylcIic6J2NsYXNzPVwiZmFuY3lib3gtdGh1bWJzLW1pc3NpbmdcIicpK1wiPjwvYT5cIil9KSxvLiRsaXN0WzBdLmlubmVySFRNTD1zLmpvaW4oXCJcIiksXCJ4XCI9PT1vLm9wdHMuYXhpcyYmby4kbGlzdC53aWR0aChwYXJzZUludChvLiRncmlkLmNzcyhcInBhZGRpbmctcmlnaHRcIiksMTApK2kuZ3JvdXAubGVuZ3RoKm8uJGxpc3QuY2hpbGRyZW4oKS5lcSgwKS5vdXRlcldpZHRoKCEwKSl9LGZvY3VzOmZ1bmN0aW9uKHQpe3ZhciBlLG4sbz10aGlzLGk9by4kbGlzdCxhPW8uJGdyaWQ7by5pbnN0YW5jZS5jdXJyZW50JiYoZT1pLmNoaWxkcmVuKCkucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC10aHVtYnMtYWN0aXZlXCIpLmZpbHRlcignW2RhdGEtaW5kZXg9XCInK28uaW5zdGFuY2UuY3VycmVudC5pbmRleCsnXCJdJykuYWRkQ2xhc3MoXCJmYW5jeWJveC10aHVtYnMtYWN0aXZlXCIpLG49ZS5wb3NpdGlvbigpLFwieVwiPT09by5vcHRzLmF4aXMmJihuLnRvcDwwfHxuLnRvcD5pLmhlaWdodCgpLWUub3V0ZXJIZWlnaHQoKSk/aS5zdG9wKCkuYW5pbWF0ZSh7c2Nyb2xsVG9wOmkuc2Nyb2xsVG9wKCkrbi50b3B9LHQpOlwieFwiPT09by5vcHRzLmF4aXMmJihuLmxlZnQ8YS5zY3JvbGxMZWZ0KCl8fG4ubGVmdD5hLnNjcm9sbExlZnQoKSsoYS53aWR0aCgpLWUub3V0ZXJXaWR0aCgpKSkmJmkucGFyZW50KCkuc3RvcCgpLmFuaW1hdGUoe3Njcm9sbExlZnQ6bi5sZWZ0fSx0KSl9LHVwZGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dC5pbnN0YW5jZS4kcmVmcy5jb250YWluZXIudG9nZ2xlQ2xhc3MoXCJmYW5jeWJveC1zaG93LXRodW1ic1wiLHRoaXMuaXNWaXNpYmxlKSx0LmlzVmlzaWJsZT8odC4kZ3JpZHx8dC5jcmVhdGUoKSx0Lmluc3RhbmNlLnRyaWdnZXIoXCJvblRodW1ic1Nob3dcIiksdC5mb2N1cygwKSk6dC4kZ3JpZCYmdC5pbnN0YW5jZS50cmlnZ2VyKFwib25UaHVtYnNIaWRlXCIpLHQuaW5zdGFuY2UudXBkYXRlKCl9LGhpZGU6ZnVuY3Rpb24oKXt0aGlzLmlzVmlzaWJsZT0hMSx0aGlzLnVwZGF0ZSgpfSxzaG93OmZ1bmN0aW9uKCl7dGhpcy5pc1Zpc2libGU9ITAsdGhpcy51cGRhdGUoKX0sdG9nZ2xlOmZ1bmN0aW9uKCl7dGhpcy5pc1Zpc2libGU9IXRoaXMuaXNWaXNpYmxlLHRoaXMudXBkYXRlKCl9fSksZSh0KS5vbih7XCJvbkluaXQuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuO2UmJiFlLlRodW1icyYmKG49bmV3IG8oZSksbi5pc0FjdGl2ZSYmITA9PT1uLm9wdHMuYXV0b1N0YXJ0JiZuLnNob3coKSl9LFwiYmVmb3JlU2hvdy5mYlwiOmZ1bmN0aW9uKHQsZSxuLG8pe3ZhciBpPWUmJmUuVGh1bWJzO2kmJmkuaXNWaXNpYmxlJiZpLmZvY3VzKG8/MDoyNTApfSxcImFmdGVyS2V5ZG93bi5mYlwiOmZ1bmN0aW9uKHQsZSxuLG8saSl7dmFyIGE9ZSYmZS5UaHVtYnM7YSYmYS5pc0FjdGl2ZSYmNzE9PT1pJiYoby5wcmV2ZW50RGVmYXVsdCgpLGEudG9nZ2xlKCkpfSxcImJlZm9yZUNsb3NlLmZiXCI6ZnVuY3Rpb24odCxlKXt2YXIgbj1lJiZlLlRodW1icztuJiZuLmlzVmlzaWJsZSYmITEhPT1uLm9wdHMuaGlkZU9uQ2xvc2UmJm4uJGdyaWQuaGlkZSgpfX0pfShkb2N1bWVudCxqUXVlcnkpLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbih0KXt2YXIgZT17XCImXCI6XCImYW1wO1wiLFwiPFwiOlwiJmx0O1wiLFwiPlwiOlwiJmd0O1wiLCdcIic6XCImcXVvdDtcIixcIidcIjpcIiYjMzk7XCIsXCIvXCI6XCImI3gyRjtcIixcImBcIjpcIiYjeDYwO1wiLFwiPVwiOlwiJiN4M0Q7XCJ9O3JldHVybiBTdHJpbmcodCkucmVwbGFjZSgvWyY8PlwiJ2A9XFwvXS9nLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSl9ZS5leHRlbmQoITAsZS5mYW5jeWJveC5kZWZhdWx0cyx7YnRuVHBsOntzaGFyZTonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXNoYXJlIGNsYXNzPVwiZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tc2hhcmVcIiB0aXRsZT1cInt7U0hBUkV9fVwiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTIuNTUgMTljMS40LTguNCA5LjEtOS44IDExLjktOS44VjVsNyA3LTcgNi4zdi0zLjVjLTIuOCAwLTEwLjUgMi4xLTExLjkgNC4yelwiLz48L3N2Zz48L2J1dHRvbj4nfSxzaGFyZTp7dXJsOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIXQuY3VycmVudEhhc2gmJlwiaW5saW5lXCIhPT1lLnR5cGUmJlwiaHRtbFwiIT09ZS50eXBlJiYoZS5vcmlnU3JjfHxlLnNyYyl8fHdpbmRvdy5sb2NhdGlvbn0sXG50cGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1zaGFyZVwiPjxoMT57e1NIQVJFfX08L2gxPjxwPjxhIGNsYXNzPVwiZmFuY3lib3gtc2hhcmVfX2J1dHRvbiBmYW5jeWJveC1zaGFyZV9fYnV0dG9uLS1mYlwiIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT17e3VybH19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIm0yODcgNDU2di0yOTljMC0yMSA2LTM1IDM1LTM1aDM4di02M2MtNy0xLTI5LTMtNTUtMy01NCAwLTkxIDMzLTkxIDk0djMwNm0xNDMtMjU0aC0yMDV2NzJoMTk2XCIgLz48L3N2Zz48c3Bhbj5GYWNlYm9vazwvc3Bhbj48L2E+PGEgY2xhc3M9XCJmYW5jeWJveC1zaGFyZV9fYnV0dG9uIGZhbmN5Ym94LXNoYXJlX19idXR0b24tLXR3XCIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3VybD17e3VybH19JnRleHQ9e3tkZXNjcn19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIm00NTYgMTMzYy0xNCA3LTMxIDExLTQ3IDEzIDE3LTEwIDMwLTI3IDM3LTQ2LTE1IDEwLTM0IDE2LTUyIDIwLTYxLTYyLTE1Ny03LTE0MSA3NS02OC0zLTEyOS0zNS0xNjktODUtMjIgMzctMTEgODYgMjYgMTA5LTEzIDAtMjYtNC0zNy05IDAgMzkgMjggNzIgNjUgODAtMTIgMy0yNSA0LTM3IDIgMTAgMzMgNDEgNTcgNzcgNTctNDIgMzAtNzcgMzgtMTIyIDM0IDE3MCAxMTEgMzc4LTMyIDM1OS0yMDggMTYtMTEgMzAtMjUgNDEtNDJ6XCIgLz48L3N2Zz48c3Bhbj5Ud2l0dGVyPC9zcGFuPjwvYT48YSBjbGFzcz1cImZhbmN5Ym94LXNoYXJlX19idXR0b24gZmFuY3lib3gtc2hhcmVfX2J1dHRvbi0tcHRcIiBocmVmPVwiaHR0cHM6Ly93d3cucGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPXt7dXJsfX0mZGVzY3JpcHRpb249e3tkZXNjcn19Jm1lZGlhPXt7bWVkaWF9fVwiPjxzdmcgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJtMjY1IDU2Yy0xMDkgMC0xNjQgNzgtMTY0IDE0NCAwIDM5IDE1IDc0IDQ3IDg3IDUgMiAxMCAwIDEyLTVsNC0xOWMyLTYgMS04LTMtMTMtOS0xMS0xNS0yNS0xNS00NSAwLTU4IDQzLTExMCAxMTMtMTEwIDYyIDAgOTYgMzggOTYgODggMCA2Ny0zMCAxMjItNzMgMTIyLTI0IDAtNDItMTktMzYtNDQgNi0yOSAyMC02MCAyMC04MSAwLTE5LTEwLTM1LTMxLTM1LTI1IDAtNDQgMjYtNDQgNjAgMCAyMSA3IDM2IDcgMzZsLTMwIDEyNWMtOCAzNy0xIDgzIDAgODcgMCAzIDQgNCA1IDIgMi0zIDMyLTM5IDQyLTc1bDE2LTY0YzggMTYgMzEgMjkgNTYgMjkgNzQgMCAxMjQtNjcgMTI0LTE1NyAwLTY5LTU4LTEzMi0xNDYtMTMyelwiIGZpbGw9XCIjZmZmXCIvPjwvc3ZnPjxzcGFuPlBpbnRlcmVzdDwvc3Bhbj48L2E+PC9wPjxwPjxpbnB1dCBjbGFzcz1cImZhbmN5Ym94LXNoYXJlX19pbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCJ7e3VybF9yYXd9fVwiIG9uY2xpY2s9XCJzZWxlY3QoKVwiIC8+PC9wPjwvZGl2Pid9fSksZSh0KS5vbihcImNsaWNrXCIsXCJbZGF0YS1mYW5jeWJveC1zaGFyZV1cIixmdW5jdGlvbigpe3ZhciB0LG8saT1lLmZhbmN5Ym94LmdldEluc3RhbmNlKCksYT1pLmN1cnJlbnR8fG51bGw7YSYmKFwiZnVuY3Rpb25cIj09PWUudHlwZShhLm9wdHMuc2hhcmUudXJsKSYmKHQ9YS5vcHRzLnNoYXJlLnVybC5hcHBseShhLFtpLGFdKSksbz1hLm9wdHMuc2hhcmUudHBsLnJlcGxhY2UoL1xce1xce21lZGlhXFx9XFx9L2csXCJpbWFnZVwiPT09YS50eXBlP2VuY29kZVVSSUNvbXBvbmVudChhLnNyYyk6XCJcIikucmVwbGFjZSgvXFx7XFx7dXJsXFx9XFx9L2csZW5jb2RlVVJJQ29tcG9uZW50KHQpKS5yZXBsYWNlKC9cXHtcXHt1cmxfcmF3XFx9XFx9L2csbih0KSkucmVwbGFjZSgvXFx7XFx7ZGVzY3JcXH1cXH0vZyxpLiRjYXB0aW9uP2VuY29kZVVSSUNvbXBvbmVudChpLiRjYXB0aW9uLnRleHQoKSk6XCJcIiksZS5mYW5jeWJveC5vcGVuKHtzcmM6aS50cmFuc2xhdGUoaSxvKSx0eXBlOlwiaHRtbFwiLG9wdHM6e3RvdWNoOiExLGFuaW1hdGlvbkVmZmVjdDohMSxhZnRlckxvYWQ6ZnVuY3Rpb24odCxlKXtpLiRyZWZzLmNvbnRhaW5lci5vbmUoXCJiZWZvcmVDbG9zZS5mYlwiLGZ1bmN0aW9uKCl7dC5jbG9zZShudWxsLDApfSksZS4kY29udGVudC5maW5kKFwiLmZhbmN5Ym94LXNoYXJlX19idXR0b25cIikuY2xpY2soZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93Lm9wZW4odGhpcy5ocmVmLFwiU2hhcmVcIixcIndpZHRoPTU1MCwgaGVpZ2h0PTQ1MFwiKSwhMX0pfSxtb2JpbGU6e2F1dG9Gb2N1czohMX19fSkpfSl9KGRvY3VtZW50LGpRdWVyeSksZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG8oKXt2YXIgZT10LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpLG49ZS5zcGxpdChcIi1cIiksbz1uLmxlbmd0aD4xJiYvXlxcKz9cXGQrJC8udGVzdChuW24ubGVuZ3RoLTFdKT9wYXJzZUludChuLnBvcCgtMSksMTApfHwxOjEsaT1uLmpvaW4oXCItXCIpO3JldHVybntoYXNoOmUsaW5kZXg6bzwxPzE6byxnYWxsZXJ5Oml9fWZ1bmN0aW9uIGkodCl7XCJcIiE9PXQuZ2FsbGVyeSYmbihcIltkYXRhLWZhbmN5Ym94PSdcIituLmVzY2FwZVNlbGVjdG9yKHQuZ2FsbGVyeSkrXCInXVwiKS5lcSh0LmluZGV4LTEpLmZvY3VzKCkudHJpZ2dlcihcImNsaWNrLmZiLXN0YXJ0XCIpfWZ1bmN0aW9uIGEodCl7dmFyIGUsbjtyZXR1cm4hIXQmJihlPXQuY3VycmVudD90LmN1cnJlbnQub3B0czp0Lm9wdHMsXCJcIiE9PShuPWUuaGFzaHx8KGUuJG9yaWc/ZS4kb3JpZy5kYXRhKFwiZmFuY3lib3hcIil8fGUuJG9yaWcuZGF0YShcImZhbmN5Ym94LXRyaWdnZXJcIik6XCJcIikpJiZuKX1uLmVzY2FwZVNlbGVjdG9yfHwobi5lc2NhcGVTZWxlY3Rvcj1mdW5jdGlvbih0KXtyZXR1cm4odCtcIlwiKS5yZXBsYWNlKC8oW1xcMC1cXHgxZlxceDdmXXxeLT9cXGQpfF4tJHxbXlxceDgwLVxcdUZGRkZcXHctXS9nLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU/XCJcXDBcIj09PXQ/XCLvv71cIjp0LnNsaWNlKDAsLTEpK1wiXFxcXFwiK3QuY2hhckNvZGVBdCh0Lmxlbmd0aC0xKS50b1N0cmluZygxNikrXCIgXCI6XCJcXFxcXCIrdH0pfSksbihmdW5jdGlvbigpeyExIT09bi5mYW5jeWJveC5kZWZhdWx0cy5oYXNoJiYobihlKS5vbih7XCJvbkluaXQuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuLGk7ITEhPT1lLmdyb3VwW2UuY3VyckluZGV4XS5vcHRzLmhhc2gmJihuPW8oKSwoaT1hKGUpKSYmbi5nYWxsZXJ5JiZpPT1uLmdhbGxlcnkmJihlLmN1cnJJbmRleD1uLmluZGV4LTEpKX0sXCJiZWZvcmVTaG93LmZiXCI6ZnVuY3Rpb24obixvLGkscyl7dmFyIHI7aSYmITEhPT1pLm9wdHMuaGFzaCYmKHI9YShvKSkmJihvLmN1cnJlbnRIYXNoPXIrKG8uZ3JvdXAubGVuZ3RoPjE/XCItXCIrKGkuaW5kZXgrMSk6XCJcIiksdC5sb2NhdGlvbi5oYXNoIT09XCIjXCIrby5jdXJyZW50SGFzaCYmKHMmJiFvLm9yaWdIYXNoJiYoby5vcmlnSGFzaD10LmxvY2F0aW9uLmhhc2gpLG8uaGFzaFRpbWVyJiZjbGVhclRpbWVvdXQoby5oYXNoVGltZXIpLG8uaGFzaFRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtcInJlcGxhY2VTdGF0ZVwiaW4gdC5oaXN0b3J5Pyh0Lmhpc3Rvcnlbcz9cInB1c2hTdGF0ZVwiOlwicmVwbGFjZVN0YXRlXCJdKHt9LGUudGl0bGUsdC5sb2NhdGlvbi5wYXRobmFtZSt0LmxvY2F0aW9uLnNlYXJjaCtcIiNcIitvLmN1cnJlbnRIYXNoKSxzJiYoby5oYXNDcmVhdGVkSGlzdG9yeT0hMCkpOnQubG9jYXRpb24uaGFzaD1vLmN1cnJlbnRIYXNoLG8uaGFzaFRpbWVyPW51bGx9LDMwMCkpKX0sXCJiZWZvcmVDbG9zZS5mYlwiOmZ1bmN0aW9uKG4sbyxpKXtpJiYhMSE9PWkub3B0cy5oYXNoJiYoY2xlYXJUaW1lb3V0KG8uaGFzaFRpbWVyKSxvLmN1cnJlbnRIYXNoJiZvLmhhc0NyZWF0ZWRIaXN0b3J5P3QuaGlzdG9yeS5iYWNrKCk6by5jdXJyZW50SGFzaCYmKFwicmVwbGFjZVN0YXRlXCJpbiB0Lmhpc3Rvcnk/dC5oaXN0b3J5LnJlcGxhY2VTdGF0ZSh7fSxlLnRpdGxlLHQubG9jYXRpb24ucGF0aG5hbWUrdC5sb2NhdGlvbi5zZWFyY2grKG8ub3JpZ0hhc2h8fFwiXCIpKTp0LmxvY2F0aW9uLmhhc2g9by5vcmlnSGFzaCksby5jdXJyZW50SGFzaD1udWxsKX19KSxuKHQpLm9uKFwiaGFzaGNoYW5nZS5mYlwiLGZ1bmN0aW9uKCl7dmFyIHQ9bygpLGU9bnVsbDtuLmVhY2gobihcIi5mYW5jeWJveC1jb250YWluZXJcIikuZ2V0KCkucmV2ZXJzZSgpLGZ1bmN0aW9uKHQsbyl7dmFyIGk9bihvKS5kYXRhKFwiRmFuY3lCb3hcIik7aWYoaSYmaS5jdXJyZW50SGFzaClyZXR1cm4gZT1pLCExfSksZT9lLmN1cnJlbnRIYXNoPT09dC5nYWxsZXJ5K1wiLVwiK3QuaW5kZXh8fDE9PT10LmluZGV4JiZlLmN1cnJlbnRIYXNoPT10LmdhbGxlcnl8fChlLmN1cnJlbnRIYXNoPW51bGwsZS5jbG9zZSgpKTpcIlwiIT09dC5nYWxsZXJ5JiZpKHQpfSksc2V0VGltZW91dChmdW5jdGlvbigpe24uZmFuY3lib3guZ2V0SW5zdGFuY2UoKXx8aShvKCkpfSw1MCkpfSl9KHdpbmRvdyxkb2N1bWVudCxqUXVlcnkpLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49KG5ldyBEYXRlKS5nZXRUaW1lKCk7ZSh0KS5vbih7XCJvbkluaXQuZmJcIjpmdW5jdGlvbih0LGUsbyl7ZS4kcmVmcy5zdGFnZS5vbihcIm1vdXNld2hlZWwgRE9NTW91c2VTY3JvbGwgd2hlZWwgTW96TW91c2VQaXhlbFNjcm9sbFwiLGZ1bmN0aW9uKHQpe3ZhciBvPWUuY3VycmVudCxpPShuZXcgRGF0ZSkuZ2V0VGltZSgpO2UuZ3JvdXAubGVuZ3RoPDJ8fCExPT09by5vcHRzLndoZWVsfHxcImF1dG9cIj09PW8ub3B0cy53aGVlbCYmXCJpbWFnZVwiIT09by50eXBlfHwodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCksby4kc2xpZGUuaGFzQ2xhc3MoXCJmYW5jeWJveC1hbmltYXRlZFwiKXx8KHQ9dC5vcmlnaW5hbEV2ZW50fHx0LGktbjwyNTB8fChuPWksZVsoLXQuZGVsdGFZfHwtdC5kZWx0YVh8fHQud2hlZWxEZWx0YXx8LXQuZGV0YWlsKTwwP1wibmV4dFwiOlwicHJldmlvdXNcIl0oKSkpKX0pfX0pfShkb2N1bWVudCxqUXVlcnkpOyIsIiQoZnVuY3Rpb24gKCkge1xyXG5cclxuICAgJCgnLmhlYWRlcl9fYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAkKCcucmlnaHRzaWRlLW1lbnUnKS5yZW1vdmVDbGFzcygncmlnaHRzaWRlLW1lbnUtLWNsb3NlJyk7XHJcbiAgIH0pO1xyXG4gICAkKCcucmlnaHRzaWRlLW1lbnVfX2Nsb3NlJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAkKCcucmlnaHRzaWRlLW1lbnUnKS5hZGRDbGFzcygncmlnaHRzaWRlLW1lbnUtLWNsb3NlJyk7XHJcbiAgIH0pO1xyXG5cclxuXHJcbiAgICQoJy5oZWFkZXJfX2J0bi1tZW51Jykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAkKCcubWVudScpLnRvZ2dsZUNsYXNzKCdtZW51LS1vcGVuJyk7XHJcbiAgIH0pO1xyXG5cclxuXHJcbiAgICQoJy50b3BfX3NsaWRlcicpLnNsaWNrKHtcclxuICAgICAgZG90czogdHJ1ZSxcclxuICAgICAgYXJyb3dzOiBmYWxzZSxcclxuICAgICAgZmFkZTogdHJ1ZSxcclxuICAgICAgYXV0b3BsYXk6IHRydWVcclxuICAgfSk7XHJcblxyXG4gICAkKCcuY29udGFjdC1zbGlkZXInKS5zbGljayh7XHJcbiAgICAgIHNsaWRlc1RvU2hvdzogMTAsXHJcbiAgICAgIHNsaWRlc1RvU2Nyb2xsOiAxMCxcclxuICAgICAgZG90czogdHJ1ZSxcclxuICAgICAgYXJyb3dzOiBmYWxzZSxcclxuICAgICAgYXV0b3BsYXk6IHRydWVcclxuICAgfSk7XHJcblxyXG4gICAkKCcuYXJ0aWNsZS1zbGlkZXJfX2JveCcpLnNsaWNrKHtcclxuICAgICAgcHJldkFycm93OiAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJhcnRpY2xlLXNsaWRlcl9fYXJyb3cgYXJ0aWNsZS1zbGlkZXJfX2Fycm93bGVmdFwiPjxpbWcgc3JjPVwiaW1hZ2VzL2Jsb2ctYm94L2Fycm93LXNsaWRlci1sZWZ0LnN2Z1wiIGFsdD1cImFycm93IGxlZnRcIj48L2J1dHRvbj4nLFxyXG4gICAgICBuZXh0QXJyb3c6ICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImFydGljbGUtc2xpZGVyX19hcnJvdyBhcnRpY2xlLXNsaWRlcl9fYXJyb3dyaWdodFwiPjxpbWcgc3JjPVwiaW1hZ2VzL2Jsb2ctYm94L2Fycm93LXNsaWRlci1yaWdodC5zdmdcIiBhbHQ9XCJhcnJvdyByaWdodFwiPjwvYnV0dG9uPicsXHJcbiAgIH0pO1xyXG5cclxuICAgdmFyIG1peGVyID0gbWl4aXR1cCgnLmdhbGxlcnlfX2lubmVyJywge1xyXG4gICAgICBsb2FkOiB7XHJcbiAgICAgICAgIGZpbHRlcjogJy5saXZpbmcnXHJcbiAgICAgIH1cclxuICAgfSk7XHJcbn0pOyJdfQ==
