/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,(function(t,e){"use strict";var n=[],o=Object.getPrototypeOf,i=n.slice,s=n.flat?function(t){return n.flat.call(t)}:function(t){return n.concat.apply([],t)},r=n.push,a=n.indexOf,l={},c=l.toString,d=l.hasOwnProperty,u=d.toString,p=u.call(Object),f={},h=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType&&"function"!=typeof t.item},g=function(t){return null!=t&&t===t.window},m=t.document,y={type:!0,src:!0,nonce:!0,noModule:!0};function v(t,e,n){var o,i,s=(n=n||m).createElement("script");if(s.text=t,e)for(o in y)(i=e[o]||e.getAttribute&&e.getAttribute(o))&&s.setAttribute(o,i);n.head.appendChild(s).parentNode.removeChild(s)}function b(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?l[c.call(t)]||"object":typeof t}var w=function(t,e){return new w.fn.init(t,e)};function x(t){var e=!!t&&"length"in t&&t.length,n=b(t);return!h(t)&&!g(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}w.fn=w.prototype={jquery:"3.6.0",constructor:w,length:0,toArray:function(){return i.call(this)},get:function(t){return null==t?i.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=w.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return w.each(this,t)},map:function(t){return this.pushStack(w.map(this,(function(e,n){return t.call(e,n,e)})))},slice:function(){return this.pushStack(i.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(w.grep(this,(function(t,e){return(e+1)%2})))},odd:function(){return this.pushStack(w.grep(this,(function(t,e){return e%2})))},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:r,sort:n.sort,splice:n.splice},w.extend=w.fn.extend=function(){var t,e,n,o,i,s,r=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof r&&(c=r,r=arguments[a]||{},a++),"object"==typeof r||h(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)o=t[e],"__proto__"!==e&&r!==o&&(c&&o&&(w.isPlainObject(o)||(i=Array.isArray(o)))?(n=r[e],s=i&&!Array.isArray(n)?[]:i||w.isPlainObject(n)?n:{},i=!1,r[e]=w.extend(c,s,o)):void 0!==o&&(r[e]=o));return r},w.extend({expando:"jQuery"+("3.6.0"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==c.call(t))&&(!(e=o(t))||"function"==typeof(n=d.call(e,"constructor")&&e.constructor)&&u.call(n)===p)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e,n){v(t,{nonce:e&&e.nonce},n)},each:function(t,e){var n,o=0;if(x(t))for(n=t.length;o<n&&!1!==e.call(t[o],o,t[o]);o++);else for(o in t)if(!1===e.call(t[o],o,t[o]))break;return t},makeArray:function(t,e){var n=e||[];return null!=t&&(x(Object(t))?w.merge(n,"string"==typeof t?[t]:t):r.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:a.call(e,t,n)},merge:function(t,e){for(var n=+e.length,o=0,i=t.length;o<n;o++)t[i++]=e[o];return t.length=i,t},grep:function(t,e,n){for(var o=[],i=0,s=t.length,r=!n;i<s;i++)!e(t[i],i)!==r&&o.push(t[i]);return o},map:function(t,e,n){var o,i,r=0,a=[];if(x(t))for(o=t.length;r<o;r++)null!=(i=e(t[r],r,n))&&a.push(i);else for(r in t)null!=(i=e(t[r],r,n))&&a.push(i);return s(a)},guid:1,support:f}),"function"==typeof Symbol&&(w.fn[Symbol.iterator]=n[Symbol.iterator]),w.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){l["[object "+e+"]"]=e.toLowerCase()}));var C=
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
function(t){var e,n,o,i,s,r,a,l,c,d,u,p,f,h,g,m,y,v,b,w="sizzle"+1*new Date,x=t.document,C=0,S=0,T=lt(),k=lt(),A=lt(),E=lt(),$=function(t,e){return t===e&&(u=!0),0},D={}.hasOwnProperty,P=[],O=P.pop,I=P.push,N=P.push,M=P.slice,R=function(t,e){for(var n=0,o=t.length;n<o;n++)if(t[n]===e)return n;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",F="[\\x20\\t\\r\\n\\f]",j="(?:\\\\[\\da-fA-F]{1,6}"+F+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",B="\\["+F+"*("+j+")(?:"+F+"*([*^$|!~]?=)"+F+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+j+"))|)"+F+"*\\]",H=":("+j+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+B+")*)|.*)\\)|)",q=new RegExp(F+"+","g"),z=new RegExp("^"+F+"+|((?:^|[^\\\\])(?:\\\\.)*)"+F+"+$","g"),_=new RegExp("^"+F+"*,"+F+"*"),W=new RegExp("^"+F+"*([>+~]|"+F+")"+F+"*"),U=new RegExp(F+"|>"),X=new RegExp(H),Y=new RegExp("^"+j+"$"),G={ID:new RegExp("^#("+j+")"),CLASS:new RegExp("^\\.("+j+")"),TAG:new RegExp("^("+j+"|[*])"),ATTR:new RegExp("^"+B),PSEUDO:new RegExp("^"+H),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+F+"*(even|odd|(([+-]|)(\\d*)n|)"+F+"*(?:([+-]|)"+F+"*(\\d+)|))"+F+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+F+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+F+"*((?:-\\d)?\\d*)"+F+"*\\)|)(?=[^-]|$)","i")},V=/HTML$/i,K=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\[\\da-fA-F]{1,6}"+F+"?|\\\\([^\\r\\n\\f])","g"),nt=function(t,e){var n="0x"+t.slice(1)-65536;return e||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},ot=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,it=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},st=function(){p()},rt=wt((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{N.apply(P=M.call(x.childNodes),x.childNodes),P[x.childNodes.length].nodeType}catch(t){N={apply:P.length?function(t,e){I.apply(t,M.call(e))}:function(t,e){for(var n=t.length,o=0;t[n++]=e[o++];);t.length=n-1}}}function at(t,e,o,i){var s,a,c,d,u,h,y,v=e&&e.ownerDocument,x=e?e.nodeType:9;if(o=o||[],"string"!=typeof t||!t||1!==x&&9!==x&&11!==x)return o;if(!i&&(p(e),e=e||f,g)){if(11!==x&&(u=J.exec(t)))if(s=u[1]){if(9===x){if(!(c=e.getElementById(s)))return o;if(c.id===s)return o.push(c),o}else if(v&&(c=v.getElementById(s))&&b(e,c)&&c.id===s)return o.push(c),o}else{if(u[2])return N.apply(o,e.getElementsByTagName(t)),o;if((s=u[3])&&n.getElementsByClassName&&e.getElementsByClassName)return N.apply(o,e.getElementsByClassName(s)),o}if(n.qsa&&!E[t+" "]&&(!m||!m.test(t))&&(1!==x||"object"!==e.nodeName.toLowerCase())){if(y=t,v=e,1===x&&(U.test(t)||W.test(t))){for((v=tt.test(t)&&yt(e.parentNode)||e)===e&&n.scope||((d=e.getAttribute("id"))?d=d.replace(ot,it):e.setAttribute("id",d=w)),a=(h=r(t)).length;a--;)h[a]=(d?"#"+d:":scope")+" "+bt(h[a]);y=h.join(",")}try{return N.apply(o,v.querySelectorAll(y)),o}catch(e){E(t,!0)}finally{d===w&&e.removeAttribute("id")}}}return l(t.replace(z,"$1"),e,o,i)}function lt(){var t=[];return function e(n,i){return t.push(n+" ")>o.cacheLength&&delete e[t.shift()],e[n+" "]=i}}function ct(t){return t[w]=!0,t}function dt(t){var e=f.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ut(t,e){for(var n=t.split("|"),i=n.length;i--;)o.attrHandle[n[i]]=e}function pt(t,e){var n=e&&t,o=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(o)return o;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function ft(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ht(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&rt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ct((function(e){return e=+e,ct((function(n,o){for(var i,s=t([],n.length,e),r=s.length;r--;)n[i=s[r]]&&(n[i]=!(o[i]=n[i]))}))}))}function yt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in n=at.support={},s=at.isXML=function(t){var e=t&&t.namespaceURI,n=t&&(t.ownerDocument||t).documentElement;return!V.test(e||n&&n.nodeName||"HTML")},p=at.setDocument=function(t){var e,i,r=t?t.ownerDocument||t:x;return r!=f&&9===r.nodeType&&r.documentElement?(h=(f=r).documentElement,g=!s(f),x!=f&&(i=f.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",st,!1):i.attachEvent&&i.attachEvent("onunload",st)),n.scope=dt((function(t){return h.appendChild(t).appendChild(f.createElement("div")),void 0!==t.querySelectorAll&&!t.querySelectorAll(":scope fieldset div").length})),n.attributes=dt((function(t){return t.className="i",!t.getAttribute("className")})),n.getElementsByTagName=dt((function(t){return t.appendChild(f.createComment("")),!t.getElementsByTagName("*").length})),n.getElementsByClassName=Z.test(f.getElementsByClassName),n.getById=dt((function(t){return h.appendChild(t).id=w,!f.getElementsByName||!f.getElementsByName(w).length})),n.getById?(o.filter.ID=function(t){var e=t.replace(et,nt);return function(t){return t.getAttribute("id")===e}},o.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n=e.getElementById(t);return n?[n]:[]}}):(o.filter.ID=function(t){var e=t.replace(et,nt);return function(t){var n=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},o.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n,o,i,s=e.getElementById(t);if(s){if((n=s.getAttributeNode("id"))&&n.value===t)return[s];for(i=e.getElementsByName(t),o=0;s=i[o++];)if((n=s.getAttributeNode("id"))&&n.value===t)return[s]}return[]}}),o.find.TAG=n.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):n.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,o=[],i=0,s=e.getElementsByTagName(t);if("*"===t){for(;n=s[i++];)1===n.nodeType&&o.push(n);return o}return s},o.find.CLASS=n.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},y=[],m=[],(n.qsa=Z.test(f.querySelectorAll))&&(dt((function(t){var e;h.appendChild(t).innerHTML="<a id='"+w+"'></a><select id='"+w+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+F+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+F+"*(?:value|"+L+")"),t.querySelectorAll("[id~="+w+"-]").length||m.push("~="),(e=f.createElement("input")).setAttribute("name",""),t.appendChild(e),t.querySelectorAll("[name='']").length||m.push("\\["+F+"*name"+F+"*="+F+"*(?:''|\"\")"),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+w+"+*").length||m.push(".#.+[+~]"),t.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")})),dt((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=f.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+F+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),h.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(n.matchesSelector=Z.test(v=h.matches||h.webkitMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector||h.msMatchesSelector))&&dt((function(t){n.disconnectedMatch=v.call(t,"*"),v.call(t,"[s!='']:x"),y.push("!=",H)})),m=m.length&&new RegExp(m.join("|")),y=y.length&&new RegExp(y.join("|")),e=Z.test(h.compareDocumentPosition),b=e||Z.test(h.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,o=e&&e.parentNode;return t===o||!(!o||1!==o.nodeType||!(n.contains?n.contains(o):t.compareDocumentPosition&&16&t.compareDocumentPosition(o)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},$=e?function(t,e){if(t===e)return u=!0,0;var o=!t.compareDocumentPosition-!e.compareDocumentPosition;return o||(1&(o=(t.ownerDocument||t)==(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!n.sortDetached&&e.compareDocumentPosition(t)===o?t==f||t.ownerDocument==x&&b(x,t)?-1:e==f||e.ownerDocument==x&&b(x,e)?1:d?R(d,t)-R(d,e):0:4&o?-1:1)}:function(t,e){if(t===e)return u=!0,0;var n,o=0,i=t.parentNode,s=e.parentNode,r=[t],a=[e];if(!i||!s)return t==f?-1:e==f?1:i?-1:s?1:d?R(d,t)-R(d,e):0;if(i===s)return pt(t,e);for(n=t;n=n.parentNode;)r.unshift(n);for(n=e;n=n.parentNode;)a.unshift(n);for(;r[o]===a[o];)o++;return o?pt(r[o],a[o]):r[o]==x?-1:a[o]==x?1:0},f):f},at.matches=function(t,e){return at(t,null,null,e)},at.matchesSelector=function(t,e){if(p(t),n.matchesSelector&&g&&!E[e+" "]&&(!y||!y.test(e))&&(!m||!m.test(e)))try{var o=v.call(t,e);if(o||n.disconnectedMatch||t.document&&11!==t.document.nodeType)return o}catch(t){E(e,!0)}return at(e,f,null,[t]).length>0},at.contains=function(t,e){return(t.ownerDocument||t)!=f&&p(t),b(t,e)},at.attr=function(t,e){(t.ownerDocument||t)!=f&&p(t);var i=o.attrHandle[e.toLowerCase()],s=i&&D.call(o.attrHandle,e.toLowerCase())?i(t,e,!g):void 0;return void 0!==s?s:n.attributes||!g?t.getAttribute(e):(s=t.getAttributeNode(e))&&s.specified?s.value:null},at.escape=function(t){return(t+"").replace(ot,it)},at.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},at.uniqueSort=function(t){var e,o=[],i=0,s=0;if(u=!n.detectDuplicates,d=!n.sortStable&&t.slice(0),t.sort($),u){for(;e=t[s++];)e===t[s]&&(i=o.push(s));for(;i--;)t.splice(o[i],1)}return d=null,t},i=at.getText=function(t){var e,n="",o=0,s=t.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=i(t)}else if(3===s||4===s)return t.nodeValue}else for(;e=t[o++];)n+=i(e);return n},(o=at.selectors={cacheLength:50,createPseudo:ct,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,nt),t[3]=(t[3]||t[4]||t[5]||"").replace(et,nt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||at.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&at.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return G.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&X.test(n)&&(e=r(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,nt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=T[t+" "];return e||(e=new RegExp("(^|"+F+")"+t+"("+F+"|$)"))&&T(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,n){return function(o){var i=at.attr(o,t);return null==i?"!="===e:!e||(i+="","="===e?i===n:"!="===e?i!==n:"^="===e?n&&0===i.indexOf(n):"*="===e?n&&i.indexOf(n)>-1:"$="===e?n&&i.slice(-n.length)===n:"~="===e?(" "+i.replace(q," ")+" ").indexOf(n)>-1:"|="===e&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,n,o,i){var s="nth"!==t.slice(0,3),r="last"!==t.slice(-4),a="of-type"===e;return 1===o&&0===i?function(t){return!!t.parentNode}:function(e,n,l){var c,d,u,p,f,h,g=s!==r?"nextSibling":"previousSibling",m=e.parentNode,y=a&&e.nodeName.toLowerCase(),v=!l&&!a,b=!1;if(m){if(s){for(;g;){for(p=e;p=p[g];)if(a?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g="only"===t&&!h&&"nextSibling"}return!0}if(h=[r?m.firstChild:m.lastChild],r&&v){for(b=(f=(c=(d=(u=(p=m)[w]||(p[w]={}))[p.uniqueID]||(u[p.uniqueID]={}))[t]||[])[0]===C&&c[1])&&c[2],p=f&&m.childNodes[f];p=++f&&p&&p[g]||(b=f=0)||h.pop();)if(1===p.nodeType&&++b&&p===e){d[t]=[C,f,b];break}}else if(v&&(b=f=(c=(d=(u=(p=e)[w]||(p[w]={}))[p.uniqueID]||(u[p.uniqueID]={}))[t]||[])[0]===C&&c[1]),!1===b)for(;(p=++f&&p&&p[g]||(b=f=0)||h.pop())&&((a?p.nodeName.toLowerCase()!==y:1!==p.nodeType)||!++b||(v&&((d=(u=p[w]||(p[w]={}))[p.uniqueID]||(u[p.uniqueID]={}))[t]=[C,b]),p!==e)););return(b-=i)===o||b%o==0&&b/o>=0}}},PSEUDO:function(t,e){var n,i=o.pseudos[t]||o.setFilters[t.toLowerCase()]||at.error("unsupported pseudo: "+t);return i[w]?i(e):i.length>1?(n=[t,t,"",e],o.setFilters.hasOwnProperty(t.toLowerCase())?ct((function(t,n){for(var o,s=i(t,e),r=s.length;r--;)t[o=R(t,s[r])]=!(n[o]=s[r])})):function(t){return i(t,0,n)}):i}},pseudos:{not:ct((function(t){var e=[],n=[],o=a(t.replace(z,"$1"));return o[w]?ct((function(t,e,n,i){for(var s,r=o(t,null,i,[]),a=t.length;a--;)(s=r[a])&&(t[a]=!(e[a]=s))})):function(t,i,s){return e[0]=t,o(e,null,s,n),e[0]=null,!n.pop()}})),has:ct((function(t){return function(e){return at(t,e).length>0}})),contains:ct((function(t){return t=t.replace(et,nt),function(e){return(e.textContent||i(e)).indexOf(t)>-1}})),lang:ct((function(t){return Y.test(t||"")||at.error("unsupported lang: "+t),t=t.replace(et,nt).toLowerCase(),function(e){var n;do{if(n=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===h},focus:function(t){return t===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!o.pseudos.empty(t)},header:function(t){return Q.test(t.nodeName)},input:function(t){return K.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,n){return[n<0?n+e:n]})),even:mt((function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t})),odd:mt((function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t})),lt:mt((function(t,e,n){for(var o=n<0?n+e:n>e?e:n;--o>=0;)t.push(o);return t})),gt:mt((function(t,e,n){for(var o=n<0?n+e:n;++o<e;)t.push(o);return t}))}}).pseudos.nth=o.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[e]=ft(e);for(e in{submit:!0,reset:!0})o.pseudos[e]=ht(e);function vt(){}function bt(t){for(var e=0,n=t.length,o="";e<n;e++)o+=t[e].value;return o}function wt(t,e,n){var o=e.dir,i=e.next,s=i||o,r=n&&"parentNode"===s,a=S++;return e.first?function(e,n,i){for(;e=e[o];)if(1===e.nodeType||r)return t(e,n,i);return!1}:function(e,n,l){var c,d,u,p=[C,a];if(l){for(;e=e[o];)if((1===e.nodeType||r)&&t(e,n,l))return!0}else for(;e=e[o];)if(1===e.nodeType||r)if(d=(u=e[w]||(e[w]={}))[e.uniqueID]||(u[e.uniqueID]={}),i&&i===e.nodeName.toLowerCase())e=e[o]||e;else{if((c=d[s])&&c[0]===C&&c[1]===a)return p[2]=c[2];if(d[s]=p,p[2]=t(e,n,l))return!0}return!1}}function xt(t){return t.length>1?function(e,n,o){for(var i=t.length;i--;)if(!t[i](e,n,o))return!1;return!0}:t[0]}function Ct(t,e,n,o,i){for(var s,r=[],a=0,l=t.length,c=null!=e;a<l;a++)(s=t[a])&&(n&&!n(s,o,i)||(r.push(s),c&&e.push(a)));return r}function St(t,e,n,o,i,s){return o&&!o[w]&&(o=St(o)),i&&!i[w]&&(i=St(i,s)),ct((function(s,r,a,l){var c,d,u,p=[],f=[],h=r.length,g=s||function(t,e,n){for(var o=0,i=e.length;o<i;o++)at(t,e[o],n);return n}(e||"*",a.nodeType?[a]:a,[]),m=!t||!s&&e?g:Ct(g,p,t,a,l),y=n?i||(s?t:h||o)?[]:r:m;if(n&&n(m,y,a,l),o)for(c=Ct(y,f),o(c,[],a,l),d=c.length;d--;)(u=c[d])&&(y[f[d]]=!(m[f[d]]=u));if(s){if(i||t){if(i){for(c=[],d=y.length;d--;)(u=y[d])&&c.push(m[d]=u);i(null,y=[],c,l)}for(d=y.length;d--;)(u=y[d])&&(c=i?R(s,u):p[d])>-1&&(s[c]=!(r[c]=u))}}else y=Ct(y===r?y.splice(h,y.length):y),i?i(null,r,y,l):N.apply(r,y)}))}function Tt(t){for(var e,n,i,s=t.length,r=o.relative[t[0].type],a=r||o.relative[" "],l=r?1:0,d=wt((function(t){return t===e}),a,!0),u=wt((function(t){return R(e,t)>-1}),a,!0),p=[function(t,n,o){var i=!r&&(o||n!==c)||((e=n).nodeType?d(t,n,o):u(t,n,o));return e=null,i}];l<s;l++)if(n=o.relative[t[l].type])p=[wt(xt(p),n)];else{if((n=o.filter[t[l].type].apply(null,t[l].matches))[w]){for(i=++l;i<s&&!o.relative[t[i].type];i++);return St(l>1&&xt(p),l>1&&bt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(z,"$1"),n,l<i&&Tt(t.slice(l,i)),i<s&&Tt(t=t.slice(i)),i<s&&bt(t))}p.push(n)}return xt(p)}return vt.prototype=o.filters=o.pseudos,o.setFilters=new vt,r=at.tokenize=function(t,e){var n,i,s,r,a,l,c,d=k[t+" "];if(d)return e?0:d.slice(0);for(a=t,l=[],c=o.preFilter;a;){for(r in n&&!(i=_.exec(a))||(i&&(a=a.slice(i[0].length)||a),l.push(s=[])),n=!1,(i=W.exec(a))&&(n=i.shift(),s.push({value:n,type:i[0].replace(z," ")}),a=a.slice(n.length)),o.filter)!(i=G[r].exec(a))||c[r]&&!(i=c[r](i))||(n=i.shift(),s.push({value:n,type:r,matches:i}),a=a.slice(n.length));if(!n)break}return e?a.length:a?at.error(t):k(t,l).slice(0)},a=at.compile=function(t,e){var n,i=[],s=[],a=A[t+" "];if(!a){for(e||(e=r(t)),n=e.length;n--;)(a=Tt(e[n]))[w]?i.push(a):s.push(a);(a=A(t,function(t,e){var n=e.length>0,i=t.length>0,s=function(s,r,a,l,d){var u,h,m,y=0,v="0",b=s&&[],w=[],x=c,S=s||i&&o.find.TAG("*",d),T=C+=null==x?1:Math.random()||.1,k=S.length;for(d&&(c=r==f||r||d);v!==k&&null!=(u=S[v]);v++){if(i&&u){for(h=0,r||u.ownerDocument==f||(p(u),a=!g);m=t[h++];)if(m(u,r||f,a)){l.push(u);break}d&&(C=T)}n&&((u=!m&&u)&&y--,s&&b.push(u))}if(y+=v,n&&v!==y){for(h=0;m=e[h++];)m(b,w,r,a);if(s){if(y>0)for(;v--;)b[v]||w[v]||(w[v]=O.call(l));w=Ct(w)}N.apply(l,w),d&&!s&&w.length>0&&y+e.length>1&&at.uniqueSort(l)}return d&&(C=T,c=x),b};return n?ct(s):s}(s,i))).selector=t}return a},l=at.select=function(t,e,n,i){var s,l,c,d,u,p="function"==typeof t&&t,f=!i&&r(t=p.selector||t);if(n=n||[],1===f.length){if((l=f[0]=f[0].slice(0)).length>2&&"ID"===(c=l[0]).type&&9===e.nodeType&&g&&o.relative[l[1].type]){if(!(e=(o.find.ID(c.matches[0].replace(et,nt),e)||[])[0]))return n;p&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(s=G.needsContext.test(t)?0:l.length;s--&&(c=l[s],!o.relative[d=c.type]);)if((u=o.find[d])&&(i=u(c.matches[0].replace(et,nt),tt.test(l[0].type)&&yt(e.parentNode)||e))){if(l.splice(s,1),!(t=i.length&&bt(l)))return N.apply(n,i),n;break}}return(p||a(t,f))(i,e,!g,n,!e||tt.test(t)&&yt(e.parentNode)||e),n},n.sortStable=w.split("").sort($).join("")===w,n.detectDuplicates=!!u,p(),n.sortDetached=dt((function(t){return 1&t.compareDocumentPosition(f.createElement("fieldset"))})),dt((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||ut("type|href|height|width",(function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),n.attributes&&dt((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||ut("value",(function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),dt((function(t){return null==t.getAttribute("disabled")}))||ut(L,(function(t,e,n){var o;if(!n)return!0===t[e]?e.toLowerCase():(o=t.getAttributeNode(e))&&o.specified?o.value:null})),at}(t);w.find=C,w.expr=C.selectors,w.expr[":"]=w.expr.pseudos,w.uniqueSort=w.unique=C.uniqueSort,w.text=C.getText,w.isXMLDoc=C.isXML,w.contains=C.contains,w.escapeSelector=C.escape;var S=function(t,e,n){for(var o=[],i=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(i&&w(t).is(n))break;o.push(t)}return o},T=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},k=w.expr.match.needsContext;function A(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var E=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function $(t,e,n){return h(e)?w.grep(t,(function(t,o){return!!e.call(t,o,t)!==n})):e.nodeType?w.grep(t,(function(t){return t===e!==n})):"string"!=typeof e?w.grep(t,(function(t){return a.call(e,t)>-1!==n})):w.filter(e,t,n)}w.filter=function(t,e,n){var o=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===o.nodeType?w.find.matchesSelector(o,t)?[o]:[]:w.find.matches(t,w.grep(e,(function(t){return 1===t.nodeType})))},w.fn.extend({find:function(t){var e,n,o=this.length,i=this;if("string"!=typeof t)return this.pushStack(w(t).filter((function(){for(e=0;e<o;e++)if(w.contains(i[e],this))return!0})));for(n=this.pushStack([]),e=0;e<o;e++)w.find(t,i[e],n);return o>1?w.uniqueSort(n):n},filter:function(t){return this.pushStack($(this,t||[],!1))},not:function(t){return this.pushStack($(this,t||[],!0))},is:function(t){return!!$(this,"string"==typeof t&&k.test(t)?w(t):t||[],!1).length}});var D,P=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(w.fn.init=function(t,e,n){var o,i;if(!t)return this;if(n=n||D,"string"==typeof t){if(!(o="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:P.exec(t))||!o[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(o[1]){if(e=e instanceof w?e[0]:e,w.merge(this,w.parseHTML(o[1],e&&e.nodeType?e.ownerDocument||e:m,!0)),E.test(o[1])&&w.isPlainObject(e))for(o in e)h(this[o])?this[o](e[o]):this.attr(o,e[o]);return this}return(i=m.getElementById(o[2]))&&(this[0]=i,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):h(t)?void 0!==n.ready?n.ready(t):t(w):w.makeArray(t,this)}).prototype=w.fn,D=w(m);var O=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};function N(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}w.fn.extend({has:function(t){var e=w(t,this),n=e.length;return this.filter((function(){for(var t=0;t<n;t++)if(w.contains(this,e[t]))return!0}))},closest:function(t,e){var n,o=0,i=this.length,s=[],r="string"!=typeof t&&w(t);if(!k.test(t))for(;o<i;o++)for(n=this[o];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(r?r.index(n)>-1:1===n.nodeType&&w.find.matchesSelector(n,t))){s.push(n);break}return this.pushStack(s.length>1?w.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?a.call(w(t),this[0]):a.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(w.uniqueSort(w.merge(this.get(),w(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),w.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return S(t,"parentNode")},parentsUntil:function(t,e,n){return S(t,"parentNode",n)},next:function(t){return N(t,"nextSibling")},prev:function(t){return N(t,"previousSibling")},nextAll:function(t){return S(t,"nextSibling")},prevAll:function(t){return S(t,"previousSibling")},nextUntil:function(t,e,n){return S(t,"nextSibling",n)},prevUntil:function(t,e,n){return S(t,"previousSibling",n)},siblings:function(t){return T((t.parentNode||{}).firstChild,t)},children:function(t){return T(t.firstChild)},contents:function(t){return null!=t.contentDocument&&o(t.contentDocument)?t.contentDocument:(A(t,"template")&&(t=t.content||t),w.merge([],t.childNodes))}},(function(t,e){w.fn[t]=function(n,o){var i=w.map(this,e,n);return"Until"!==t.slice(-5)&&(o=n),o&&"string"==typeof o&&(i=w.filter(o,i)),this.length>1&&(I[t]||w.uniqueSort(i),O.test(t)&&i.reverse()),this.pushStack(i)}}));var M=/[^\x20\t\r\n\f]+/g;function R(t){return t}function L(t){throw t}function F(t,e,n,o){var i;try{t&&h(i=t.promise)?i.call(t).done(e).fail(n):t&&h(i=t.then)?i.call(t,e,n):e.apply(void 0,[t].slice(o))}catch(t){n.apply(void 0,[t])}}w.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return w.each(t.match(M)||[],(function(t,n){e[n]=!0})),e}(t):w.extend({},t);var e,n,o,i,s=[],r=[],a=-1,l=function(){for(i=i||t.once,o=e=!0;r.length;a=-1)for(n=r.shift();++a<s.length;)!1===s[a].apply(n[0],n[1])&&t.stopOnFalse&&(a=s.length,n=!1);t.memory||(n=!1),e=!1,i&&(s=n?[]:"")},c={add:function(){return s&&(n&&!e&&(a=s.length-1,r.push(n)),function e(n){w.each(n,(function(n,o){h(o)?t.unique&&c.has(o)||s.push(o):o&&o.length&&"string"!==b(o)&&e(o)}))}(arguments),n&&!e&&l()),this},remove:function(){return w.each(arguments,(function(t,e){for(var n;(n=w.inArray(e,s,n))>-1;)s.splice(n,1),n<=a&&a--})),this},has:function(t){return t?w.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return i=r=[],s=n="",this},disabled:function(){return!s},lock:function(){return i=r=[],n||e||(s=n=""),this},locked:function(){return!!i},fireWith:function(t,n){return i||(n=[t,(n=n||[]).slice?n.slice():n],r.push(n),e||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!o}};return c},w.extend({Deferred:function(e){var n=[["notify","progress",w.Callbacks("memory"),w.Callbacks("memory"),2],["resolve","done",w.Callbacks("once memory"),w.Callbacks("once memory"),0,"resolved"],["reject","fail",w.Callbacks("once memory"),w.Callbacks("once memory"),1,"rejected"]],o="pending",i={state:function(){return o},always:function(){return s.done(arguments).fail(arguments),this},catch:function(t){return i.then(null,t)},pipe:function(){var t=arguments;return w.Deferred((function(e){w.each(n,(function(n,o){var i=h(t[o[4]])&&t[o[4]];s[o[1]]((function(){var t=i&&i.apply(this,arguments);t&&h(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[o[0]+"With"](this,i?[t]:arguments)}))})),t=null})).promise()},then:function(e,o,i){var s=0;function r(e,n,o,i){return function(){var a=this,l=arguments,c=function(){var t,c;if(!(e<s)){if((t=o.apply(a,l))===n.promise())throw new TypeError("Thenable self-resolution");c=t&&("object"==typeof t||"function"==typeof t)&&t.then,h(c)?i?c.call(t,r(s,n,R,i),r(s,n,L,i)):(s++,c.call(t,r(s,n,R,i),r(s,n,L,i),r(s,n,R,n.notifyWith))):(o!==R&&(a=void 0,l=[t]),(i||n.resolveWith)(a,l))}},d=i?c:function(){try{c()}catch(t){w.Deferred.exceptionHook&&w.Deferred.exceptionHook(t,d.stackTrace),e+1>=s&&(o!==L&&(a=void 0,l=[t]),n.rejectWith(a,l))}};e?d():(w.Deferred.getStackHook&&(d.stackTrace=w.Deferred.getStackHook()),t.setTimeout(d))}}return w.Deferred((function(t){n[0][3].add(r(0,t,h(i)?i:R,t.notifyWith)),n[1][3].add(r(0,t,h(e)?e:R)),n[2][3].add(r(0,t,h(o)?o:L))})).promise()},promise:function(t){return null!=t?w.extend(t,i):i}},s={};return w.each(n,(function(t,e){var r=e[2],a=e[5];i[e[1]]=r.add,a&&r.add((function(){o=a}),n[3-t][2].disable,n[3-t][3].disable,n[0][2].lock,n[0][3].lock),r.add(e[3].fire),s[e[0]]=function(){return s[e[0]+"With"](this===s?void 0:this,arguments),this},s[e[0]+"With"]=r.fireWith})),i.promise(s),e&&e.call(s,s),s},when:function(t){var e=arguments.length,n=e,o=Array(n),s=i.call(arguments),r=w.Deferred(),a=function(t){return function(n){o[t]=this,s[t]=arguments.length>1?i.call(arguments):n,--e||r.resolveWith(o,s)}};if(e<=1&&(F(t,r.done(a(n)).resolve,r.reject,!e),"pending"===r.state()||h(s[n]&&s[n].then)))return r.then();for(;n--;)F(s[n],a(n),r.reject);return r.promise()}});var j=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;w.Deferred.exceptionHook=function(e,n){t.console&&t.console.warn&&e&&j.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,n)},w.readyException=function(e){t.setTimeout((function(){throw e}))};var B=w.Deferred();function H(){m.removeEventListener("DOMContentLoaded",H),t.removeEventListener("load",H),w.ready()}w.fn.ready=function(t){return B.then(t).catch((function(t){w.readyException(t)})),this},w.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--w.readyWait:w.isReady)||(w.isReady=!0,!0!==t&&--w.readyWait>0||B.resolveWith(m,[w]))}}),w.ready.then=B.then,"complete"===m.readyState||"loading"!==m.readyState&&!m.documentElement.doScroll?t.setTimeout(w.ready):(m.addEventListener("DOMContentLoaded",H),t.addEventListener("load",H));var q=function(t,e,n,o,i,s,r){var a=0,l=t.length,c=null==n;if("object"===b(n))for(a in i=!0,n)q(t,e,a,n[a],!0,s,r);else if(void 0!==o&&(i=!0,h(o)||(r=!0),c&&(r?(e.call(t,o),e=null):(c=e,e=function(t,e,n){return c.call(w(t),n)})),e))for(;a<l;a++)e(t[a],n,r?o:o.call(t[a],a,e(t[a],n)));return i?t:c?e.call(t):l?e(t[0],n):s},z=/^-ms-/,_=/-([a-z])/g;function W(t,e){return e.toUpperCase()}function U(t){return t.replace(z,"ms-").replace(_,W)}var X=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function Y(){this.expando=w.expando+Y.uid++}Y.uid=1,Y.prototype={cache:function(t){var e=t[this.expando];return e||(e={},X(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var o,i=this.cache(t);if("string"==typeof e)i[U(e)]=n;else for(o in e)i[U(o)]=e[o];return i},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][U(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,o=t[this.expando];if(void 0!==o){if(void 0!==e){n=(e=Array.isArray(e)?e.map(U):(e=U(e))in o?[e]:e.match(M)||[]).length;for(;n--;)delete o[e[n]]}(void 0===e||w.isEmptyObject(o))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!w.isEmptyObject(e)}};var G=new Y,V=new Y,K=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Q=/[A-Z]/g;function Z(t,e,n){var o;if(void 0===n&&1===t.nodeType)if(o="data-"+e.replace(Q,"-$&").toLowerCase(),"string"==typeof(n=t.getAttribute(o))){try{n=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:K.test(t)?JSON.parse(t):t)}(n)}catch(t){}V.set(t,e,n)}else n=void 0;return n}w.extend({hasData:function(t){return V.hasData(t)||G.hasData(t)},data:function(t,e,n){return V.access(t,e,n)},removeData:function(t,e){V.remove(t,e)},_data:function(t,e,n){return G.access(t,e,n)},_removeData:function(t,e){G.remove(t,e)}}),w.fn.extend({data:function(t,e){var n,o,i,s=this[0],r=s&&s.attributes;if(void 0===t){if(this.length&&(i=V.get(s),1===s.nodeType&&!G.get(s,"hasDataAttrs"))){for(n=r.length;n--;)r[n]&&0===(o=r[n].name).indexOf("data-")&&(o=U(o.slice(5)),Z(s,o,i[o]));G.set(s,"hasDataAttrs",!0)}return i}return"object"==typeof t?this.each((function(){V.set(this,t)})):q(this,(function(e){var n;if(s&&void 0===e)return void 0!==(n=V.get(s,t))||void 0!==(n=Z(s,t))?n:void 0;this.each((function(){V.set(this,t,e)}))}),null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each((function(){V.remove(this,t)}))}}),w.extend({queue:function(t,e,n){var o;if(t)return e=(e||"fx")+"queue",o=G.get(t,e),n&&(!o||Array.isArray(n)?o=G.access(t,e,w.makeArray(n)):o.push(n)),o||[]},dequeue:function(t,e){e=e||"fx";var n=w.queue(t,e),o=n.length,i=n.shift(),s=w._queueHooks(t,e);"inprogress"===i&&(i=n.shift(),o--),i&&("fx"===e&&n.unshift("inprogress"),delete s.stop,i.call(t,(function(){w.dequeue(t,e)}),s)),!o&&s&&s.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return G.get(t,n)||G.access(t,n,{empty:w.Callbacks("once memory").add((function(){G.remove(t,[e+"queue",n])}))})}}),w.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?w.queue(this[0],t):void 0===e?this:this.each((function(){var n=w.queue(this,t,e);w._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&w.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){w.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,o=1,i=w.Deferred(),s=this,r=this.length,a=function(){--o||i.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";r--;)(n=G.get(s[r],t+"queueHooks"))&&n.empty&&(o++,n.empty.add(a));return a(),i.promise(e)}});var J=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,tt=new RegExp("^(?:([+-])=|)("+J+")([a-z%]*)$","i"),et=["Top","Right","Bottom","Left"],nt=m.documentElement,ot=function(t){return w.contains(t.ownerDocument,t)},it={composed:!0};nt.getRootNode&&(ot=function(t){return w.contains(t.ownerDocument,t)||t.getRootNode(it)===t.ownerDocument});var st=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&ot(t)&&"none"===w.css(t,"display")};function rt(t,e,n,o){var i,s,r=20,a=o?function(){return o.cur()}:function(){return w.css(t,e,"")},l=a(),c=n&&n[3]||(w.cssNumber[e]?"":"px"),d=t.nodeType&&(w.cssNumber[e]||"px"!==c&&+l)&&tt.exec(w.css(t,e));if(d&&d[3]!==c){for(l/=2,c=c||d[3],d=+l||1;r--;)w.style(t,e,d+c),(1-s)*(1-(s=a()/l||.5))<=0&&(r=0),d/=s;d*=2,w.style(t,e,d+c),n=n||[]}return n&&(d=+d||+l||0,i=n[1]?d+(n[1]+1)*n[2]:+n[2],o&&(o.unit=c,o.start=d,o.end=i)),i}var at={};function lt(t){var e,n=t.ownerDocument,o=t.nodeName,i=at[o];return i||(e=n.body.appendChild(n.createElement(o)),i=w.css(e,"display"),e.parentNode.removeChild(e),"none"===i&&(i="block"),at[o]=i,i)}function ct(t,e){for(var n,o,i=[],s=0,r=t.length;s<r;s++)(o=t[s]).style&&(n=o.style.display,e?("none"===n&&(i[s]=G.get(o,"display")||null,i[s]||(o.style.display="")),""===o.style.display&&st(o)&&(i[s]=lt(o))):"none"!==n&&(i[s]="none",G.set(o,"display",n)));for(s=0;s<r;s++)null!=i[s]&&(t[s].style.display=i[s]);return t}w.fn.extend({show:function(){return ct(this,!0)},hide:function(){return ct(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){st(this)?w(this).show():w(this).hide()}))}});var dt,ut,pt=/^(?:checkbox|radio)$/i,ft=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,ht=/^$|^module$|\/(?:java|ecma)script/i;dt=m.createDocumentFragment().appendChild(m.createElement("div")),(ut=m.createElement("input")).setAttribute("type","radio"),ut.setAttribute("checked","checked"),ut.setAttribute("name","t"),dt.appendChild(ut),f.checkClone=dt.cloneNode(!0).cloneNode(!0).lastChild.checked,dt.innerHTML="<textarea>x</textarea>",f.noCloneChecked=!!dt.cloneNode(!0).lastChild.defaultValue,dt.innerHTML="<option></option>",f.option=!!dt.lastChild;var gt={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function mt(t,e){var n;return n=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&A(t,e)?w.merge([t],n):n}function yt(t,e){for(var n=0,o=t.length;n<o;n++)G.set(t[n],"globalEval",!e||G.get(e[n],"globalEval"))}gt.tbody=gt.tfoot=gt.colgroup=gt.caption=gt.thead,gt.th=gt.td,f.option||(gt.optgroup=gt.option=[1,"<select multiple='multiple'>","</select>"]);var vt=/<|&#?\w+;/;function bt(t,e,n,o,i){for(var s,r,a,l,c,d,u=e.createDocumentFragment(),p=[],f=0,h=t.length;f<h;f++)if((s=t[f])||0===s)if("object"===b(s))w.merge(p,s.nodeType?[s]:s);else if(vt.test(s)){for(r=r||u.appendChild(e.createElement("div")),a=(ft.exec(s)||["",""])[1].toLowerCase(),l=gt[a]||gt._default,r.innerHTML=l[1]+w.htmlPrefilter(s)+l[2],d=l[0];d--;)r=r.lastChild;w.merge(p,r.childNodes),(r=u.firstChild).textContent=""}else p.push(e.createTextNode(s));for(u.textContent="",f=0;s=p[f++];)if(o&&w.inArray(s,o)>-1)i&&i.push(s);else if(c=ot(s),r=mt(u.appendChild(s),"script"),c&&yt(r),n)for(d=0;s=r[d++];)ht.test(s.type||"")&&n.push(s);return u}var wt=/^([^.]*)(?:\.(.+)|)/;function xt(){return!0}function Ct(){return!1}function St(t,e){return t===function(){try{return m.activeElement}catch(t){}}()==("focus"===e)}function Tt(t,e,n,o,i,s){var r,a;if("object"==typeof e){for(a in"string"!=typeof n&&(o=o||n,n=void 0),e)Tt(t,a,n,o,e[a],s);return t}if(null==o&&null==i?(i=n,o=n=void 0):null==i&&("string"==typeof n?(i=o,o=void 0):(i=o,o=n,n=void 0)),!1===i)i=Ct;else if(!i)return t;return 1===s&&(r=i,(i=function(t){return w().off(t),r.apply(this,arguments)}).guid=r.guid||(r.guid=w.guid++)),t.each((function(){w.event.add(this,e,i,o,n)}))}function kt(t,e,n){n?(G.set(t,e,!1),w.event.add(t,e,{namespace:!1,handler:function(t){var o,s,r=G.get(this,e);if(1&t.isTrigger&&this[e]){if(r.length)(w.event.special[e]||{}).delegateType&&t.stopPropagation();else if(r=i.call(arguments),G.set(this,e,r),o=n(this,e),this[e](),r!==(s=G.get(this,e))||o?G.set(this,e,!1):s={},r!==s)return t.stopImmediatePropagation(),t.preventDefault(),s&&s.value}else r.length&&(G.set(this,e,{value:w.event.trigger(w.extend(r[0],w.Event.prototype),r.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===G.get(t,e)&&w.event.add(t,e,xt)}w.event={global:{},add:function(t,e,n,o,i){var s,r,a,l,c,d,u,p,f,h,g,m=G.get(t);if(X(t))for(n.handler&&(n=(s=n).handler,i=s.selector),i&&w.find.matchesSelector(nt,i),n.guid||(n.guid=w.guid++),(l=m.events)||(l=m.events=Object.create(null)),(r=m.handle)||(r=m.handle=function(e){return void 0!==w&&w.event.triggered!==e.type?w.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(M)||[""]).length;c--;)f=g=(a=wt.exec(e[c])||[])[1],h=(a[2]||"").split(".").sort(),f&&(u=w.event.special[f]||{},f=(i?u.delegateType:u.bindType)||f,u=w.event.special[f]||{},d=w.extend({type:f,origType:g,data:o,handler:n,guid:n.guid,selector:i,needsContext:i&&w.expr.match.needsContext.test(i),namespace:h.join(".")},s),(p=l[f])||((p=l[f]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,o,h,r)||t.addEventListener&&t.addEventListener(f,r)),u.add&&(u.add.call(t,d),d.handler.guid||(d.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,d):p.push(d),w.event.global[f]=!0)},remove:function(t,e,n,o,i){var s,r,a,l,c,d,u,p,f,h,g,m=G.hasData(t)&&G.get(t);if(m&&(l=m.events)){for(c=(e=(e||"").match(M)||[""]).length;c--;)if(f=g=(a=wt.exec(e[c])||[])[1],h=(a[2]||"").split(".").sort(),f){for(u=w.event.special[f]||{},p=l[f=(o?u.delegateType:u.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=s=p.length;s--;)d=p[s],!i&&g!==d.origType||n&&n.guid!==d.guid||a&&!a.test(d.namespace)||o&&o!==d.selector&&("**"!==o||!d.selector)||(p.splice(s,1),d.selector&&p.delegateCount--,u.remove&&u.remove.call(t,d));r&&!p.length&&(u.teardown&&!1!==u.teardown.call(t,h,m.handle)||w.removeEvent(t,f,m.handle),delete l[f])}else for(f in l)w.event.remove(t,f+e[c],n,o,!0);w.isEmptyObject(l)&&G.remove(t,"handle events")}},dispatch:function(t){var e,n,o,i,s,r,a=new Array(arguments.length),l=w.event.fix(t),c=(G.get(this,"events")||Object.create(null))[l.type]||[],d=w.event.special[l.type]||{};for(a[0]=l,e=1;e<arguments.length;e++)a[e]=arguments[e];if(l.delegateTarget=this,!d.preDispatch||!1!==d.preDispatch.call(this,l)){for(r=w.event.handlers.call(this,l,c),e=0;(i=r[e++])&&!l.isPropagationStopped();)for(l.currentTarget=i.elem,n=0;(s=i.handlers[n++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==s.namespace&&!l.rnamespace.test(s.namespace)||(l.handleObj=s,l.data=s.data,void 0!==(o=((w.event.special[s.origType]||{}).handle||s.handler).apply(i.elem,a))&&!1===(l.result=o)&&(l.preventDefault(),l.stopPropagation()));return d.postDispatch&&d.postDispatch.call(this,l),l.result}},handlers:function(t,e){var n,o,i,s,r,a=[],l=e.delegateCount,c=t.target;if(l&&c.nodeType&&!("click"===t.type&&t.button>=1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(s=[],r={},n=0;n<l;n++)void 0===r[i=(o=e[n]).selector+" "]&&(r[i]=o.needsContext?w(i,this).index(c)>-1:w.find(i,this,null,[c]).length),r[i]&&s.push(o);s.length&&a.push({elem:c,handlers:s})}return c=this,l<e.length&&a.push({elem:c,handlers:e.slice(l)}),a},addProp:function(t,e){Object.defineProperty(w.Event.prototype,t,{enumerable:!0,configurable:!0,get:h(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[w.expando]?t:new w.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return pt.test(e.type)&&e.click&&A(e,"input")&&kt(e,"click",xt),!1},trigger:function(t){var e=this||t;return pt.test(e.type)&&e.click&&A(e,"input")&&kt(e,"click"),!0},_default:function(t){var e=t.target;return pt.test(e.type)&&e.click&&A(e,"input")&&G.get(e,"click")||A(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},w.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},w.Event=function(t,e){if(!(this instanceof w.Event))return new w.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?xt:Ct,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&w.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[w.expando]=!0},w.Event.prototype={constructor:w.Event,isDefaultPrevented:Ct,isPropagationStopped:Ct,isImmediatePropagationStopped:Ct,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=xt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=xt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=xt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},w.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},w.event.addProp),w.each({focus:"focusin",blur:"focusout"},(function(t,e){w.event.special[t]={setup:function(){return kt(this,t,St),!1},trigger:function(){return kt(this,t),!0},_default:function(){return!0},delegateType:e}})),w.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){w.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,o=this,i=t.relatedTarget,s=t.handleObj;return i&&(i===o||w.contains(o,i))||(t.type=s.origType,n=s.handler.apply(this,arguments),t.type=e),n}}})),w.fn.extend({on:function(t,e,n,o){return Tt(this,t,e,n,o)},one:function(t,e,n,o){return Tt(this,t,e,n,o,1)},off:function(t,e,n){var o,i;if(t&&t.preventDefault&&t.handleObj)return o=t.handleObj,w(t.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"==typeof t){for(i in t)this.off(i,e,t[i]);return this}return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=Ct),this.each((function(){w.event.remove(this,t,n,e)}))}});var At=/<script|<style|<link/i,Et=/checked\s*(?:[^=]|=\s*.checked.)/i,$t=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Dt(t,e){return A(t,"table")&&A(11!==e.nodeType?e:e.firstChild,"tr")&&w(t).children("tbody")[0]||t}function Pt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Ot(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function It(t,e){var n,o,i,s,r,a;if(1===e.nodeType){if(G.hasData(t)&&(a=G.get(t).events))for(i in G.remove(e,"handle events"),a)for(n=0,o=a[i].length;n<o;n++)w.event.add(e,i,a[i][n]);V.hasData(t)&&(s=V.access(t),r=w.extend({},s),V.set(e,r))}}function Nt(t,e){var n=e.nodeName.toLowerCase();"input"===n&&pt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function Mt(t,e,n,o){e=s(e);var i,r,a,l,c,d,u=0,p=t.length,g=p-1,m=e[0],y=h(m);if(y||p>1&&"string"==typeof m&&!f.checkClone&&Et.test(m))return t.each((function(i){var s=t.eq(i);y&&(e[0]=m.call(this,i,s.html())),Mt(s,e,n,o)}));if(p&&(r=(i=bt(e,t[0].ownerDocument,!1,t,o)).firstChild,1===i.childNodes.length&&(i=r),r||o)){for(l=(a=w.map(mt(i,"script"),Pt)).length;u<p;u++)c=i,u!==g&&(c=w.clone(c,!0,!0),l&&w.merge(a,mt(c,"script"))),n.call(t[u],c,u);if(l)for(d=a[a.length-1].ownerDocument,w.map(a,Ot),u=0;u<l;u++)c=a[u],ht.test(c.type||"")&&!G.access(c,"globalEval")&&w.contains(d,c)&&(c.src&&"module"!==(c.type||"").toLowerCase()?w._evalUrl&&!c.noModule&&w._evalUrl(c.src,{nonce:c.nonce||c.getAttribute("nonce")},d):v(c.textContent.replace($t,""),c,d))}return t}function Rt(t,e,n){for(var o,i=e?w.filter(e,t):t,s=0;null!=(o=i[s]);s++)n||1!==o.nodeType||w.cleanData(mt(o)),o.parentNode&&(n&&ot(o)&&yt(mt(o,"script")),o.parentNode.removeChild(o));return t}w.extend({htmlPrefilter:function(t){return t},clone:function(t,e,n){var o,i,s,r,a=t.cloneNode(!0),l=ot(t);if(!(f.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||w.isXMLDoc(t)))for(r=mt(a),o=0,i=(s=mt(t)).length;o<i;o++)Nt(s[o],r[o]);if(e)if(n)for(s=s||mt(t),r=r||mt(a),o=0,i=s.length;o<i;o++)It(s[o],r[o]);else It(t,a);return(r=mt(a,"script")).length>0&&yt(r,!l&&mt(t,"script")),a},cleanData:function(t){for(var e,n,o,i=w.event.special,s=0;void 0!==(n=t[s]);s++)if(X(n)){if(e=n[G.expando]){if(e.events)for(o in e.events)i[o]?w.event.remove(n,o):w.removeEvent(n,o,e.handle);n[G.expando]=void 0}n[V.expando]&&(n[V.expando]=void 0)}}}),w.fn.extend({detach:function(t){return Rt(this,t,!0)},remove:function(t){return Rt(this,t)},text:function(t){return q(this,(function(t){return void 0===t?w.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Mt(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Dt(this,t).appendChild(t)}))},prepend:function(){return Mt(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Dt(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Mt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Mt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(w.cleanData(mt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return w.clone(this,t,e)}))},html:function(t){return q(this,(function(t){var e=this[0]||{},n=0,o=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!At.test(t)&&!gt[(ft.exec(t)||["",""])[1].toLowerCase()]){t=w.htmlPrefilter(t);try{for(;n<o;n++)1===(e=this[n]||{}).nodeType&&(w.cleanData(mt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Mt(this,arguments,(function(e){var n=this.parentNode;w.inArray(this,t)<0&&(w.cleanData(mt(this)),n&&n.replaceChild(e,this))}),t)}}),w.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){w.fn[t]=function(t){for(var n,o=[],i=w(t),s=i.length-1,a=0;a<=s;a++)n=a===s?this:this.clone(!0),w(i[a])[e](n),r.apply(o,n.get());return this.pushStack(o)}}));var Lt=new RegExp("^("+J+")(?!px)[a-z%]+$","i"),Ft=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)},jt=function(t,e,n){var o,i,s={};for(i in e)s[i]=t.style[i],t.style[i]=e[i];for(i in o=n.call(t),e)t.style[i]=s[i];return o},Bt=new RegExp(et.join("|"),"i");function Ht(t,e,n){var o,i,s,r,a=t.style;return(n=n||Ft(t))&&(""!==(r=n.getPropertyValue(e)||n[e])||ot(t)||(r=w.style(t,e)),!f.pixelBoxStyles()&&Lt.test(r)&&Bt.test(e)&&(o=a.width,i=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=n.width,a.width=o,a.minWidth=i,a.maxWidth=s)),void 0!==r?r+"":r}function qt(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function e(){if(d){c.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",d.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",nt.appendChild(c).appendChild(d);var e=t.getComputedStyle(d);o="1%"!==e.top,l=12===n(e.marginLeft),d.style.right="60%",r=36===n(e.right),i=36===n(e.width),d.style.position="absolute",s=12===n(d.offsetWidth/3),nt.removeChild(c),d=null}}function n(t){return Math.round(parseFloat(t))}var o,i,s,r,a,l,c=m.createElement("div"),d=m.createElement("div");d.style&&(d.style.backgroundClip="content-box",d.cloneNode(!0).style.backgroundClip="",f.clearCloneStyle="content-box"===d.style.backgroundClip,w.extend(f,{boxSizingReliable:function(){return e(),i},pixelBoxStyles:function(){return e(),r},pixelPosition:function(){return e(),o},reliableMarginLeft:function(){return e(),l},scrollboxSize:function(){return e(),s},reliableTrDimensions:function(){var e,n,o,i;return null==a&&(e=m.createElement("table"),n=m.createElement("tr"),o=m.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",n.style.cssText="border:1px solid",n.style.height="1px",o.style.height="9px",o.style.display="block",nt.appendChild(e).appendChild(n).appendChild(o),i=t.getComputedStyle(n),a=parseInt(i.height,10)+parseInt(i.borderTopWidth,10)+parseInt(i.borderBottomWidth,10)===n.offsetHeight,nt.removeChild(e)),a}}))}();var zt=["Webkit","Moz","ms"],_t=m.createElement("div").style,Wt={};function Ut(t){var e=w.cssProps[t]||Wt[t];return e||(t in _t?t:Wt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),n=zt.length;n--;)if((t=zt[n]+e)in _t)return t}(t)||t)}var Xt=/^(none|table(?!-c[ea]).+)/,Yt=/^--/,Gt={position:"absolute",visibility:"hidden",display:"block"},Vt={letterSpacing:"0",fontWeight:"400"};function Kt(t,e,n){var o=tt.exec(e);return o?Math.max(0,o[2]-(n||0))+(o[3]||"px"):e}function Qt(t,e,n,o,i,s){var r="width"===e?1:0,a=0,l=0;if(n===(o?"border":"content"))return 0;for(;r<4;r+=2)"margin"===n&&(l+=w.css(t,n+et[r],!0,i)),o?("content"===n&&(l-=w.css(t,"padding"+et[r],!0,i)),"margin"!==n&&(l-=w.css(t,"border"+et[r]+"Width",!0,i))):(l+=w.css(t,"padding"+et[r],!0,i),"padding"!==n?l+=w.css(t,"border"+et[r]+"Width",!0,i):a+=w.css(t,"border"+et[r]+"Width",!0,i));return!o&&s>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-s-l-a-.5))||0),l}function Zt(t,e,n){var o=Ft(t),i=(!f.boxSizingReliable()||n)&&"border-box"===w.css(t,"boxSizing",!1,o),s=i,r=Ht(t,e,o),a="offset"+e[0].toUpperCase()+e.slice(1);if(Lt.test(r)){if(!n)return r;r="auto"}return(!f.boxSizingReliable()&&i||!f.reliableTrDimensions()&&A(t,"tr")||"auto"===r||!parseFloat(r)&&"inline"===w.css(t,"display",!1,o))&&t.getClientRects().length&&(i="border-box"===w.css(t,"boxSizing",!1,o),(s=a in t)&&(r=t[a])),(r=parseFloat(r)||0)+Qt(t,e,n||(i?"border":"content"),s,o,r)+"px"}function Jt(t,e,n,o,i){return new Jt.prototype.init(t,e,n,o,i)}w.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=Ht(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,n,o){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var i,s,r,a=U(e),l=Yt.test(e),c=t.style;if(l||(e=Ut(a)),r=w.cssHooks[e]||w.cssHooks[a],void 0===n)return r&&"get"in r&&void 0!==(i=r.get(t,!1,o))?i:c[e];"string"===(s=typeof n)&&(i=tt.exec(n))&&i[1]&&(n=rt(t,e,i),s="number"),null!=n&&n==n&&("number"!==s||l||(n+=i&&i[3]||(w.cssNumber[a]?"":"px")),f.clearCloneStyle||""!==n||0!==e.indexOf("background")||(c[e]="inherit"),r&&"set"in r&&void 0===(n=r.set(t,n,o))||(l?c.setProperty(e,n):c[e]=n))}},css:function(t,e,n,o){var i,s,r,a=U(e);return Yt.test(e)||(e=Ut(a)),(r=w.cssHooks[e]||w.cssHooks[a])&&"get"in r&&(i=r.get(t,!0,n)),void 0===i&&(i=Ht(t,e,o)),"normal"===i&&e in Vt&&(i=Vt[e]),""===n||n?(s=parseFloat(i),!0===n||isFinite(s)?s||0:i):i}}),w.each(["height","width"],(function(t,e){w.cssHooks[e]={get:function(t,n,o){if(n)return!Xt.test(w.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?Zt(t,e,o):jt(t,Gt,(function(){return Zt(t,e,o)}))},set:function(t,n,o){var i,s=Ft(t),r=!f.scrollboxSize()&&"absolute"===s.position,a=(r||o)&&"border-box"===w.css(t,"boxSizing",!1,s),l=o?Qt(t,e,o,a,s):0;return a&&r&&(l-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(s[e])-Qt(t,e,"border",!1,s)-.5)),l&&(i=tt.exec(n))&&"px"!==(i[3]||"px")&&(t.style[e]=n,n=w.css(t,e)),Kt(0,n,l)}}})),w.cssHooks.marginLeft=qt(f.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Ht(t,"marginLeft"))||t.getBoundingClientRect().left-jt(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),w.each({margin:"",padding:"",border:"Width"},(function(t,e){w.cssHooks[t+e]={expand:function(n){for(var o=0,i={},s="string"==typeof n?n.split(" "):[n];o<4;o++)i[t+et[o]+e]=s[o]||s[o-2]||s[0];return i}},"margin"!==t&&(w.cssHooks[t+e].set=Kt)})),w.fn.extend({css:function(t,e){return q(this,(function(t,e,n){var o,i,s={},r=0;if(Array.isArray(e)){for(o=Ft(t),i=e.length;r<i;r++)s[e[r]]=w.css(t,e[r],!1,o);return s}return void 0!==n?w.style(t,e,n):w.css(t,e)}),t,e,arguments.length>1)}}),w.Tween=Jt,Jt.prototype={constructor:Jt,init:function(t,e,n,o,i,s){this.elem=t,this.prop=n,this.easing=i||w.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=o,this.unit=s||(w.cssNumber[n]?"":"px")},cur:function(){var t=Jt.propHooks[this.prop];return t&&t.get?t.get(this):Jt.propHooks._default.get(this)},run:function(t){var e,n=Jt.propHooks[this.prop];return this.options.duration?this.pos=e=w.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Jt.propHooks._default.set(this),this}},Jt.prototype.init.prototype=Jt.prototype,Jt.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=w.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){w.fx.step[t.prop]?w.fx.step[t.prop](t):1!==t.elem.nodeType||!w.cssHooks[t.prop]&&null==t.elem.style[Ut(t.prop)]?t.elem[t.prop]=t.now:w.style(t.elem,t.prop,t.now+t.unit)}}},Jt.propHooks.scrollTop=Jt.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},w.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},w.fx=Jt.prototype.init,w.fx.step={};var te,ee,ne=/^(?:toggle|show|hide)$/,oe=/queueHooks$/;function ie(){ee&&(!1===m.hidden&&t.requestAnimationFrame?t.requestAnimationFrame(ie):t.setTimeout(ie,w.fx.interval),w.fx.tick())}function se(){return t.setTimeout((function(){te=void 0})),te=Date.now()}function re(t,e){var n,o=0,i={height:t};for(e=e?1:0;o<4;o+=2-e)i["margin"+(n=et[o])]=i["padding"+n]=t;return e&&(i.opacity=i.width=t),i}function ae(t,e,n){for(var o,i=(le.tweeners[e]||[]).concat(le.tweeners["*"]),s=0,r=i.length;s<r;s++)if(o=i[s].call(n,e,t))return o}function le(t,e,n){var o,i,s=0,r=le.prefilters.length,a=w.Deferred().always((function(){delete l.elem})),l=function(){if(i)return!1;for(var e=te||se(),n=Math.max(0,c.startTime+c.duration-e),o=1-(n/c.duration||0),s=0,r=c.tweens.length;s<r;s++)c.tweens[s].run(o);return a.notifyWith(t,[c,o,n]),o<1&&r?n:(r||a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c]),!1)},c=a.promise({elem:t,props:w.extend({},e),opts:w.extend(!0,{specialEasing:{},easing:w.easing._default},n),originalProperties:e,originalOptions:n,startTime:te||se(),duration:n.duration,tweens:[],createTween:function(e,n){var o=w.Tween(t,c.opts,e,n,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(o),o},stop:function(e){var n=0,o=e?c.tweens.length:0;if(i)return this;for(i=!0;n<o;n++)c.tweens[n].run(1);return e?(a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c,e])):a.rejectWith(t,[c,e]),this}}),d=c.props;for(!function(t,e){var n,o,i,s,r;for(n in t)if(i=e[o=U(n)],s=t[n],Array.isArray(s)&&(i=s[1],s=t[n]=s[0]),n!==o&&(t[o]=s,delete t[n]),(r=w.cssHooks[o])&&"expand"in r)for(n in s=r.expand(s),delete t[o],s)n in t||(t[n]=s[n],e[n]=i);else e[o]=i}(d,c.opts.specialEasing);s<r;s++)if(o=le.prefilters[s].call(c,t,d,c.opts))return h(o.stop)&&(w._queueHooks(c.elem,c.opts.queue).stop=o.stop.bind(o)),o;return w.map(d,ae,c),h(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),w.fx.timer(w.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c}w.Animation=w.extend(le,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return rt(n.elem,t,tt.exec(e),n),n}]},tweener:function(t,e){h(t)?(e=t,t=["*"]):t=t.match(M);for(var n,o=0,i=t.length;o<i;o++)n=t[o],le.tweeners[n]=le.tweeners[n]||[],le.tweeners[n].unshift(e)},prefilters:[function(t,e,n){var o,i,s,r,a,l,c,d,u="width"in e||"height"in e,p=this,f={},h=t.style,g=t.nodeType&&st(t),m=G.get(t,"fxshow");for(o in n.queue||(null==(r=w._queueHooks(t,"fx")).unqueued&&(r.unqueued=0,a=r.empty.fire,r.empty.fire=function(){r.unqueued||a()}),r.unqueued++,p.always((function(){p.always((function(){r.unqueued--,w.queue(t,"fx").length||r.empty.fire()}))}))),e)if(i=e[o],ne.test(i)){if(delete e[o],s=s||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!m||void 0===m[o])continue;g=!0}f[o]=m&&m[o]||w.style(t,o)}if((l=!w.isEmptyObject(e))||!w.isEmptyObject(f))for(o in u&&1===t.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(c=m&&m.display)&&(c=G.get(t,"display")),"none"===(d=w.css(t,"display"))&&(c?d=c:(ct([t],!0),c=t.style.display||c,d=w.css(t,"display"),ct([t]))),("inline"===d||"inline-block"===d&&null!=c)&&"none"===w.css(t,"float")&&(l||(p.done((function(){h.display=c})),null==c&&(d=h.display,c="none"===d?"":d)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always((function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]}))),l=!1,f)l||(m?"hidden"in m&&(g=m.hidden):m=G.access(t,"fxshow",{display:c}),s&&(m.hidden=!g),g&&ct([t],!0),p.done((function(){for(o in g||ct([t]),G.remove(t,"fxshow"),f)w.style(t,o,f[o])}))),l=ae(g?m[o]:0,o,p),o in m||(m[o]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?le.prefilters.unshift(t):le.prefilters.push(t)}}),w.speed=function(t,e,n){var o=t&&"object"==typeof t?w.extend({},t):{complete:n||!n&&e||h(t)&&t,duration:t,easing:n&&e||e&&!h(e)&&e};return w.fx.off?o.duration=0:"number"!=typeof o.duration&&(o.duration in w.fx.speeds?o.duration=w.fx.speeds[o.duration]:o.duration=w.fx.speeds._default),null!=o.queue&&!0!==o.queue||(o.queue="fx"),o.old=o.complete,o.complete=function(){h(o.old)&&o.old.call(this),o.queue&&w.dequeue(this,o.queue)},o},w.fn.extend({fadeTo:function(t,e,n,o){return this.filter(st).css("opacity",0).show().end().animate({opacity:e},t,n,o)},animate:function(t,e,n,o){var i=w.isEmptyObject(t),s=w.speed(e,n,o),r=function(){var e=le(this,w.extend({},t),s);(i||G.get(this,"finish"))&&e.stop(!0)};return r.finish=r,i||!1===s.queue?this.each(r):this.queue(s.queue,r)},stop:function(t,e,n){var o=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&this.queue(t||"fx",[]),this.each((function(){var e=!0,i=null!=t&&t+"queueHooks",s=w.timers,r=G.get(this);if(i)r[i]&&r[i].stop&&o(r[i]);else for(i in r)r[i]&&r[i].stop&&oe.test(i)&&o(r[i]);for(i=s.length;i--;)s[i].elem!==this||null!=t&&s[i].queue!==t||(s[i].anim.stop(n),e=!1,s.splice(i,1));!e&&n||w.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,n=G.get(this),o=n[t+"queue"],i=n[t+"queueHooks"],s=w.timers,r=o?o.length:0;for(n.finish=!0,w.queue(this,t,[]),i&&i.stop&&i.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===t&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<r;e++)o[e]&&o[e].finish&&o[e].finish.call(this);delete n.finish}))}}),w.each(["toggle","show","hide"],(function(t,e){var n=w.fn[e];w.fn[e]=function(t,o,i){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(re(e,!0),t,o,i)}})),w.each({slideDown:re("show"),slideUp:re("hide"),slideToggle:re("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){w.fn[t]=function(t,n,o){return this.animate(e,t,n,o)}})),w.timers=[],w.fx.tick=function(){var t,e=0,n=w.timers;for(te=Date.now();e<n.length;e++)(t=n[e])()||n[e]!==t||n.splice(e--,1);n.length||w.fx.stop(),te=void 0},w.fx.timer=function(t){w.timers.push(t),w.fx.start()},w.fx.interval=13,w.fx.start=function(){ee||(ee=!0,ie())},w.fx.stop=function(){ee=null},w.fx.speeds={slow:600,fast:200,_default:400},w.fn.delay=function(e,n){return e=w.fx&&w.fx.speeds[e]||e,n=n||"fx",this.queue(n,(function(n,o){var i=t.setTimeout(n,e);o.stop=function(){t.clearTimeout(i)}}))},function(){var t=m.createElement("input"),e=m.createElement("select").appendChild(m.createElement("option"));t.type="checkbox",f.checkOn=""!==t.value,f.optSelected=e.selected,(t=m.createElement("input")).value="t",t.type="radio",f.radioValue="t"===t.value}();var ce,de=w.expr.attrHandle;w.fn.extend({attr:function(t,e){return q(this,w.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each((function(){w.removeAttr(this,t)}))}}),w.extend({attr:function(t,e,n){var o,i,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===t.getAttribute?w.prop(t,e,n):(1===s&&w.isXMLDoc(t)||(i=w.attrHooks[e.toLowerCase()]||(w.expr.match.bool.test(e)?ce:void 0)),void 0!==n?null===n?void w.removeAttr(t,e):i&&"set"in i&&void 0!==(o=i.set(t,n,e))?o:(t.setAttribute(e,n+""),n):i&&"get"in i&&null!==(o=i.get(t,e))?o:null==(o=w.find.attr(t,e))?void 0:o)},attrHooks:{type:{set:function(t,e){if(!f.radioValue&&"radio"===e&&A(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,o=0,i=e&&e.match(M);if(i&&1===t.nodeType)for(;n=i[o++];)t.removeAttribute(n)}}),ce={set:function(t,e,n){return!1===e?w.removeAttr(t,n):t.setAttribute(n,n),n}},w.each(w.expr.match.bool.source.match(/\w+/g),(function(t,e){var n=de[e]||w.find.attr;de[e]=function(t,e,o){var i,s,r=e.toLowerCase();return o||(s=de[r],de[r]=i,i=null!=n(t,e,o)?r:null,de[r]=s),i}}));var ue=/^(?:input|select|textarea|button)$/i,pe=/^(?:a|area)$/i;function fe(t){return(t.match(M)||[]).join(" ")}function he(t){return t.getAttribute&&t.getAttribute("class")||""}function ge(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(M)||[]}w.fn.extend({prop:function(t,e){return q(this,w.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each((function(){delete this[w.propFix[t]||t]}))}}),w.extend({prop:function(t,e,n){var o,i,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&w.isXMLDoc(t)||(e=w.propFix[e]||e,i=w.propHooks[e]),void 0!==n?i&&"set"in i&&void 0!==(o=i.set(t,n,e))?o:t[e]=n:i&&"get"in i&&null!==(o=i.get(t,e))?o:t[e]},propHooks:{tabIndex:{get:function(t){var e=w.find.attr(t,"tabindex");return e?parseInt(e,10):ue.test(t.nodeName)||pe.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),f.optSelected||(w.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),w.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){w.propFix[this.toLowerCase()]=this})),w.fn.extend({addClass:function(t){var e,n,o,i,s,r,a,l=0;if(h(t))return this.each((function(e){w(this).addClass(t.call(this,e,he(this)))}));if((e=ge(t)).length)for(;n=this[l++];)if(i=he(n),o=1===n.nodeType&&" "+fe(i)+" "){for(r=0;s=e[r++];)o.indexOf(" "+s+" ")<0&&(o+=s+" ");i!==(a=fe(o))&&n.setAttribute("class",a)}return this},removeClass:function(t){var e,n,o,i,s,r,a,l=0;if(h(t))return this.each((function(e){w(this).removeClass(t.call(this,e,he(this)))}));if(!arguments.length)return this.attr("class","");if((e=ge(t)).length)for(;n=this[l++];)if(i=he(n),o=1===n.nodeType&&" "+fe(i)+" "){for(r=0;s=e[r++];)for(;o.indexOf(" "+s+" ")>-1;)o=o.replace(" "+s+" "," ");i!==(a=fe(o))&&n.setAttribute("class",a)}return this},toggleClass:function(t,e){var n=typeof t,o="string"===n||Array.isArray(t);return"boolean"==typeof e&&o?e?this.addClass(t):this.removeClass(t):h(t)?this.each((function(n){w(this).toggleClass(t.call(this,n,he(this),e),e)})):this.each((function(){var e,i,s,r;if(o)for(i=0,s=w(this),r=ge(t);e=r[i++];)s.hasClass(e)?s.removeClass(e):s.addClass(e);else void 0!==t&&"boolean"!==n||((e=he(this))&&G.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":G.get(this,"__className__")||""))}))},hasClass:function(t){var e,n,o=0;for(e=" "+t+" ";n=this[o++];)if(1===n.nodeType&&(" "+fe(he(n))+" ").indexOf(e)>-1)return!0;return!1}});var me=/\r/g;w.fn.extend({val:function(t){var e,n,o,i=this[0];return arguments.length?(o=h(t),this.each((function(n){var i;1===this.nodeType&&(null==(i=o?t.call(this,n,w(this).val()):t)?i="":"number"==typeof i?i+="":Array.isArray(i)&&(i=w.map(i,(function(t){return null==t?"":t+""}))),(e=w.valHooks[this.type]||w.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,i,"value")||(this.value=i))}))):i?(e=w.valHooks[i.type]||w.valHooks[i.nodeName.toLowerCase()])&&"get"in e&&void 0!==(n=e.get(i,"value"))?n:"string"==typeof(n=i.value)?n.replace(me,""):null==n?"":n:void 0}}),w.extend({valHooks:{option:{get:function(t){var e=w.find.attr(t,"value");return null!=e?e:fe(w.text(t))}},select:{get:function(t){var e,n,o,i=t.options,s=t.selectedIndex,r="select-one"===t.type,a=r?null:[],l=r?s+1:i.length;for(o=s<0?l:r?s:0;o<l;o++)if(((n=i[o]).selected||o===s)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(e=w(n).val(),r)return e;a.push(e)}return a},set:function(t,e){for(var n,o,i=t.options,s=w.makeArray(e),r=i.length;r--;)((o=i[r]).selected=w.inArray(w.valHooks.option.get(o),s)>-1)&&(n=!0);return n||(t.selectedIndex=-1),s}}}}),w.each(["radio","checkbox"],(function(){w.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=w.inArray(w(t).val(),e)>-1}},f.checkOn||(w.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),f.focusin="onfocusin"in t;var ye=/^(?:focusinfocus|focusoutblur)$/,ve=function(t){t.stopPropagation()};w.extend(w.event,{trigger:function(e,n,o,i){var s,r,a,l,c,u,p,f,y=[o||m],v=d.call(e,"type")?e.type:e,b=d.call(e,"namespace")?e.namespace.split("."):[];if(r=f=a=o=o||m,3!==o.nodeType&&8!==o.nodeType&&!ye.test(v+w.event.triggered)&&(v.indexOf(".")>-1&&(b=v.split("."),v=b.shift(),b.sort()),c=v.indexOf(":")<0&&"on"+v,(e=e[w.expando]?e:new w.Event(v,"object"==typeof e&&e)).isTrigger=i?2:3,e.namespace=b.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=o),n=null==n?[e]:w.makeArray(n,[e]),p=w.event.special[v]||{},i||!p.trigger||!1!==p.trigger.apply(o,n))){if(!i&&!p.noBubble&&!g(o)){for(l=p.delegateType||v,ye.test(l+v)||(r=r.parentNode);r;r=r.parentNode)y.push(r),a=r;a===(o.ownerDocument||m)&&y.push(a.defaultView||a.parentWindow||t)}for(s=0;(r=y[s++])&&!e.isPropagationStopped();)f=r,e.type=s>1?l:p.bindType||v,(u=(G.get(r,"events")||Object.create(null))[e.type]&&G.get(r,"handle"))&&u.apply(r,n),(u=c&&r[c])&&u.apply&&X(r)&&(e.result=u.apply(r,n),!1===e.result&&e.preventDefault());return e.type=v,i||e.isDefaultPrevented()||p._default&&!1!==p._default.apply(y.pop(),n)||!X(o)||c&&h(o[v])&&!g(o)&&((a=o[c])&&(o[c]=null),w.event.triggered=v,e.isPropagationStopped()&&f.addEventListener(v,ve),o[v](),e.isPropagationStopped()&&f.removeEventListener(v,ve),w.event.triggered=void 0,a&&(o[c]=a)),e.result}},simulate:function(t,e,n){var o=w.extend(new w.Event,n,{type:t,isSimulated:!0});w.event.trigger(o,null,e)}}),w.fn.extend({trigger:function(t,e){return this.each((function(){w.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var n=this[0];if(n)return w.event.trigger(t,e,n,!0)}}),f.focusin||w.each({focus:"focusin",blur:"focusout"},(function(t,e){var n=function(t){w.event.simulate(e,t.target,w.event.fix(t))};w.event.special[e]={setup:function(){var o=this.ownerDocument||this.document||this,i=G.access(o,e);i||o.addEventListener(t,n,!0),G.access(o,e,(i||0)+1)},teardown:function(){var o=this.ownerDocument||this.document||this,i=G.access(o,e)-1;i?G.access(o,e,i):(o.removeEventListener(t,n,!0),G.remove(o,e))}}}));var be=t.location,we={guid:Date.now()},xe=/\?/;w.parseXML=function(e){var n,o;if(!e||"string"!=typeof e)return null;try{n=(new t.DOMParser).parseFromString(e,"text/xml")}catch(t){}return o=n&&n.getElementsByTagName("parsererror")[0],n&&!o||w.error("Invalid XML: "+(o?w.map(o.childNodes,(function(t){return t.textContent})).join("\n"):e)),n};var Ce=/\[\]$/,Se=/\r?\n/g,Te=/^(?:submit|button|image|reset|file)$/i,ke=/^(?:input|select|textarea|keygen)/i;function Ae(t,e,n,o){var i;if(Array.isArray(e))w.each(e,(function(e,i){n||Ce.test(t)?o(t,i):Ae(t+"["+("object"==typeof i&&null!=i?e:"")+"]",i,n,o)}));else if(n||"object"!==b(e))o(t,e);else for(i in e)Ae(t+"["+i+"]",e[i],n,o)}w.param=function(t,e){var n,o=[],i=function(t,e){var n=h(e)?e():e;o[o.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!w.isPlainObject(t))w.each(t,(function(){i(this.name,this.value)}));else for(n in t)Ae(n,t[n],e,i);return o.join("&")},w.fn.extend({serialize:function(){return w.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=w.prop(this,"elements");return t?w.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!w(this).is(":disabled")&&ke.test(this.nodeName)&&!Te.test(t)&&(this.checked||!pt.test(t))})).map((function(t,e){var n=w(this).val();return null==n?null:Array.isArray(n)?w.map(n,(function(t){return{name:e.name,value:t.replace(Se,"\r\n")}})):{name:e.name,value:n.replace(Se,"\r\n")}})).get()}});var Ee=/%20/g,$e=/#.*$/,De=/([?&])_=[^&]*/,Pe=/^(.*?):[ \t]*([^\r\n]*)$/gm,Oe=/^(?:GET|HEAD)$/,Ie=/^\/\//,Ne={},Me={},Re="*/".concat("*"),Le=m.createElement("a");function Fe(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var o,i=0,s=e.toLowerCase().match(M)||[];if(h(n))for(;o=s[i++];)"+"===o[0]?(o=o.slice(1)||"*",(t[o]=t[o]||[]).unshift(n)):(t[o]=t[o]||[]).push(n)}}function je(t,e,n,o){var i={},s=t===Me;function r(a){var l;return i[a]=!0,w.each(t[a]||[],(function(t,a){var c=a(e,n,o);return"string"!=typeof c||s||i[c]?s?!(l=c):void 0:(e.dataTypes.unshift(c),r(c),!1)})),l}return r(e.dataTypes[0])||!i["*"]&&r("*")}function Be(t,e){var n,o,i=w.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((i[n]?t:o||(o={}))[n]=e[n]);return o&&w.extend(!0,t,o),t}Le.href=be.href,w.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:be.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(be.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Re,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":w.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?Be(Be(t,w.ajaxSettings),e):Be(w.ajaxSettings,t)},ajaxPrefilter:Fe(Ne),ajaxTransport:Fe(Me),ajax:function(e,n){"object"==typeof e&&(n=e,e=void 0),n=n||{};var o,i,s,r,a,l,c,d,u,p,f=w.ajaxSetup({},n),h=f.context||f,g=f.context&&(h.nodeType||h.jquery)?w(h):w.event,y=w.Deferred(),v=w.Callbacks("once memory"),b=f.statusCode||{},x={},C={},S="canceled",T={readyState:0,getResponseHeader:function(t){var e;if(c){if(!r)for(r={};e=Pe.exec(s);)r[e[1].toLowerCase()+" "]=(r[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=r[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return c?s:null},setRequestHeader:function(t,e){return null==c&&(t=C[t.toLowerCase()]=C[t.toLowerCase()]||t,x[t]=e),this},overrideMimeType:function(t){return null==c&&(f.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)T.always(t[T.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||S;return o&&o.abort(e),k(0,e),this}};if(y.promise(T),f.url=((e||f.url||be.href)+"").replace(Ie,be.protocol+"//"),f.type=n.method||n.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(M)||[""],null==f.crossDomain){l=m.createElement("a");try{l.href=f.url,l.href=l.href,f.crossDomain=Le.protocol+"//"+Le.host!=l.protocol+"//"+l.host}catch(t){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=w.param(f.data,f.traditional)),je(Ne,f,n,T),c)return T;for(u in(d=w.event&&f.global)&&0==w.active++&&w.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Oe.test(f.type),i=f.url.replace($e,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(Ee,"+")):(p=f.url.slice(i.length),f.data&&(f.processData||"string"==typeof f.data)&&(i+=(xe.test(i)?"&":"?")+f.data,delete f.data),!1===f.cache&&(i=i.replace(De,"$1"),p=(xe.test(i)?"&":"?")+"_="+we.guid+++p),f.url=i+p),f.ifModified&&(w.lastModified[i]&&T.setRequestHeader("If-Modified-Since",w.lastModified[i]),w.etag[i]&&T.setRequestHeader("If-None-Match",w.etag[i])),(f.data&&f.hasContent&&!1!==f.contentType||n.contentType)&&T.setRequestHeader("Content-Type",f.contentType),T.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Re+"; q=0.01":""):f.accepts["*"]),f.headers)T.setRequestHeader(u,f.headers[u]);if(f.beforeSend&&(!1===f.beforeSend.call(h,T,f)||c))return T.abort();if(S="abort",v.add(f.complete),T.done(f.success),T.fail(f.error),o=je(Me,f,n,T)){if(T.readyState=1,d&&g.trigger("ajaxSend",[T,f]),c)return T;f.async&&f.timeout>0&&(a=t.setTimeout((function(){T.abort("timeout")}),f.timeout));try{c=!1,o.send(x,k)}catch(t){if(c)throw t;k(-1,t)}}else k(-1,"No Transport");function k(e,n,r,l){var u,p,m,x,C,S=n;c||(c=!0,a&&t.clearTimeout(a),o=void 0,s=l||"",T.readyState=e>0?4:0,u=e>=200&&e<300||304===e,r&&(x=function(t,e,n){for(var o,i,s,r,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===o&&(o=t.mimeType||e.getResponseHeader("Content-Type"));if(o)for(i in a)if(a[i]&&a[i].test(o)){l.unshift(i);break}if(l[0]in n)s=l[0];else{for(i in n){if(!l[0]||t.converters[i+" "+l[0]]){s=i;break}r||(r=i)}s=s||r}if(s)return s!==l[0]&&l.unshift(s),n[s]}(f,T,r)),!u&&w.inArray("script",f.dataTypes)>-1&&w.inArray("json",f.dataTypes)<0&&(f.converters["text script"]=function(){}),x=function(t,e,n,o){var i,s,r,a,l,c={},d=t.dataTypes.slice();if(d[1])for(r in t.converters)c[r.toLowerCase()]=t.converters[r];for(s=d.shift();s;)if(t.responseFields[s]&&(n[t.responseFields[s]]=e),!l&&o&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=s,s=d.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(r=c[l+" "+s]||c["* "+s]))for(i in c)if((a=i.split(" "))[1]===s&&(r=c[l+" "+a[0]]||c["* "+a[0]])){!0===r?r=c[i]:!0!==c[i]&&(s=a[0],d.unshift(a[1]));break}if(!0!==r)if(r&&t.throws)e=r(e);else try{e=r(e)}catch(t){return{state:"parsererror",error:r?t:"No conversion from "+l+" to "+s}}}return{state:"success",data:e}}(f,x,T,u),u?(f.ifModified&&((C=T.getResponseHeader("Last-Modified"))&&(w.lastModified[i]=C),(C=T.getResponseHeader("etag"))&&(w.etag[i]=C)),204===e||"HEAD"===f.type?S="nocontent":304===e?S="notmodified":(S=x.state,p=x.data,u=!(m=x.error))):(m=S,!e&&S||(S="error",e<0&&(e=0))),T.status=e,T.statusText=(n||S)+"",u?y.resolveWith(h,[p,S,T]):y.rejectWith(h,[T,S,m]),T.statusCode(b),b=void 0,d&&g.trigger(u?"ajaxSuccess":"ajaxError",[T,f,u?p:m]),v.fireWith(h,[T,S]),d&&(g.trigger("ajaxComplete",[T,f]),--w.active||w.event.trigger("ajaxStop")))}return T},getJSON:function(t,e,n){return w.get(t,e,n,"json")},getScript:function(t,e){return w.get(t,void 0,e,"script")}}),w.each(["get","post"],(function(t,e){w[e]=function(t,n,o,i){return h(n)&&(i=i||o,o=n,n=void 0),w.ajax(w.extend({url:t,type:e,dataType:i,data:n,success:o},w.isPlainObject(t)&&t))}})),w.ajaxPrefilter((function(t){var e;for(e in t.headers)"content-type"===e.toLowerCase()&&(t.contentType=t.headers[e]||"")})),w._evalUrl=function(t,e,n){return w.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){w.globalEval(t,e,n)}})},w.fn.extend({wrapAll:function(t){var e;return this[0]&&(h(t)&&(t=t.call(this[0])),e=w(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return h(t)?this.each((function(e){w(this).wrapInner(t.call(this,e))})):this.each((function(){var e=w(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)}))},wrap:function(t){var e=h(t);return this.each((function(n){w(this).wrapAll(e?t.call(this,n):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){w(this).replaceWith(this.childNodes)})),this}}),w.expr.pseudos.hidden=function(t){return!w.expr.pseudos.visible(t)},w.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},w.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(t){}};var He={0:200,1223:204},qe=w.ajaxSettings.xhr();f.cors=!!qe&&"withCredentials"in qe,f.ajax=qe=!!qe,w.ajaxTransport((function(e){var n,o;if(f.cors||qe&&!e.crossDomain)return{send:function(i,s){var r,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)a[r]=e.xhrFields[r];for(r in e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest"),i)a.setRequestHeader(r,i[r]);n=function(t){return function(){n&&(n=o=a.onload=a.onerror=a.onabort=a.ontimeout=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?s(0,"error"):s(a.status,a.statusText):s(He[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=n(),o=a.onerror=a.ontimeout=n("error"),void 0!==a.onabort?a.onabort=o:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout((function(){n&&o()}))},n=n("abort");try{a.send(e.hasContent&&e.data||null)}catch(t){if(n)throw t}},abort:function(){n&&n()}}})),w.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),w.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return w.globalEval(t),t}}}),w.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),w.ajaxTransport("script",(function(t){var e,n;if(t.crossDomain||t.scriptAttrs)return{send:function(o,i){e=w("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&i("error"===t.type?404:200,t.type)}),m.head.appendChild(e[0])},abort:function(){n&&n()}}}));var ze,_e=[],We=/(=)\?(?=&|$)|\?\?/;w.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=_e.pop()||w.expando+"_"+we.guid++;return this[t]=!0,t}}),w.ajaxPrefilter("json jsonp",(function(e,n,o){var i,s,r,a=!1!==e.jsonp&&(We.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&We.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=h(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(We,"$1"+i):!1!==e.jsonp&&(e.url+=(xe.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return r||w.error(i+" was not called"),r[0]},e.dataTypes[0]="json",s=t[i],t[i]=function(){r=arguments},o.always((function(){void 0===s?w(t).removeProp(i):t[i]=s,e[i]&&(e.jsonpCallback=n.jsonpCallback,_e.push(i)),r&&h(s)&&s(r[0]),r=s=void 0})),"script"})),f.createHTMLDocument=((ze=m.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ze.childNodes.length),w.parseHTML=function(t,e,n){return"string"!=typeof t?[]:("boolean"==typeof e&&(n=e,e=!1),e||(f.createHTMLDocument?((o=(e=m.implementation.createHTMLDocument("")).createElement("base")).href=m.location.href,e.head.appendChild(o)):e=m),s=!n&&[],(i=E.exec(t))?[e.createElement(i[1])]:(i=bt([t],e,s),s&&s.length&&w(s).remove(),w.merge([],i.childNodes)));var o,i,s},w.fn.load=function(t,e,n){var o,i,s,r=this,a=t.indexOf(" ");return a>-1&&(o=fe(t.slice(a)),t=t.slice(0,a)),h(e)?(n=e,e=void 0):e&&"object"==typeof e&&(i="POST"),r.length>0&&w.ajax({url:t,type:i||"GET",dataType:"html",data:e}).done((function(t){s=arguments,r.html(o?w("<div>").append(w.parseHTML(t)).find(o):t)})).always(n&&function(t,e){r.each((function(){n.apply(this,s||[t.responseText,e,t])}))}),this},w.expr.pseudos.animated=function(t){return w.grep(w.timers,(function(e){return t===e.elem})).length},w.offset={setOffset:function(t,e,n){var o,i,s,r,a,l,c=w.css(t,"position"),d=w(t),u={};"static"===c&&(t.style.position="relative"),a=d.offset(),s=w.css(t,"top"),l=w.css(t,"left"),("absolute"===c||"fixed"===c)&&(s+l).indexOf("auto")>-1?(r=(o=d.position()).top,i=o.left):(r=parseFloat(s)||0,i=parseFloat(l)||0),h(e)&&(e=e.call(t,n,w.extend({},a))),null!=e.top&&(u.top=e.top-a.top+r),null!=e.left&&(u.left=e.left-a.left+i),"using"in e?e.using.call(t,u):d.css(u)}},w.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){w.offset.setOffset(this,t,e)}));var e,n,o=this[0];return o?o.getClientRects().length?(e=o.getBoundingClientRect(),n=o.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n,o=this[0],i={top:0,left:0};if("fixed"===w.css(o,"position"))e=o.getBoundingClientRect();else{for(e=this.offset(),n=o.ownerDocument,t=o.offsetParent||n.documentElement;t&&(t===n.body||t===n.documentElement)&&"static"===w.css(t,"position");)t=t.parentNode;t&&t!==o&&1===t.nodeType&&((i=w(t).offset()).top+=w.css(t,"borderTopWidth",!0),i.left+=w.css(t,"borderLeftWidth",!0))}return{top:e.top-i.top-w.css(o,"marginTop",!0),left:e.left-i.left-w.css(o,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===w.css(t,"position");)t=t.offsetParent;return t||nt}))}}),w.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var n="pageYOffset"===e;w.fn[t]=function(o){return q(this,(function(t,o,i){var s;if(g(t)?s=t:9===t.nodeType&&(s=t.defaultView),void 0===i)return s?s[e]:t[o];s?s.scrollTo(n?s.pageXOffset:i,n?i:s.pageYOffset):t[o]=i}),t,o,arguments.length)}})),w.each(["top","left"],(function(t,e){w.cssHooks[e]=qt(f.pixelPosition,(function(t,n){if(n)return n=Ht(t,e),Lt.test(n)?w(t).position()[e]+"px":n}))})),w.each({Height:"height",Width:"width"},(function(t,e){w.each({padding:"inner"+t,content:e,"":"outer"+t},(function(n,o){w.fn[o]=function(i,s){var r=arguments.length&&(n||"boolean"!=typeof i),a=n||(!0===i||!0===s?"margin":"border");return q(this,(function(e,n,i){var s;return g(e)?0===o.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+t],s["scroll"+t],e.body["offset"+t],s["offset"+t],s["client"+t])):void 0===i?w.css(e,n,a):w.style(e,n,i,a)}),e,r?i:void 0,r)}}))})),w.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){w.fn[e]=function(t){return this.on(e,t)}})),w.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,o){return this.on(e,t,n,o)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)},hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),w.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){w.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}));var Ue=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;w.proxy=function(t,e){var n,o,s;if("string"==typeof e&&(n=t[e],e=t,t=n),h(t))return o=i.call(arguments,2),(s=function(){return t.apply(e||this,o.concat(i.call(arguments)))}).guid=t.guid=t.guid||w.guid++,s},w.holdReady=function(t){t?w.readyWait++:w.ready(!0)},w.isArray=Array.isArray,w.parseJSON=JSON.parse,w.nodeName=A,w.isFunction=h,w.isWindow=g,w.camelCase=U,w.type=b,w.now=Date.now,w.isNumeric=function(t){var e=w.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},w.trim=function(t){return null==t?"":(t+"").replace(Ue,"")},"function"==typeof define&&define.amd&&define("jquery",[],(function(){return w}));var Xe=t.jQuery,Ye=t.$;return w.noConflict=function(e){return t.$===w&&(t.$=Ye),e&&t.jQuery===w&&(t.jQuery=Xe),w},void 0===e&&(t.jQuery=t.$=w),w})),function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof exports?module.exports=t(require("jquery")):t(jQuery)}((function(t){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(n,o){var i,s=this;s.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:t(n),appendDots:t(n),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,n){return t('<button type="button" />').text(n+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},s.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},t.extend(s,s.initials),s.activeBreakpoint=null,s.animType=null,s.animProp=null,s.breakpoints=[],s.breakpointSettings=[],s.cssTransitions=!1,s.focussed=!1,s.interrupted=!1,s.hidden="hidden",s.paused=!0,s.positionProp=null,s.respondTo=null,s.rowCount=1,s.shouldClick=!0,s.$slider=t(n),s.$slidesCache=null,s.transformType=null,s.transitionType=null,s.visibilityChange="visibilitychange",s.windowWidth=0,s.windowTimer=null,i=t(n).data("slick")||{},s.options=t.extend({},s.defaults,o,i),s.currentSlide=s.options.initialSlide,s.originalSettings=s.options,void 0!==document.mozHidden?(s.hidden="mozHidden",s.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(s.hidden="webkitHidden",s.visibilityChange="webkitvisibilitychange"),s.autoPlay=t.proxy(s.autoPlay,s),s.autoPlayClear=t.proxy(s.autoPlayClear,s),s.autoPlayIterator=t.proxy(s.autoPlayIterator,s),s.changeSlide=t.proxy(s.changeSlide,s),s.clickHandler=t.proxy(s.clickHandler,s),s.selectHandler=t.proxy(s.selectHandler,s),s.setPosition=t.proxy(s.setPosition,s),s.swipeHandler=t.proxy(s.swipeHandler,s),s.dragHandler=t.proxy(s.dragHandler,s),s.keyHandler=t.proxy(s.keyHandler,s),s.instanceUid=e++,s.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,s.registerBreakpoints(),s.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,n,o){var i=this;if("boolean"==typeof n)o=n,n=null;else if(n<0||n>=i.slideCount)return!1;i.unload(),"number"==typeof n?0===n&&0===i.$slides.length?t(e).appendTo(i.$slideTrack):o?t(e).insertBefore(i.$slides.eq(n)):t(e).insertAfter(i.$slides.eq(n)):!0===o?t(e).prependTo(i.$slideTrack):t(e).appendTo(i.$slideTrack),i.$slides=i.$slideTrack.children(this.options.slide),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.append(i.$slides),i.$slides.each((function(e,n){t(n).attr("data-slick-index",e)})),i.$slidesCache=i.$slides,i.reinit()},e.prototype.animateHeight=function(){var t=this;if(1===t.options.slidesToShow&&!0===t.options.adaptiveHeight&&!1===t.options.vertical){var e=t.$slides.eq(t.currentSlide).outerHeight(!0);t.$list.animate({height:e},t.options.speed)}},e.prototype.animateSlide=function(e,n){var o={},i=this;i.animateHeight(),!0===i.options.rtl&&!1===i.options.vertical&&(e=-e),!1===i.transformsEnabled?!1===i.options.vertical?i.$slideTrack.animate({left:e},i.options.speed,i.options.easing,n):i.$slideTrack.animate({top:e},i.options.speed,i.options.easing,n):!1===i.cssTransitions?(!0===i.options.rtl&&(i.currentLeft=-i.currentLeft),t({animStart:i.currentLeft}).animate({animStart:e},{duration:i.options.speed,easing:i.options.easing,step:function(t){t=Math.ceil(t),!1===i.options.vertical?(o[i.animType]="translate("+t+"px, 0px)",i.$slideTrack.css(o)):(o[i.animType]="translate(0px,"+t+"px)",i.$slideTrack.css(o))},complete:function(){n&&n.call()}})):(i.applyTransition(),e=Math.ceil(e),!1===i.options.vertical?o[i.animType]="translate3d("+e+"px, 0px, 0px)":o[i.animType]="translate3d(0px,"+e+"px, 0px)",i.$slideTrack.css(o),n&&setTimeout((function(){i.disableTransition(),n.call()}),i.options.speed))},e.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=t(e).not(this.$slider)),e},e.prototype.asNavFor=function(e){var n=this.getNavTarget();null!==n&&"object"==typeof n&&n.each((function(){var n=t(this).slick("getSlick");n.unslicked||n.slideHandler(e,!0)}))},e.prototype.applyTransition=function(t){var e=this,n={};!1===e.options.fade?n[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:n[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(n):e.$slides.eq(t).css(n)},e.prototype.autoPlay=function(){var t=this;t.autoPlayClear(),t.slideCount>t.options.slidesToShow&&(t.autoPlayTimer=setInterval(t.autoPlayIterator,t.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var t=this,e=t.currentSlide+t.options.slidesToScroll;t.paused||t.interrupted||t.focussed||(!1===t.options.infinite&&(1===t.direction&&t.currentSlide+1===t.slideCount-1?t.direction=0:0===t.direction&&(e=t.currentSlide-t.options.slidesToScroll,t.currentSlide-1==0&&(t.direction=1))),t.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=t(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=t(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,n,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),n=t("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)n.append(t("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=n.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each((function(e,n){t(n).attr("data-slick-index",e).data("originalStyling",t(n).attr("style")||"")})),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?t('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),t("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var t,e,n,o,i,s,r,a=this;if(o=document.createDocumentFragment(),s=a.$slider.children(),a.options.rows>1){for(r=a.options.slidesPerRow*a.options.rows,i=Math.ceil(s.length/r),t=0;t<i;t++){var l=document.createElement("div");for(e=0;e<a.options.rows;e++){var c=document.createElement("div");for(n=0;n<a.options.slidesPerRow;n++){var d=t*r+(e*a.options.slidesPerRow+n);s.get(d)&&c.appendChild(s.get(d))}l.appendChild(c)}o.appendChild(l)}a.$slider.empty().append(o),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,n){var o,i,s,r=this,a=!1,l=r.$slider.width(),c=window.innerWidth||t(window).width();if("window"===r.respondTo?s=c:"slider"===r.respondTo?s=l:"min"===r.respondTo&&(s=Math.min(c,l)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){for(o in i=null,r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?s<r.breakpoints[o]&&(i=r.breakpoints[o]):s>r.breakpoints[o]&&(i=r.breakpoints[o]));null!==i?null!==r.activeBreakpoint?(i!==r.activeBreakpoint||n)&&(r.activeBreakpoint=i,"unslick"===r.breakpointSettings[i]?r.unslick(i):(r.options=t.extend({},r.originalSettings,r.breakpointSettings[i]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),a=i):(r.activeBreakpoint=i,"unslick"===r.breakpointSettings[i]?r.unslick(i):(r.options=t.extend({},r.originalSettings,r.breakpointSettings[i]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),a=i):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),a=i),e||!1===a||r.$slider.trigger("breakpoint",[r,a])}},e.prototype.changeSlide=function(e,n){var o,i,s=this,r=t(e.currentTarget);switch(r.is("a")&&e.preventDefault(),r.is("li")||(r=r.closest("li")),o=s.slideCount%s.options.slidesToScroll!=0?0:(s.slideCount-s.currentSlide)%s.options.slidesToScroll,e.data.message){case"previous":i=0===o?s.options.slidesToScroll:s.options.slidesToShow-o,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide-i,!1,n);break;case"next":i=0===o?s.options.slidesToScroll:o,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide+i,!1,n);break;case"index":var a=0===e.data.index?0:e.data.index||r.index()*s.options.slidesToScroll;s.slideHandler(s.checkNavigable(a),!1,n),r.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(t){var e,n;if(n=0,t>(e=this.getNavigableIndexes())[e.length-1])t=e[e.length-1];else for(var o in e){if(t<e[o]){t=n;break}n=e[o]}return t},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(t("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",t.proxy(e.interrupt,e,!0)).off("mouseleave.slick",t.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),t(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&t(e.$slideTrack).children().off("click.slick",e.selectHandler),t(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),t(window).off("resize.slick.slick-"+e.instanceUid,e.resize),t("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),t(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",t.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",t.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var t,e=this;e.options.rows>1&&((t=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(t))},e.prototype.clickHandler=function(t){!1===this.shouldClick&&(t.stopImmediatePropagation(),t.stopPropagation(),t.preventDefault())},e.prototype.destroy=function(e){var n=this;n.autoPlayClear(),n.touchObject={},n.cleanUpEvents(),t(".slick-cloned",n.$slider).detach(),n.$dots&&n.$dots.remove(),n.$prevArrow&&n.$prevArrow.length&&(n.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),n.htmlExpr.test(n.options.prevArrow)&&n.$prevArrow.remove()),n.$nextArrow&&n.$nextArrow.length&&(n.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),n.htmlExpr.test(n.options.nextArrow)&&n.$nextArrow.remove()),n.$slides&&(n.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each((function(){t(this).attr("style",t(this).data("originalStyling"))})),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.detach(),n.$list.detach(),n.$slider.append(n.$slides)),n.cleanUpRows(),n.$slider.removeClass("slick-slider"),n.$slider.removeClass("slick-initialized"),n.$slider.removeClass("slick-dotted"),n.unslicked=!0,e||n.$slider.trigger("destroy",[n])},e.prototype.disableTransition=function(t){var e=this,n={};n[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(n):e.$slides.eq(t).css(n)},e.prototype.fadeSlide=function(t,e){var n=this;!1===n.cssTransitions?(n.$slides.eq(t).css({zIndex:n.options.zIndex}),n.$slides.eq(t).animate({opacity:1},n.options.speed,n.options.easing,e)):(n.applyTransition(t),n.$slides.eq(t).css({opacity:1,zIndex:n.options.zIndex}),e&&setTimeout((function(){n.disableTransition(t),e.call()}),n.options.speed))},e.prototype.fadeSlideOut=function(t){var e=this;!1===e.cssTransitions?e.$slides.eq(t).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(t),e.$slides.eq(t).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(t){var e=this;null!==t&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(t).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",(function(n){n.stopImmediatePropagation();var o=t(this);setTimeout((function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())}),0)}))},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var t=this,e=0,n=0,o=0;if(!0===t.options.infinite)if(t.slideCount<=t.options.slidesToShow)++o;else for(;e<t.slideCount;)++o,e=n+t.options.slidesToScroll,n+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;else if(!0===t.options.centerMode)o=t.slideCount;else if(t.options.asNavFor)for(;e<t.slideCount;)++o,e=n+t.options.slidesToScroll,n+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;else o=1+Math.ceil((t.slideCount-t.options.slidesToShow)/t.options.slidesToScroll);return o-1},e.prototype.getLeft=function(t){var e,n,o,i,s=this,r=0;return s.slideOffset=0,n=s.$slides.first().outerHeight(!0),!0===s.options.infinite?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,i=-1,!0===s.options.vertical&&!0===s.options.centerMode&&(2===s.options.slidesToShow?i=-1.5:1===s.options.slidesToShow&&(i=-2)),r=n*s.options.slidesToShow*i),s.slideCount%s.options.slidesToScroll!=0&&t+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(t>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(t-s.slideCount))*s.slideWidth*-1,r=(s.options.slidesToShow-(t-s.slideCount))*n*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,r=s.slideCount%s.options.slidesToScroll*n*-1))):t+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(t+s.options.slidesToShow-s.slideCount)*s.slideWidth,r=(t+s.options.slidesToShow-s.slideCount)*n),s.slideCount<=s.options.slidesToShow&&(s.slideOffset=0,r=0),!0===s.options.centerMode&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:!0===s.options.centerMode&&!0===s.options.infinite?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:!0===s.options.centerMode&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),e=!1===s.options.vertical?t*s.slideWidth*-1+s.slideOffset:t*n*-1+r,!0===s.options.variableWidth&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(t):s.$slideTrack.children(".slick-slide").eq(t+s.options.slidesToShow),e=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===s.options.centerMode&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(t):s.$slideTrack.children(".slick-slide").eq(t+s.options.slidesToShow+1),e=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(s.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(t){return this.options[t]},e.prototype.getNavigableIndexes=function(){var t,e=this,n=0,o=0,i=[];for(!1===e.options.infinite?t=e.slideCount:(n=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,t=2*e.slideCount);n<t;)i.push(n),n=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return i},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,n,o=this;return n=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each((function(i,s){if(s.offsetLeft-n+t(s).outerWidth()/2>-1*o.swipeLeft)return e=s,!1})),Math.abs(t(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(t,e){this.changeSlide({data:{message:"index",index:parseInt(t)}},e)},e.prototype.init=function(e){var n=this;t(n.$slider).hasClass("slick-initialized")||(t(n.$slider).addClass("slick-initialized"),n.buildRows(),n.buildOut(),n.setProps(),n.startLoad(),n.loadSlider(),n.initializeEvents(),n.updateArrows(),n.updateDots(),n.checkResponsive(!0),n.focusHandler()),e&&n.$slider.trigger("init",[n]),!0===n.options.accessibility&&n.initADA(),n.options.autoplay&&(n.paused=!1,n.autoPlay())},e.prototype.initADA=function(){var e=this,n=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter((function(t){return t>=0&&t<e.slideCount}));e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each((function(n){var i=o.indexOf(n);t(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+n,tabindex:-1}),-1!==i&&t(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+i})})),e.$dots.attr("role","tablist").find("li").each((function(i){var s=o[i];t(this).attr({role:"presentation"}),t(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+i,"aria-controls":"slick-slide"+e.instanceUid+s,"aria-label":i+1+" of "+n,"aria-selected":null,tabindex:"-1"})})).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var i=e.currentSlide,s=i+e.options.slidesToShow;i<s;i++)e.$slides.eq(i).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},t.changeSlide),t.$nextArrow.off("click.slick").on("click.slick",{message:"next"},t.changeSlide),!0===t.options.accessibility&&(t.$prevArrow.on("keydown.slick",t.keyHandler),t.$nextArrow.on("keydown.slick",t.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(t("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&t("li",e.$dots).on("mouseenter.slick",t.proxy(e.interrupt,e,!0)).on("mouseleave.slick",t.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",t.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",t.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),t(document).on(e.visibilityChange,t.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&t(e.$slideTrack).children().on("click.slick",e.selectHandler),t(window).on("orientationchange.slick.slick-"+e.instanceUid,t.proxy(e.orientationChange,e)),t(window).on("resize.slick.slick-"+e.instanceUid,t.proxy(e.resize,e)),t("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),t(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),t(e.setPosition)},e.prototype.initUI=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.show(),t.$nextArrow.show()),!0===t.options.dots&&t.slideCount>t.options.slidesToShow&&t.$dots.show()},e.prototype.keyHandler=function(t){var e=this;t.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===t.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===t.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){t("img[data-lazy]",e).each((function(){var e=t(this),n=t(this).attr("data-lazy"),o=t(this).attr("data-srcset"),i=t(this).attr("data-sizes")||s.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,(function(){o&&(e.attr("srcset",o),i&&e.attr("sizes",i)),e.attr("src",n).animate({opacity:1},200,(function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")})),s.$slider.trigger("lazyLoaded",[s,e,n])}))},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),s.$slider.trigger("lazyLoadError",[s,e,n])},r.src=n}))}var n,o,i,s=this;if(!0===s.options.centerMode?!0===s.options.infinite?i=(o=s.currentSlide+(s.options.slidesToShow/2+1))+s.options.slidesToShow+2:(o=Math.max(0,s.currentSlide-(s.options.slidesToShow/2+1)),i=s.options.slidesToShow/2+1+2+s.currentSlide):(o=s.options.infinite?s.options.slidesToShow+s.currentSlide:s.currentSlide,i=Math.ceil(o+s.options.slidesToShow),!0===s.options.fade&&(o>0&&o--,i<=s.slideCount&&i++)),n=s.$slider.find(".slick-slide").slice(o,i),"anticipated"===s.options.lazyLoad)for(var r=o-1,a=i,l=s.$slider.find(".slick-slide"),c=0;c<s.options.slidesToScroll;c++)r<0&&(r=s.slideCount-1),n=(n=n.add(l.eq(r))).add(l.eq(a)),r--,a++;e(n),s.slideCount<=s.options.slidesToShow?e(s.$slider.find(".slick-slide")):s.currentSlide>=s.slideCount-s.options.slidesToShow?e(s.$slider.find(".slick-cloned").slice(0,s.options.slidesToShow)):0===s.currentSlide&&e(s.$slider.find(".slick-cloned").slice(-1*s.options.slidesToShow))},e.prototype.loadSlider=function(){var t=this;t.setPosition(),t.$slideTrack.css({opacity:1}),t.$slider.removeClass("slick-loading"),t.initUI(),"progressive"===t.options.lazyLoad&&t.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var t=this;t.autoPlay(),t.options.autoplay=!0,t.paused=!1,t.focussed=!1,t.interrupted=!1},e.prototype.postSlide=function(e){var n=this;n.unslicked||(n.$slider.trigger("afterChange",[n,e]),n.animating=!1,n.slideCount>n.options.slidesToShow&&n.setPosition(),n.swipeLeft=null,n.options.autoplay&&n.autoPlay(),!0===n.options.accessibility&&(n.initADA(),n.options.focusOnChange&&t(n.$slides.get(n.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(t){t.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var n,o,i,s,r,a=this,l=t("img[data-lazy]",a.$slider);l.length?(n=l.first(),o=n.attr("data-lazy"),i=n.attr("data-srcset"),s=n.attr("data-sizes")||a.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){i&&(n.attr("srcset",i),s&&n.attr("sizes",s)),n.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===a.options.adaptiveHeight&&a.setPosition(),a.$slider.trigger("lazyLoaded",[a,n,o]),a.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout((function(){a.progressiveLazyLoad(e+1)}),500):(n.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),a.$slider.trigger("lazyLoadError",[a,n,o]),a.progressiveLazyLoad())},r.src=o):a.$slider.trigger("allImagesLoaded",[a])},e.prototype.refresh=function(e){var n,o,i=this;o=i.slideCount-i.options.slidesToShow,!i.options.infinite&&i.currentSlide>o&&(i.currentSlide=o),i.slideCount<=i.options.slidesToShow&&(i.currentSlide=0),n=i.currentSlide,i.destroy(!0),t.extend(i,i.initials,{currentSlide:n}),i.init(),e||i.changeSlide({data:{message:"index",index:n}},!1)},e.prototype.registerBreakpoints=function(){var e,n,o,i=this,s=i.options.responsive||null;if("array"===t.type(s)&&s.length){for(e in i.respondTo=i.options.respondTo||"window",s)if(o=i.breakpoints.length-1,s.hasOwnProperty(e)){for(n=s[e].breakpoint;o>=0;)i.breakpoints[o]&&i.breakpoints[o]===n&&i.breakpoints.splice(o,1),o--;i.breakpoints.push(n),i.breakpointSettings[n]=s[e].settings}i.breakpoints.sort((function(t,e){return i.options.mobileFirst?t-e:e-t}))}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&t(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;t(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout((function(){e.windowWidth=t(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()}),50))},e.prototype.removeSlide=e.prototype.slickRemove=function(t,e,n){var o=this;if(t="boolean"==typeof t?!0===(e=t)?0:o.slideCount-1:!0===e?--t:t,o.slideCount<1||t<0||t>o.slideCount-1)return!1;o.unload(),!0===n?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(t).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(t){var e,n,o=this,i={};!0===o.options.rtl&&(t=-t),e="left"==o.positionProp?Math.ceil(t)+"px":"0px",n="top"==o.positionProp?Math.ceil(t)+"px":"0px",i[o.positionProp]=t,!1===o.transformsEnabled?o.$slideTrack.css(i):(i={},!1===o.cssTransitions?(i[o.animType]="translate("+e+", "+n+")",o.$slideTrack.css(i)):(i[o.animType]="translate3d("+e+", "+n+", 0px)",o.$slideTrack.css(i)))},e.prototype.setDimensions=function(){var t=this;!1===t.options.vertical?!0===t.options.centerMode&&t.$list.css({padding:"0px "+t.options.centerPadding}):(t.$list.height(t.$slides.first().outerHeight(!0)*t.options.slidesToShow),!0===t.options.centerMode&&t.$list.css({padding:t.options.centerPadding+" 0px"})),t.listWidth=t.$list.width(),t.listHeight=t.$list.height(),!1===t.options.vertical&&!1===t.options.variableWidth?(t.slideWidth=Math.ceil(t.listWidth/t.options.slidesToShow),t.$slideTrack.width(Math.ceil(t.slideWidth*t.$slideTrack.children(".slick-slide").length))):!0===t.options.variableWidth?t.$slideTrack.width(5e3*t.slideCount):(t.slideWidth=Math.ceil(t.listWidth),t.$slideTrack.height(Math.ceil(t.$slides.first().outerHeight(!0)*t.$slideTrack.children(".slick-slide").length)));var e=t.$slides.first().outerWidth(!0)-t.$slides.first().width();!1===t.options.variableWidth&&t.$slideTrack.children(".slick-slide").width(t.slideWidth-e)},e.prototype.setFade=function(){var e,n=this;n.$slides.each((function(o,i){e=n.slideWidth*o*-1,!0===n.options.rtl?t(i).css({position:"relative",right:e,top:0,zIndex:n.options.zIndex-2,opacity:0}):t(i).css({position:"relative",left:e,top:0,zIndex:n.options.zIndex-2,opacity:0})})),n.$slides.eq(n.currentSlide).css({zIndex:n.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var t=this;if(1===t.options.slidesToShow&&!0===t.options.adaptiveHeight&&!1===t.options.vertical){var e=t.$slides.eq(t.currentSlide).outerHeight(!0);t.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,n,o,i,s,r=this,a=!1;if("object"===t.type(arguments[0])?(o=arguments[0],a=arguments[1],s="multiple"):"string"===t.type(arguments[0])&&(o=arguments[0],i=arguments[1],a=arguments[2],"responsive"===arguments[0]&&"array"===t.type(arguments[1])?s="responsive":void 0!==arguments[1]&&(s="single")),"single"===s)r.options[o]=i;else if("multiple"===s)t.each(o,(function(t,e){r.options[t]=e}));else if("responsive"===s)for(n in i)if("array"!==t.type(r.options.responsive))r.options.responsive=[i[n]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===i[n].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(i[n])}a&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var t=this;t.setDimensions(),t.setHeight(),!1===t.options.fade?t.setCSS(t.getLeft(t.currentSlide)):t.setFade(),t.$slider.trigger("setPosition",[t])},e.prototype.setProps=function(){var t=this,e=document.body.style;t.positionProp=!0===t.options.vertical?"top":"left","top"===t.positionProp?t.$slider.addClass("slick-vertical"):t.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===t.options.useCSS&&(t.cssTransitions=!0),t.options.fade&&("number"==typeof t.options.zIndex?t.options.zIndex<3&&(t.options.zIndex=3):t.options.zIndex=t.defaults.zIndex),void 0!==e.OTransform&&(t.animType="OTransform",t.transformType="-o-transform",t.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(t.animType=!1)),void 0!==e.MozTransform&&(t.animType="MozTransform",t.transformType="-moz-transform",t.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(t.animType=!1)),void 0!==e.webkitTransform&&(t.animType="webkitTransform",t.transformType="-webkit-transform",t.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(t.animType=!1)),void 0!==e.msTransform&&(t.animType="msTransform",t.transformType="-ms-transform",t.transitionType="msTransition",void 0===e.msTransform&&(t.animType=!1)),void 0!==e.transform&&!1!==t.animType&&(t.animType="transform",t.transformType="transform",t.transitionType="transition"),t.transformsEnabled=t.options.useTransform&&null!==t.animType&&!1!==t.animType},e.prototype.setSlideClasses=function(t){var e,n,o,i,s=this;if(n=s.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),s.$slides.eq(t).addClass("slick-current"),!0===s.options.centerMode){var r=s.options.slidesToShow%2==0?1:0;e=Math.floor(s.options.slidesToShow/2),!0===s.options.infinite&&(t>=e&&t<=s.slideCount-1-e?s.$slides.slice(t-e+r,t+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=s.options.slidesToShow+t,n.slice(o-e+1+r,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===t?n.eq(n.length-1-s.options.slidesToShow).addClass("slick-center"):t===s.slideCount-1&&n.eq(s.options.slidesToShow).addClass("slick-center")),s.$slides.eq(t).addClass("slick-center")}else t>=0&&t<=s.slideCount-s.options.slidesToShow?s.$slides.slice(t,t+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):n.length<=s.options.slidesToShow?n.addClass("slick-active").attr("aria-hidden","false"):(i=s.slideCount%s.options.slidesToShow,o=!0===s.options.infinite?s.options.slidesToShow+t:t,s.options.slidesToShow==s.options.slidesToScroll&&s.slideCount-t<s.options.slidesToShow?n.slice(o-(s.options.slidesToShow-i),o+i).addClass("slick-active").attr("aria-hidden","false"):n.slice(o,o+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==s.options.lazyLoad&&"anticipated"!==s.options.lazyLoad||s.lazyLoad()},e.prototype.setupInfinite=function(){var e,n,o,i=this;if(!0===i.options.fade&&(i.options.centerMode=!1),!0===i.options.infinite&&!1===i.options.fade&&(n=null,i.slideCount>i.options.slidesToShow)){for(o=!0===i.options.centerMode?i.options.slidesToShow+1:i.options.slidesToShow,e=i.slideCount;e>i.slideCount-o;e-=1)n=e-1,t(i.$slides[n]).clone(!0).attr("id","").attr("data-slick-index",n-i.slideCount).prependTo(i.$slideTrack).addClass("slick-cloned");for(e=0;e<o+i.slideCount;e+=1)n=e,t(i.$slides[n]).clone(!0).attr("id","").attr("data-slick-index",n+i.slideCount).appendTo(i.$slideTrack).addClass("slick-cloned");i.$slideTrack.find(".slick-cloned").find("[id]").each((function(){t(this).attr("id","")}))}},e.prototype.interrupt=function(t){t||this.autoPlay(),this.interrupted=t},e.prototype.selectHandler=function(e){var n=this,o=t(e.target).is(".slick-slide")?t(e.target):t(e.target).parents(".slick-slide"),i=parseInt(o.attr("data-slick-index"));i||(i=0),n.slideCount<=n.options.slidesToShow?n.slideHandler(i,!1,!0):n.slideHandler(i)},e.prototype.slideHandler=function(t,e,n){var o,i,s,r,a,l=null,c=this;if(e=e||!1,!(!0===c.animating&&!0===c.options.waitForAnimate||!0===c.options.fade&&c.currentSlide===t))if(!1===e&&c.asNavFor(t),o=t,l=c.getLeft(o),r=c.getLeft(c.currentSlide),c.currentLeft=null===c.swipeLeft?r:c.swipeLeft,!1===c.options.infinite&&!1===c.options.centerMode&&(t<0||t>c.getDotCount()*c.options.slidesToScroll))!1===c.options.fade&&(o=c.currentSlide,!0!==n?c.animateSlide(r,(function(){c.postSlide(o)})):c.postSlide(o));else if(!1===c.options.infinite&&!0===c.options.centerMode&&(t<0||t>c.slideCount-c.options.slidesToScroll))!1===c.options.fade&&(o=c.currentSlide,!0!==n?c.animateSlide(r,(function(){c.postSlide(o)})):c.postSlide(o));else{if(c.options.autoplay&&clearInterval(c.autoPlayTimer),i=o<0?c.slideCount%c.options.slidesToScroll!=0?c.slideCount-c.slideCount%c.options.slidesToScroll:c.slideCount+o:o>=c.slideCount?c.slideCount%c.options.slidesToScroll!=0?0:o-c.slideCount:o,c.animating=!0,c.$slider.trigger("beforeChange",[c,c.currentSlide,i]),s=c.currentSlide,c.currentSlide=i,c.setSlideClasses(c.currentSlide),c.options.asNavFor&&(a=(a=c.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(c.currentSlide),c.updateDots(),c.updateArrows(),!0===c.options.fade)return!0!==n?(c.fadeSlideOut(s),c.fadeSlide(i,(function(){c.postSlide(i)}))):c.postSlide(i),void c.animateHeight();!0!==n?c.animateSlide(l,(function(){c.postSlide(i)})):c.postSlide(i)}},e.prototype.startLoad=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.hide(),t.$nextArrow.hide()),!0===t.options.dots&&t.slideCount>t.options.slidesToShow&&t.$dots.hide(),t.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var t,e,n,o,i=this;return t=i.touchObject.startX-i.touchObject.curX,e=i.touchObject.startY-i.touchObject.curY,n=Math.atan2(e,t),(o=Math.round(180*n/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0||o<=360&&o>=315?!1===i.options.rtl?"left":"right":o>=135&&o<=225?!1===i.options.rtl?"right":"left":!0===i.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(t){var e,n,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(n=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=n&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,n]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(t){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==t.type.indexOf("mouse")))switch(e.touchObject.fingerCount=t.originalEvent&&void 0!==t.originalEvent.touches?t.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),t.data.action){case"start":e.swipeStart(t);break;case"move":e.swipeMove(t);break;case"end":e.swipeEnd(t)}},e.prototype.swipeMove=function(t){var e,n,o,i,s,r,a=this;return s=void 0!==t.originalEvent?t.originalEvent.touches:null,!(!a.dragging||a.scrolling||s&&1!==s.length)&&(e=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==s?s[0].pageX:t.clientX,a.touchObject.curY=void 0!==s?s[0].pageY:t.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&r>4?(a.scrolling=!0,!1):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),n=a.swipeDirection(),void 0!==t.originalEvent&&a.touchObject.swipeLength>4&&(a.swiping=!0,t.preventDefault()),i=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(i=a.touchObject.curY>a.touchObject.startY?1:-1),o=a.touchObject.swipeLength,a.touchObject.edgeHit=!1,!1===a.options.infinite&&(0===a.currentSlide&&"right"===n||a.currentSlide>=a.getDotCount()&&"left"===n)&&(o=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=e+o*i:a.swipeLeft=e+o*(a.$list.height()/a.listWidth)*i,!0===a.options.verticalSwiping&&(a.swipeLeft=e+o*i),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},e.prototype.swipeStart=function(t){var e,n=this;if(n.interrupted=!0,1!==n.touchObject.fingerCount||n.slideCount<=n.options.slidesToShow)return n.touchObject={},!1;void 0!==t.originalEvent&&void 0!==t.originalEvent.touches&&(e=t.originalEvent.touches[0]),n.touchObject.startX=n.touchObject.curX=void 0!==e?e.pageX:t.clientX,n.touchObject.startY=n.touchObject.curY=void 0!==e?e.pageY:t.clientY,n.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var t=this;null!==t.$slidesCache&&(t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.appendTo(t.$slideTrack),t.reinit())},e.prototype.unload=function(){var e=this;t(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(t){var e=this;e.$slider.trigger("unslick",[e,t]),e.destroy()},e.prototype.updateArrows=function(){var t=this;Math.floor(t.options.slidesToShow/2),!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&!t.options.infinite&&(t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===t.currentSlide?(t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):(t.currentSlide>=t.slideCount-t.options.slidesToShow&&!1===t.options.centerMode||t.currentSlide>=t.slideCount-1&&!0===t.options.centerMode)&&(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var t=this;null!==t.$dots&&(t.$dots.find("li").removeClass("slick-active").end(),t.$dots.find("li").eq(Math.floor(t.currentSlide/t.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var t=this;t.options.autoplay&&(document[t.hidden]?t.interrupted=!0:t.interrupted=!1)},t.fn.slick=function(){var t,n,o=this,i=arguments[0],s=Array.prototype.slice.call(arguments,1),r=o.length;for(t=0;t<r;t++)if("object"==typeof i||void 0===i?o[t].slick=new e(o[t],i):n=o[t].slick[i].apply(o[t].slick,s),void 0!==n)return n;return o}})),function(t){"use strict";var e=null,n=null;!function(){var e=["webkit","moz","o","ms"],n=t.document.createElement("div"),o=-1;for(o=0;o<e.length&&!t.requestAnimationFrame;o++)t.requestAnimationFrame=t[e[o]+"RequestAnimationFrame"];void 0===n.nextElementSibling&&Object.defineProperty(t.Element.prototype,"nextElementSibling",{get:function(){for(var t=this.nextSibling;t;){if(1===t.nodeType)return t;t=t.nextSibling}return null}}),function(t){t.matches=t.matches||t.machesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector||function(t){return Array.prototype.indexOf.call(this.parentElement.querySelectorAll(t),this)>-1}}(t.Element.prototype),Object.keys||(Object.keys=function(){var t,e,n,o=Object.prototype.hasOwnProperty;return t=!{toString:null}.propertyIsEnumerable("toString"),n=(e=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(i){var s=[],r="",a=-1;if("object"!=typeof i&&("function"!=typeof i||null===i))throw new TypeError("Object.keys called on non-object");for(r in i)o.call(i,r)&&s.push(r);if(t)for(a=0;a<n;a++)o.call(i,e[a])&&s.push(e[a]);return s}}()),Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),"function"!=typeof Object.create&&(Object.create=function(t){var e=function(){};return function(t,n){if(t!==Object(t)&&null!==t)throw TypeError("Argument must be an object, or null");e.prototype=t||{};var o=new e;return e.prototype=null,void 0!==n&&Object.defineProperties(o,n),null===t&&(o.__proto__=null),o}}()),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),Array.prototype.indexOf||(Array.prototype.indexOf=function(t){var e,n,o,i;if(null===this)throw new TypeError;if(0===(i=(o=Object(this)).length>>>0))return-1;if(e=0,arguments.length>1&&((e=Number(arguments[1]))!=e?e=0:0!==e&&e!==1/0&&e!==-1/0&&(e=(e>0||-1)*Math.floor(Math.abs(e)))),e>=i)return-1;for(n=e>=0?e:Math.max(i-Math.abs(e),0);n<i;n++)if(n in o&&o[n]===t)return n;return-1}),Function.prototype.bind||(Function.prototype.bind=function(t){var e,n,o,i;if("function"!=typeof this)throw new TypeError;return e=Array.prototype.slice.call(arguments,1),n=this,o=function(){},i=function(){return n.apply(this instanceof o?this:t,e.concat(Array.prototype.slice.call(arguments)))},this.prototype&&(o.prototype=this.prototype),i.prototype=new o,i}),t.Element.prototype.dispatchEvent||(t.Element.prototype.dispatchEvent=function(t){try{return this.fireEvent("on"+t.type,t)}catch(t){}})}(),(e=function(o,i,s){var r=null,a=!1,l=null,c=null,d=null,u=[],p="",f=[],h=-1;if(d=s||t.document,(a=arguments[3])&&(a="boolean"==typeof a),"string"==typeof o)f=d.querySelectorAll(o);else if(o&&"object"==typeof o&&n.isElement(o,d))f=[o];else{if(!o||"object"!=typeof o||!o.length)throw new Error(e.messages.errorFactoryInvalidContainer());f=o}if(f.length<1)throw new Error(e.messages.errorFactoryContainerNotFound());for(h=0;(r=f[h])&&(!(h>0)||a);h++)r.id?p=r.id:(p="MixItUp"+n.randomHex(),r.id=p),e.instances[p]instanceof e.Mixer?(l=e.instances[p],(!i||i&&i.debug&&!1!==i.debug.showWarnings)&&console.warn(e.messages.warningFactoryPreexistingInstance())):((l=new e.Mixer).attach(r,d,p,i),e.instances[p]=l),c=new e.Facade(l),i&&i.debug&&i.debug.enable?u.push(l):u.push(c);return a?new e.Collection(u):u[0]}).use=function(t){e.Base.prototype.callActions.call(e,"beforeUse",arguments),"function"==typeof t&&"mixitup-extension"===t.TYPE?void 0===e.extensions[t.NAME]&&(t(e),e.extensions[t.NAME]=t):t.fn&&t.fn.jquery&&(e.libraries.$=t),e.Base.prototype.callActions.call(e,"afterUse",arguments)},e.instances={},e.extensions={},e.libraries={},n={hasClass:function(t,e){return!!t.className.match(new RegExp("(\\s|^)"+e+"(\\s|$)"))},addClass:function(t,e){this.hasClass(t,e)||(t.className+=t.className?" "+e:e)},removeClass:function(t,e){if(this.hasClass(t,e)){var n=new RegExp("(\\s|^)"+e+"(\\s|$)");t.className=t.className.replace(n," ").trim()}},extend:function(t,e,n,o){var i=[],s="",r=-1;n=n||!1,o=o||!1;try{if(Array.isArray(e))for(r=0;r<e.length;r++)i.push(r);else e&&(i=Object.keys(e));for(r=0;r<i.length;r++)s=i[r],!n||"object"!=typeof e[s]||this.isElement(e[s])?t[s]=e[s]:Array.isArray(e[s])?(t[s]||(t[s]=[]),this.extend(t[s],e[s],n,o)):(t[s]||(t[s]={}),this.extend(t[s],e[s],n,o))}catch(e){if(!o)throw e;this.handleExtendError(e,t)}return t},handleExtendError:function(t,n){var o=null,i="",s="",r="",a="",l="",c=-1,d=-1;if(t instanceof TypeError&&(o=/property "?(\w*)"?[,:] object/i.exec(t.message))){for(l in i=o[1],n){for(d=0;d<i.length&&i.charAt(d)===l.charAt(d);)d++;d>c&&(c=d,a=l)}throw c>1&&(r=e.messages.errorConfigInvalidPropertySuggestion({probableMatch:a})),s=e.messages.errorConfigInvalidProperty({erroneous:i,suggestion:r}),new TypeError(s)}throw t},template:function(t){for(var e=/\${([\w]*)}/g,n={},o=null;o=e.exec(t);)n[o[1]]=new RegExp("\\${"+o[1]+"}","g");return function(e){var o="",i=t;for(o in e=e||{},n)i=i.replace(n[o],void 0!==e[o]?e[o]:"");return i}},on:function(e,n,o,i){e&&(e.addEventListener?e.addEventListener(n,o,i):e.attachEvent&&(e["e"+n+o]=o,e[n+o]=function(){e["e"+n+o](t.event)},e.attachEvent("on"+n,e[n+o])))},off:function(t,e,n){t&&(t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent&&(t.detachEvent("on"+e,t[e+n]),t[e+n]=null))},getCustomEvent:function(e,n,o){var i=null;return o=o||t.document,"function"==typeof t.CustomEvent?i=new t.CustomEvent(e,{detail:n,bubbles:!0,cancelable:!0}):"function"==typeof o.createEvent?(i=o.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,n):((i=o.createEventObject()).type=e,i.returnValue=!1,i.cancelBubble=!1,i.detail=n),i},getOriginalEvent:function(t){return t.touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t},index:function(t,e){for(var n=0;null!==(t=t.previousElementSibling);)e&&!t.matches(e)||++n;return n},camelCase:function(t){return t.toLowerCase().replace(/([_-][a-z])/g,(function(t){return t.toUpperCase().replace(/[_-]/,"")}))},pascalCase:function(t){return(t=this.camelCase(t)).charAt(0).toUpperCase()+t.slice(1)},dashCase:function(t){return t.replace(/([A-Z])/g,"-$1").replace(/^-/,"").toLowerCase()},isElement:function(e,n){return n=n||t.document,!!(t.HTMLElement&&e instanceof t.HTMLElement)||!!(n.defaultView&&n.defaultView.HTMLElement&&e instanceof n.defaultView.HTMLElement)||null!==e&&1===e.nodeType&&"string"==typeof e.nodeName},createElement:function(e,n){var o=null,i=null;for(o=(n=n||t.document).createDocumentFragment(),(i=n.createElement("div")).innerHTML=e.trim();i.firstChild;)o.appendChild(i.firstChild);return o},removeWhitespace:function(t){for(var e;t&&"#text"===t.nodeName;)e=t,t=t.previousSibling,e.parentElement&&e.parentElement.removeChild(e)},isEqualArray:function(t,e){var n=t.length;if(n!==e.length)return!1;for(;n--;)if(t[n]!==e[n])return!1;return!0},deepEquals:function(t,e){var n;if("object"==typeof t&&t&&"object"==typeof e&&e){if(Object.keys(t).length!==Object.keys(e).length)return!1;for(n in t)if(!e.hasOwnProperty(n)||!this.deepEquals(t[n],e[n]))return!1}else if(t!==e)return!1;return!0},arrayShuffle:function(t){for(var e=t.slice(),n=e.length,o=n,i=-1,s=[];o--;)i=~~(Math.random()*n),s=e[o],e[o]=e[i],e[i]=s;return e},arrayFromList:function(t){var e,n;try{return Array.prototype.slice.call(t)}catch(o){for(e=[],n=0;n<t.length;n++)e.push(t[n]);return e}},debounce:function(t,e,n){var o;return function(){var i=this,s=arguments,r=n&&!o,a=null;a=function(){o=null,n||t.apply(i,s)},clearTimeout(o),o=setTimeout(a,e),r&&t.apply(i,s)}},position:function(t){for(var e=0,n=0,o=t;t;)e-=t.scrollLeft,n-=t.scrollTop,t===o&&(e+=t.offsetLeft,n+=t.offsetTop,o=t.offsetParent),t=t.parentElement;return{x:e,y:n}},getHypotenuse:function(t,e){var n=t.x-e.x,o=t.y-e.y;return n=n<0?-1*n:n,o=o<0?-1*o:o,Math.sqrt(Math.pow(n,2)+Math.pow(o,2))},getIntersectionRatio:function(t,e){var n,o=t.width*t.height;return n=Math.max(0,Math.min(t.left+t.width,e.left+e.width)-Math.max(t.left,e.left)),Math.max(0,Math.min(t.top+t.height,e.top+e.height)-Math.max(t.top,e.top))*n/o},closestParent:function(e,n,o,i){var s=e.parentNode;if(i=i||t.document,o&&e.matches(n))return e;for(;s&&s!=i.body;){if(s.matches&&s.matches(n))return s;if(!s.parentNode)return null;s=s.parentNode}return null},children:function(e,n,o){var i=[],s="";return o=o||t.doc,e&&(e.id||(s="Temp"+this.randomHexKey(),e.id=s),i=o.querySelectorAll("#"+e.id+" > "+n),s&&e.removeAttribute("id")),i},clean:function(t){var e=[],n=-1;for(n=0;n<t.length;n++)""!==t[n]&&e.push(t[n]);return e},defer:function(n){var o=null,i=null,s=null;return i=new this.Deferred,e.features.has.promises?i.promise=new Promise((function(t,e){i.resolve=t,i.reject=e})):(s=t.jQuery||n.$)&&"function"==typeof s.Deferred?(o=s.Deferred(),i.promise=o.promise(),i.resolve=o.resolve,i.reject=o.reject):t.console&&console.warn(e.messages.warningNoPromiseImplementation()),i},all:function(n,o){var i=null;return e.features.has.promises?Promise.all(n):(i=t.jQuery||o.$)&&"function"==typeof i.when?i.when.apply(i,n).done((function(){return arguments})):(t.console&&console.warn(e.messages.warningNoPromiseImplementation()),[])},getPrefix:function(t,e,o){var i=-1,s="";if(n.dashCase(e)in t.style)return"";for(i=0;s=o[i];i++)if(s+e in t.style)return s.toLowerCase();return"unsupported"},randomHex:function(){return("00000"+(16777216*Math.random()<<0).toString(16)).substr(-6).toUpperCase()},getDocumentState:function(e){return e="object"==typeof e.body?e:t.document,{scrollTop:t.pageYOffset,scrollLeft:t.pageXOffset,docHeight:e.documentElement.scrollHeight,docWidth:e.documentElement.scrollWidth,viewportHeight:e.documentElement.clientHeight,viewportWidth:e.documentElement.clientWidth}},bind:function(t,e){return function(){return e.apply(t,arguments)}},isVisible:function(e){var n=null;return!!e.offsetParent||"fixed"===(n=t.getComputedStyle(e)).position&&"hidden"!==n.visibility&&"0"!==n.opacity},seal:function(t){"function"==typeof Object.seal&&Object.seal(t)},freeze:function(t){"function"==typeof Object.freeze&&Object.freeze(t)},compareVersions:function(t,e){var n=t.split("."),o=e.split("."),i=-1,s=-1,r=-1;for(r=0;r<n.length;r++){if(i=parseInt(n[r].replace(/[^\d.]/g,"")),(s=parseInt(o[r].replace(/[^\d.]/g,"")||0))<i)return!1;if(s>i)return!0}return!0},Deferred:function(){this.promise=null,this.resolve=null,this.reject=null,this.id=n.randomHex()},isEmptyObject:function(t){var e="";if("function"==typeof Object.keys)return 0===Object.keys(t).length;for(e in t)if(t.hasOwnProperty(e))return!1;return!0},getClassname:function(t,e,n){var o="";return(o+=t.block).length&&(o+=t.delineatorElement),o+=t["element"+this.pascalCase(e)],n?(o.length&&(o+=t.delineatorModifier),o+=n):o},getProperty:function(t,e){var n,o=e.split("."),i="",s=0;if(!e)return t;for(n=function(t){return t?t[i]:null};s<o.length;)i=o[s],t=n(t),s++;return void 0!==t?t:null}},e.h=n,e.Base=function(){},e.Base.prototype={constructor:e.Base,callActions:function(t,e){var o=this.constructor.actions[t],i="";if(o&&!n.isEmptyObject(o))for(i in o)o[i].apply(this,e)},callFilters:function(t,e,o){var i=this.constructor.filters[t],s=e,r="";if(!i||n.isEmptyObject(i))return s;for(r in o=o||[],i)(o=n.arrayFromList(o)).unshift(s),s=i[r].apply(this,o);return s}},e.BaseStatic=function(){this.actions={},this.filters={},this.extend=function(t){n.extend(this.prototype,t)},this.registerAction=function(t,e,n){(this.actions[t]=this.actions[t]||{})[e]=n},this.registerFilter=function(t,e,n){(this.filters[t]=this.filters[t]||{})[e]=n}},e.Features=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.boxSizingPrefix="",this.transformPrefix="",this.transitionPrefix="",this.boxSizingPrefix="",this.transformProp="",this.transformRule="",this.transitionProp="",this.perspectiveProp="",this.perspectiveOriginProp="",this.has=new e.Has,this.canary=null,this.BOX_SIZING_PROP="boxSizing",this.TRANSITION_PROP="transition",this.TRANSFORM_PROP="transform",this.PERSPECTIVE_PROP="perspective",this.PERSPECTIVE_ORIGIN_PROP="perspectiveOrigin",this.VENDORS=["Webkit","moz","O","ms"],this.TWEENABLE=["opacity","width","height","marginRight","marginBottom","x","y","scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],this.callActions("afterConstruct")},e.BaseStatic.call(e.Features),e.Features.prototype=Object.create(e.Base.prototype),n.extend(e.Features.prototype,{constructor:e.Features,init:function(){var t=this;t.callActions("beforeInit",arguments),t.canary=document.createElement("div"),t.setPrefixes(),t.runTests(),t.callActions("beforeInit",arguments)},runTests:function(){var e=this;e.callActions("beforeRunTests",arguments),e.has.promises="function"==typeof t.Promise,e.has.transitions="unsupported"!==e.transitionPrefix,e.callActions("afterRunTests",arguments),n.freeze(e.has)},setPrefixes:function(){var t=this;t.callActions("beforeSetPrefixes",arguments),t.transitionPrefix=n.getPrefix(t.canary,"Transition",t.VENDORS),t.transformPrefix=n.getPrefix(t.canary,"Transform",t.VENDORS),t.boxSizingPrefix=n.getPrefix(t.canary,"BoxSizing",t.VENDORS),t.boxSizingProp=t.boxSizingPrefix?t.boxSizingPrefix+n.pascalCase(t.BOX_SIZING_PROP):t.BOX_SIZING_PROP,t.transitionProp=t.transitionPrefix?t.transitionPrefix+n.pascalCase(t.TRANSITION_PROP):t.TRANSITION_PROP,t.transformProp=t.transformPrefix?t.transformPrefix+n.pascalCase(t.TRANSFORM_PROP):t.TRANSFORM_PROP,t.transformRule=t.transformPrefix?"-"+t.transformPrefix+"-"+t.TRANSFORM_PROP:t.TRANSFORM_PROP,t.perspectiveProp=t.transformPrefix?t.transformPrefix+n.pascalCase(t.PERSPECTIVE_PROP):t.PERSPECTIVE_PROP,t.perspectiveOriginProp=t.transformPrefix?t.transformPrefix+n.pascalCase(t.PERSPECTIVE_ORIGIN_PROP):t.PERSPECTIVE_ORIGIN_PROP,t.callActions("afterSetPrefixes",arguments)}}),e.Has=function(){this.transitions=!1,this.promises=!1,n.seal(this)},e.features=new e.Features,e.features.init(),e.ConfigAnimation=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.effects="fade scale",this.effectsIn="",this.effectsOut="",this.duration=600,this.easing="ease",this.applyPerspective=!0,this.perspectiveDistance="3000px",this.perspectiveOrigin="50% 50%",this.queue=!0,this.queueLimit=3,this.animateResizeContainer=!0,this.animateResizeTargets=!1,this.staggerSequence=null,this.reverseOut=!1,this.nudge=!0,this.clampHeight=!0,this.clampWidth=!0,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigAnimation),e.ConfigAnimation.prototype=Object.create(e.Base.prototype),e.ConfigAnimation.prototype.constructor=e.ConfigAnimation,e.ConfigBehavior=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.liveSort=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigBehavior),e.ConfigBehavior.prototype=Object.create(e.Base.prototype),e.ConfigBehavior.prototype.constructor=e.ConfigBehavior,e.ConfigCallbacks=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.onMixStart=null,this.onMixBusy=null,this.onMixEnd=null,this.onMixFail=null,this.onMixClick=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigCallbacks),e.ConfigCallbacks.prototype=Object.create(e.Base.prototype),e.ConfigCallbacks.prototype.constructor=e.ConfigCallbacks,e.ConfigControls=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.live=!1,this.scope="global",this.toggleLogic="or",this.toggleDefault="all",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigControls),e.ConfigControls.prototype=Object.create(e.Base.prototype),e.ConfigControls.prototype.constructor=e.ConfigControls,e.ConfigClassNames=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.block="mixitup",this.elementContainer="container",this.elementFilter="control",this.elementSort="control",this.elementMultimix="control",this.elementToggle="control",this.modifierActive="active",this.modifierDisabled="disabled",this.modifierFailed="failed",this.delineatorElement="-",this.delineatorModifier="-",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigClassNames),e.ConfigClassNames.prototype=Object.create(e.Base.prototype),e.ConfigClassNames.prototype.constructor=e.ConfigClassNames,e.ConfigData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.uidKey="",this.dirtyCheck=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigData),e.ConfigData.prototype=Object.create(e.Base.prototype),e.ConfigData.prototype.constructor=e.ConfigData,e.ConfigDebug=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.enable=!1,this.showWarnings=!0,this.fauxAsync=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigDebug),e.ConfigDebug.prototype=Object.create(e.Base.prototype),e.ConfigDebug.prototype.constructor=e.ConfigDebug,e.ConfigLayout=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.allowNestedTargets=!0,this.containerClassName="",this.siblingBefore=null,this.siblingAfter=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigLayout),e.ConfigLayout.prototype=Object.create(e.Base.prototype),e.ConfigLayout.prototype.constructor=e.ConfigLayout,e.ConfigLoad=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.filter="all",this.sort="default:asc",this.dataset=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigLoad),e.ConfigLoad.prototype=Object.create(e.Base.prototype),e.ConfigLoad.prototype.constructor=e.ConfigLoad,e.ConfigSelectors=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.target=".mix",this.control="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigSelectors),e.ConfigSelectors.prototype=Object.create(e.Base.prototype),e.ConfigSelectors.prototype.constructor=e.ConfigSelectors,e.ConfigRender=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.target=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigRender),e.ConfigRender.prototype=Object.create(e.Base.prototype),e.ConfigRender.prototype.constructor=e.ConfigRender,e.ConfigTemplates=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.ConfigTemplates),e.ConfigTemplates.prototype=Object.create(e.Base.prototype),e.ConfigTemplates.prototype.constructor=e.ConfigTemplates,e.Config=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.animation=new e.ConfigAnimation,this.behavior=new e.ConfigBehavior,this.callbacks=new e.ConfigCallbacks,this.controls=new e.ConfigControls,this.classNames=new e.ConfigClassNames,this.data=new e.ConfigData,this.debug=new e.ConfigDebug,this.layout=new e.ConfigLayout,this.load=new e.ConfigLoad,this.selectors=new e.ConfigSelectors,this.render=new e.ConfigRender,this.templates=new e.ConfigTemplates,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Config),e.Config.prototype=Object.create(e.Base.prototype),e.Config.prototype.constructor=e.Config,e.MixerDom=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.document=null,this.body=null,this.container=null,this.parent=null,this.targets=[],this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.MixerDom),e.MixerDom.prototype=Object.create(e.Base.prototype),e.MixerDom.prototype.constructor=e.MixerDom,e.UiClassNames=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.base="",this.active="",this.disabled="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.UiClassNames),e.UiClassNames.prototype=Object.create(e.Base.prototype),e.UiClassNames.prototype.constructor=e.UiClassNames,e.CommandDataset=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.dataset=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandDataset),e.CommandDataset.prototype=Object.create(e.Base.prototype),e.CommandDataset.prototype.constructor=e.CommandDataset,e.CommandMultimix=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.filter=null,this.sort=null,this.insert=null,this.remove=null,this.changeLayout=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandMultimix),e.CommandMultimix.prototype=Object.create(e.Base.prototype),e.CommandMultimix.prototype.constructor=e.CommandMultimix,e.CommandFilter=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.selector="",this.collection=null,this.action="show",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandFilter),e.CommandFilter.prototype=Object.create(e.Base.prototype),e.CommandFilter.prototype.constructor=e.CommandFilter,e.CommandSort=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.sortString="",this.attribute="",this.order="asc",this.collection=null,this.next=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandSort),e.CommandSort.prototype=Object.create(e.Base.prototype),e.CommandSort.prototype.constructor=e.CommandSort,e.CommandInsert=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.index=0,this.collection=[],this.position="before",this.sibling=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandInsert),e.CommandInsert.prototype=Object.create(e.Base.prototype),e.CommandInsert.prototype.constructor=e.CommandInsert,e.CommandRemove=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.targets=[],this.collection=[],this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandRemove),e.CommandRemove.prototype=Object.create(e.Base.prototype),e.CommandRemove.prototype.constructor=e.CommandRemove,e.CommandChangeLayout=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.containerClassName="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.CommandChangeLayout),e.CommandChangeLayout.prototype=Object.create(e.Base.prototype),e.CommandChangeLayout.prototype.constructor=e.CommandChangeLayout,e.ControlDefinition=function(t,o,i,s){e.Base.call(this),this.callActions("beforeConstruct"),this.type=t,this.selector=o,this.live=i||!1,this.parent=s||"",this.callActions("afterConstruct"),n.freeze(this),n.seal(this)},e.BaseStatic.call(e.ControlDefinition),e.ControlDefinition.prototype=Object.create(e.Base.prototype),e.ControlDefinition.prototype.constructor=e.ControlDefinition,e.controlDefinitions=[],e.controlDefinitions.push(new e.ControlDefinition("multimix","[data-filter][data-sort]")),e.controlDefinitions.push(new e.ControlDefinition("filter","[data-filter]")),e.controlDefinitions.push(new e.ControlDefinition("sort","[data-sort]")),e.controlDefinitions.push(new e.ControlDefinition("toggle","[data-toggle]")),e.Control=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.selector="",this.bound=[],this.pending=-1,this.type="",this.status="inactive",this.filter="",this.sort="",this.canDisable=!1,this.handler=null,this.classNames=new e.UiClassNames,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Control),e.Control.prototype=Object.create(e.Base.prototype),n.extend(e.Control.prototype,{constructor:e.Control,init:function(t,n,o){var i=this;if(this.callActions("beforeInit",arguments),i.el=t,i.type=n,i.selector=o,i.selector)i.status="live";else switch(i.canDisable="boolean"==typeof i.el.disable,i.type){case"filter":i.filter=i.el.getAttribute("data-filter");break;case"toggle":i.filter=i.el.getAttribute("data-toggle");break;case"sort":i.sort=i.el.getAttribute("data-sort");break;case"multimix":i.filter=i.el.getAttribute("data-filter"),i.sort=i.el.getAttribute("data-sort")}i.bindClick(),e.controls.push(i),this.callActions("afterInit",arguments)},isBound:function(t){var e=this,n=!1;return this.callActions("beforeIsBound",arguments),n=e.bound.indexOf(t)>-1,e.callFilters("afterIsBound",n,arguments)},addBinding:function(t){var e=this;this.callActions("beforeAddBinding",arguments),e.isBound()||e.bound.push(t),this.callActions("afterAddBinding",arguments)},removeBinding:function(t){var n=this,o=-1;this.callActions("beforeRemoveBinding",arguments),(o=n.bound.indexOf(t))>-1&&n.bound.splice(o,1),n.bound.length<1&&(n.unbindClick(),o=e.controls.indexOf(n),e.controls.splice(o,1),"active"===n.status&&n.renderStatus(n.el,"inactive")),this.callActions("afterRemoveBinding",arguments)},bindClick:function(){var t=this;this.callActions("beforeBindClick",arguments),t.handler=function(e){t.handleClick(e)},n.on(t.el,"click",t.handler),this.callActions("afterBindClick",arguments)},unbindClick:function(){var t=this;this.callActions("beforeUnbindClick",arguments),n.off(t.el,"click",t.handler),t.handler=null,this.callActions("afterUnbindClick",arguments)},handleClick:function(t){var o=this,i=null,s=null,r=!1,a={},l=null,c=[],d=-1;if(this.callActions("beforeHandleClick",arguments),this.pending=0,s=o.bound[0],i=o.selector?n.closestParent(t.target,s.config.selectors.control+o.selector,!0,s.dom.document):o.el){switch(o.type){case"filter":a.filter=o.filter||i.getAttribute("data-filter");break;case"sort":a.sort=o.sort||i.getAttribute("data-sort");break;case"multimix":a.filter=o.filter||i.getAttribute("data-filter"),a.sort=o.sort||i.getAttribute("data-sort");break;case"toggle":a.filter=o.filter||i.getAttribute("data-toggle"),r="live"===o.status?n.hasClass(i,o.classNames.active):"active"===o.status}for(d=0;d<o.bound.length;d++)l=new e.CommandMultimix,n.extend(l,a),c.push(l);for(c=o.callFilters("commandsHandleClick",c,arguments),o.pending=o.bound.length,d=0;s=o.bound[d];d++)(a=c[d])&&(s.lastClicked||(s.lastClicked=i),e.events.fire("mixClick",s.dom.container,{state:s.state,instance:s,originalEvent:t,control:s.lastClicked},s.dom.document),"function"==typeof s.config.callbacks.onMixClick&&!1===s.config.callbacks.onMixClick.call(s.lastClicked,s.state,t,s)||("toggle"===o.type?r?s.toggleOff(a.filter):s.toggleOn(a.filter):s.multimix(a)));this.callActions("afterHandleClick",arguments)}else o.callActions("afterHandleClick",arguments)},update:function(t,n){var o=this,i=new e.CommandMultimix;o.callActions("beforeUpdate",arguments),o.pending--,o.pending=Math.max(0,o.pending),o.pending>0||("live"===o.status?o.updateLive(t,n):(i.sort=o.sort,i.filter=o.filter,o.callFilters("actionsUpdate",i,arguments),o.parseStatusChange(o.el,t,i,n)),o.callActions("afterUpdate",arguments))},updateLive:function(t,n){var o=this,i=null,s=null,r=null,a=-1;if(o.callActions("beforeUpdateLive",arguments),o.el){for(i=o.el.querySelectorAll(o.selector),a=0;r=i[a];a++){switch(s=new e.CommandMultimix,o.type){case"filter":s.filter=r.getAttribute("data-filter");break;case"sort":s.sort=r.getAttribute("data-sort");break;case"multimix":s.filter=r.getAttribute("data-filter"),s.sort=r.getAttribute("data-sort");break;case"toggle":s.filter=r.getAttribute("data-toggle")}s=o.callFilters("actionsUpdateLive",s,arguments),o.parseStatusChange(r,t,s,n)}o.callActions("afterUpdateLive",arguments)}},parseStatusChange:function(t,e,n,o){var i=this,s="",r=-1;switch(i.callActions("beforeParseStatusChange",arguments),i.type){case"filter":e.filter===n.filter?i.renderStatus(t,"active"):i.renderStatus(t,"inactive");break;case"multimix":e.sort===n.sort&&e.filter===n.filter?i.renderStatus(t,"active"):i.renderStatus(t,"inactive");break;case"sort":e.sort.match(/:asc/g)&&(s=e.sort.replace(/:asc/g,"")),e.sort===n.sort||s===n.sort?i.renderStatus(t,"active"):i.renderStatus(t,"inactive");break;case"toggle":for(o.length<1&&i.renderStatus(t,"inactive"),e.filter===n.filter&&i.renderStatus(t,"active"),r=0;r<o.length;r++){if(o[r]===n.filter){i.renderStatus(t,"active");break}i.renderStatus(t,"inactive")}}i.callActions("afterParseStatusChange",arguments)},renderStatus:function(t,e){var o=this;switch(o.callActions("beforeRenderStatus",arguments),e){case"active":n.addClass(t,o.classNames.active),n.removeClass(t,o.classNames.disabled),o.canDisable&&(o.el.disabled=!1);break;case"inactive":n.removeClass(t,o.classNames.active),n.removeClass(t,o.classNames.disabled),o.canDisable&&(o.el.disabled=!1);break;case"disabled":o.canDisable&&(o.el.disabled=!0),n.addClass(t,o.classNames.disabled),n.removeClass(t,o.classNames.active)}"live"!==o.status&&(o.status=e),o.callActions("afterRenderStatus",arguments)}}),e.controls=[],e.StyleData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.x=0,this.y=0,this.top=0,this.right=0,this.bottom=0,this.left=0,this.width=0,this.height=0,this.marginRight=0,this.marginBottom=0,this.opacity=0,this.scale=new e.TransformData,this.translateX=new e.TransformData,this.translateY=new e.TransformData,this.translateZ=new e.TransformData,this.rotateX=new e.TransformData,this.rotateY=new e.TransformData,this.rotateZ=new e.TransformData,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.StyleData),e.StyleData.prototype=Object.create(e.Base.prototype),e.StyleData.prototype.constructor=e.StyleData,e.TransformData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.value=0,this.unit="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.TransformData),e.TransformData.prototype=Object.create(e.Base.prototype),e.TransformData.prototype.constructor=e.TransformData,e.TransformDefaults=function(){e.StyleData.apply(this),this.callActions("beforeConstruct"),this.scale.value=.01,this.scale.unit="",this.translateX.value=20,this.translateX.unit="px",this.translateY.value=20,this.translateY.unit="px",this.translateZ.value=20,this.translateZ.unit="px",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateY.value=90,this.rotateY.unit="deg",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateZ.value=180,this.rotateZ.unit="deg",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.TransformDefaults),e.TransformDefaults.prototype=Object.create(e.StyleData.prototype),e.TransformDefaults.prototype.constructor=e.TransformDefaults,e.transformDefaults=new e.TransformDefaults,e.EventDetail=function(){this.state=null,this.futureState=null,this.instance=null,this.originalEvent=null},e.Events=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.mixStart=null,this.mixBusy=null,this.mixEnd=null,this.mixFail=null,this.mixClick=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Events),e.Events.prototype=Object.create(e.Base.prototype),e.Events.prototype.constructor=e.Events,e.Events.prototype.fire=function(t,o,i,s){var r=this,a=null,l=new e.EventDetail;if(r.callActions("beforeFire",arguments),void 0===r[t])throw new Error('Event type "'+t+'" not found.');l.state=new e.State,n.extend(l.state,i.state),i.futureState&&(l.futureState=new e.State,n.extend(l.futureState,i.futureState)),l.instance=i.instance,i.originalEvent&&(l.originalEvent=i.originalEvent),a=n.getCustomEvent(t,l,s),r.callFilters("eventFire",a,arguments),o.dispatchEvent(a)},e.events=new e.Events,e.QueueItem=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.args=[],this.instruction=null,this.triggerElement=null,this.deferred=null,this.isToggling=!1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.QueueItem),e.QueueItem.prototype=Object.create(e.Base.prototype),e.QueueItem.prototype.constructor=e.QueueItem,e.Mixer=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.config=new e.Config,this.id="",this.isBusy=!1,this.isToggling=!1,this.incPadding=!0,this.controls=[],this.targets=[],this.origOrder=[],this.cache={},this.toggleArray=[],this.targetsMoved=0,this.targetsImmovable=0,this.targetsBound=0,this.targetsDone=0,this.staggerDuration=0,this.effectsIn=null,this.effectsOut=null,this.transformIn=[],this.transformOut=[],this.queue=[],this.state=null,this.lastOperation=null,this.lastClicked=null,this.userCallback=null,this.userDeferred=null,this.dom=new e.MixerDom,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Mixer),e.Mixer.prototype=Object.create(e.Base.prototype),n.extend(e.Mixer.prototype,{constructor:e.Mixer,attach:function(o,i,s,r){var a=this,l=null,c=-1;for(a.callActions("beforeAttach",arguments),a.id=s,r&&n.extend(a.config,r,!0,!0),a.sanitizeConfig(),a.cacheDom(o,i),a.config.layout.containerClassName&&n.addClass(a.dom.container,a.config.layout.containerClassName),e.features.has.transitions||(a.config.animation.enable=!1),void 0===t.console&&(a.config.debug.showWarnings=!1),a.config.data.uidKey&&(a.config.controls.enable=!1),a.indexTargets(),a.state=a.getInitialState(),c=0;l=a.lastOperation.toHide[c];c++)l.hide();a.config.controls.enable&&(a.initControls(),a.buildToggleArray(null,a.state),a.updateControls({filter:a.state.activeFilter,sort:a.state.activeSort})),a.parseEffects(),a.callActions("afterAttach",arguments)},sanitizeConfig:function(){var t=this;t.callActions("beforeSanitizeConfig",arguments),t.config.controls.scope=t.config.controls.scope.toLowerCase().trim(),t.config.controls.toggleLogic=t.config.controls.toggleLogic.toLowerCase().trim(),t.config.controls.toggleDefault=t.config.controls.toggleDefault.toLowerCase().trim(),t.config.animation.effects=t.config.animation.effects.trim(),t.callActions("afterSanitizeConfig",arguments)},getInitialState:function(){var t=this,n=new e.State,o=new e.Operation;if(t.callActions("beforeGetInitialState",arguments),n.activeContainerClassName=t.config.layout.containerClassName,t.config.load.dataset){if(!t.config.data.uidKey||"string"!=typeof t.config.data.uidKey)throw new TypeError(e.messages.errorConfigDataUidKeyNotSet());o.startDataset=o.newDataset=n.activeDataset=t.config.load.dataset.slice(),o.startContainerClassName=o.newContainerClassName=n.activeContainerClassName,o.show=t.targets.slice(),n=t.callFilters("stateGetInitialState",n,arguments)}else n.activeFilter=t.parseFilterArgs([t.config.load.filter]).command,n.activeSort=t.parseSortArgs([t.config.load.sort]).command,n.totalTargets=t.targets.length,(n=t.callFilters("stateGetInitialState",n,arguments)).activeSort.collection||n.activeSort.attribute||"random"===n.activeSort.order||"desc"===n.activeSort.order?(o.newSort=n.activeSort,t.sortOperation(o),t.printSort(!1,o),t.targets=o.newOrder):o.startOrder=o.newOrder=t.targets,o.startFilter=o.newFilter=n.activeFilter,o.startSort=o.newSort=n.activeSort,o.startContainerClassName=o.newContainerClassName=n.activeContainerClassName,"all"===o.newFilter.selector?o.newFilter.selector=t.config.selectors.target:"none"===o.newFilter.selector&&(o.newFilter.selector="");return o=t.callFilters("operationGetInitialState",o,[n]),t.lastOperation=o,o.newFilter&&t.filterOperation(o),t.buildState(o)},cacheDom:function(t,e){var n=this;n.callActions("beforeCacheDom",arguments),n.dom.document=e,n.dom.body=n.dom.document.querySelector("body"),n.dom.container=t,n.dom.parent=t,n.callActions("afterCacheDom",arguments)},indexTargets:function(){var t=this,o=null,i=null,s=null,r=-1;if(t.callActions("beforeIndexTargets",arguments),t.dom.targets=t.config.layout.allowNestedTargets?t.dom.container.querySelectorAll(t.config.selectors.target):n.children(t.dom.container,t.config.selectors.target,t.dom.document),t.dom.targets=n.arrayFromList(t.dom.targets),t.targets=[],(s=t.config.load.dataset)&&s.length!==t.dom.targets.length)throw new Error(e.messages.errorDatasetPrerenderedMismatch());if(t.dom.targets.length){for(r=0;i=t.dom.targets[r];r++)(o=new e.Target).init(i,t,s?s[r]:void 0),o.isInDom=!0,t.targets.push(o);t.dom.parent=t.dom.targets[0].parentElement===t.dom.container?t.dom.container:t.dom.targets[0].parentElement}t.origOrder=t.targets,t.callActions("afterIndexTargets",arguments)},initControls:function(){var t=this,n="",o=null,i=null,s=null,r=null,a=null,l=-1,c=-1;switch(t.callActions("beforeInitControls",arguments),t.config.controls.scope){case"local":s=t.dom.container;break;case"global":s=t.dom.document;break;default:throw new Error(e.messages.errorConfigInvalidControlsScope())}for(l=0;n=e.controlDefinitions[l];l++)if(t.config.controls.live||n.live){if(n.parent){if(!(r=t.dom[n.parent])||r.length<0)continue;"number"!=typeof r.length&&(r=[r])}else r=[s];for(c=0;i=r[c];c++)a=t.getControl(i,n.type,n.selector),t.controls.push(a)}else for(o=s.querySelectorAll(t.config.selectors.control+n.selector),c=0;i=o[c];c++)(a=t.getControl(i,n.type,""))&&t.controls.push(a);t.callActions("afterInitControls",arguments)},getControl:function(t,o,i){var s=this,r=null,a=-1;if(s.callActions("beforeGetControl",arguments),!i)for(a=0;r=e.controls[a];a++){if(r.el===t&&r.isBound(s))return s.callFilters("controlGetControl",null,arguments);if(r.el===t&&r.type===o&&r.selector===i)return r.addBinding(s),s.callFilters("controlGetControl",r,arguments)}return(r=new e.Control).init(t,o,i),r.classNames.base=n.getClassname(s.config.classNames,o),r.classNames.active=n.getClassname(s.config.classNames,o,s.config.classNames.modifierActive),r.classNames.disabled=n.getClassname(s.config.classNames,o,s.config.classNames.modifierDisabled),r.addBinding(s),s.callFilters("controlGetControl",r,arguments)},getToggleSelector:function(){var t=this,e="or"===t.config.controls.toggleLogic?", ":"",o="";return t.callActions("beforeGetToggleSelector",arguments),t.toggleArray=n.clean(t.toggleArray),""===(o=t.toggleArray.join(e))&&(o=t.config.controls.toggleDefault),t.callFilters("selectorGetToggleSelector",o,arguments)},buildToggleArray:function(t,e){var o=this,i="";if(o.callActions("beforeBuildToggleArray",arguments),t&&t.filter)i=t.filter.selector.replace(/\s/g,"");else{if(!e)return;i=e.activeFilter.selector.replace(/\s/g,"")}i!==o.config.selectors.target&&"all"!==i||(i=""),"or"===o.config.controls.toggleLogic?o.toggleArray=i.split(","):o.toggleArray=o.splitCompoundSelector(i),o.toggleArray=n.clean(o.toggleArray),o.callActions("afterBuildToggleArray",arguments)},splitCompoundSelector:function(t){var e=t.split(/([\.\[])/g),n=[],o="",i=-1;for(""===e[0]&&e.shift(),i=0;i<e.length;i++)i%2==0&&(o=""),o+=e[i],i%2!=0&&n.push(o);return n},updateControls:function(t){var o=this,i=null,s=new e.CommandMultimix,r=-1;for(o.callActions("beforeUpdateControls",arguments),t.filter?s.filter=t.filter.selector:s.filter=o.state.activeFilter.selector,t.sort?s.sort=o.buildSortString(t.sort):s.sort=o.buildSortString(o.state.activeSort),s.filter===o.config.selectors.target&&(s.filter="all"),""===s.filter&&(s.filter="none"),n.freeze(s),r=0;i=o.controls[r];r++)i.update(s,o.toggleArray);o.callActions("afterUpdateControls",arguments)},buildSortString:function(t){var e="";return e+=t.sortString,t.next&&(e+=" "+this.buildSortString(t.next)),e},insertTargets:function(t,o){var i=this,s=null,r=-1,a=null,l=null,c=null,d=-1;if(i.callActions("beforeInsertTargets",arguments),void 0===t.index&&(t.index=0),s=i.getNextSibling(t.index,t.sibling,t.position),a=i.dom.document.createDocumentFragment(),r=s?n.index(s,i.config.selectors.target):i.targets.length,t.collection){for(d=0;c=t.collection[d];d++){if(i.dom.targets.indexOf(c)>-1)throw new Error(e.messages.errorInsertPreexistingElement());c.style.display="none",a.appendChild(c),a.appendChild(i.dom.document.createTextNode(" ")),n.isElement(c,i.dom.document)&&c.matches(i.config.selectors.target)&&((l=new e.Target).init(c,i),l.isInDom=!0,i.targets.splice(r,0,l),r++)}i.dom.parent.insertBefore(a,s)}o.startOrder=i.origOrder=i.targets,i.callActions("afterInsertTargets",arguments)},getNextSibling:function(t,e,n){var o=this,i=null;return t=Math.max(t,0),e&&"before"===n?i=e:e&&"after"===n?i=e.nextElementSibling||null:o.targets.length>0&&void 0!==t?i=t<o.targets.length||!o.targets.length?o.targets[t].dom.el:o.targets[o.targets.length-1].dom.el.nextElementSibling:0===o.targets.length&&o.dom.parent.children.length>0&&(o.config.layout.siblingAfter?i=o.config.layout.siblingAfter:o.config.layout.siblingBefore?i=o.config.layout.siblingBefore.nextElementSibling:o.dom.parent.children[0]),o.callFilters("elementGetNextSibling",i,arguments)},filterOperation:function(t){var e=this,n=!1,o=-1,i="",s=null,r=-1;for(e.callActions("beforeFilterOperation",arguments),i=t.newFilter.action,r=0;s=t.newOrder[r];r++)n=t.newFilter.collection?t.newFilter.collection.indexOf(s.dom.el)>-1:""!==t.newFilter.selector&&s.dom.el.matches(t.newFilter.selector),e.evaluateHideShow(n,s,i,t);if(t.toRemove.length)for(r=0;s=t.show[r];r++)t.toRemove.indexOf(s)>-1&&(t.show.splice(r,1),(o=t.toShow.indexOf(s))>-1&&t.toShow.splice(o,1),t.toHide.push(s),t.hide.push(s),r--);t.matching=t.show.slice(),0===t.show.length&&""!==t.newFilter.selector&&0!==e.targets.length&&(t.hasFailed=!0),e.callActions("afterFilterOperation",arguments)},evaluateHideShow:function(t,e,n,o){var i=this,s=!1,r=Array.prototype.slice.call(arguments,1);s=i.callFilters("testResultEvaluateHideShow",t,r),i.callActions("beforeEvaluateHideShow",arguments),!0===s&&"show"===n||!1===s&&"hide"===n?(o.show.push(e),!e.isShown&&o.toShow.push(e)):(o.hide.push(e),e.isShown&&o.toHide.push(e)),i.callActions("afterEvaluateHideShow",arguments)},sortOperation:function(t){var o=this,i=[],s=null,r=null,a=-1;if(o.callActions("beforeSortOperation",arguments),t.startOrder=o.targets,t.newSort.collection){for(i=[],a=0;r=t.newSort.collection[a];a++){if(o.dom.targets.indexOf(r)<0)throw new Error(e.messages.errorSortNonExistentElement());(s=new e.Target).init(r,o),s.isInDom=!0,i.push(s)}t.newOrder=i}else"random"===t.newSort.order?t.newOrder=n.arrayShuffle(t.startOrder):""===t.newSort.attribute?(t.newOrder=o.origOrder.slice(),"desc"===t.newSort.order&&t.newOrder.reverse()):(t.newOrder=t.startOrder.slice(),t.newOrder.sort((function(e,n){return o.compare(e,n,t.newSort)})));n.isEqualArray(t.newOrder,t.startOrder)&&(t.willSort=!1),o.callActions("afterSortOperation",arguments)},compare:function(t,e,n){var o=this,i=n.order,s=o.getAttributeValue(t,n.attribute),r=o.getAttributeValue(e,n.attribute);return isNaN(1*s)||isNaN(1*r)?(s=s.toLowerCase(),r=r.toLowerCase()):(s*=1,r*=1),s<r?"asc"===i?-1:1:s>r?"asc"===i?1:-1:s===r&&n.next?o.compare(t,e,n.next):0},getAttributeValue:function(t,n){var o=this,i="";return null===(i=t.dom.el.getAttribute("data-"+n))&&o.config.debug.showWarnings&&console.warn(e.messages.warningInconsistentSortingAttributes({attribute:"data-"+n})),o.callFilters("valueGetAttributeValue",i||0,arguments)},printSort:function(e,o){var i=this,s=e?o.newOrder:o.startOrder,r=e?o.startOrder:o.newOrder,a=s.length?s[s.length-1].dom.el.nextElementSibling:null,l=t.document.createDocumentFragment(),c=null,d=null,u=null,p=-1;for(i.callActions("beforePrintSort",arguments),p=0;d=s[p];p++)"absolute"!==(u=d.dom.el).style.position&&(n.removeWhitespace(u.previousSibling),u.parentElement.removeChild(u));for((c=a?a.previousSibling:i.dom.parent.lastChild)&&"#text"===c.nodeName&&n.removeWhitespace(c),p=0;d=r[p];p++)u=d.dom.el,n.isElement(l.lastChild)&&l.appendChild(t.document.createTextNode(" ")),l.appendChild(u);i.dom.parent.firstChild&&i.dom.parent.firstChild!==a&&l.insertBefore(t.document.createTextNode(" "),l.childNodes[0]),a?(l.appendChild(t.document.createTextNode(" ")),i.dom.parent.insertBefore(l,a)):i.dom.parent.appendChild(l),i.callActions("afterPrintSort",arguments)},parseSortString:function(t,o){var i=this,s=t.split(" "),r=o,a=[],l=-1;for(l=0;l<s.length;l++){switch(a=s[l].split(":"),r.sortString=s[l],r.attribute=n.dashCase(a[0]),r.order=a[1]||"asc",r.attribute){case"default":r.attribute="";break;case"random":r.attribute="",r.order="random"}if(!r.attribute||"random"===r.order)break;l<s.length-1&&(r.next=new e.CommandSort,n.freeze(r),r=r.next)}return i.callFilters("commandsParseSort",o,arguments)},parseEffects:function(){var t=this,n="",o=t.config.animation.effectsIn||t.config.animation.effects,i=t.config.animation.effectsOut||t.config.animation.effects;for(n in t.callActions("beforeParseEffects",arguments),t.effectsIn=new e.StyleData,t.effectsOut=new e.StyleData,t.transformIn=[],t.transformOut=[],t.effectsIn.opacity=t.effectsOut.opacity=1,t.parseEffect("fade",o,t.effectsIn,t.transformIn),t.parseEffect("fade",i,t.effectsOut,t.transformOut,!0),e.transformDefaults)e.transformDefaults[n]instanceof e.TransformData&&(t.parseEffect(n,o,t.effectsIn,t.transformIn),t.parseEffect(n,i,t.effectsOut,t.transformOut,!0));t.parseEffect("stagger",o,t.effectsIn,t.transformIn),t.parseEffect("stagger",i,t.effectsOut,t.transformOut,!0),t.callActions("afterParseEffects",arguments)},parseEffect:function(t,n,o,i,s){var r=this,a=/\(([^)]+)\)/,l=-1,c="",d="",u=["%","px","em","rem","vh","vw","deg"],p="",f=-1;if(r.callActions("beforeParseEffect",arguments),"string"!=typeof n)throw new TypeError(e.messages.errorConfigInvalidAnimationEffects());if(n.indexOf(t)<0)"stagger"===t&&(r.staggerDuration=0);else{switch((l=n.indexOf(t+"("))>-1&&(c=n.substring(l),d=a.exec(c)[1]),t){case"fade":o.opacity=d?parseFloat(d):0;break;case"stagger":r.staggerDuration=d?parseFloat(d):100;break;default:if(s&&r.config.animation.reverseOut&&"scale"!==t?o[t].value=-1*(d?parseFloat(d):e.transformDefaults[t].value):o[t].value=d?parseFloat(d):e.transformDefaults[t].value,d){for(f=0;p=u[f];f++)if(d.indexOf(p)>-1){o[t].unit=p;break}}else o[t].unit=e.transformDefaults[t].unit;i.push(t+"("+o[t].value+o[t].unit+")")}r.callActions("afterParseEffect",arguments)}},buildState:function(t){var n=this,o=new e.State,i=null,s=-1;for(n.callActions("beforeBuildState",arguments),s=0;i=n.targets[s];s++)(!t.toRemove.length||t.toRemove.indexOf(i)<0)&&o.targets.push(i.dom.el);for(s=0;i=t.matching[s];s++)o.matching.push(i.dom.el);for(s=0;i=t.show[s];s++)o.show.push(i.dom.el);for(s=0;i=t.hide[s];s++)(!t.toRemove.length||t.toRemove.indexOf(i)<0)&&o.hide.push(i.dom.el);return o.id=n.id,o.container=n.dom.container,o.activeFilter=t.newFilter,o.activeSort=t.newSort,o.activeDataset=t.newDataset,o.activeContainerClassName=t.newContainerClassName,o.hasFailed=t.hasFailed,o.totalTargets=n.targets.length,o.totalShow=t.show.length,o.totalHide=t.hide.length,o.totalMatching=t.matching.length,o.triggerElement=t.triggerElement,n.callFilters("stateBuildState",o,arguments)},goMix:function(o,i){var s=this,r=null;return s.callActions("beforeGoMix",arguments),s.config.animation.duration&&s.config.animation.effects&&n.isVisible(s.dom.container)||(o=!1),i.toShow.length||i.toHide.length||i.willSort||i.willChangeLayout||(o=!1),i.startState.show.length||i.show.length||(o=!1),e.events.fire("mixStart",s.dom.container,{state:i.startState,futureState:i.newState,instance:s},s.dom.document),"function"==typeof s.config.callbacks.onMixStart&&s.config.callbacks.onMixStart.call(s.dom.container,i.startState,i.newState,s),n.removeClass(s.dom.container,n.getClassname(s.config.classNames,"container",s.config.classNames.modifierFailed)),r=s.userDeferred?s.userDeferred:s.userDeferred=n.defer(e.libraries),s.isBusy=!0,o&&e.features.has.transitions?(t.pageYOffset!==i.docState.scrollTop&&t.scrollTo(i.docState.scrollLeft,i.docState.scrollTop),s.config.animation.applyPerspective&&(s.dom.parent.style[e.features.perspectiveProp]=s.config.animation.perspectiveDistance,s.dom.parent.style[e.features.perspectiveOriginProp]=s.config.animation.perspectiveOrigin),s.config.animation.animateResizeContainer&&i.startHeight!==i.newHeight&&i.viewportDeltaY!==i.startHeight-i.newHeight&&(s.dom.parent.style.height=i.startHeight+"px"),s.config.animation.animateResizeContainer&&i.startWidth!==i.newWidth&&i.viewportDeltaX!==i.startWidth-i.newWidth&&(s.dom.parent.style.width=i.startWidth+"px"),i.startHeight===i.newHeight&&(s.dom.parent.style.height=i.startHeight+"px"),i.startWidth===i.newWidth&&(s.dom.parent.style.width=i.startWidth+"px"),i.startHeight===i.newHeight&&i.startWidth===i.newWidth&&(s.dom.parent.style.overflow="hidden"),requestAnimationFrame((function(){s.moveTargets(i)})),s.callFilters("promiseGoMix",r.promise,arguments)):(s.config.debug.fauxAsync?setTimeout((function(){s.cleanUp(i)}),s.config.animation.duration):s.cleanUp(i),s.callFilters("promiseGoMix",r.promise,arguments))},getStartMixData:function(n){var o=this,i=t.getComputedStyle(o.dom.parent),s=o.dom.parent.getBoundingClientRect(),r=null,a={},l=-1,c=i[e.features.boxSizingProp];for(o.incPadding="border-box"===c,o.callActions("beforeGetStartMixData",arguments),l=0;r=n.show[l];l++)a=r.getPosData(),n.showPosData[l]={startPosData:a};for(l=0;r=n.toHide[l];l++)a=r.getPosData(),n.toHidePosData[l]={startPosData:a};n.startX=s.left,n.startY=s.top,n.startHeight=o.incPadding?s.height:s.height-parseFloat(i.paddingTop)-parseFloat(i.paddingBottom)-parseFloat(i.borderTop)-parseFloat(i.borderBottom),n.startWidth=o.incPadding?s.width:s.width-parseFloat(i.paddingLeft)-parseFloat(i.paddingRight)-parseFloat(i.borderLeft)-parseFloat(i.borderRight),o.callActions("afterGetStartMixData",arguments)},setInter:function(t){var e=this,o=null,i=-1;for(e.callActions("beforeSetInter",arguments),e.config.animation.clampHeight&&(e.dom.parent.style.height=t.startHeight+"px",e.dom.parent.style.overflow="hidden"),e.config.animation.clampWidth&&(e.dom.parent.style.width=t.startWidth+"px",e.dom.parent.style.overflow="hidden"),i=0;o=t.toShow[i];i++)o.show();t.willChangeLayout&&(n.removeClass(e.dom.container,t.startContainerClassName),n.addClass(e.dom.container,t.newContainerClassName)),e.callActions("afterSetInter",arguments)},getInterMixData:function(t){var e=this,n=null,o=-1;for(e.callActions("beforeGetInterMixData",arguments),o=0;n=t.show[o];o++)t.showPosData[o].interPosData=n.getPosData();for(o=0;n=t.toHide[o];o++)t.toHidePosData[o].interPosData=n.getPosData();e.callActions("afterGetInterMixData",arguments)},setFinal:function(t){var e=this,n=null,o=-1;for(e.callActions("beforeSetFinal",arguments),t.willSort&&e.printSort(!1,t),o=0;n=t.toHide[o];o++)n.hide();e.callActions("afterSetFinal",arguments)},getFinalMixData:function(e){var o=this,i=null,s=null,r=null,a=-1;for(o.callActions("beforeGetFinalMixData",arguments),a=0;r=e.show[a];a++)e.showPosData[a].finalPosData=r.getPosData();for(a=0;r=e.toHide[a];a++)e.toHidePosData[a].finalPosData=r.getPosData();for((o.config.animation.clampHeight||o.config.animation.clampWidth)&&(o.dom.parent.style.height=o.dom.parent.style.width=o.dom.parent.style.overflow=""),o.incPadding||(i=t.getComputedStyle(o.dom.parent)),s=o.dom.parent.getBoundingClientRect(),e.newX=s.left,e.newY=s.top,e.newHeight=o.incPadding?s.height:s.height-parseFloat(i.paddingTop)-parseFloat(i.paddingBottom)-parseFloat(i.borderTop)-parseFloat(i.borderBottom),e.newWidth=o.incPadding?s.width:s.width-parseFloat(i.paddingLeft)-parseFloat(i.paddingRight)-parseFloat(i.borderLeft)-parseFloat(i.borderRight),e.viewportDeltaX=e.docState.viewportWidth-this.dom.document.documentElement.clientWidth,e.viewportDeltaY=e.docState.viewportHeight-this.dom.document.documentElement.clientHeight,e.willSort&&o.printSort(!0,e),a=0;r=e.toShow[a];a++)r.hide();for(a=0;r=e.toHide[a];a++)r.show();e.willChangeLayout&&(n.removeClass(o.dom.container,e.newContainerClassName),n.addClass(o.dom.container,o.config.layout.containerClassName)),o.callActions("afterGetFinalMixData",arguments)},getTweenData:function(t){var n=this,o=null,i=null,s=Object.getOwnPropertyNames(n.effectsIn),r="",a=null,l=-1,c=-1,d=-1,u=-1;for(n.callActions("beforeGetTweenData",arguments),d=0;o=t.show[d];d++)for((i=t.showPosData[d]).posIn=new e.StyleData,i.posOut=new e.StyleData,i.tweenData=new e.StyleData,o.isShown?(i.posIn.x=i.startPosData.x-i.interPosData.x,i.posIn.y=i.startPosData.y-i.interPosData.y):i.posIn.x=i.posIn.y=0,i.posOut.x=i.finalPosData.x-i.interPosData.x,i.posOut.y=i.finalPosData.y-i.interPosData.y,i.posIn.opacity=o.isShown?1:n.effectsIn.opacity,i.posOut.opacity=1,i.tweenData.opacity=i.posOut.opacity-i.posIn.opacity,o.isShown||n.config.animation.nudge||(i.posIn.x=i.posOut.x,i.posIn.y=i.posOut.y),i.tweenData.x=i.posOut.x-i.posIn.x,i.tweenData.y=i.posOut.y-i.posIn.y,n.config.animation.animateResizeTargets&&(i.posIn.width=i.startPosData.width,i.posIn.height=i.startPosData.height,l=(i.startPosData.width||i.finalPosData.width)-i.interPosData.width,i.posIn.marginRight=i.startPosData.marginRight-l,c=(i.startPosData.height||i.finalPosData.height)-i.interPosData.height,i.posIn.marginBottom=i.startPosData.marginBottom-c,i.posOut.width=i.finalPosData.width,i.posOut.height=i.finalPosData.height,l=(i.finalPosData.width||i.startPosData.width)-i.interPosData.width,i.posOut.marginRight=i.finalPosData.marginRight-l,c=(i.finalPosData.height||i.startPosData.height)-i.interPosData.height,i.posOut.marginBottom=i.finalPosData.marginBottom-c,i.tweenData.width=i.posOut.width-i.posIn.width,i.tweenData.height=i.posOut.height-i.posIn.height,i.tweenData.marginRight=i.posOut.marginRight-i.posIn.marginRight,i.tweenData.marginBottom=i.posOut.marginBottom-i.posIn.marginBottom),u=0;r=s[u];u++)(a=n.effectsIn[r])instanceof e.TransformData&&a.value&&(i.posIn[r].value=a.value,i.posOut[r].value=0,i.tweenData[r].value=i.posOut[r].value-i.posIn[r].value,i.posIn[r].unit=i.posOut[r].unit=i.tweenData[r].unit=a.unit);for(d=0;o=t.toHide[d];d++)for((i=t.toHidePosData[d]).posIn=new e.StyleData,i.posOut=new e.StyleData,i.tweenData=new e.StyleData,i.posIn.x=o.isShown?i.startPosData.x-i.interPosData.x:0,i.posIn.y=o.isShown?i.startPosData.y-i.interPosData.y:0,i.posOut.x=n.config.animation.nudge?0:i.posIn.x,i.posOut.y=n.config.animation.nudge?0:i.posIn.y,i.tweenData.x=i.posOut.x-i.posIn.x,i.tweenData.y=i.posOut.y-i.posIn.y,n.config.animation.animateResizeTargets&&(i.posIn.width=i.startPosData.width,i.posIn.height=i.startPosData.height,l=i.startPosData.width-i.interPosData.width,i.posIn.marginRight=i.startPosData.marginRight-l,c=i.startPosData.height-i.interPosData.height,i.posIn.marginBottom=i.startPosData.marginBottom-c),i.posIn.opacity=1,i.posOut.opacity=n.effectsOut.opacity,i.tweenData.opacity=i.posOut.opacity-i.posIn.opacity,u=0;r=s[u];u++)(a=n.effectsOut[r])instanceof e.TransformData&&a.value&&(i.posIn[r].value=0,i.posOut[r].value=a.value,i.tweenData[r].value=i.posOut[r].value-i.posIn[r].value,i.posIn[r].unit=i.posOut[r].unit=i.tweenData[r].unit=a.unit);n.callActions("afterGetTweenData",arguments)},moveTargets:function(t){var o=this,i=null,s=null,r=null,a="",l=!1,c=-1,d=-1,u=o.checkProgress.bind(o);for(o.callActions("beforeMoveTargets",arguments),d=0;i=t.show[d];d++)s=new e.IMoveData,r=t.showPosData[d],a=i.isShown?"none":"show",(l=o.willTransition(a,t.hasEffect,r.posIn,r.posOut))&&c++,i.show(),s.posIn=r.posIn,s.posOut=r.posOut,s.statusChange=a,s.staggerIndex=c,s.operation=t,s.callback=l?u:null,i.move(s);for(d=0;i=t.toHide[d];d++)r=t.toHidePosData[d],s=new e.IMoveData,a="hide",l=o.willTransition(a,r.posIn,r.posOut),s.posIn=r.posIn,s.posOut=r.posOut,s.statusChange=a,s.staggerIndex=d,s.operation=t,s.callback=l?u:null,i.move(s);o.config.animation.animateResizeContainer&&(o.dom.parent.style[e.features.transitionProp]="height "+o.config.animation.duration+"ms ease, width "+o.config.animation.duration+"ms ease ",requestAnimationFrame((function(){t.startHeight!==t.newHeight&&t.viewportDeltaY!==t.startHeight-t.newHeight&&(o.dom.parent.style.height=t.newHeight+"px"),t.startWidth!==t.newWidth&&t.viewportDeltaX!==t.startWidth-t.newWidth&&(o.dom.parent.style.width=t.newWidth+"px")}))),t.willChangeLayout&&(n.removeClass(o.dom.container,o.config.layout.ContainerClassName),n.addClass(o.dom.container,t.newContainerClassName)),o.callActions("afterMoveTargets",arguments)},hasEffect:function(){var t=this,e=["scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],n="",o=null,i=!1,s=-1;if(1!==t.effectsIn.opacity)return t.callFilters("resultHasEffect",!0,arguments);for(s=0;n=e[s];s++)if(0!==("undefined"!==(o=t.effectsIn[n]).value?o.value:o)){i=!0;break}return t.callFilters("resultHasEffect",i,arguments)},willTransition:function(t,e,o,i){var s=this,r=!1;return r=!(!n.isVisible(s.dom.container)||!("none"!==t&&e||o.x!==i.x||o.y!==i.y)&&(!s.config.animation.animateResizeTargets||o.width===i.width&&o.height===i.height&&o.marginRight===i.marginRight&&o.marginTop===i.marginTop)),s.callFilters("resultWillTransition",r,arguments)},checkProgress:function(t){var e=this;e.targetsDone++,e.targetsBound===e.targetsDone&&e.cleanUp(t)},cleanUp:function(t){var o=this,i=null,s=null,r=null,a=null,l=-1;for(o.callActions("beforeCleanUp",arguments),o.targetsMoved=o.targetsImmovable=o.targetsBound=o.targetsDone=0,l=0;i=t.show[l];l++)i.cleanUp(),i.show();for(l=0;i=t.toHide[l];l++)i.cleanUp(),i.hide();if(t.willSort&&o.printSort(!1,t),o.dom.parent.style[e.features.transitionProp]=o.dom.parent.style.height=o.dom.parent.style.width=o.dom.parent.style.overflow=o.dom.parent.style[e.features.perspectiveProp]=o.dom.parent.style[e.features.perspectiveOriginProp]="",t.willChangeLayout&&(n.removeClass(o.dom.container,t.startContainerClassName),n.addClass(o.dom.container,t.newContainerClassName)),t.toRemove.length){for(l=0;i=o.targets[l];l++)t.toRemove.indexOf(i)>-1&&((s=i.dom.el.previousSibling)&&"#text"===s.nodeName&&(r=i.dom.el.nextSibling)&&"#text"===r.nodeName&&n.removeWhitespace(s),t.willSort||o.dom.parent.removeChild(i.dom.el),o.targets.splice(l,1),i.isInDom=!1,l--);o.origOrder=o.targets}t.willSort&&(o.targets=t.newOrder),o.state=t.newState,o.lastOperation=t,o.dom.targets=o.state.targets,e.events.fire("mixEnd",o.dom.container,{state:o.state,instance:o},o.dom.document),"function"==typeof o.config.callbacks.onMixEnd&&o.config.callbacks.onMixEnd.call(o.dom.container,o.state,o),t.hasFailed&&(e.events.fire("mixFail",o.dom.container,{state:o.state,instance:o},o.dom.document),"function"==typeof o.config.callbacks.onMixFail&&o.config.callbacks.onMixFail.call(o.dom.container,o.state,o),n.addClass(o.dom.container,n.getClassname(o.config.classNames,"container",o.config.classNames.modifierFailed))),"function"==typeof o.userCallback&&o.userCallback.call(o.dom.container,o.state,o),"function"==typeof o.userDeferred.resolve&&o.userDeferred.resolve(o.state),o.userCallback=null,o.userDeferred=null,o.lastClicked=null,o.isToggling=!1,o.isBusy=!1,o.queue.length&&(o.callActions("beforeReadQueueCleanUp",arguments),a=o.queue.shift(),o.userDeferred=a.deferred,o.isToggling=a.isToggling,o.lastClicked=a.triggerElement,a.instruction.command instanceof e.CommandMultimix?o.multimix.apply(o,a.args):o.dataset.apply(o,a.args)),o.callActions("afterCleanUp",arguments)},parseMultimixArgs:function(t){var o=this,i=new e.UserInstruction,s=null,r=-1;for(i.animate=o.config.animation.enable,i.command=new e.CommandMultimix,r=0;r<t.length;r++)null!==(s=t[r])&&("object"==typeof s?n.extend(i.command,s):"boolean"==typeof s?i.animate=s:"function"==typeof s&&(i.callback=s));return!i.command.insert||i.command.insert instanceof e.CommandInsert||(i.command.insert=o.parseInsertArgs([i.command.insert]).command),!i.command.remove||i.command.remove instanceof e.CommandRemove||(i.command.remove=o.parseRemoveArgs([i.command.remove]).command),!i.command.filter||i.command.filter instanceof e.CommandFilter||(i.command.filter=o.parseFilterArgs([i.command.filter]).command),!i.command.sort||i.command.sort instanceof e.CommandSort||(i.command.sort=o.parseSortArgs([i.command.sort]).command),!i.command.changeLayout||i.command.changeLayout instanceof e.CommandChangeLayout||(i.command.changeLayout=o.parseChangeLayoutArgs([i.command.changeLayout]).command),i=o.callFilters("instructionParseMultimixArgs",i,arguments),n.freeze(i),i},parseFilterArgs:function(t){var o=this,i=new e.UserInstruction,s=null,r=-1;for(i.animate=o.config.animation.enable,i.command=new e.CommandFilter,r=0;r<t.length;r++)"string"==typeof(s=t[r])?i.command.selector=s:null===s?i.command.collection=[]:"object"==typeof s&&n.isElement(s,o.dom.document)?i.command.collection=[s]:"object"==typeof s&&void 0!==s.length?i.command.collection=n.arrayFromList(s):"object"==typeof s?n.extend(i.command,s):"boolean"==typeof s?i.animate=s:"function"==typeof s&&(i.callback=s);if(i.command.selector&&i.command.collection)throw new Error(e.messages.errorFilterInvalidArguments());return i=o.callFilters("instructionParseFilterArgs",i,arguments),n.freeze(i),i},parseSortArgs:function(t){var o=this,i=new e.UserInstruction,s=null,r="",a=-1;for(i.animate=o.config.animation.enable,i.command=new e.CommandSort,a=0;a<t.length;a++)if(null!==(s=t[a]))switch(typeof s){case"string":r=s;break;case"object":s.length&&(i.command.collection=n.arrayFromList(s));break;case"boolean":i.animate=s;break;case"function":i.callback=s}return r&&(i.command=o.parseSortString(r,i.command)),i=o.callFilters("instructionParseSortArgs",i,arguments),n.freeze(i),i},parseInsertArgs:function(t){var o=this,i=new e.UserInstruction,s=null,r=-1;for(i.animate=o.config.animation.enable,i.command=new e.CommandInsert,r=0;r<t.length;r++)null!==(s=t[r])&&("number"==typeof s?i.command.index=s:"string"==typeof s&&["before","after"].indexOf(s)>-1?i.command.position=s:"string"==typeof s?i.command.collection=n.arrayFromList(n.createElement(s).childNodes):"object"==typeof s&&n.isElement(s,o.dom.document)?i.command.collection.length?i.command.sibling=s:i.command.collection=[s]:"object"==typeof s&&s.length?i.command.collection.length?i.command.sibling=s[0]:i.command.collection=s:"object"==typeof s&&s.childNodes&&s.childNodes.length?i.command.collection.length?i.command.sibling=s.childNodes[0]:i.command.collection=n.arrayFromList(s.childNodes):"object"==typeof s?n.extend(i.command,s):"boolean"==typeof s?i.animate=s:"function"==typeof s&&(i.callback=s));if(i.command.index&&i.command.sibling)throw new Error(e.messages.errorInsertInvalidArguments());return!i.command.collection.length&&o.config.debug.showWarnings&&console.warn(e.messages.warningInsertNoElements()),i=o.callFilters("instructionParseInsertArgs",i,arguments),n.freeze(i),i},parseRemoveArgs:function(t){var o=this,i=new e.UserInstruction,s=null,r=null,a=-1;for(i.animate=o.config.animation.enable,i.command=new e.CommandRemove,a=0;a<t.length;a++)if(null!==(r=t[a]))switch(typeof r){case"number":o.targets[r]&&(i.command.targets[0]=o.targets[r]);break;case"string":i.command.collection=n.arrayFromList(o.dom.parent.querySelectorAll(r));break;case"object":r&&r.length?i.command.collection=r:n.isElement(r,o.dom.document)?i.command.collection=[r]:n.extend(i.command,r);break;case"boolean":i.animate=r;break;case"function":i.callback=r}if(i.command.collection.length)for(a=0;s=o.targets[a];a++)i.command.collection.indexOf(s.dom.el)>-1&&i.command.targets.push(s);return!i.command.targets.length&&o.config.debug.showWarnings&&console.warn(e.messages.warningRemoveNoElements()),n.freeze(i),i},parseDatasetArgs:function(t){var o=new e.UserInstruction,i=null,s=-1;for(o.animate=this.config.animation.enable,o.command=new e.CommandDataset,s=0;s<t.length;s++)if(null!==(i=t[s]))switch(typeof i){case"object":Array.isArray(i)||"number"==typeof i.length?o.command.dataset=i:n.extend(o.command,i);break;case"boolean":o.animate=i;break;case"function":o.callback=i}return n.freeze(o),o},parseChangeLayoutArgs:function(t){var o=new e.UserInstruction,i=null,s=-1;for(o.animate=this.config.animation.enable,o.command=new e.CommandChangeLayout,s=0;s<t.length;s++)if(null!==(i=t[s]))switch(typeof i){case"string":o.command.containerClassName=i;break;case"object":n.extend(o.command,i);break;case"boolean":o.animate=i;break;case"function":o.callback=i}return n.freeze(o),o},queueMix:function(t){var o=this,i=null,s="";return o.callActions("beforeQueueMix",arguments),i=n.defer(e.libraries),o.config.animation.queue&&o.queue.length<o.config.animation.queueLimit?(t.deferred=i,o.queue.push(t),o.config.controls.enable&&(o.isToggling?(o.buildToggleArray(t.instruction.command),s=o.getToggleSelector(),o.updateControls({filter:{selector:s}})):o.updateControls(t.instruction.command))):(o.config.debug.showWarnings&&console.warn(e.messages.warningMultimixInstanceQueueFull()),i.resolve(o.state),e.events.fire("mixBusy",o.dom.container,{state:o.state,instance:o},o.dom.document),"function"==typeof o.config.callbacks.onMixBusy&&o.config.callbacks.onMixBusy.call(o.dom.container,o.state,o)),o.callFilters("promiseQueueMix",i.promise,arguments)},getDataOperation:function(t){var o=this,i=new e.Operation,s=[];if(i=o.callFilters("operationUnmappedGetDataOperation",i,arguments),o.dom.targets.length&&!(s=o.state.activeDataset||[]).length)throw new Error(e.messages.errorDatasetNotSet());return i.id=n.randomHex(),i.startState=o.state,i.startDataset=s,i.newDataset=t.slice(),o.diffDatasets(i),i.startOrder=o.targets,i.newOrder=i.show,o.config.animation.enable&&(o.getStartMixData(i),o.setInter(i),i.docState=n.getDocumentState(o.dom.document),o.getInterMixData(i),o.setFinal(i),o.getFinalMixData(i),o.parseEffects(),i.hasEffect=o.hasEffect(),o.getTweenData(i)),o.targets=i.show.slice(),i.newState=o.buildState(i),Array.prototype.push.apply(o.targets,i.toRemove),o.callFilters("operationMappedGetDataOperation",i,arguments)},diffDatasets:function(t){var o=this,i=[],s=[],r=[],a=null,l=null,c=null,d=null,u=null,p={},f="",h=-1;for(o.callActions("beforeDiffDatasets",arguments),h=0;a=t.newDataset[h];h++){if(void 0===(f=a[o.config.data.uidKey])||f.toString().length<1)throw new TypeError(e.messages.errorDatasetInvalidUidKey({uidKey:o.config.data.uidKey}));if(p[f])throw new Error(e.messages.errorDatasetDuplicateUid({uid:f}));p[f]=!0,(l=o.cache[f])instanceof e.Target?(o.config.data.dirtyCheck&&!n.deepEquals(a,l.data)&&(c=l.render(a),l.data=a,c!==l.dom.el&&(l.isInDom&&(l.unbindEvents(),o.dom.parent.replaceChild(c,l.dom.el)),l.isShown||(c.style.display="none"),l.dom.el=c,l.isInDom&&l.bindEvents())),c=l.dom.el):((l=new e.Target).init(null,o,a),l.hide()),l.isInDom?(u=l.dom.el.nextElementSibling,s.push(f),d&&(d.lastElementChild&&d.appendChild(o.dom.document.createTextNode(" ")),o.insertDatasetFrag(d,l.dom.el,r),d=null)):(d||(d=o.dom.document.createDocumentFragment()),d.lastElementChild&&d.appendChild(o.dom.document.createTextNode(" ")),d.appendChild(l.dom.el),l.isInDom=!0,l.unbindEvents(),l.bindEvents(),l.hide(),t.toShow.push(l),r.push(l)),t.show.push(l)}for(d&&((u=u||o.config.layout.siblingAfter)&&d.appendChild(o.dom.document.createTextNode(" ")),o.insertDatasetFrag(d,u,r)),h=0;a=t.startDataset[h];h++)f=a[o.config.data.uidKey],l=o.cache[f],t.show.indexOf(l)<0?(t.hide.push(l),t.toHide.push(l),t.toRemove.push(l)):i.push(f);n.isEqualArray(i,s)||(t.willSort=!0),o.callActions("afterDiffDatasets",arguments)},insertDatasetFrag:function(t,e,o){var i=this,s=e?n.arrayFromList(i.dom.parent.children).indexOf(e):i.targets.length;for(i.dom.parent.insertBefore(t,e);o.length;)i.targets.splice(s,0,o.shift()),s++},willSort:function(t,e){var n=this,o=!1;return o=!!(n.config.behavior.liveSort||"random"===t.order||t.attribute!==e.attribute||t.order!==e.order||t.collection!==e.collection||null===t.next&&e.next||t.next&&null===e.next)||!(!t.next||!e.next)&&n.willSort(t.next,e.next),n.callFilters("resultWillSort",o,arguments)},show:function(){return this.filter("all")},hide:function(){return this.filter("none")},isMixing:function(){return this.isBusy},filter:function(){var t=this,e=t.parseFilterArgs(arguments);return t.multimix({filter:e.command},e.animate,e.callback)},toggleOn:function(){var t=this,e=t.parseFilterArgs(arguments),n=e.command.selector,o="";return t.isToggling=!0,t.toggleArray.indexOf(n)<0&&t.toggleArray.push(n),o=t.getToggleSelector(),t.multimix({filter:o},e.animate,e.callback)},toggleOff:function(){var t=this,e=t.parseFilterArgs(arguments),n=e.command.selector,o=t.toggleArray.indexOf(n),i="";return t.isToggling=!0,o>-1&&t.toggleArray.splice(o,1),i=t.getToggleSelector(),t.multimix({filter:i},e.animate,e.callback)},sort:function(){var t=this,e=t.parseSortArgs(arguments);return t.multimix({sort:e.command},e.animate,e.callback)},changeLayout:function(){var t=this,e=t.parseChangeLayoutArgs(arguments);return t.multimix({changeLayout:e.command},e.animate,e.callback)},dataset:function(){var t=this,n=t.parseDatasetArgs(arguments),o=null,i=null,s=!1;return t.callActions("beforeDataset",arguments),t.isBusy?((i=new e.QueueItem).args=arguments,i.instruction=n,t.queueMix(i)):(n.callback&&(t.userCallback=n.callback),s=n.animate^t.config.animation.enable?n.animate:t.config.animation.enable,o=t.getDataOperation(n.command.dataset),t.goMix(s,o))},multimix:function(){var t=this,n=null,o=!1,i=null,s=t.parseMultimixArgs(arguments);return t.callActions("beforeMultimix",arguments),t.isBusy?((i=new e.QueueItem).args=arguments,i.instruction=s,i.triggerElement=t.lastClicked,i.isToggling=t.isToggling,t.queueMix(i)):(n=t.getOperation(s.command),t.config.controls.enable&&(s.command.filter&&!t.isToggling&&(t.toggleArray.length=0,t.buildToggleArray(n.command)),t.queue.length<1&&t.updateControls(n.command)),s.callback&&(t.userCallback=s.callback),o=s.animate^t.config.animation.enable?s.animate:t.config.animation.enable,t.callFilters("operationMultimix",n,arguments),t.goMix(o,n))},getOperation:function(t){var o=this,i=t.sort,s=t.filter,r=t.changeLayout,a=t.remove,l=t.insert,c=new e.Operation;return(c=o.callFilters("operationUnmappedGetOperation",c,arguments)).id=n.randomHex(),c.command=t,c.startState=o.state,c.triggerElement=o.lastClicked,o.isBusy?(o.config.debug.showWarnings&&console.warn(e.messages.warningGetOperationInstanceBusy()),null):(l&&o.insertTargets(l,c),a&&(c.toRemove=a.targets),c.startSort=c.newSort=c.startState.activeSort,c.startOrder=c.newOrder=o.targets,i&&(c.startSort=c.startState.activeSort,c.newSort=i,c.willSort=o.willSort(i,c.startState.activeSort),c.willSort&&o.sortOperation(c)),c.startFilter=c.startState.activeFilter,c.newFilter=s||n.extend(new e.CommandFilter,c.startFilter),"all"===c.newFilter.selector?c.newFilter.selector=o.config.selectors.target:"none"===c.newFilter.selector&&(c.newFilter.selector=""),o.filterOperation(c),c.startContainerClassName=c.startState.activeContainerClassName,r?(c.newContainerClassName=r.containerClassName,c.newContainerClassName!==c.startContainerClassName&&(c.willChangeLayout=!0)):c.newContainerClassName=c.startContainerClassName,o.config.animation.enable&&(o.getStartMixData(c),o.setInter(c),c.docState=n.getDocumentState(o.dom.document),o.getInterMixData(c),o.setFinal(c),o.getFinalMixData(c),o.parseEffects(),c.hasEffect=o.hasEffect(),o.getTweenData(c)),c.willSort&&(o.targets=c.newOrder),c.newState=o.buildState(c),o.callFilters("operationMappedGetOperation",c,arguments))},tween:function(t,e){var n=null,o=null,i=-1,s=-1;for(e=Math.min(e,1),e=Math.max(e,0),s=0;n=t.show[s];s++)o=t.showPosData[s],n.applyTween(o,e);for(s=0;n=t.hide[s];s++)n.isShown&&n.hide(),(i=t.toHide.indexOf(n))>-1&&(o=t.toHidePosData[i],n.isShown||n.show(),n.applyTween(o,e))},insert:function(){var t=this,e=t.parseInsertArgs(arguments);return t.multimix({insert:e.command},e.animate,e.callback)},insertBefore:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(e.command.collection,"before",e.command.sibling,e.animate,e.callback)},insertAfter:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(e.command.collection,"after",e.command.sibling,e.animate,e.callback)},prepend:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(0,e.command.collection,e.animate,e.callback)},append:function(){var t=this,e=t.parseInsertArgs(arguments);return t.insert(t.state.totalTargets,e.command.collection,e.animate,e.callback)},remove:function(){var t=this,e=t.parseRemoveArgs(arguments);return t.multimix({remove:e.command},e.animate,e.callback)},getConfig:function(t){var e=this,o=null;return o=t?n.getProperty(e.config,t):e.config,e.callFilters("valueGetConfig",o,arguments)},configure:function(t){var e=this;e.callActions("beforeConfigure",arguments),n.extend(e.config,t,!0,!0),e.callActions("afterConfigure",arguments)},getState:function(){var t=this,o=null;return o=new e.State,n.extend(o,t.state),n.freeze(o),t.callFilters("stateGetState",o,arguments)},forceRefresh:function(){this.indexTargets()},forceRender:function(){var t=this,e=null,n=null,o="";for(o in t.cache)(n=(e=t.cache[o]).render(e.data))!==e.dom.el&&(e.isInDom&&(e.unbindEvents(),t.dom.parent.replaceChild(n,e.dom.el)),e.isShown||(n.style.display="none"),e.dom.el=n,e.isInDom&&e.bindEvents());t.state=t.buildState(t.lastOperation)},destroy:function(t){var n=this,o=null,i=null,s=0;for(n.callActions("beforeDestroy",arguments),s=0;o=n.controls[s];s++)o.removeBinding(n);for(s=0;i=n.targets[s];s++)t&&i.show(),i.unbindEvents();n.dom.container.id.match(/^MixItUp/)&&n.dom.container.removeAttribute("id"),delete e.instances[n.id],n.callActions("afterDestroy",arguments)}}),e.IMoveData=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.posIn=null,this.posOut=null,this.operation=null,this.callback=null,this.statusChange="",this.duration=-1,this.staggerIndex=-1,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.IMoveData),e.IMoveData.prototype=Object.create(e.Base.prototype),e.IMoveData.prototype.constructor=e.IMoveData,e.TargetDom=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.TargetDom),e.TargetDom.prototype=Object.create(e.Base.prototype),e.TargetDom.prototype.constructor=e.TargetDom,e.Target=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.sortString="",this.mixer=null,this.callback=null,this.isShown=!1,this.isBound=!1,this.isExcluded=!1,this.isInDom=!1,this.handler=null,this.operation=null,this.data=null,this.dom=new e.TargetDom,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Target),e.Target.prototype=Object.create(e.Base.prototype),n.extend(e.Target.prototype,{constructor:e.Target,init:function(t,n,o){var i=this,s="";if(i.callActions("beforeInit",arguments),i.mixer=n,t||(t=i.render(o)),i.cacheDom(t),i.bindEvents(),"none"!==i.dom.el.style.display&&(i.isShown=!0),o&&n.config.data.uidKey){if(void 0===(s=o[n.config.data.uidKey])||s.toString().length<1)throw new TypeError(e.messages.errorDatasetInvalidUidKey({uidKey:n.config.data.uidKey}));i.id=s,i.data=o,n.cache[s]=i}i.callActions("afterInit",arguments)},render:function(t){var o=this,i=null,s=null,r=null,a="";if(o.callActions("beforeRender",arguments),"function"!=typeof(i=o.callFilters("renderRender",o.mixer.config.render.target,arguments)))throw new TypeError(e.messages.errorDatasetRendererNotSet());return(a=i(t))&&"object"==typeof a&&n.isElement(a)?s=a:"string"==typeof a&&((r=document.createElement("div")).innerHTML=a,s=r.firstElementChild),o.callFilters("elRender",s,arguments)},cacheDom:function(t){var e=this;e.callActions("beforeCacheDom",arguments),e.dom.el=t,e.callActions("afterCacheDom",arguments)},getSortString:function(t){var e=this,n=e.dom.el.getAttribute("data-"+t)||"";e.callActions("beforeGetSortString",arguments),n=isNaN(1*n)?n.toLowerCase():1*n,e.sortString=n,e.callActions("afterGetSortString",arguments)},show:function(){var t=this;t.callActions("beforeShow",arguments),t.isShown||(t.dom.el.style.display="",t.isShown=!0),t.callActions("afterShow",arguments)},hide:function(){var t=this;t.callActions("beforeHide",arguments),t.isShown&&(t.dom.el.style.display="none",t.isShown=!1),t.callActions("afterHide",arguments)},move:function(t){var e=this;e.callActions("beforeMove",arguments),e.isExcluded||e.mixer.targetsMoved++,e.applyStylesIn(t),requestAnimationFrame((function(){e.applyStylesOut(t)})),e.callActions("afterMove",arguments)},applyTween:function(t,n){var o=this,i="",s=null,r=t.posIn,a=[],l=new e.StyleData,c=-1;for(o.callActions("beforeApplyTween",arguments),l.x=r.x,l.y=r.y,0===n?o.hide():o.isShown||o.show(),c=0;i=e.features.TWEENABLE[c];c++)if(s=t.tweenData[i],"x"===i){if(!s)continue;l.x=r.x+s*n}else if("y"===i){if(!s)continue;l.y=r.y+s*n}else if(s instanceof e.TransformData){if(!s.value)continue;l[i].value=r[i].value+s.value*n,l[i].unit=s.unit,a.push(i+"("+l[i].value+s.unit+")")}else{if(!s)continue;l[i]=r[i]+s*n,o.dom.el.style[i]=l[i]}(l.x||l.y)&&a.unshift("translate("+l.x+"px, "+l.y+"px)"),a.length&&(o.dom.el.style[e.features.transformProp]=a.join(" ")),o.callActions("afterApplyTween",arguments)},applyStylesIn:function(t){var n=this,o=t.posIn,i=1!==n.mixer.effectsIn.opacity,s=[];n.callActions("beforeApplyStylesIn",arguments),s.push("translate("+o.x+"px, "+o.y+"px)"),n.mixer.config.animation.animateResizeTargets&&("show"!==t.statusChange&&(n.dom.el.style.width=o.width+"px",n.dom.el.style.height=o.height+"px"),n.dom.el.style.marginRight=o.marginRight+"px",n.dom.el.style.marginBottom=o.marginBottom+"px"),i&&(n.dom.el.style.opacity=o.opacity),"show"===t.statusChange&&(s=s.concat(n.mixer.transformIn)),n.dom.el.style[e.features.transformProp]=s.join(" "),n.callActions("afterApplyStylesIn",arguments)},applyStylesOut:function(t){var n=this,o=[],i=[],s=n.mixer.config.animation.animateResizeTargets,r=void 0!==n.mixer.effectsIn.opacity;if(n.callActions("beforeApplyStylesOut",arguments),o.push(n.writeTransitionRule(e.features.transformRule,t.staggerIndex)),"none"!==t.statusChange&&o.push(n.writeTransitionRule("opacity",t.staggerIndex,t.duration)),s&&(o.push(n.writeTransitionRule("width",t.staggerIndex,t.duration)),o.push(n.writeTransitionRule("height",t.staggerIndex,t.duration)),o.push(n.writeTransitionRule("margin",t.staggerIndex,t.duration))),!t.callback)return n.mixer.targetsImmovable++,void(n.mixer.targetsMoved===n.mixer.targetsImmovable&&n.mixer.cleanUp(t.operation));switch(n.operation=t.operation,n.callback=t.callback,!n.isExcluded&&n.mixer.targetsBound++,n.isBound=!0,n.applyTransition(o),s&&t.posOut.width>0&&t.posOut.height>0&&(n.dom.el.style.width=t.posOut.width+"px",n.dom.el.style.height=t.posOut.height+"px",n.dom.el.style.marginRight=t.posOut.marginRight+"px",n.dom.el.style.marginBottom=t.posOut.marginBottom+"px"),n.mixer.config.animation.nudge||"hide"!==t.statusChange||i.push("translate("+t.posOut.x+"px, "+t.posOut.y+"px)"),t.statusChange){case"hide":r&&(n.dom.el.style.opacity=n.mixer.effectsOut.opacity),i=i.concat(n.mixer.transformOut);break;case"show":r&&(n.dom.el.style.opacity=1)}(n.mixer.config.animation.nudge||!n.mixer.config.animation.nudge&&"hide"!==t.statusChange)&&i.push("translate("+t.posOut.x+"px, "+t.posOut.y+"px)"),n.dom.el.style[e.features.transformProp]=i.join(" "),n.callActions("afterApplyStylesOut",arguments)},writeTransitionRule:function(t,e,n){var o=this,i=o.getDelay(e),s="";return s=t+" "+(n>0?n:o.mixer.config.animation.duration)+"ms "+i+"ms "+("opacity"===t?"linear":o.mixer.config.animation.easing),o.callFilters("ruleWriteTransitionRule",s,arguments)},getDelay:function(t){var e=this,n=-1;return"function"==typeof e.mixer.config.animation.staggerSequence&&(t=e.mixer.config.animation.staggerSequence.call(e,t,e.state)),n=e.mixer.staggerDuration?t*e.mixer.staggerDuration:0,e.callFilters("delayGetDelay",n,arguments)},applyTransition:function(t){var n=this,o=t.join(", ");n.callActions("beforeApplyTransition",arguments),n.dom.el.style[e.features.transitionProp]=o,n.callActions("afterApplyTransition",arguments)},handleTransitionEnd:function(t){var e=this,n=t.propertyName,o=e.mixer.config.animation.animateResizeTargets;e.callActions("beforeHandleTransitionEnd",arguments),e.isBound&&t.target.matches(e.mixer.config.selectors.target)&&(n.indexOf("transform")>-1||n.indexOf("opacity")>-1||o&&n.indexOf("height")>-1||o&&n.indexOf("width")>-1||o&&n.indexOf("margin")>-1)&&(e.callback.call(e,e.operation),e.isBound=!1,e.callback=null,e.operation=null),e.callActions("afterHandleTransitionEnd",arguments)},eventBus:function(t){var e=this;switch(e.callActions("beforeEventBus",arguments),t.type){case"webkitTransitionEnd":case"transitionend":e.handleTransitionEnd(t)}e.callActions("afterEventBus",arguments)},unbindEvents:function(){var t=this;t.callActions("beforeUnbindEvents",arguments),n.off(t.dom.el,"webkitTransitionEnd",t.handler),n.off(t.dom.el,"transitionend",t.handler),t.callActions("afterUnbindEvents",arguments)},bindEvents:function(){var t=this,o="";t.callActions("beforeBindEvents",arguments),o="webkit"===e.features.transitionPrefix?"webkitTransitionEnd":"transitionend",t.handler=function(e){return t.eventBus(e)},n.on(t.dom.el,o,t.handler),t.callActions("afterBindEvents",arguments)},getPosData:function(n){var o=this,i={},s=null,r=new e.StyleData;return o.callActions("beforeGetPosData",arguments),r.x=o.dom.el.offsetLeft,r.y=o.dom.el.offsetTop,(o.mixer.config.animation.animateResizeTargets||n)&&(s=o.dom.el.getBoundingClientRect(),r.top=s.top,r.right=s.right,r.bottom=s.bottom,r.left=s.left,r.width=s.width,r.height=s.height),o.mixer.config.animation.animateResizeTargets&&(i=t.getComputedStyle(o.dom.el),r.marginBottom=parseFloat(i.marginBottom),r.marginRight=parseFloat(i.marginRight)),o.callFilters("posDataGetPosData",r,arguments)},cleanUp:function(){var t=this;t.callActions("beforeCleanUp",arguments),t.dom.el.style[e.features.transformProp]="",t.dom.el.style[e.features.transitionProp]="",t.dom.el.style.opacity="",t.mixer.config.animation.animateResizeTargets&&(t.dom.el.style.width="",t.dom.el.style.height="",t.dom.el.style.marginRight="",t.dom.el.style.marginBottom=""),t.callActions("afterCleanUp",arguments)}}),e.Collection=function(t){var e=null,o=-1;for(this.callActions("beforeConstruct"),o=0;e=t[o];o++)this[o]=e;this.length=t.length,this.callActions("afterConstruct"),n.freeze(this)},e.BaseStatic.call(e.Collection),e.Collection.prototype=Object.create(e.Base.prototype),n.extend(e.Collection.prototype,{constructor:e.Collection,mixitup:function(t){var o=this,i=null,s=Array.prototype.slice.call(arguments),r=[],a=-1;for(this.callActions("beforeMixitup"),s.shift(),a=0;i=o[a];a++)r.push(i[t].apply(i,s));return o.callFilters("promiseMixitup",n.all(r,e.libraries),arguments)}}),e.Operation=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.args=[],this.command=null,this.showPosData=[],this.toHidePosData=[],this.startState=null,this.newState=null,this.docState=null,this.willSort=!1,this.willChangeLayout=!1,this.hasEffect=!1,this.hasFailed=!1,this.triggerElement=null,this.show=[],this.hide=[],this.matching=[],this.toShow=[],this.toHide=[],this.toMove=[],this.toRemove=[],this.startOrder=[],this.newOrder=[],this.startSort=null,this.newSort=null,this.startFilter=null,this.newFilter=null,this.startDataset=null,this.newDataset=null,this.viewportDeltaX=0,this.viewportDeltaY=0,this.startX=0,this.startY=0,this.startHeight=0,this.startWidth=0,this.newX=0,this.newY=0,this.newHeight=0,this.newWidth=0,this.startContainerClassName="",this.startDisplay="",this.newContainerClassName="",this.newDisplay="",this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.Operation),e.Operation.prototype=Object.create(e.Base.prototype),e.Operation.prototype.constructor=e.Operation,e.State=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.activeFilter=null,this.activeSort=null,this.activeContainerClassName="",this.container=null,this.targets=[],this.hide=[],this.show=[],this.matching=[],this.totalTargets=-1,this.totalShow=-1,this.totalHide=-1,this.totalMatching=-1,this.hasFailed=!1,this.triggerElement=null,this.activeDataset=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.State),e.State.prototype=Object.create(e.Base.prototype),e.State.prototype.constructor=e.State,e.UserInstruction=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.command={},this.animate=!1,this.callback=null,this.callActions("afterConstruct"),n.seal(this)},e.BaseStatic.call(e.UserInstruction),e.UserInstruction.prototype=Object.create(e.Base.prototype),e.UserInstruction.prototype.constructor=e.UserInstruction,e.Messages=function(){e.Base.call(this),this.callActions("beforeConstruct"),this.ERROR_FACTORY_INVALID_CONTAINER="[MixItUp] An invalid selector or element reference was passed to the mixitup factory function",this.ERROR_FACTORY_CONTAINER_NOT_FOUND="[MixItUp] The provided selector yielded no container element",this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS="[MixItUp] Invalid value for `animation.effects`",this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE="[MixItUp] Invalid value for `controls.scope`",this.ERROR_CONFIG_INVALID_PROPERTY='[MixitUp] Invalid configuration object property "${erroneous}"${suggestion}',this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION='. Did you mean "${probableMatch}"?',this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET="[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`",this.ERROR_DATASET_INVALID_UID_KEY='[MixItUp] The specified UID key "${uidKey}" is not present on one or more dataset items',this.ERROR_DATASET_DUPLICATE_UID='[MixItUp] The UID "${uid}" was found on two or more dataset items. UIDs must be unique.',this.ERROR_INSERT_INVALID_ARGUMENTS="[MixItUp] Please provider either an index or a sibling and position to insert, not both",this.ERROR_INSERT_PREEXISTING_ELEMENT="[MixItUp] An element to be inserted already exists in the container",this.ERROR_FILTER_INVALID_ARGUMENTS="[MixItUp] Please provide either a selector or collection `.filter()`, not both",this.ERROR_DATASET_NOT_SET="[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`",this.ERROR_DATASET_PRERENDERED_MISMATCH="[MixItUp] `load.dataset` does not match pre-rendered targets",this.ERROR_DATASET_RENDERER_NOT_SET="[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`",this.ERROR_SORT_NON_EXISTENT_ELEMENT="[MixItUp] An element to be sorted does not already exist in the container",this.WARNING_FACTORY_PREEXISTING_INSTANCE="[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored. If you wish to perform additional methods on this instance, please create a reference.",this.WARNING_INSERT_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.insert()`",this.WARNING_REMOVE_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.remove()`",this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL="[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the queue is full or queuing is disabled.",this.WARNING_GET_OPERATION_INSTANCE_BUSY="[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.",this.WARNING_NO_PROMISE_IMPLEMENTATION="[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install an ES6 Promise polyfill.",this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES='[MixItUp] WARNING: The requested sorting data attribute "${attribute}" was not present on one or more target elements which may product unexpected sort output',this.callActions("afterConstruct"),this.compileTemplates(),n.seal(this)},e.BaseStatic.call(e.Messages),e.Messages.prototype=Object.create(e.Base.prototype),e.Messages.prototype.constructor=e.Messages,e.Messages.prototype.compileTemplates=function(){var t="",e="";for(t in this)"string"==typeof(e=this[t])&&(this[n.camelCase(t)]=n.template(e))},e.messages=new e.Messages,e.Facade=function(t){e.Base.call(this),this.callActions("beforeConstruct",arguments),this.configure=t.configure.bind(t),this.show=t.show.bind(t),this.hide=t.hide.bind(t),this.filter=t.filter.bind(t),this.toggleOn=t.toggleOn.bind(t),this.toggleOff=t.toggleOff.bind(t),this.sort=t.sort.bind(t),this.changeLayout=t.changeLayout.bind(t),this.multimix=t.multimix.bind(t),this.dataset=t.dataset.bind(t),this.tween=t.tween.bind(t),this.insert=t.insert.bind(t),this.insertBefore=t.insertBefore.bind(t),this.insertAfter=t.insertAfter.bind(t),this.prepend=t.prepend.bind(t),this.append=t.append.bind(t),this.remove=t.remove.bind(t),this.destroy=t.destroy.bind(t),this.forceRefresh=t.forceRefresh.bind(t),this.forceRender=t.forceRender.bind(t),this.isMixing=t.isMixing.bind(t),this.getOperation=t.getOperation.bind(t),this.getConfig=t.getConfig.bind(t),this.getState=t.getState.bind(t),this.callActions("afterConstruct",arguments),n.freeze(this),n.seal(this)},e.BaseStatic.call(e.Facade),e.Facade.prototype=Object.create(e.Base.prototype),e.Facade.prototype.constructor=e.Facade,"object"==typeof exports&&"object"==typeof module?module.exports=e:"function"==typeof define&&define.amd?define((function(){return e})):void 0!==t.mixitup&&"function"==typeof t.mixitup||(t.mixitup=e),e.BaseStatic.call(e.constructor),e.NAME="mixitup",e.CORE_VERSION="3.3.1"}(window),function(t,e,n,o){"use strict";function i(t,e){var o,i,s,r=[],a=0;t&&t.isDefaultPrevented()||(t.preventDefault(),e=e||{},t&&t.data&&(e=f(t.data.options,e)),o=e.$target||n(t.currentTarget).trigger("blur"),(s=n.fancybox.getInstance())&&s.$trigger&&s.$trigger.is(o)||(e.selector?r=n(e.selector):(i=o.attr("data-fancybox")||"")?r=(r=t.data?t.data.items:[]).length?r.filter('[data-fancybox="'+i+'"]'):n('[data-fancybox="'+i+'"]'):r=[o],(a=n(r).index(o))<0&&(a=0),(s=n.fancybox.open(r,e,a)).$trigger=o))}if(t.console=t.console||{info:function(t){}},n){if(n.fn.fancybox)return void console.info("fancyBox already initialized");var s={closeExisting:!1,loop:!1,gutter:50,keyboard:!0,preventCaptionOverlap:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","slideShow","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},video:{tpl:'<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',format:"",autoStart:!0},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',smallBtn:'<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'},parentEl:"body",hideScrollbar:!0,autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:3e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:n.noop,beforeLoad:n.noop,afterLoad:n.noop,beforeShow:n.noop,afterShow:n.noop,beforeClose:n.noop,afterClose:n.noop,onActivate:n.noop,onDeactivate:n.noop,clickContent:function(t,e){return"image"===t.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{preventCaptionOverlap:!1,idleTime:!1,clickContent:function(t,e){return"image"===t.type&&"toggleControls"},clickSlide:function(t,e){return"image"===t.type?"toggleControls":"close"},dblclickContent:function(t,e){return"image"===t.type&&"zoom"},dblclickSlide:function(t,e){return"image"===t.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schlie&szlig;en",NEXT:"Weiter",PREV:"Zur&uuml;ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"Vergr&ouml;&szlig;ern"}}},r=n(t),a=n(e),l=0,c=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)},d=t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.mozCancelAnimationFrame||t.oCancelAnimationFrame||function(e){t.clearTimeout(e)},u=function(){var t,n=e.createElement("fakeelement"),o={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in o)if(void 0!==n.style[t])return o[t];return"transitionend"}(),p=function(t){return t&&t.length&&t[0].offsetHeight},f=function(t,e){var o=n.extend(!0,{},t,e);return n.each(e,(function(t,e){n.isArray(e)&&(o[t]=e)})),o},h=function(t){var o,i;return!(!t||t.ownerDocument!==e)&&(n(".fancybox-container").css("pointer-events","none"),o={x:t.getBoundingClientRect().left+t.offsetWidth/2,y:t.getBoundingClientRect().top+t.offsetHeight/2},i=e.elementFromPoint(o.x,o.y)===t,n(".fancybox-container").css("pointer-events",""),i)},g=function(t,e,o){var i=this;i.opts=f({index:o},n.fancybox.defaults),n.isPlainObject(e)&&(i.opts=f(i.opts,e)),n.fancybox.isMobile&&(i.opts=f(i.opts,i.opts.mobile)),i.id=i.opts.id||++l,i.currIndex=parseInt(i.opts.index,10)||0,i.prevIndex=null,i.prevPos=null,i.currPos=0,i.firstRun=!0,i.group=[],i.slides={},i.addContent(t),i.group.length&&i.init()};n.extend(g.prototype,{init:function(){var o,i,s=this,r=s.group[s.currIndex].opts;r.closeExisting&&n.fancybox.close(!0),n("body").addClass("fancybox-active"),!n.fancybox.getInstance()&&!1!==r.hideScrollbar&&!n.fancybox.isMobile&&e.body.scrollHeight>t.innerHeight&&(n("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:'+(t.innerWidth-e.documentElement.clientWidth)+"px;}</style>"),n("body").addClass("compensate-for-scrollbar")),i="",n.each(r.buttons,(function(t,e){i+=r.btnTpl[e]||""})),o=n(s.translate(s,r.baseTpl.replace("{{buttons}}",i).replace("{{arrows}}",r.btnTpl.arrowLeft+r.btnTpl.arrowRight))).attr("id","fancybox-container-"+s.id).addClass(r.baseClass).data("FancyBox",s).appendTo(r.parentEl),s.$refs={container:o},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach((function(t){s.$refs[t]=o.find(".fancybox-"+t)})),s.trigger("onInit"),s.activate(),s.jumpTo(s.currIndex)},translate:function(t,e){var n=t.opts.i18n[t.opts.lang]||t.opts.i18n.en;return e.replace(/\{\{(\w+)\}\}/g,(function(t,e){return void 0===n[e]?t:n[e]}))},addContent:function(t){var e,o=this,i=n.makeArray(t);n.each(i,(function(t,e){var i,s,r,a,l,c={},d={};n.isPlainObject(e)?(c=e,d=e.opts||e):"object"===n.type(e)&&n(e).length?(d=(i=n(e)).data()||{},(d=n.extend(!0,{},d,d.options)).$orig=i,c.src=o.opts.src||d.src||i.attr("href"),c.type||c.src||(c.type="inline",c.src=e)):c={type:"html",src:e+""},c.opts=n.extend(!0,{},o.opts,d),n.isArray(d.buttons)&&(c.opts.buttons=d.buttons),n.fancybox.isMobile&&c.opts.mobile&&(c.opts=f(c.opts,c.opts.mobile)),s=c.type||c.opts.type,a=c.src||"",!s&&a&&((r=a.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(s="video",c.opts.video.format||(c.opts.video.format="video/"+("ogv"===r[1]?"ogg":r[1]))):a.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?s="image":a.match(/\.(pdf)((\?|#).*)?$/i)?(s="iframe",c=n.extend(!0,c,{contentType:"pdf",opts:{iframe:{preload:!1}}})):"#"===a.charAt(0)&&(s="inline")),s?c.type=s:o.trigger("objectNeedsType",c),c.contentType||(c.contentType=n.inArray(c.type,["html","inline","ajax"])>-1?"html":c.type),c.index=o.group.length,"auto"==c.opts.smallBtn&&(c.opts.smallBtn=n.inArray(c.type,["html","inline","ajax"])>-1),"auto"===c.opts.toolbar&&(c.opts.toolbar=!c.opts.smallBtn),c.$thumb=c.opts.$thumb||null,c.opts.$trigger&&c.index===o.opts.index&&(c.$thumb=c.opts.$trigger.find("img:first"),c.$thumb.length&&(c.opts.$orig=c.opts.$trigger)),c.$thumb&&c.$thumb.length||!c.opts.$orig||(c.$thumb=c.opts.$orig.find("img:first")),c.$thumb&&!c.$thumb.length&&(c.$thumb=null),c.thumb=c.opts.thumb||(c.$thumb?c.$thumb[0].src:null),"function"===n.type(c.opts.caption)&&(c.opts.caption=c.opts.caption.apply(e,[o,c])),"function"===n.type(o.opts.caption)&&(c.opts.caption=o.opts.caption.apply(e,[o,c])),c.opts.caption instanceof n||(c.opts.caption=void 0===c.opts.caption?"":c.opts.caption+""),"ajax"===c.type&&((l=a.split(/\s+/,2)).length>1&&(c.src=l.shift(),c.opts.filter=l.shift())),c.opts.modal&&(c.opts=n.extend(!0,c.opts,{trapFocus:!0,infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),o.group.push(c)})),Object.keys(o.slides).length&&(o.updateControls(),(e=o.Thumbs)&&e.isActive&&(e.create(),e.focus()))},addEvents:function(){var e=this;e.removeEvents(),e.$refs.container.on("click.fb-close","[data-fancybox-close]",(function(t){t.stopPropagation(),t.preventDefault(),e.close(t)})).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",(function(t){t.stopPropagation(),t.preventDefault(),e.previous()})).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",(function(t){t.stopPropagation(),t.preventDefault(),e.next()})).on("click.fb","[data-fancybox-zoom]",(function(t){e[e.isScaledDown()?"scaleToActual":"scaleToFit"]()})),r.on("orientationchange.fb resize.fb",(function(t){t&&t.originalEvent&&"resize"===t.originalEvent.type?(e.requestId&&d(e.requestId),e.requestId=c((function(){e.update(t)}))):(e.current&&"iframe"===e.current.type&&e.$refs.stage.hide(),setTimeout((function(){e.$refs.stage.show(),e.update(t)}),n.fancybox.isMobile?600:250))})),a.on("keydown.fb",(function(t){var o=(n.fancybox?n.fancybox.getInstance():null).current,i=t.keyCode||t.which;if(9!=i)return!o.opts.keyboard||t.ctrlKey||t.altKey||t.shiftKey||n(t.target).is("input,textarea,video,audio,select")?void 0:8===i||27===i?(t.preventDefault(),void e.close(t)):37===i||38===i?(t.preventDefault(),void e.previous()):39===i||40===i?(t.preventDefault(),void e.next()):void e.trigger("afterKeydown",t,i);o.opts.trapFocus&&e.focus(t)})),e.group[e.currIndex].opts.idleTime&&(e.idleSecondsCounter=0,a.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",(function(t){e.idleSecondsCounter=0,e.isIdle&&e.showControls(),e.isIdle=!1})),e.idleInterval=t.setInterval((function(){++e.idleSecondsCounter>=e.group[e.currIndex].opts.idleTime&&!e.isDragging&&(e.isIdle=!0,e.idleSecondsCounter=0,e.hideControls())}),1e3))},removeEvents:function(){var e=this;r.off("orientationchange.fb resize.fb"),a.off("keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),e.idleInterval&&(t.clearInterval(e.idleInterval),e.idleInterval=null)},previous:function(t){return this.jumpTo(this.currPos-1,t)},next:function(t){return this.jumpTo(this.currPos+1,t)},jumpTo:function(t,e){var o,i,s,r,a,l,c,d,u,f=this,h=f.group.length;if(!(f.isDragging||f.isClosing||f.isAnimating&&f.firstRun)){if(t=parseInt(t,10),!(s=f.current?f.current.opts.loop:f.opts.loop)&&(t<0||t>=h))return!1;if(o=f.firstRun=!Object.keys(f.slides).length,a=f.current,f.prevIndex=f.currIndex,f.prevPos=f.currPos,r=f.createSlide(t),h>1&&((s||r.index<h-1)&&f.createSlide(t+1),(s||r.index>0)&&f.createSlide(t-1)),f.current=r,f.currIndex=r.index,f.currPos=r.pos,f.trigger("beforeShow",o),f.updateControls(),r.forcedDuration=void 0,n.isNumeric(e)?r.forcedDuration=e:e=r.opts[o?"animationDuration":"transitionDuration"],e=parseInt(e,10),i=f.isMoved(r),r.$slide.addClass("fancybox-slide--current"),o)return r.opts.animationEffect&&e&&f.$refs.container.css("transition-duration",e+"ms"),f.$refs.container.addClass("fancybox-is-open").trigger("focus"),f.loadSlide(r),void f.preload("image");l=n.fancybox.getTranslate(a.$slide),c=n.fancybox.getTranslate(f.$refs.stage),n.each(f.slides,(function(t,e){n.fancybox.stop(e.$slide,!0)})),a.pos!==r.pos&&(a.isComplete=!1),a.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"),i?(u=l.left-(a.pos*l.width+a.pos*a.opts.gutter),n.each(f.slides,(function(t,o){o.$slide.removeClass("fancybox-animated").removeClass((function(t,e){return(e.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")}));var i=o.pos*l.width+o.pos*o.opts.gutter;n.fancybox.setTranslate(o.$slide,{top:0,left:i-c.left+u}),o.pos!==r.pos&&o.$slide.addClass("fancybox-slide--"+(o.pos>r.pos?"next":"previous")),p(o.$slide),n.fancybox.animate(o.$slide,{top:0,left:(o.pos-r.pos)*l.width+(o.pos-r.pos)*o.opts.gutter},e,(function(){o.$slide.css({transform:"",opacity:""}).removeClass("fancybox-slide--next fancybox-slide--previous"),o.pos===f.currPos&&f.complete()}))}))):e&&r.opts.transitionEffect&&(d="fancybox-animated fancybox-fx-"+r.opts.transitionEffect,a.$slide.addClass("fancybox-slide--"+(a.pos>r.pos?"next":"previous")),n.fancybox.animate(a.$slide,d,e,(function(){a.$slide.removeClass(d).removeClass("fancybox-slide--next fancybox-slide--previous")}),!1)),r.isLoaded?f.revealContent(r):f.loadSlide(r),f.preload("image")}},createSlide:function(t){var e,o,i=this;return o=(o=t%i.group.length)<0?i.group.length+o:o,!i.slides[t]&&i.group[o]&&(e=n('<div class="fancybox-slide"></div>').appendTo(i.$refs.stage),i.slides[t]=n.extend(!0,{},i.group[o],{pos:t,$slide:e,isLoaded:!1}),i.updateSlide(i.slides[t])),i.slides[t]},scaleToActual:function(t,e,o){var i,s,r,a,l,c=this,d=c.current,u=d.$content,p=n.fancybox.getTranslate(d.$slide).width,f=n.fancybox.getTranslate(d.$slide).height,h=d.width,g=d.height;c.isAnimating||c.isMoved()||!u||"image"!=d.type||!d.isLoaded||d.hasError||(c.isAnimating=!0,n.fancybox.stop(u),t=void 0===t?.5*p:t,e=void 0===e?.5*f:e,(i=n.fancybox.getTranslate(u)).top-=n.fancybox.getTranslate(d.$slide).top,i.left-=n.fancybox.getTranslate(d.$slide).left,a=h/i.width,l=g/i.height,s=.5*p-.5*h,r=.5*f-.5*g,h>p&&((s=i.left*a-(t*a-t))>0&&(s=0),s<p-h&&(s=p-h)),g>f&&((r=i.top*l-(e*l-e))>0&&(r=0),r<f-g&&(r=f-g)),c.updateCursor(h,g),n.fancybox.animate(u,{top:r,left:s,scaleX:a,scaleY:l},o||366,(function(){c.isAnimating=!1})),c.SlideShow&&c.SlideShow.isActive&&c.SlideShow.stop())},scaleToFit:function(t){var e,o=this,i=o.current,s=i.$content;o.isAnimating||o.isMoved()||!s||"image"!=i.type||!i.isLoaded||i.hasError||(o.isAnimating=!0,n.fancybox.stop(s),e=o.getFitPos(i),o.updateCursor(e.width,e.height),n.fancybox.animate(s,{top:e.top,left:e.left,scaleX:e.width/s.width(),scaleY:e.height/s.height()},t||366,(function(){o.isAnimating=!1})))},getFitPos:function(t){var e,o,i,s,r=t.$content,a=t.$slide,l=t.width||t.opts.width,c=t.height||t.opts.height,d={};return!!(t.isLoaded&&r&&r.length)&&(e=n.fancybox.getTranslate(this.$refs.stage).width,o=n.fancybox.getTranslate(this.$refs.stage).height,e-=parseFloat(a.css("paddingLeft"))+parseFloat(a.css("paddingRight"))+parseFloat(r.css("marginLeft"))+parseFloat(r.css("marginRight")),o-=parseFloat(a.css("paddingTop"))+parseFloat(a.css("paddingBottom"))+parseFloat(r.css("marginTop"))+parseFloat(r.css("marginBottom")),l&&c||(l=e,c=o),(l*=i=Math.min(1,e/l,o/c))>e-.5&&(l=e),(c*=i)>o-.5&&(c=o),"image"===t.type?(d.top=Math.floor(.5*(o-c))+parseFloat(a.css("paddingTop")),d.left=Math.floor(.5*(e-l))+parseFloat(a.css("paddingLeft"))):"video"===t.contentType&&(c>l/(s=t.opts.width&&t.opts.height?l/c:t.opts.ratio||16/9)?c=l/s:l>c*s&&(l=c*s)),d.width=l,d.height=c,d)},update:function(t){var e=this;n.each(e.slides,(function(n,o){e.updateSlide(o,t)}))},updateSlide:function(t,e){var o=this,i=t&&t.$content,s=t.width||t.opts.width,r=t.height||t.opts.height,a=t.$slide;o.adjustCaption(t),i&&(s||r||"video"===t.contentType)&&!t.hasError&&(n.fancybox.stop(i),n.fancybox.setTranslate(i,o.getFitPos(t)),t.pos===o.currPos&&(o.isAnimating=!1,o.updateCursor())),o.adjustLayout(t),a.length&&(a.trigger("refresh"),t.pos===o.currPos&&o.$refs.toolbar.add(o.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar",a.get(0).scrollHeight>a.get(0).clientHeight)),o.trigger("onUpdate",t,e)},centerSlide:function(t){var e=this,o=e.current,i=o.$slide;!e.isClosing&&o&&(i.siblings().css({transform:"",opacity:""}),i.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"),n.fancybox.animate(i,{top:0,left:0,opacity:1},void 0===t?0:t,(function(){i.css({transform:"",opacity:""}),o.isComplete||e.complete()}),!1))},isMoved:function(t){var e,o,i=t||this.current;return!!i&&(o=n.fancybox.getTranslate(this.$refs.stage),e=n.fancybox.getTranslate(i.$slide),!i.$slide.hasClass("fancybox-animated")&&(Math.abs(e.top-o.top)>.5||Math.abs(e.left-o.left)>.5))},updateCursor:function(t,e){var o,i,s=this,r=s.current,a=s.$refs.container;r&&!s.isClosing&&s.Guestures&&(a.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"),i=!!(o=s.canPan(t,e))||s.isZoomable(),a.toggleClass("fancybox-is-zoomable",i),n("[data-fancybox-zoom]").prop("disabled",!i),o?a.addClass("fancybox-can-pan"):i&&("zoom"===r.opts.clickContent||n.isFunction(r.opts.clickContent)&&"zoom"==r.opts.clickContent(r))?a.addClass("fancybox-can-zoomIn"):r.opts.touch&&(r.opts.touch.vertical||s.group.length>1)&&"video"!==r.contentType&&a.addClass("fancybox-can-swipe"))},isZoomable:function(){var t,e=this,n=e.current;if(n&&!e.isClosing&&"image"===n.type&&!n.hasError){if(!n.isLoaded)return!0;if((t=e.getFitPos(n))&&(n.width>t.width||n.height>t.height))return!0}return!1},isScaledDown:function(t,e){var o=!1,i=this.current,s=i.$content;return void 0!==t&&void 0!==e?o=t<i.width&&e<i.height:s&&(o=(o=n.fancybox.getTranslate(s)).width<i.width&&o.height<i.height),o},canPan:function(t,e){var o=this.current,i=null,s=!1;return"image"===o.type&&(o.isComplete||t&&e)&&!o.hasError&&(s=this.getFitPos(o),void 0!==t&&void 0!==e?i={width:t,height:e}:o.isComplete&&(i=n.fancybox.getTranslate(o.$content)),i&&s&&(s=Math.abs(i.width-s.width)>1.5||Math.abs(i.height-s.height)>1.5)),s},loadSlide:function(t){var e,o,i,s=this;if(!t.isLoading&&!t.isLoaded){if(t.isLoading=!0,!1===s.trigger("beforeLoad",t))return t.isLoading=!1,!1;switch(e=t.type,(o=t.$slide).off("refresh").trigger("onReset").addClass(t.opts.slideClass),e){case"image":s.setImage(t);break;case"iframe":s.setIframe(t);break;case"html":s.setContent(t,t.src||t.content);break;case"video":s.setContent(t,t.opts.video.tpl.replace(/\{\{src\}\}/gi,t.src).replace("{{format}}",t.opts.videoFormat||t.opts.video.format||"").replace("{{poster}}",t.thumb||""));break;case"inline":n(t.src).length?s.setContent(t,n(t.src)):s.setError(t);break;case"ajax":s.showLoading(t),i=n.ajax(n.extend({},t.opts.ajax.settings,{url:t.src,success:function(e,n){"success"===n&&s.setContent(t,e)},error:function(e,n){e&&"abort"!==n&&s.setError(t)}})),o.one("onReset",(function(){i.abort()}));break;default:s.setError(t)}return!0}},setImage:function(t){var o,i=this;setTimeout((function(){var e=t.$image;i.isClosing||!t.isLoading||e&&e.length&&e[0].complete||t.hasError||i.showLoading(t)}),50),i.checkSrcset(t),t.$content=n('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(t.$slide.addClass("fancybox-slide--image")),!1!==t.opts.preload&&t.opts.width&&t.opts.height&&t.thumb&&(t.width=t.opts.width,t.height=t.opts.height,(o=e.createElement("img")).onerror=function(){n(this).remove(),t.$ghost=null},o.onload=function(){i.afterLoad(t)},t.$ghost=n(o).addClass("fancybox-image").appendTo(t.$content).attr("src",t.thumb)),i.setBigImage(t)},checkSrcset:function(e){var n,o,i,s,r=e.opts.srcset||e.opts.image.srcset;if(r){i=t.devicePixelRatio||1,s=t.innerWidth*i,(o=r.split(",").map((function(t){var e={};return t.trim().split(/\s+/).forEach((function(t,n){var o=parseInt(t.substring(0,t.length-1),10);if(0===n)return e.url=t;o&&(e.value=o,e.postfix=t[t.length-1])})),e}))).sort((function(t,e){return t.value-e.value}));for(var a=0;a<o.length;a++){var l=o[a];if("w"===l.postfix&&l.value>=s||"x"===l.postfix&&l.value>=i){n=l;break}}!n&&o.length&&(n=o[o.length-1]),n&&(e.src=n.url,e.width&&e.height&&"w"==n.postfix&&(e.height=e.width/e.height*n.value,e.width=n.value),e.opts.srcset=r)}},setBigImage:function(t){var o=this,i=e.createElement("img"),s=n(i);t.$image=s.one("error",(function(){o.setError(t)})).one("load",(function(){var e;t.$ghost||(o.resolveImageSlideSize(t,this.naturalWidth,this.naturalHeight),o.afterLoad(t)),o.isClosing||(t.opts.srcset&&((e=t.opts.sizes)&&"auto"!==e||(e=(t.width/t.height>1&&r.width()/r.height()>1?"100":Math.round(t.width/t.height*100))+"vw"),s.attr("sizes",e).attr("srcset",t.opts.srcset)),t.$ghost&&setTimeout((function(){t.$ghost&&!o.isClosing&&t.$ghost.hide()}),Math.min(300,Math.max(1e3,t.height/1600))),o.hideLoading(t))})).addClass("fancybox-image").attr("src",t.src).appendTo(t.$content),(i.complete||"complete"==i.readyState)&&s.naturalWidth&&s.naturalHeight?s.trigger("load"):i.error&&s.trigger("error")},resolveImageSlideSize:function(t,e,n){var o=parseInt(t.opts.width,10),i=parseInt(t.opts.height,10);t.width=e,t.height=n,o>0&&(t.width=o,t.height=Math.floor(o*n/e)),i>0&&(t.width=Math.floor(i*e/n),t.height=i)},setIframe:function(t){var e,o=this,i=t.opts.iframe,s=t.$slide;t.$content=n('<div class="fancybox-content'+(i.preload?" fancybox-is-hidden":"")+'"></div>').css(i.css).appendTo(s),s.addClass("fancybox-slide--"+t.contentType),t.$iframe=e=n(i.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(i.attr).appendTo(t.$content),i.preload?(o.showLoading(t),e.on("load.fb error.fb",(function(e){this.isReady=1,t.$slide.trigger("refresh"),o.afterLoad(t)})),s.on("refresh.fb",(function(){var n,o=t.$content,r=i.css.width,a=i.css.height;if(1===e[0].isReady){try{n=e.contents().find("body")}catch(t){}n&&n.length&&n.children().length&&(s.css("overflow","visible"),o.css({width:"100%","max-width":"100%",height:"9999px"}),void 0===r&&(r=Math.ceil(Math.max(n[0].clientWidth,n.outerWidth(!0)))),o.css("width",r||"").css("max-width",""),void 0===a&&(a=Math.ceil(Math.max(n[0].clientHeight,n.outerHeight(!0)))),o.css("height",a||""),s.css("overflow","auto")),o.removeClass("fancybox-is-hidden")}}))):o.afterLoad(t),e.attr("src",t.src),s.one("onReset",(function(){try{n(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(t){}n(this).off("refresh.fb").empty(),t.isLoaded=!1,t.isRevealed=!1}))},setContent:function(t,e){var o=this;o.isClosing||(o.hideLoading(t),t.$content&&n.fancybox.stop(t.$content),t.$slide.empty(),function(t){return t&&t.hasOwnProperty&&t instanceof n}(e)&&e.parent().length?((e.hasClass("fancybox-content")||e.parent().hasClass("fancybox-content"))&&e.parents(".fancybox-slide").trigger("onReset"),t.$placeholder=n("<div>").hide().insertAfter(e),e.css("display","inline-block")):t.hasError||("string"===n.type(e)&&(e=n("<div>").append(n.trim(e)).contents()),t.opts.filter&&(e=n("<div>").html(e).find(t.opts.filter))),t.$slide.one("onReset",(function(){n(this).find("video,audio").trigger("pause"),t.$placeholder&&(t.$placeholder.after(e.removeClass("fancybox-content").hide()).remove(),t.$placeholder=null),t.$smallBtn&&(t.$smallBtn.remove(),t.$smallBtn=null),t.hasError||(n(this).empty(),t.isLoaded=!1,t.isRevealed=!1)})),n(e).appendTo(t.$slide),n(e).is("video,audio")&&(n(e).addClass("fancybox-video"),n(e).wrap("<div></div>"),t.contentType="video",t.opts.width=t.opts.width||n(e).attr("width"),t.opts.height=t.opts.height||n(e).attr("height")),t.$content=t.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(),t.$content.siblings().hide(),t.$content.length||(t.$content=t.$slide.wrapInner("<div></div>").children().first()),t.$content.addClass("fancybox-content"),t.$slide.addClass("fancybox-slide--"+t.contentType),o.afterLoad(t))},setError:function(t){t.hasError=!0,t.$slide.trigger("onReset").removeClass("fancybox-slide--"+t.contentType).addClass("fancybox-slide--error"),t.contentType="html",this.setContent(t,this.translate(t,t.opts.errorTpl)),t.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(t){var e=this;(t=t||e.current)&&!t.$spinner&&(t.$spinner=n(e.translate(e,e.opts.spinnerTpl)).appendTo(t.$slide).hide().fadeIn("fast"))},hideLoading:function(t){(t=t||this.current)&&t.$spinner&&(t.$spinner.stop().remove(),delete t.$spinner)},afterLoad:function(t){var e=this;e.isClosing||(t.isLoading=!1,t.isLoaded=!0,e.trigger("afterLoad",t),e.hideLoading(t),!t.opts.smallBtn||t.$smallBtn&&t.$smallBtn.length||(t.$smallBtn=n(e.translate(t,t.opts.btnTpl.smallBtn)).appendTo(t.$content)),t.opts.protect&&t.$content&&!t.hasError&&(t.$content.on("contextmenu.fb",(function(t){return 2==t.button&&t.preventDefault(),!0})),"image"===t.type&&n('<div class="fancybox-spaceball"></div>').appendTo(t.$content)),e.adjustCaption(t),e.adjustLayout(t),t.pos===e.currPos&&e.updateCursor(),e.revealContent(t))},adjustCaption:function(t){var e,n=this,o=t||n.current,i=o.opts.caption,s=o.opts.preventCaptionOverlap,r=n.$refs.caption,a=!1;r.toggleClass("fancybox-caption--separate",s),s&&i&&i.length&&(o.pos!==n.currPos?((e=r.clone().appendTo(r.parent())).children().eq(0).empty().html(i),a=e.outerHeight(!0),e.empty().remove()):n.$caption&&(a=n.$caption.outerHeight(!0)),o.$slide.css("padding-bottom",a||""))},adjustLayout:function(t){var e,n,o,i,s=t||this.current;s.isLoaded&&!0!==s.opts.disableLayoutFix&&(s.$content.css("margin-bottom",""),s.$content.outerHeight()>s.$slide.height()+.5&&(o=s.$slide[0].style["padding-bottom"],i=s.$slide.css("padding-bottom"),parseFloat(i)>0&&(e=s.$slide[0].scrollHeight,s.$slide.css("padding-bottom",0),Math.abs(e-s.$slide[0].scrollHeight)<1&&(n=i),s.$slide.css("padding-bottom",o))),s.$content.css("margin-bottom",n))},revealContent:function(t){var e,o,i,s,r=this,a=t.$slide,l=!1,c=!1,d=r.isMoved(t),u=t.isRevealed;return t.isRevealed=!0,e=t.opts[r.firstRun?"animationEffect":"transitionEffect"],i=t.opts[r.firstRun?"animationDuration":"transitionDuration"],i=parseInt(void 0===t.forcedDuration?i:t.forcedDuration,10),!d&&t.pos===r.currPos&&i||(e=!1),"zoom"===e&&(t.pos===r.currPos&&i&&"image"===t.type&&!t.hasError&&(c=r.getThumbPos(t))?l=r.getFitPos(t):e="fade"),"zoom"===e?(r.isAnimating=!0,l.scaleX=l.width/c.width,l.scaleY=l.height/c.height,"auto"==(s=t.opts.zoomOpacity)&&(s=Math.abs(t.width/t.height-c.width/c.height)>.1),s&&(c.opacity=.1,l.opacity=1),n.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),c),p(t.$content),void n.fancybox.animate(t.$content,l,i,(function(){r.isAnimating=!1,r.complete()}))):(r.updateSlide(t),e?(n.fancybox.stop(a),o="fancybox-slide--"+(t.pos>=r.prevPos?"next":"previous")+" fancybox-animated fancybox-fx-"+e,a.addClass(o).removeClass("fancybox-slide--current"),t.$content.removeClass("fancybox-is-hidden"),p(a),"image"!==t.type&&t.$content.hide().show(0),void n.fancybox.animate(a,"fancybox-slide--current",i,(function(){a.removeClass(o).css({transform:"",opacity:""}),t.pos===r.currPos&&r.complete()}),!0)):(t.$content.removeClass("fancybox-is-hidden"),u||!d||"image"!==t.type||t.hasError||t.$content.hide().fadeIn("fast"),void(t.pos===r.currPos&&r.complete())))},getThumbPos:function(t){var e,o,i,s,r,a=!1,l=t.$thumb;return!(!l||!h(l[0]))&&(e=n.fancybox.getTranslate(l),o=parseFloat(l.css("border-top-width")||0),i=parseFloat(l.css("border-right-width")||0),s=parseFloat(l.css("border-bottom-width")||0),r=parseFloat(l.css("border-left-width")||0),a={top:e.top+o,left:e.left+r,width:e.width-i-r,height:e.height-o-s,scaleX:1,scaleY:1},e.width>0&&e.height>0&&a)},complete:function(){var t,e=this,o=e.current,i={};!e.isMoved()&&o.isLoaded&&(o.isComplete||(o.isComplete=!0,o.$slide.siblings().trigger("onReset"),e.preload("inline"),p(o.$slide),o.$slide.addClass("fancybox-slide--complete"),n.each(e.slides,(function(t,o){o.pos>=e.currPos-1&&o.pos<=e.currPos+1?i[o.pos]=o:o&&(n.fancybox.stop(o.$slide),o.$slide.off().remove())})),e.slides=i),e.isAnimating=!1,e.updateCursor(),e.trigger("afterShow"),o.opts.video.autoStart&&o.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended",(function(){Document.exitFullscreen?Document.exitFullscreen():this.webkitExitFullscreen&&this.webkitExitFullscreen(),e.next()})),o.opts.autoFocus&&"html"===o.contentType&&((t=o.$content.find("input[autofocus]:enabled:visible:first")).length?t.trigger("focus"):e.focus(null,!0)),o.$slide.scrollTop(0).scrollLeft(0))},preload:function(t){var e,n,o=this;o.group.length<2||(n=o.slides[o.currPos+1],(e=o.slides[o.currPos-1])&&e.type===t&&o.loadSlide(e),n&&n.type===t&&o.loadSlide(n))},focus:function(t,o){var i,s,r=this,a=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","video","audio","[contenteditable]",'[tabindex]:not([tabindex^="-"])'].join(",");r.isClosing||((i=(i=!t&&r.current&&r.current.isComplete?r.current.$slide.find("*:visible"+(o?":not(.fancybox-close-small)":"")):r.$refs.container.find("*:visible")).filter(a).filter((function(){return"hidden"!==n(this).css("visibility")&&!n(this).hasClass("disabled")}))).length?(s=i.index(e.activeElement),t&&t.shiftKey?(s<0||0==s)&&(t.preventDefault(),i.eq(i.length-1).trigger("focus")):(s<0||s==i.length-1)&&(t&&t.preventDefault(),i.eq(0).trigger("focus"))):r.$refs.container.trigger("focus"))},activate:function(){var t=this;n(".fancybox-container").each((function(){var e=n(this).data("FancyBox");e&&e.id!==t.id&&!e.isClosing&&(e.trigger("onDeactivate"),e.removeEvents(),e.isVisible=!1)})),t.isVisible=!0,(t.current||t.isIdle)&&(t.update(),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(t,e){var o,i,s,r,a,l,d,u=this,f=u.current,h=function(){u.cleanUp(t)};return!(u.isClosing||(u.isClosing=!0,!1===u.trigger("beforeClose",t)?(u.isClosing=!1,c((function(){u.update()})),1):(u.removeEvents(),s=f.$content,o=f.opts.animationEffect,i=n.isNumeric(e)?e:o?f.opts.animationDuration:0,f.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),!0!==t?n.fancybox.stop(f.$slide):o=!1,f.$slide.siblings().trigger("onReset").remove(),i&&u.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration",i+"ms"),u.hideLoading(f),u.hideControls(!0),u.updateCursor(),"zoom"!==o||s&&i&&"image"===f.type&&!u.isMoved()&&!f.hasError&&(d=u.getThumbPos(f))||(o="fade"),"zoom"===o?(n.fancybox.stop(s),r=n.fancybox.getTranslate(s),l={top:r.top,left:r.left,scaleX:r.width/d.width,scaleY:r.height/d.height,width:d.width,height:d.height},a=f.opts.zoomOpacity,"auto"==a&&(a=Math.abs(f.width/f.height-d.width/d.height)>.1),a&&(d.opacity=0),n.fancybox.setTranslate(s,l),p(s),n.fancybox.animate(s,d,i,h),0):(o&&i?n.fancybox.animate(f.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"),"fancybox-animated fancybox-fx-"+o,i,h):!0===t?setTimeout(h,i):h(),0))))},cleanUp:function(e){var o,i,s,r=this,a=r.current.opts.$orig;r.current.$slide.trigger("onReset"),r.$refs.container.empty().remove(),r.trigger("afterClose",e),r.current.opts.backFocus&&(a&&a.length&&a.is(":visible")||(a=r.$trigger),a&&a.length&&(i=t.scrollX,s=t.scrollY,a.trigger("focus"),n("html, body").scrollTop(s).scrollLeft(i))),r.current=null,(o=n.fancybox.getInstance())?o.activate():(n("body").removeClass("fancybox-active compensate-for-scrollbar"),n("#fancybox-style-noscroll").remove())},trigger:function(t,e){var o,i=Array.prototype.slice.call(arguments,1),s=this,r=e&&e.opts?e:s.current;if(r?i.unshift(r):r=s,i.unshift(s),n.isFunction(r.opts[t])&&(o=r.opts[t].apply(r,i)),!1===o)return o;"afterClose"!==t&&s.$refs?s.$refs.container.trigger(t+".fb",i):a.trigger(t+".fb",i)},updateControls:function(){var t=this,o=t.current,i=o.index,s=t.$refs.container,r=t.$refs.caption,a=o.opts.caption;o.$slide.trigger("refresh"),a&&a.length?(t.$caption=r,r.children().eq(0).html(a)):t.$caption=null,t.hasHiddenControls||t.isIdle||t.showControls(),s.find("[data-fancybox-count]").html(t.group.length),s.find("[data-fancybox-index]").html(i+1),s.find("[data-fancybox-prev]").prop("disabled",!o.opts.loop&&i<=0),s.find("[data-fancybox-next]").prop("disabled",!o.opts.loop&&i>=t.group.length-1),"image"===o.type?s.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",o.opts.image.src||o.src).show():o.opts.toolbar&&s.find("[data-fancybox-download],[data-fancybox-zoom]").hide(),n(e.activeElement).is(":hidden,[disabled]")&&t.$refs.container.trigger("focus")},hideControls:function(t){var e=["infobar","toolbar","nav"];!t&&this.current.opts.preventCaptionOverlap||e.push("caption"),this.$refs.container.removeClass(e.map((function(t){return"fancybox-show-"+t})).join(" ")),this.hasHiddenControls=!0},showControls:function(){var t=this,e=t.current?t.current.opts:t.opts,n=t.$refs.container;t.hasHiddenControls=!1,t.idleSecondsCounter=0,n.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&t.group.length>1)).toggleClass("fancybox-show-caption",!!t.$caption).toggleClass("fancybox-show-nav",!!(e.arrows&&t.group.length>1)).toggleClass("fancybox-is-modal",!!e.modal)},toggleControls:function(){this.hasHiddenControls?this.showControls():this.hideControls()}}),n.fancybox={version:"3.5.7",defaults:s,getInstance:function(t){var e=n('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),o=Array.prototype.slice.call(arguments,1);return e instanceof g&&("string"===n.type(t)?e[t].apply(e,o):"function"===n.type(t)&&t.apply(e,o),e)},open:function(t,e,n){return new g(t,e,n)},close:function(t){var e=this.getInstance();e&&(e.close(),!0===t&&this.close(t))},destroy:function(){this.close(!0),a.add("body").off("click.fb-start","**")},isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:function(){var n=e.createElement("div");return t.getComputedStyle&&t.getComputedStyle(n)&&t.getComputedStyle(n).getPropertyValue("transform")&&!(e.documentMode&&e.documentMode<11)}(),getTranslate:function(t){var e;return!(!t||!t.length)&&{top:(e=t[0].getBoundingClientRect()).top||0,left:e.left||0,width:e.width,height:e.height,opacity:parseFloat(t.css("opacity"))}},setTranslate:function(t,e){var n="",o={};if(t&&e)return void 0===e.left&&void 0===e.top||(n=(void 0===e.left?t.position().left:e.left)+"px, "+(void 0===e.top?t.position().top:e.top)+"px",n=this.use3d?"translate3d("+n+", 0px)":"translate("+n+")"),void 0!==e.scaleX&&void 0!==e.scaleY?n+=" scale("+e.scaleX+", "+e.scaleY+")":void 0!==e.scaleX&&(n+=" scaleX("+e.scaleX+")"),n.length&&(o.transform=n),void 0!==e.opacity&&(o.opacity=e.opacity),void 0!==e.width&&(o.width=e.width),void 0!==e.height&&(o.height=e.height),t.css(o)},animate:function(t,e,o,i,s){var r,a=this;n.isFunction(o)&&(i=o,o=null),a.stop(t),r=a.getTranslate(t),t.on(u,(function(l){(!l||!l.originalEvent||t.is(l.originalEvent.target)&&"z-index"!=l.originalEvent.propertyName)&&(a.stop(t),n.isNumeric(o)&&t.css("transition-duration",""),n.isPlainObject(e)?void 0!==e.scaleX&&void 0!==e.scaleY&&a.setTranslate(t,{top:e.top,left:e.left,width:r.width*e.scaleX,height:r.height*e.scaleY,scaleX:1,scaleY:1}):!0!==s&&t.removeClass(e),n.isFunction(i)&&i(l))})),n.isNumeric(o)&&t.css("transition-duration",o+"ms"),n.isPlainObject(e)?(void 0!==e.scaleX&&void 0!==e.scaleY&&(delete e.width,delete e.height,t.parent().hasClass("fancybox-slide--image")&&t.parent().addClass("fancybox-is-scaling")),n.fancybox.setTranslate(t,e)):t.addClass(e),t.data("timer",setTimeout((function(){t.trigger(u)}),o+33))},stop:function(t,e){t&&t.length&&(clearTimeout(t.data("timer")),e&&t.trigger(u),t.off(u).css("transition-duration",""),t.parent().removeClass("fancybox-is-scaling"))}},n.fn.fancybox=function(t){var e;return(e=(t=t||{}).selector||!1)?n("body").off("click.fb-start",e).on("click.fb-start",e,{options:t},i):this.off("click.fb-start").on("click.fb-start",{items:this,options:t},i),this},a.on("click.fb-start","[data-fancybox]",i),a.on("click.fb-start","[data-fancybox-trigger]",(function(t){n('[data-fancybox="'+n(this).attr("data-fancybox-trigger")+'"]').eq(n(this).attr("data-fancybox-index")||0).trigger("click.fb-start",{$trigger:n(this)})})),function(){var t=null;a.on("mousedown mouseup focus blur",".fancybox-button",(function(e){switch(e.type){case"mousedown":t=n(this);break;case"mouseup":t=null;break;case"focusin":n(".fancybox-button").removeClass("fancybox-focus"),n(this).is(t)||n(this).is("[disabled]")||n(this).addClass("fancybox-focus");break;case"focusout":n(".fancybox-button").removeClass("fancybox-focus")}}))}()}}(window,document,jQuery),function(t){"use strict";var e={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"https://www.youtube-nocookie.com/embed/$4",thumb:"https://img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/?ll="+(t[9]?t[9]+"&z="+Math.floor(t[10])+(t[12]?t[12].replace(/^\//,"&"):""):t[12]+"").replace(/\?/,"&")+"&output="+(t[12]&&t[12].indexOf("layer=c")>0?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/maps?q="+t[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}},n=function(e,n,o){if(e)return o=o||"","object"===t.type(o)&&(o=t.param(o,!0)),t.each(n,(function(t,n){e=e.replace("$"+t,n||"")})),o.length&&(e+=(e.indexOf("?")>0?"&":"?")+o),e};t(document).on("objectNeedsType.fb",(function(o,i,s){var r,a,l,c,d,u,p,f=s.src||"",h=!1;r=t.extend(!0,{},e,s.opts.media),t.each(r,(function(e,o){if(l=f.match(o.matcher)){if(h=o.type,p=e,u={},o.paramPlace&&l[o.paramPlace]){"?"==(d=l[o.paramPlace])[0]&&(d=d.substring(1)),d=d.split("&");for(var i=0;i<d.length;++i){var r=d[i].split("=",2);2==r.length&&(u[r[0]]=decodeURIComponent(r[1].replace(/\+/g," ")))}}return c=t.extend(!0,{},o.params,s.opts[e],u),f="function"===t.type(o.url)?o.url.call(this,l,c,s):n(o.url,l,c),a="function"===t.type(o.thumb)?o.thumb.call(this,l,c,s):n(o.thumb,l),"youtube"===e?f=f.replace(/&t=((\d+)m)?(\d+)s/,(function(t,e,n,o){return"&start="+((n?60*parseInt(n,10):0)+parseInt(o,10))})):"vimeo"===e&&(f=f.replace("&%23","#")),!1}})),h?(s.opts.thumb||s.opts.$thumb&&s.opts.$thumb.length||(s.opts.thumb=a),"iframe"===h&&(s.opts=t.extend(!0,s.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),t.extend(s,{type:h,src:f,origSrc:s.src,contentSource:p,contentType:"image"===h?"image":"gmap_place"==p||"gmap_search"==p?"map":"video"})):f&&(s.type=s.opts.defaultType)}));var o={youtube:{src:"https://www.youtube.com/iframe_api",class:"YT",loading:!1,loaded:!1},vimeo:{src:"https://player.vimeo.com/api/player.js",class:"Vimeo",loading:!1,loaded:!1},load:function(t){var e,n=this;this[t].loaded?setTimeout((function(){n.done(t)})):this[t].loading||(this[t].loading=!0,(e=document.createElement("script")).type="text/javascript",e.src=this[t].src,"youtube"===t?window.onYouTubeIframeAPIReady=function(){n[t].loaded=!0,n.done(t)}:e.onload=function(){n[t].loaded=!0,n.done(t)},document.body.appendChild(e))},done:function(e){var n,o;"youtube"===e&&delete window.onYouTubeIframeAPIReady,(n=t.fancybox.getInstance())&&(o=n.current.$content.find("iframe"),"youtube"===e&&void 0!==YT&&YT?new YT.Player(o.attr("id"),{events:{onStateChange:function(t){0==t.data&&n.next()}}}):"vimeo"===e&&void 0!==Vimeo&&Vimeo&&new Vimeo.Player(o).on("ended",(function(){n.next()})))}};t(document).on({"afterShow.fb":function(t,e,n){e.group.length>1&&("youtube"===n.contentSource||"vimeo"===n.contentSource)&&o.load(n.contentSource)}})}(jQuery),function(t,e,n){"use strict";var o=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)},i=t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.mozCancelAnimationFrame||t.oCancelAnimationFrame||function(e){t.clearTimeout(e)},s=function(e){var n=[];for(var o in e=(e=e.originalEvent||e||t.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[o].pageX?n.push({x:e[o].pageX,y:e[o].pageY}):e[o].clientX&&n.push({x:e[o].clientX,y:e[o].clientY});return n},r=function(t,e,n){return e&&t?"x"===n?t.x-e.x:"y"===n?t.y-e.y:Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)):0},a=function(t){if(t.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe')||n.isFunction(t.get(0).onclick)||t.data("selectable"))return!0;for(var e=0,o=t[0].attributes,i=o.length;e<i;e++)if("data-fancybox-"===o[e].nodeName.substr(0,14))return!0;return!1},l=function(e){var n=t.getComputedStyle(e)["overflow-y"],o=t.getComputedStyle(e)["overflow-x"],i=("scroll"===n||"auto"===n)&&e.scrollHeight>e.clientHeight,s=("scroll"===o||"auto"===o)&&e.scrollWidth>e.clientWidth;return i||s},c=function(t){for(var e=!1;!(e=l(t.get(0)))&&((t=t.parent()).length&&!t.hasClass("fancybox-stage")&&!t.is("body")););return e},d=function(t){var e=this;e.instance=t,e.$bg=t.$refs.bg,e.$stage=t.$refs.stage,e.$container=t.$refs.container,e.destroy(),e.$container.on("touchstart.fb.touch mousedown.fb.touch",n.proxy(e,"ontouchstart"))};d.prototype.destroy=function(){var t=this;t.$container.off(".fb.touch"),n(e).off(".fb.touch"),t.requestId&&(i(t.requestId),t.requestId=null),t.tapped&&(clearTimeout(t.tapped),t.tapped=null)},d.prototype.ontouchstart=function(o){var i=this,l=n(o.target),d=i.instance,u=d.current,p=u.$slide,f=u.$content,h="touchstart"==o.type;if(h&&i.$container.off("mousedown.fb.touch"),(!o.originalEvent||2!=o.originalEvent.button)&&p.length&&l.length&&!a(l)&&!a(l.parent())&&(l.is("img")||!(o.originalEvent.clientX>l[0].clientWidth+l.offset().left))){if(!u||d.isAnimating||u.$slide.hasClass("fancybox-animated"))return o.stopPropagation(),void o.preventDefault();i.realPoints=i.startPoints=s(o),i.startPoints.length&&(u.touch&&o.stopPropagation(),i.startEvent=o,i.canTap=!0,i.$target=l,i.$content=f,i.opts=u.opts.touch,i.isPanning=!1,i.isSwiping=!1,i.isZooming=!1,i.isScrolling=!1,i.canPan=d.canPan(),i.startTime=(new Date).getTime(),i.distanceX=i.distanceY=i.distance=0,i.canvasWidth=Math.round(p[0].clientWidth),i.canvasHeight=Math.round(p[0].clientHeight),i.contentLastPos=null,i.contentStartPos=n.fancybox.getTranslate(i.$content)||{top:0,left:0},i.sliderStartPos=n.fancybox.getTranslate(p),i.stagePos=n.fancybox.getTranslate(d.$refs.stage),i.sliderStartPos.top-=i.stagePos.top,i.sliderStartPos.left-=i.stagePos.left,i.contentStartPos.top-=i.stagePos.top,i.contentStartPos.left-=i.stagePos.left,n(e).off(".fb.touch").on(h?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",n.proxy(i,"ontouchend")).on(h?"touchmove.fb.touch":"mousemove.fb.touch",n.proxy(i,"ontouchmove")),n.fancybox.isMobile&&e.addEventListener("scroll",i.onscroll,!0),((i.opts||i.canPan)&&(l.is(i.$stage)||i.$stage.find(l).length)||(l.is(".fancybox-image")&&o.preventDefault(),n.fancybox.isMobile&&l.parents(".fancybox-caption").length))&&(i.isScrollable=c(l)||c(l.parent()),n.fancybox.isMobile&&i.isScrollable||o.preventDefault(),(1===i.startPoints.length||u.hasError)&&(i.canPan?(n.fancybox.stop(i.$content),i.isPanning=!0):i.isSwiping=!0,i.$container.addClass("fancybox-is-grabbing")),2===i.startPoints.length&&"image"===u.type&&(u.isLoaded||u.$ghost)&&(i.canTap=!1,i.isSwiping=!1,i.isPanning=!1,i.isZooming=!0,n.fancybox.stop(i.$content),i.centerPointStartX=.5*(i.startPoints[0].x+i.startPoints[1].x)-n(t).scrollLeft(),i.centerPointStartY=.5*(i.startPoints[0].y+i.startPoints[1].y)-n(t).scrollTop(),i.percentageOfImageAtPinchPointX=(i.centerPointStartX-i.contentStartPos.left)/i.contentStartPos.width,i.percentageOfImageAtPinchPointY=(i.centerPointStartY-i.contentStartPos.top)/i.contentStartPos.height,i.startDistanceBetweenFingers=r(i.startPoints[0],i.startPoints[1]))))}},d.prototype.onscroll=function(t){this.isScrolling=!0,e.removeEventListener("scroll",this.onscroll,!0)},d.prototype.ontouchmove=function(t){var e=this;return void 0!==t.originalEvent.buttons&&0===t.originalEvent.buttons?void e.ontouchend(t):e.isScrolling?void(e.canTap=!1):(e.newPoints=s(t),void((e.opts||e.canPan)&&e.newPoints.length&&e.newPoints.length&&(e.isSwiping&&!0===e.isSwiping||t.preventDefault(),e.distanceX=r(e.newPoints[0],e.startPoints[0],"x"),e.distanceY=r(e.newPoints[0],e.startPoints[0],"y"),e.distance=r(e.newPoints[0],e.startPoints[0]),e.distance>0&&(e.isSwiping?e.onSwipe(t):e.isPanning?e.onPan():e.isZooming&&e.onZoom()))))},d.prototype.onSwipe=function(e){var s,r=this,a=r.instance,l=r.isSwiping,c=r.sliderStartPos.left||0;if(!0!==l)"x"==l&&(r.distanceX>0&&(r.instance.group.length<2||0===r.instance.current.index&&!r.instance.current.opts.loop)?c+=Math.pow(r.distanceX,.8):r.distanceX<0&&(r.instance.group.length<2||r.instance.current.index===r.instance.group.length-1&&!r.instance.current.opts.loop)?c-=Math.pow(-r.distanceX,.8):c+=r.distanceX),r.sliderLastPos={top:"x"==l?0:r.sliderStartPos.top+r.distanceY,left:c},r.requestId&&(i(r.requestId),r.requestId=null),r.requestId=o((function(){r.sliderLastPos&&(n.each(r.instance.slides,(function(t,e){var o=e.pos-r.instance.currPos;n.fancybox.setTranslate(e.$slide,{top:r.sliderLastPos.top,left:r.sliderLastPos.left+o*r.canvasWidth+o*e.opts.gutter})})),r.$container.addClass("fancybox-is-sliding"))}));else if(Math.abs(r.distance)>10){if(r.canTap=!1,a.group.length<2&&r.opts.vertical?r.isSwiping="y":a.isDragging||!1===r.opts.vertical||"auto"===r.opts.vertical&&n(t).width()>800?r.isSwiping="x":(s=Math.abs(180*Math.atan2(r.distanceY,r.distanceX)/Math.PI),r.isSwiping=s>45&&s<135?"y":"x"),"y"===r.isSwiping&&n.fancybox.isMobile&&r.isScrollable)return void(r.isScrolling=!0);a.isDragging=r.isSwiping,r.startPoints=r.newPoints,n.each(a.slides,(function(t,e){var o,i;n.fancybox.stop(e.$slide),o=n.fancybox.getTranslate(e.$slide),i=n.fancybox.getTranslate(a.$refs.stage),e.$slide.css({transform:"",opacity:"","transition-duration":""}).removeClass("fancybox-animated").removeClass((function(t,e){return(e.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")})),e.pos===a.current.pos&&(r.sliderStartPos.top=o.top-i.top,r.sliderStartPos.left=o.left-i.left),n.fancybox.setTranslate(e.$slide,{top:o.top-i.top,left:o.left-i.left})})),a.SlideShow&&a.SlideShow.isActive&&a.SlideShow.stop()}},d.prototype.onPan=function(){var t=this;r(t.newPoints[0],t.realPoints[0])<(n.fancybox.isMobile?10:5)?t.startPoints=t.newPoints:(t.canTap=!1,t.contentLastPos=t.limitMovement(),t.requestId&&i(t.requestId),t.requestId=o((function(){n.fancybox.setTranslate(t.$content,t.contentLastPos)})))},d.prototype.limitMovement=function(){var t,e,n,o,i,s,r=this,a=r.canvasWidth,l=r.canvasHeight,c=r.distanceX,d=r.distanceY,u=r.contentStartPos,p=u.left,f=u.top,h=u.width,g=u.height;return i=h>a?p+c:p,s=f+d,t=Math.max(0,.5*a-.5*h),e=Math.max(0,.5*l-.5*g),n=Math.min(a-h,.5*a-.5*h),o=Math.min(l-g,.5*l-.5*g),c>0&&i>t&&(i=t-1+Math.pow(-t+p+c,.8)||0),c<0&&i<n&&(i=n+1-Math.pow(n-p-c,.8)||0),d>0&&s>e&&(s=e-1+Math.pow(-e+f+d,.8)||0),d<0&&s<o&&(s=o+1-Math.pow(o-f-d,.8)||0),{top:s,left:i}},d.prototype.limitPosition=function(t,e,n,o){var i=this.canvasWidth,s=this.canvasHeight;return n>i?t=(t=t>0?0:t)<i-n?i-n:t:t=Math.max(0,i/2-n/2),o>s?e=(e=e>0?0:e)<s-o?s-o:e:e=Math.max(0,s/2-o/2),{top:e,left:t}},d.prototype.onZoom=function(){var e=this,s=e.contentStartPos,a=s.width,l=s.height,c=s.left,d=s.top,u=r(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,p=Math.floor(a*u),f=Math.floor(l*u),h=(a-p)*e.percentageOfImageAtPinchPointX,g=(l-f)*e.percentageOfImageAtPinchPointY,m=(e.newPoints[0].x+e.newPoints[1].x)/2-n(t).scrollLeft(),y=(e.newPoints[0].y+e.newPoints[1].y)/2-n(t).scrollTop(),v=m-e.centerPointStartX,b={top:d+(g+(y-e.centerPointStartY)),left:c+(h+v),scaleX:u,scaleY:u};e.canTap=!1,e.newWidth=p,e.newHeight=f,e.contentLastPos=b,e.requestId&&i(e.requestId),e.requestId=o((function(){n.fancybox.setTranslate(e.$content,e.contentLastPos)}))},d.prototype.ontouchend=function(t){var o=this,r=o.isSwiping,a=o.isPanning,l=o.isZooming,c=o.isScrolling;if(o.endPoints=s(t),o.dMs=Math.max((new Date).getTime()-o.startTime,1),o.$container.removeClass("fancybox-is-grabbing"),n(e).off(".fb.touch"),e.removeEventListener("scroll",o.onscroll,!0),o.requestId&&(i(o.requestId),o.requestId=null),o.isSwiping=!1,o.isPanning=!1,o.isZooming=!1,o.isScrolling=!1,o.instance.isDragging=!1,o.canTap)return o.onTap(t);o.speed=100,o.velocityX=o.distanceX/o.dMs*.5,o.velocityY=o.distanceY/o.dMs*.5,a?o.endPanning():l?o.endZooming():o.endSwiping(r,c)},d.prototype.endSwiping=function(t,e){var o=this,i=!1,s=o.instance.group.length,r=Math.abs(o.distanceX),a="x"==t&&s>1&&(o.dMs>130&&r>10||r>50);o.sliderLastPos=null,"y"==t&&!e&&Math.abs(o.distanceY)>50?(n.fancybox.animate(o.instance.current.$slide,{top:o.sliderStartPos.top+o.distanceY+150*o.velocityY,opacity:0},200),i=o.instance.close(!0,250)):a&&o.distanceX>0?i=o.instance.previous(300):a&&o.distanceX<0&&(i=o.instance.next(300)),!1!==i||"x"!=t&&"y"!=t||o.instance.centerSlide(200),o.$container.removeClass("fancybox-is-sliding")},d.prototype.endPanning=function(){var t,e,o,i=this;i.contentLastPos&&(!1===i.opts.momentum||i.dMs>350?(t=i.contentLastPos.left,e=i.contentLastPos.top):(t=i.contentLastPos.left+500*i.velocityX,e=i.contentLastPos.top+500*i.velocityY),(o=i.limitPosition(t,e,i.contentStartPos.width,i.contentStartPos.height)).width=i.contentStartPos.width,o.height=i.contentStartPos.height,n.fancybox.animate(i.$content,o,366))},d.prototype.endZooming=function(){var t,e,o,i,s=this,r=s.instance.current,a=s.newWidth,l=s.newHeight;s.contentLastPos&&(t=s.contentLastPos.left,i={top:e=s.contentLastPos.top,left:t,width:a,height:l,scaleX:1,scaleY:1},n.fancybox.setTranslate(s.$content,i),a<s.canvasWidth&&l<s.canvasHeight?s.instance.scaleToFit(150):a>r.width||l>r.height?s.instance.scaleToActual(s.centerPointStartX,s.centerPointStartY,150):(o=s.limitPosition(t,e,a,l),n.fancybox.animate(s.$content,o,150)))},d.prototype.onTap=function(e){var o,i=this,r=n(e.target),a=i.instance,l=a.current,c=e&&s(e)||i.startPoints,d=c[0]?c[0].x-n(t).scrollLeft()-i.stagePos.left:0,u=c[0]?c[0].y-n(t).scrollTop()-i.stagePos.top:0,p=function(t){var o=l.opts[t];if(n.isFunction(o)&&(o=o.apply(a,[l,e])),o)switch(o){case"close":a.close(i.startEvent);break;case"toggleControls":a.toggleControls();break;case"next":a.next();break;case"nextOrClose":a.group.length>1?a.next():a.close(i.startEvent);break;case"zoom":"image"==l.type&&(l.isLoaded||l.$ghost)&&(a.canPan()?a.scaleToFit():a.isScaledDown()?a.scaleToActual(d,u):a.group.length<2&&a.close(i.startEvent))}};if((!e.originalEvent||2!=e.originalEvent.button)&&(r.is("img")||!(d>r[0].clientWidth+r.offset().left))){if(r.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))o="Outside";else if(r.is(".fancybox-slide"))o="Slide";else{if(!a.current.$content||!a.current.$content.find(r).addBack().filter(r).length)return;o="Content"}if(i.tapped){if(clearTimeout(i.tapped),i.tapped=null,Math.abs(d-i.tapX)>50||Math.abs(u-i.tapY)>50)return this;p("dblclick"+o)}else i.tapX=d,i.tapY=u,l.opts["dblclick"+o]&&l.opts["dblclick"+o]!==l.opts["click"+o]?i.tapped=setTimeout((function(){i.tapped=null,a.isAnimating||p("click"+o)}),500):p("click"+o);return this}},n(e).on("onActivate.fb",(function(t,e){e&&!e.Guestures&&(e.Guestures=new d(e))})).on("beforeClose.fb",(function(t,e){e&&e.Guestures&&e.Guestures.destroy()}))}(window,document,jQuery),function(t,e){"use strict";e.extend(!0,e.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},slideShow:{autoStart:!1,speed:3e3,progress:!0}});var n=function(t){this.instance=t,this.init()};e.extend(n.prototype,{timer:null,isActive:!1,$button:null,init:function(){var t=this,n=t.instance,o=n.group[n.currIndex].opts.slideShow;t.$button=n.$refs.toolbar.find("[data-fancybox-play]").on("click",(function(){t.toggle()})),n.group.length<2||!o?t.$button.hide():o.progress&&(t.$progress=e('<div class="fancybox-progress"></div>').appendTo(n.$refs.inner))},set:function(t){var n=this,o=n.instance,i=o.current;i&&(!0===t||i.opts.loop||o.currIndex<o.group.length-1)?n.isActive&&"video"!==i.contentType&&(n.$progress&&e.fancybox.animate(n.$progress.show(),{scaleX:1},i.opts.slideShow.speed),n.timer=setTimeout((function(){o.current.opts.loop||o.current.index!=o.group.length-1?o.next():o.jumpTo(0)}),i.opts.slideShow.speed)):(n.stop(),o.idleSecondsCounter=0,o.showControls())},clear:function(){var t=this;clearTimeout(t.timer),t.timer=null,t.$progress&&t.$progress.removeAttr("style").hide()},start:function(){var t=this,e=t.instance.current;e&&(t.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),t.isActive=!0,e.isComplete&&t.set(!0),t.instance.trigger("onSlideShowChange",!0))},stop:function(){var t=this,e=t.instance.current;t.clear(),t.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),t.isActive=!1,t.instance.trigger("onSlideShowChange",!1),t.$progress&&t.$progress.removeAttr("style").hide()},toggle:function(){var t=this;t.isActive?t.stop():t.start()}}),e(t).on({"onInit.fb":function(t,e){e&&!e.SlideShow&&(e.SlideShow=new n(e))},"beforeShow.fb":function(t,e,n,o){var i=e&&e.SlideShow;o?i&&n.opts.slideShow.autoStart&&i.start():i&&i.isActive&&i.clear()},"afterShow.fb":function(t,e,n){var o=e&&e.SlideShow;o&&o.isActive&&o.set()},"afterKeydown.fb":function(n,o,i,s,r){var a=o&&o.SlideShow;!a||!i.opts.slideShow||80!==r&&32!==r||e(t.activeElement).is("button,a,input")||(s.preventDefault(),a.toggle())},"beforeClose.fb onDeactivate.fb":function(t,e){var n=e&&e.SlideShow;n&&n.stop()}}),e(t).on("visibilitychange",(function(){var n=e.fancybox.getInstance(),o=n&&n.SlideShow;o&&o.isActive&&(t.hidden?o.clear():o.set())}))}(document,jQuery),function(t,e){"use strict";var n=function(){for(var e=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],n={},o=0;o<e.length;o++){var i=e[o];if(i&&i[1]in t){for(var s=0;s<i.length;s++)n[e[0][s]]=i[s];return n}}return!1}();if(n){var o={request:function(e){(e=e||t.documentElement)[n.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){t[n.exitFullscreen]()},toggle:function(e){e=e||t.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(t[n.fullscreenElement])},enabled:function(){return Boolean(t[n.fullscreenEnabled])}};e.extend(!0,e.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},fullScreen:{autoStart:!1}}),e(t).on(n.fullscreenchange,(function(){var t=o.isFullscreen(),n=e.fancybox.getInstance();n&&(n.current&&"image"===n.current.type&&n.isAnimating&&(n.isAnimating=!1,n.update(!0,!0,0),n.isComplete||n.complete()),n.trigger("onFullscreenChange",t),n.$refs.container.toggleClass("fancybox-is-fullscreen",t),n.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter",!t).toggleClass("fancybox-button--fsexit",t))}))}e(t).on({"onInit.fb":function(t,e){n?e&&e.group[e.currIndex].opts.fullScreen?(e.$refs.container.on("click.fb-fullscreen","[data-fancybox-fullscreen]",(function(t){t.stopPropagation(),t.preventDefault(),o.toggle()})),e.opts.fullScreen&&!0===e.opts.fullScreen.autoStart&&o.request(),e.FullScreen=o):e&&e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide():e.$refs.toolbar.find("[data-fancybox-fullscreen]").remove()},"afterKeydown.fb":function(t,e,n,o,i){e&&e.FullScreen&&70===i&&(o.preventDefault(),e.FullScreen.toggle())},"beforeClose.fb":function(t,e){e&&e.FullScreen&&e.$refs.container.hasClass("fancybox-is-fullscreen")&&o.exit()}})}(document,jQuery),function(t,e){"use strict";var n="fancybox-thumbs";e.fancybox.defaults=e.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},e.fancybox.defaults);var o=function(t){this.init(t)};e.extend(o.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(t){var e=this,n=t.group,o=0;e.instance=t,e.opts=n[t.currIndex].opts.thumbs,t.Thumbs=e,e.$button=t.$refs.toolbar.find("[data-fancybox-thumbs]");for(var i=0,s=n.length;i<s&&(n[i].thumb&&o++,!(o>1));i++);o>1&&e.opts?(e.$button.removeAttr("style").on("click",(function(){e.toggle()})),e.isActive=!0):e.$button.hide()},create:function(){var t,o=this,i=o.instance,s=o.opts.parentEl,r=[];o.$grid||(o.$grid=e('<div class="'+n+" "+n+"-"+o.opts.axis+'"></div>').appendTo(i.$refs.container.find(s).addBack().filter(s)),o.$grid.on("click","a",(function(){i.jumpTo(e(this).attr("data-index"))}))),o.$list||(o.$list=e('<div class="'+n+'__list">').appendTo(o.$grid)),e.each(i.group,(function(e,n){(t=n.thumb)||"image"!==n.type||(t=n.src),r.push('<a href="javascript:;" tabindex="0" data-index="'+e+'"'+(t&&t.length?' style="background-image:url('+t+')"':'class="fancybox-thumbs-missing"')+"></a>")})),o.$list[0].innerHTML=r.join(""),"x"===o.opts.axis&&o.$list.width(parseInt(o.$grid.css("padding-right"),10)+i.group.length*o.$list.children().eq(0).outerWidth(!0))},focus:function(t){var e,n,o=this,i=o.$list,s=o.$grid;o.instance.current&&(n=(e=i.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+o.instance.current.index+'"]').addClass("fancybox-thumbs-active")).position(),"y"===o.opts.axis&&(n.top<0||n.top>i.height()-e.outerHeight())?i.stop().animate({scrollTop:i.scrollTop()+n.top},t):"x"===o.opts.axis&&(n.left<s.scrollLeft()||n.left>s.scrollLeft()+(s.width()-e.outerWidth()))&&i.parent().stop().animate({scrollLeft:n.left},t))},update:function(){var t=this;t.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),t.isVisible?(t.$grid||t.create(),t.instance.trigger("onThumbsShow"),t.focus(0)):t.$grid&&t.instance.trigger("onThumbsHide"),t.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),e(t).on({"onInit.fb":function(t,e){var n;e&&!e.Thumbs&&((n=new o(e)).isActive&&!0===n.opts.autoStart&&n.show())},"beforeShow.fb":function(t,e,n,o){var i=e&&e.Thumbs;i&&i.isVisible&&i.focus(o?0:250)},"afterKeydown.fb":function(t,e,n,o,i){var s=e&&e.Thumbs;s&&s.isActive&&71===i&&(o.preventDefault(),s.toggle())},"beforeClose.fb":function(t,e){var n=e&&e.Thumbs;n&&n.isVisible&&!1!==n.opts.hideOnClose&&n.$grid.hide()}})}(document,jQuery),function(t,e){"use strict";e.extend(!0,e.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},share:{url:function(t,e){return!t.currentHash&&"inline"!==e.type&&"html"!==e.type&&(e.origSrc||e.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'}}),e(t).on("click","[data-fancybox-share]",(function(){var t,n,o=e.fancybox.getInstance(),i=o.current||null;i&&("function"===e.type(i.opts.share.url)&&(t=i.opts.share.url.apply(i,[o,i])),n=i.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===i.type?encodeURIComponent(i.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(t)).replace(/\{\{url_raw\}\}/g,function(t){var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};return String(t).replace(/[&<>"'`=\/]/g,(function(t){return e[t]}))}(t)).replace(/\{\{descr\}\}/g,o.$caption?encodeURIComponent(o.$caption.text()):""),e.fancybox.open({src:o.translate(o,n),type:"html",opts:{touch:!1,animationEffect:!1,afterLoad:function(t,e){o.$refs.container.one("beforeClose.fb",(function(){t.close(null,0)})),e.$content.find(".fancybox-share__button").click((function(){return window.open(this.href,"Share","width=550, height=450"),!1}))},mobile:{autoFocus:!1}}}))}))}(document,jQuery),function(t,e,n){"use strict";function o(){var e=t.location.hash.substr(1),n=e.split("-"),o=n.length>1&&/^\+?\d+$/.test(n[n.length-1])&&parseInt(n.pop(-1),10)||1;return{hash:e,index:o<1?1:o,gallery:n.join("-")}}function i(t){""!==t.gallery&&n("[data-fancybox='"+n.escapeSelector(t.gallery)+"']").eq(t.index-1).focus().trigger("click.fb-start")}function s(t){var e,n;return!!t&&(""!==(n=(e=t.current?t.current.opts:t.opts).hash||(e.$orig?e.$orig.data("fancybox")||e.$orig.data("fancybox-trigger"):""))&&n)}n.escapeSelector||(n.escapeSelector=function(t){return(t+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,(function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t}))}),n((function(){!1!==n.fancybox.defaults.hash&&(n(e).on({"onInit.fb":function(t,e){var n,i;!1!==e.group[e.currIndex].opts.hash&&(n=o(),(i=s(e))&&n.gallery&&i==n.gallery&&(e.currIndex=n.index-1))},"beforeShow.fb":function(n,o,i,r){var a;i&&!1!==i.opts.hash&&(a=s(o))&&(o.currentHash=a+(o.group.length>1?"-"+(i.index+1):""),t.location.hash!=="#"+o.currentHash&&(r&&!o.origHash&&(o.origHash=t.location.hash),o.hashTimer&&clearTimeout(o.hashTimer),o.hashTimer=setTimeout((function(){"replaceState"in t.history?(t.history[r?"pushState":"replaceState"]({},e.title,t.location.pathname+t.location.search+"#"+o.currentHash),r&&(o.hasCreatedHistory=!0)):t.location.hash=o.currentHash,o.hashTimer=null}),300)))},"beforeClose.fb":function(n,o,i){i&&!1!==i.opts.hash&&(clearTimeout(o.hashTimer),o.currentHash&&o.hasCreatedHistory?t.history.back():o.currentHash&&("replaceState"in t.history?t.history.replaceState({},e.title,t.location.pathname+t.location.search+(o.origHash||"")):t.location.hash=o.origHash),o.currentHash=null)}}),n(t).on("hashchange.fb",(function(){var t=o(),e=null;n.each(n(".fancybox-container").get().reverse(),(function(t,o){var i=n(o).data("FancyBox");if(i&&i.currentHash)return e=i,!1})),e?e.currentHash===t.gallery+"-"+t.index||1===t.index&&e.currentHash==t.gallery||(e.currentHash=null,e.close()):""!==t.gallery&&i(t)})),setTimeout((function(){n.fancybox.getInstance()||i(o())}),50))}))}(window,document,jQuery),function(t,e){"use strict";var n=(new Date).getTime();e(t).on({"onInit.fb":function(t,e,o){e.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",(function(t){var o=e.current,i=(new Date).getTime();e.group.length<2||!1===o.opts.wheel||"auto"===o.opts.wheel&&"image"!==o.type||(t.preventDefault(),t.stopPropagation(),o.$slide.hasClass("fancybox-animated")||(t=t.originalEvent||t,i-n<250||(n=i,e[(-t.deltaY||-t.deltaX||t.wheelDelta||-t.detail)<0?"next":"previous"]())))}))}})}(document,jQuery),$((function(){$(".header__btn").on("click",(function(){$(".rightside-menu").removeClass("rightside-menu--close")})),$(".rightside-menu__close").on("click",(function(){$(".rightside-menu").addClass("rightside-menu--close")})),$(".header__btn-menu").on("click",(function(){$(".menu").toggleClass("menu--open")})),$(window).width()<651&&$(".work-path__item--measuring").appendTo($(".work-path__items-box")),$(".top__slider").slick({dots:!0,arrows:!1,fade:!0,autoplay:!0}),$(".contact-slider").slick({slidesToShow:10,slidesToScroll:10,dots:!0,arrows:!1,autoplay:!0,responsive:[{breakpoint:1700,settings:{slidesToShow:8,slidesToScroll:8}},{breakpoint:1511,settings:{slidesToShow:6,slidesToScroll:6}},{breakpoint:1201,settings:{slidesToShow:4,slidesToScroll:4}},{breakpoint:841,settings:{slidesToShow:3,slidesToScroll:3,dots:!1}},{breakpoint:551,settings:{slidesToShow:2,slidesToScroll:2,dots:!1}},{breakpoint:376,settings:{slidesToShow:1,slidesToScroll:1,dots:!1}}]}),$(".article-slider__box").slick({prevArrow:'<button type="button" class="article-slider__arrow article-slider__arrowleft"><img src="images/blog-box/arrow-slider-left.svg" alt="arrow left"></button>',nextArrow:'<button type="button" class="article-slider__arrow article-slider__arrowright"><img src="images/blog-box/arrow-slider-right.svg" alt="arrow right"></button>'});mixitup(".gallery__inner",{load:{filter:".living"}})}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
